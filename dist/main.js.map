{"version":3,"file":"main.js","mappings":"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":["./src/frontend/app/accounts/customers/create/create-customer.component.ts","./src/frontend/app/accounts/customers/create/create-customer.component.html","./src/frontend/app/accounts/customers/list/customers-list.component.ts","./src/frontend/app/accounts/customers/list/customers-list.component.html","./src/frontend/app/accounts/customers/update/update-customer.component.ts","./src/frontend/app/accounts/customers/update/update-customer.component.html","./src/frontend/app/accounts/suppliers/create/create-supplier.component.ts","./src/frontend/app/accounts/suppliers/create/create-supplier.component.html","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.ts","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.html","./src/frontend/app/accounts/suppliers/update/update-supplier.component.ts","./src/frontend/app/accounts/suppliers/update/update-supplier.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/app/app-routing.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/app.module.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/env.ts","./src/frontend/app/errors/error-500/error-500.component.ts","./src/frontend/app/errors/error-500/error-500.component.html","./src/frontend/app/forgot-password/forgot-password.component.ts","./src/frontend/app/forgot-password/forgot-password.component.html","./src/frontend/app/history/history.component.ts","./src/frontend/app/history/history.component.html","./src/frontend/app/home/home.component.ts","./src/frontend/app/home/home.component.html","./src/frontend/app/loader.component.ts","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/app/middleware.component.ts","./src/frontend/app/monitoring/details/monitoring-details.component.ts","./src/frontend/app/monitoring/details/monitoring-details.component.html","./src/frontend/app/monitoring/list/monitoring-list.component.ts","./src/frontend/app/monitoring/list/monitoring-list.component.html","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/reset-password/reset-password.component.ts","./src/frontend/app/reset-password/reset-password.component.html","./src/frontend/app/settings/general/about-us/about-us.component.ts","./src/frontend/app/settings/general/about-us/about-us.component.html","./src/frontend/app/settings/general/configurations/configurations.component.ts","./src/frontend/app/settings/general/configurations/configurations.component.html","./src/frontend/app/settings/general/custom-fields/custom-fields.component.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.html","./src/frontend/app/settings/general/docservers/docservers.component.ts","./src/frontend/app/settings/general/docservers/docservers.component.html","./src/frontend/app/settings/general/login-methods/login-methods.component.ts","./src/frontend/app/settings/general/login-methods/login-methods.component.html","./src/frontend/app/settings/general/mailcollect/mailcollect.component.ts","./src/frontend/app/settings/general/mailcollect/mailcollect.component.html","./src/frontend/app/settings/general/regex/regex.component.ts","./src/frontend/app/settings/general/regex/regex.component.html","./src/frontend/app/settings/general/roles/create/create-role.component.ts","./src/frontend/app/settings/general/roles/create/create-role.component.html","./src/frontend/app/settings/general/roles/list/roles-list.component.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.html","./src/frontend/app/settings/general/roles/update/update-role.component.ts","./src/frontend/app/settings/general/roles/update/update-role.component.html","./src/frontend/app/settings/general/user-quota/user-quota.component.ts","./src/frontend/app/settings/general/user-quota/user-quota.component.html","./src/frontend/app/settings/general/users/create/create-user.component.ts","./src/frontend/app/settings/general/users/create/create-user.component.html","./src/frontend/app/settings/general/users/list/users-list.component.ts","./src/frontend/app/settings/general/users/list/users-list.component.html","./src/frontend/app/settings/general/users/update/update-user.component.ts","./src/frontend/app/settings/general/users/update/update-user.component.html","./src/frontend/app/settings/settings-menu.component.ts","./src/frontend/app/settings/settings-menu.component.html","./src/frontend/app/settings/settings-routing.module.ts","./src/frontend/app/settings/settings.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.html","./src/frontend/app/settings/splitter/doctypes/create-folder/create-folder-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/create-folder/create-folder-doctype.component.html","./src/frontend/app/settings/splitter/doctypes/create/create-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/create/create-doctype.component.html","./src/frontend/app/settings/splitter/doctypes/list/list-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/list/list-doctype.component.html","./src/frontend/app/settings/splitter/form/builder/form-builder.component.ts","./src/frontend/app/settings/splitter/form/builder/form-builder.component.html","./src/frontend/app/settings/splitter/form/list/form-list.component.ts","./src/frontend/app/settings/splitter/form/list/form-list.component.html","./src/frontend/app/settings/splitter/output/create/create-output.component.ts","./src/frontend/app/settings/splitter/output/create/create-output.component.html","./src/frontend/app/settings/splitter/output/list/output-list.component.ts","./src/frontend/app/settings/splitter/output/list/output-list.component.html","./src/frontend/app/settings/splitter/output/update/update-output.component.ts","./src/frontend/app/settings/splitter/output/update/update-output.component.html","./src/frontend/app/settings/splitter/separator/separator.component.ts","./src/frontend/app/settings/splitter/separator/separator.component.html","./src/frontend/app/settings/splitter/update-status/update-status.component.ts","./src/frontend/app/settings/splitter/update-status/update-status.component.html","./src/frontend/app/settings/splitter/workflow/builder/workflow-builder.component.ts","./src/frontend/app/settings/splitter/workflow/builder/workflow-builder.component.html","./src/frontend/app/settings/splitter/workflow/list/workflow-list.component.ts","./src/frontend/app/settings/splitter/workflow/list/workflow-list.component.html","./src/frontend/app/settings/verifier/ai-model/create/create-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/create/create-ai-model.component.html","./src/frontend/app/settings/verifier/ai-model/list/list-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/list/list-ai-model.component.html","./src/frontend/app/settings/verifier/ai-model/update/update-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/update/update-ai-model.component.html","./src/frontend/app/settings/verifier/form/builder/form-builder.component.ts","./src/frontend/app/settings/verifier/form/builder/form-builder.component.html","./src/frontend/app/settings/verifier/form/list/form-list.component.ts","./src/frontend/app/settings/verifier/form/list/form-list.component.html","./src/frontend/app/settings/verifier/outputs/create/create-output.component.ts","./src/frontend/app/settings/verifier/outputs/create/create-output.component.html","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.ts","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.html","./src/frontend/app/settings/verifier/outputs/update/update-output.component.ts","./src/frontend/app/settings/verifier/outputs/update/update-output.component.html","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.html","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.ts","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.html","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.html","./src/frontend/app/settings/verifier/update-status/update-status.component.ts","./src/frontend/app/settings/verifier/update-status/update-status.component.html","./src/frontend/app/settings/verifier/various-settings/various-settings.component.ts","./src/frontend/app/settings/verifier/various-settings/various-settings.component.html","./src/frontend/app/settings/verifier/workflow/builder/workflow-builder.component.ts","./src/frontend/app/settings/verifier/workflow/builder/workflow-builder.component.html","./src/frontend/app/settings/verifier/workflow/list/workflow-list.component.ts","./src/frontend/app/settings/verifier/workflow/list/workflow-list.component.html","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.ts","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.html","./src/frontend/app/splitter/document-type/document-type.component.ts","./src/frontend/app/splitter/document-type/document-type.component.html","./src/frontend/app/splitter/list/splitter-list.component.ts","./src/frontend/app/splitter/list/splitter-list.component.html","./src/frontend/app/splitter/viewer/splitter-viewer.component.ts","./src/frontend/app/splitter/viewer/splitter-viewer.component.html","./src/frontend/app/statistics/statistics.component.ts","./src/frontend/app/statistics/statistics.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/app/verifier/list/verifier-list.component.ts","./src/frontend/app/verifier/list/verifier-list.component.html","./src/frontend/app/verifier/viewer/verifier-viewer.component.ts","./src/frontend/app/verifier/viewer/verifier-viewer.component.html","./src/frontend/main.ts","./src/frontend/services/HttpTimeout.service.ts","./src/frontend/services/auth.service.ts","./src/frontend/services/code-editor/code-editor.component.ts","./src/frontend/services/code-editor/code-editor.component.html","./src/frontend/services/config.service.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/services/error/error.service.ts","./src/frontend/services/error/error.service.html","./src/frontend/services/has-privilege.service.ts","./src/frontend/services/hint/hint.service.ts","./src/frontend/services/hint/hint.service.html","./src/frontend/services/history.service.ts","./src/frontend/services/last-url.service.ts","./src/frontend/services/local-storage.service.ts","./src/frontend/services/locale.service.ts","./src/frontend/services/login-redirect.service.ts","./src/frontend/services/login-required.service.ts","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/password-verification.service.ts","./src/frontend/services/pipes/filter.pipe.ts","./src/frontend/services/privileges.service.ts","./src/frontend/services/process-watcher/process-watcher.component.ts","./src/frontend/services/process-watcher/process-watcher.component.html","./src/frontend/services/services.module.ts","./src/frontend/services/settings.service.ts","./src/frontend/services/user.service.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../env\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-create-customer',\n    templateUrl: './create-customer.component.html',\n    styleUrls: ['./create-customer.component.scss']\n})\nexport class CreateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    customer        : any;\n    loading         : boolean       = true;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        }\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.loading = false;\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                if (element.control.value) {\n                    address[element.id] = element.control.value;\n                }\n            });\n            address['module'] = this.currentModule;\n            this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    if (data) {\n                        customer['address_id'] = data.id;\n                    }\n                    this.http.post(environment['url'] + '/ws/accounts/customers/create', {'args': customer}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('ACCOUNTS.customer_created'));\n                            this.router.navigate(['/accounts/customers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/customers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-14 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.create_customer' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.scss']\n})\nexport class CustomersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'name', 'company_number', 'vat_number', 'siret', 'siren', 'module', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    allCustomers    : any         = [];\n    customers       : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/customers') || lastUrl === '/') {\n            if (this.localStorageService.get('customersPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('customersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('customersPageIndex');\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allCustomers = data.customers;\n                this.loadCustomers();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.http.get(environment['url'] + '/ws/accounts/customers/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                if (this.customers.length !== 0) {\n                    this.total = data.customers[0].total;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchCustomer(event: any) {\n        this.search = event.target.value;\n        this.loadCustomers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('customersPageIndex', event.pageIndex);\n        this.loadCustomers();\n    }\n\n    deleteConfirmDialog(customerId: number, customer: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_customer', {\"customer\": customer}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteCustomer(customerId);\n            }\n        });\n    }\n\n    deleteCustomer(customerId: number) {\n        if (customerId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/customers/delete/' + customerId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allCustomers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.customers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.customers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'company_number': return this.compare(a.company_number, b.company_number, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                default: return 0;\n            }\n        });\n        this.customers = this.customers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_customer' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchCustomer($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <button routerLink=\"/accounts/customers/create\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\" [matTooltip]=\"'ACCOUNTS.create_customer' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <mat-table matSort [dataSource]=\"customers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.customer_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"company_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.company_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.company_number }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.vat_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.vat_number }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siret' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.siret }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siren' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.siren }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"module\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.module }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/customers/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../env\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-customer.component.html',\n    styleUrls: ['./update-customer.component.scss']\n})\nexport class UpdateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    customerId      : any;\n    addressId       : any;\n    customer        : any;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        }\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: '',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.customerId = this.route.snapshot.params['id'];\n        this.http.get(environment['url'] + '/ws/accounts/customers/getById/' + this.customerId, {headers: this.authService.headers}).pipe(\n            tap((customer: any) => {\n                this.customer = customer;\n                for (const field in this.customer) {\n                    if (field === 'module') {\n                        this.currentModule = this.customer[field];\n                        this.updateRequired({control: {value: this.currentModule}});\n                    }\n                }\n                for (const field in this.customer) {\n                    if (customer.hasOwnProperty(field)) {\n                        this.customerForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.customer[field]);\n                            } else if (field === 'address_id') {\n                                this.addressId = this.customer[field];\n                                if (this.addressId) {\n                                    this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                        tap((address: any) => {\n                                            for (const field in address) {\n                                                if (address.hasOwnProperty(field)) {\n                                                    this.addressForm.forEach(element => {\n                                                        if (element.id === field) {\n                                                            if (field === 'country') {\n                                                                this.defaultValue.name = address[field];\n                                                            }\n                                                            element.control.setValue(address[field]);\n                                                        }\n                                                    });\n                                                }\n                                            }\n                                        }),\n                                        finalize(() => this.loading = false),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                } else {\n                                    this.http.post(environment['url'] + '/ws/accounts/addresses/create',\n                                        {'args': {\n                                                'address1': '',\n                                                'address2': '',\n                                                'postal_code': '',\n                                                'city': '',\n                                                'country': '',\n                                                'module': this.currentModule\n                                            }\n                                        }, {headers: this.authService.headers},\n                                    ).pipe(\n                                        tap((data: any) => {\n                                            this.addressId = data.id;\n                                            this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                            ).pipe(\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err, '/accounts/customers/list');\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module', 'address1', 'postal_code', 'city'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': customer}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_updated'));\n                    this.router.navigate(['/accounts/customers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-14 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.customer\">\n                    {{ this.customer['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_customer' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Country } from '@angular-material-extensions/select-country';\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-supplier.component.html',\n    styleUrls: ['./create-supplier.component.scss']\n})\nexport class CreateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(true),\n            required: true\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'duns',\n            label: marker('ACCOUNTS.duns'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'bic',\n            label: marker('ACCOUNTS.bic'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            hint: marker('ACCOUNTS.only_one_email'),\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: []\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        }\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true\n        }\n    ];\n\n    defaultValue: Country = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const forms = data.forms;\n                for (const cpt in forms) {\n                    if (forms.hasOwnProperty(cpt)) {\n                        this.supplierForm.forEach(element => {\n                            if (element.id === 'form_id') {\n                                element.values = forms;\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                    this.loading = false;\n                }\n            }\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    supplier['address_id'] = data.id;\n                    this.http.post(environment['url'] + '/ws/accounts/suppliers/create', {'args': supplier}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                            this.router.navigate(['/accounts/suppliers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n            if (element.control.errors && element.control.errors.email) {\n                error = this.translate.instant('ACCOUNTS.email_format_error');\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-14 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field['control']\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-7 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                              [matTooltip]=\"field.hint | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-7\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.create_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n    selector: 'suppliers-list',\n    templateUrl: './suppliers-list.component.html',\n    styleUrls: ['./suppliers-list.component.scss']\n})\nexport class SuppliersListComponent implements OnInit {\n    columnsToDisplay : string[]    = ['id', 'name', 'email', 'vat_number', 'siret', 'siren', 'iban', 'form_label', 'actions'];\n    headers          : HttpHeaders = this.authService.headers;\n    loading          : boolean     = true;\n    allSuppliers     : any         = [];\n    suppliers        : any         = [];\n    pageSize         : number      = 10;\n    pageIndex        : number      = 0;\n    total            : number      = 0;\n    offset           : number      = 0;\n    search           : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/suppliers') || lastUrl === '/') {\n            if (this.localStorageService.get('suppliersPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('suppliersPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('suppliersPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSuppliers = data.suppliers;\n                this.loadSuppliers();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadSuppliers() {\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name&limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = data.suppliers;\n                if (this.suppliers.length !== 0) {\n                    this.total = data.suppliers[0].total;\n                }\n                this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        for (const cpt in this.suppliers) {\n                            for (const form of data.forms) {\n                                if (form.id === this.suppliers[cpt].form_id) {\n                                    this.suppliers[cpt].form_label = form.label;\n                                }\n                            }\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchSupplier(event: any) {\n        this.search = event.target.value;\n        this.loadSuppliers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('suppliersPageIndex', event.pageIndex);\n        this.loadSuppliers();\n    }\n\n    deleteConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplier(supplierId);\n            }\n        });\n    }\n\n    deletePositionsConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier_positions', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplierPositions(supplierId);\n            }\n        });\n    }\n\n    skipAutoValidateConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_skip_auto_validate', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.skipAutoValidate(supplierId);\n            }\n        });\n    }\n\n    deleteSupplier(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/delete/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadSuppliers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    skipAutoValidate(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/skipAutoValidate/' + supplierId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.skip_validated_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deleteSupplierPositions(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/deletePositions/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.positions_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allSuppliers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.suppliers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.suppliers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                case 'iban': return this.compare(a.iban, b.iban, isAsc);\n                default: return 0;\n            }\n        });\n        this.suppliers = this.suppliers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    getReferenceFile() {\n        this.http.get(environment['url'] + '/ws/accounts/supplier/getReferenceFile', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const mimeType = data.mimetype;\n                const referenceFile = 'data:' + mimeType + ';base64, ' + data.file;\n                const link = document.createElement(\"a\");\n                link.href = referenceFile;\n                link.download = data.filename;\n                link.click();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    importSuppliers(event: any) {\n        const file:File = event.target.files[0];\n        if (file) {\n            this.loading = true;\n            const formData: FormData = new FormData();\n            formData.append(file.name, file);\n            this.http.post(environment['url'] + '/ws/accounts/supplier/importSuppliers', formData, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.suppliers_referencial_loaded'));\n                    this.loadSuppliers();\n                }),\n                catchError((err: any) => {\n                    this.loading = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_supplier' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchSupplier($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <input type=\"file\" class=\"hidden\" accept=\".csv, .ods, .xlsx\" (change)=\"importSuppliers($event)\" #suppliersUpload>\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('import_suppliers')\"\n                        [matTooltip]=\"'ACCOUNTS.import_suppliers' | translate\" (click)=\"suppliersUpload.click()\"\n                        [disabled]=\"this.loading\" class=\"ml-4\">\n                    <i class=\"fa-solid fa-file-import text-2xl ml-2\"></i>\n                </button>\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('export_suppliers')\"\n                        (click)=\"getReferenceFile()\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.export_suppliers' | translate\" [disabled]=\"this.loading\">\n                    <i class=\"fa-solid fa-file-export text-2xl ml-2\"></i>\n                </button>\n                <button routerLink=\"/accounts/suppliers/create\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.create_supplier' | translate\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <mat-table matSort [dataSource]=\"suppliers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'HEADER.id' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.id }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.supplier_name' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'FORMATS.email' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.vat_number' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.vat_number }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siret' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.siret }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siren' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.siren }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"iban\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.iban' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.iban }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"form_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.form' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.form_label }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deletePositionsConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete_supplier_positions' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-circle-xmark text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();skipAutoValidateConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.skip_auto_validate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-forward text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/suppliers/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300 z-20\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Country } from \"@angular-material-extensions/select-country\";\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-supplier.component.html',\n    styleUrls: ['./update-supplier.component.scss']\n})\nexport class UpdateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplierId: any;\n    addressId: any;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'duns',\n            label: marker('ACCOUNTS.duns'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'bic',\n            label: marker('ACCOUNTS.bic'),\n            type: 'text',\n            control: new FormControl(''),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values:[]\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        }\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true\n        }\n    ];\n\n    defaultValue: Country = {\n        name: 'France',\n        alpha2Code: '',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.supplierId = this.route.snapshot.params['id'];\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban' || element.id === 'duns' || element.id === 'bic') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                }\n            }\n        });\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.http.get(environment['url'] + '/ws/accounts/suppliers/getById/' + this.supplierId, {headers: this.authService.headers}).pipe(\n                    tap((supplier: any) => {\n                        this.supplier = supplier;\n                        for (const field in this.supplier) {\n                            if (supplier.hasOwnProperty(field)) {\n                                this.supplierForm.forEach(element => {\n                                    if (element.id === field) {\n                                        if (element.id === 'get_only_raw_footer') {\n                                            element.control.setValue(!this.supplier[field]);\n                                        } else {\n                                            element.control.setValue(this.supplier[field]);\n                                        }\n                                        if (element.id === 'form_id') {\n                                            element.values = forms.forms;\n                                        }\n                                    } else if (field === 'address_id') {\n                                        this.addressId = this.supplier[field];\n                                        if (this.addressId) {\n                                            this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                                tap((address: any) => {\n                                                    for (const adr_field in address) {\n                                                        if (address.hasOwnProperty(adr_field)) {\n                                                            this.addressForm.forEach(adr_element => {\n                                                                if (adr_element.id === adr_field) {\n                                                                    if (adr_field === 'country') {\n                                                                        this.defaultValue.name = address[adr_field];\n                                                                    }\n                                                                    adr_element.control.setValue(address[adr_field]);\n                                                                }\n                                                            });\n                                                        }\n                                                    }\n                                                }),\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        } else {\n                                            this.http.post(environment['url'] + '/ws/accounts/addresses/create',\n                                                {'args': {\n                                                        'address1': '',\n                                                        'address2': '',\n                                                        'postal_code': '',\n                                                        'city': '',\n                                                        'country': ''\n                                                    }\n                                                }, {headers: this.authService.headers},\n                                            ).pipe(\n                                                tap((data: any) => {\n                                                    this.addressId = data.id;\n                                                    this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                                    ).pipe(\n                                                        finalize(() => this.loading = false),\n                                                        catchError((err: any) => {\n                                                            console.debug(err);\n                                                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                                                            return of(false);\n                                                        })\n                                                    ).subscribe();\n                                                }),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': supplier}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n                    this.router.navigate(['/accounts/suppliers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n                if (element.control.errors && element.control.errors.email) {\n                    error = this.translate.instant('ACCOUNTS.email_format_error');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-14 flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.supplier\">\n                    {{ this.supplier['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field['control']\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-7 gap-2 w-full m-5 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-7\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { DateAdapter } from '@angular/material/core';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule\n    ],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]},\n        {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS}\n    ],\n})\nexport class AppMaterialModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { HistoryComponent } from \"./history/history.component\";\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\nimport { Error500Component } from \"./errors/error-500/error-500.component\";\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterListComponent } from \"./splitter/list/splitter-list.component\";\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SplitterViewerComponent } from \"./splitter/viewer/splitter-viewer.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { MonitoringListComponent } from \"./monitoring/list/monitoring-list.component\";\nimport { CustomersListComponent } from \"./accounts/customers/list/customers-list.component\";\nimport { SuppliersListComponent } from \"./accounts/suppliers/list/suppliers-list.component\";\nimport { MonitoringDetailsComponent } from \"./monitoring/details/monitoring-details.component\";\nimport { UpdateSupplierComponent } from \"./accounts/suppliers/update/update-supplier.component\";\nimport { CreateSupplierComponent } from \"./accounts/suppliers/create/create-supplier.component\";\nimport { UpdateCustomerComponent } from \"./accounts/customers/update/update-customer.component\";\nimport { CreateCustomerComponent } from \"./accounts/customers/create/create-customer.component\";\n\nconst routes: Routes = [\n    { path: '500', component: Error500Component, data: { showMenu: false }},\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: 'GLOBAL.home' }, canActivate: [LoginRequiredService] },\n    { path: 'login', component: LoginComponent, data: { title: 'GLOBAL.login', showMenu: false }, canActivate: [LoginRedirectService] },\n    { path: 'forgotPassword', component: ForgotPasswordComponent, data: { title: marker('GLOBAL.forgot-password'), showMenu: false}},\n    { path: 'resetPassword', component: ResetPasswordComponent, data: { title: marker('GLOBAL.reset-password'), showMenu: false}},\n    { path: 'logout', component: LogoutComponent, canActivate: [LoginRequiredService] },\n    { path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService] },\n    {\n        path: 'splitter/viewer/:currentTime/:id', component: SplitterViewerComponent,\n        data: { title: marker('SPLITTER.viewer'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'splitter/list', component: SplitterListComponent,\n        data: { title: marker('SPLITTER.list'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full' },\n    {\n        path: 'verifier/viewer_token/:token', component: VerifierViewerComponent,\n        data: { title: marker('VERIFIER.viewer'), showMenu: false }\n    },\n    {\n        path: 'verifier/viewer/:id', component: VerifierViewerComponent,\n        data: { title: marker('VERIFIER.viewer'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'verifier/list', component: VerifierListComponent,\n        data: { title: marker('VERIFIER.list'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full' },\n\n    {\n        path: 'upload', component: UploadComponent,\n        data: { title: marker('GLOBAL.upload'), privileges: ['upload'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'history', component: HistoryComponent,\n        data: { title: marker('GLOBAL.history'), privileges: ['history'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'statistics', component: StatisticsComponent,\n        data: { title: marker('GLOBAL.statistics'), privileges: ['statistics'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'monitoring', component: MonitoringListComponent,\n        data: { title: marker('GLOBAL.monitoring'), privileges: ['monitoring'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'monitoring/:id', component: MonitoringDetailsComponent,\n        data: { title: marker('GLOBAL.monitoring_detail_process'), privileges: ['monitoring'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'accounts/suppliers', redirectTo: 'accounts/suppliers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/suppliers/list', component: SuppliersListComponent,\n        data: { title: marker('ACCOUNTS.suppliers_list'), privileges: ['suppliers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/update/:id', component: UpdateSupplierComponent,\n        data: { title: marker('ACCOUNTS.update_supplier'), privileges: ['update_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/create', component: CreateSupplierComponent,\n        data: { title: marker('ACCOUNTS.create_supplier'), privileges: ['create_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n    { path: 'accounts/customers', redirectTo: 'accounts/customers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/customers/list', component: CustomersListComponent,\n        data: { title: marker('ACCOUNTS.customers_list'), privileges: ['customers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/update/:id', component: UpdateCustomerComponent,\n        data: { title: marker('ACCOUNTS.update_customer'), privileges: ['update_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/create', component: CreateCustomerComponent,\n        data: { title: marker('ACCOUNTS.create_customer'), privileges: ['create_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: '404', component: NotFoundComponent, data: {showMenu: false} }, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    { path: '**', redirectTo: '404' }, // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"./env\";\nimport { Location } from '@angular/common';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocaleService } from \"../services/locale.service\";\nimport { catchError, filter, map, tap } from 'rxjs/operators';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { LocalStorageService } from \"../services/local-storage.service\";\nimport { DomSanitizer, SafeUrl, Title } from '@angular/platform-browser';\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport { AfterContentChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit, AfterContentChecked {\n    title       : string = 'Open-Capture';\n    image       : SafeUrl = '';\n    imageMobile : string = '';\n    loading     : boolean = true;\n    showMenu    : boolean = true;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private titleService: Title,\n        private sanitizer: DomSanitizer,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n        private activatedRoute: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                this.showMenu = true;\n                let child = this.activatedRoute.firstChild;\n                let childImage = 'assets/imgs/login_image.png';\n                let childImageMobile = 'assets/imgs/Open-Capture_Verifier.svg';\n                let splitterOrVerifier;\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n                    if (this.router.url !== '/home' && !this.router.url.includes('settings')) {\n                        splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n                        if (splitterOrVerifier !== undefined) {\n                            if (splitterOrVerifier === 'splitter') {\n                                childImage = 'assets/imgs/logo_splitter.png';\n                                childImageMobile = 'assets/imgs/Open-Capture_Splitter.png';\n                            } else {\n                                childImage = 'assets/imgs/logo_verifier.png';\n                            }\n                        }\n                    }\n                    if (child.snapshot.data['showMenu'] === false) {\n                        this.showMenu = false;\n                    }\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], childImage, childImageMobile, splitterOrVerifier];\n                    }\n                }\n                return [appTitle, childImage, childImageMobile, splitterOrVerifier];\n            })\n        ).subscribe((data: any) => {\n            const ttl = data[0];\n            this.image = data[1];\n            this.imageMobile = data[2];\n            const splitterOrVerifier = data[3];\n            if (!splitterOrVerifier) {\n                const b64Content = this.localStorageService.get('login_image_b64');\n                if (!b64Content) {\n                    this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                        tap((data: any) => {\n                            this.localStorageService.save('login_image_b64', data);\n                            this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n                }\n            }\n            if (this.localeService.currentLang === undefined) {\n                this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                    tap((data: any) => {\n                        this.translate.use(data.lang);\n                        this.translate.get(ttl).subscribe((data:any)=> {\n                            this.titleService.setTitle(data + ' - ' + this.title);\n                        });\n                        this.loading = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.translate.get(ttl).subscribe((data:any)=> {\n                    this.titleService.setTitle(data + ' - ' + this.title);\n                });\n                this.loading = false;\n            }\n        });\n    }\n\n    ngAfterContentChecked(): void {\n        this.changeDetector.detectChanges();\n    }\n}\n","<app-menu [image]=\"this.image\" [imageMobile]=\"this.imageMobile\" *ngIf=\"this.showMenu && loading === this.loading\"></app-menu>\n\n<router-outlet></router-outlet>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsRoutingModule } from './settings/settings-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/splitter-viewer.component';\nimport { SplitterListComponent } from './splitter/list/splitter-list.component';\n\nimport { FilterPipe } from '../services/pipes/filter.pipe';\nimport { NgxFileDragDropModule } from 'ngx-file-drag-drop';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { NgsgModule } from 'ng-sortgrid';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { DocumentTypeFactoryComponent } from './splitter/document-type-factory/document-type-factory.component';\nimport { DocumentTypeComponent } from './splitter/document-type/document-type.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { UsersListComponent } from './settings/general/users/list/users-list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { CustomMatPaginatorIntl } from './custom-mat-paginator';\nimport { LastUrlService } from '../services/last-url.service';\nimport { AboutUsComponent } from './settings/general/about-us/about-us.component';\nimport { CreateUserComponent } from './settings/general/users/create/create-user.component';\nimport { UpdateUserComponent } from './settings/general/users/update/update-user.component';\nimport { RolesListComponent } from './settings/general/roles/list/roles-list.component';\nimport { UpdateRoleComponent } from './settings/general/roles/update/update-role.component';\nimport { CreateRoleComponent } from './settings/general/roles/create/create-role.component';\nimport { LoginMethodsComponent } from './settings/general/login-methods/login-methods.component';\nimport { LoaderComponent } from './loader.component';\nimport { CustomFieldsComponent } from './settings/general/custom-fields/custom-fields.component';\nimport { FormListComponent } from './settings/verifier/form/list/form-list.component';\nimport { FormBuilderComponent } from './settings/verifier/form/builder/form-builder.component';\nimport { SuppliersListComponent } from './accounts/suppliers/list/suppliers-list.component';\nimport { UpdateSupplierComponent } from './accounts/suppliers/update/update-supplier.component';\nimport { CreateSupplierComponent } from './accounts/suppliers/create/create-supplier.component';\nimport { CustomersListComponent } from './accounts/customers/list/customers-list.component';\nimport { UpdateCustomerComponent } from './accounts/customers/update/update-customer.component';\nimport { CreateCustomerComponent } from './accounts/customers/create/create-customer.component';\nimport { CreateOutputComponent } from './settings/verifier/outputs/create/create-output.component';\nimport { OutputsListComponent } from './settings/verifier/outputs/list/outputs-list.component';\nimport { HighlightPipe, UpdateOutputComponent } from './settings/verifier/outputs/update/update-output.component';\nimport { UpdatePositionsMaskComponent } from './settings/verifier/positions-mask/update/update-positions-mask.component';\nimport { PositionsMaskListComponent } from './settings/verifier/positions-mask/list/positions-mask-list.component';\nimport { CreatePositionsMaskComponent } from './settings/verifier/positions-mask/create/create-positions-mask.component';\nimport { VerifierStatusUpdateComponent } from './settings/verifier/update-status/update-status.component';\nimport { HistoryComponent } from './history/history.component';\nimport { SeparatorComponent } from './settings/splitter/separator/separator.component';\nimport { SplitterUpdateOutputComponent } from './settings/splitter/output/update/update-output.component';\nimport { SplitterCreateOutputComponent } from './settings/splitter/output/create/create-output.component';\nimport { SplitterOutputListComponent } from './settings/splitter/output/list/output-list.component';\nimport { SplitterFormBuilderComponent } from './settings/splitter/form/builder/form-builder.component';\nimport { SplitterUpdateStatusComponent } from './settings/splitter/update-status/update-status.component';\nimport { SplitterFormListComponent } from './settings/splitter/form/list/form-list.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { CreateDoctypeComponent } from './settings/splitter/doctypes/create/create-doctype.component';\nimport { ListDoctypeComponent } from './settings/splitter/doctypes/list/list-doctype.component';\nimport { CreateFolderDoctypeComponent } from './settings/splitter/doctypes/create-folder/create-folder-doctype.component';\nimport { ListVerifierAiModelComponent } from \"./settings/verifier/ai-model/list/list-ai-model.component\";\nimport { CreateVerifierAiModelComponent } from \"./settings/verifier/ai-model/create/create-ai-model.component\";\nimport { UpdateVerifierAiModelComponent } from \"./settings/verifier/ai-model/update/update-ai-model.component\";\nimport { ListSplitterAiModelComponent } from \"./settings/splitter/ai-model/list/list-ai-model.component\";\nimport { CreateSplitterAiModelComponent } from \"./settings/splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateSplitterAiModelComponent } from \"./settings/splitter/ai-model/update/update-ai-model.component\";\nimport { ConfigurationsComponent } from './settings/general/configurations/configurations.component';\nimport { DocserversComponent } from './settings/general/docservers/docservers.component';\nimport { RegexComponent } from './settings/general/regex/regex.component';\nimport { HintServiceComponent } from \"../services/hint/hint.service\";\nimport { ErrorServiceComponent } from \"../services/error/error.service\";\nimport { Error500Component } from './errors/error-500/error-500.component';\nimport { MatSelectCountryModule } from \"@angular-material-extensions/select-country\";\nimport { MiddlewareComponent } from \"./middleware.component\";\nimport { VariousSettingsVerifierComponent } from './settings/verifier/various-settings/various-settings.component';\nimport { MailCollectComponent } from './settings/general/mailcollect/mailcollect.component';\nimport { UserQuotaComponent } from './settings/general/user-quota/user-quota.component';\nimport { SettingsMenuComponent } from './settings/settings-menu.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { MonitoringListComponent } from './monitoring/list/monitoring-list.component';\nimport { MonitoringDetailsComponent } from './monitoring/details/monitoring-details.component';\nimport { WorkflowListComponent } from './settings/verifier/workflow/list/workflow-list.component';\nimport { WorkflowBuilderComponent } from './settings/verifier/workflow/builder/workflow-builder.component';\nimport { WorkflowListSplitterComponent } from './settings/splitter/workflow/list/workflow-list.component';\nimport { WorkflowBuilderSplitterComponent } from './settings/splitter/workflow/builder/workflow-builder.component';\nimport { TimeoutInterceptor } from \"../services/HttpTimeout.service\";\nimport { CodeEditorModule } from '@ngstack/code-editor';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        HighlightPipe,\n        AppComponent,\n        VerifierViewerComponent,\n        VerifierListComponent,\n        SplitterListComponent,\n        SplitterViewerComponent,\n        DocumentTypeFactoryComponent,\n        DocumentTypeComponent,\n        LoginComponent,\n        LogoutComponent,\n        HomeComponent,\n        MenuComponent,\n        NotFoundComponent,\n        UserProfileComponent,\n        UploadComponent,\n        UsersListComponent,\n        SettingsComponent,\n        AboutUsComponent,\n        RolesListComponent,\n        CreateUserComponent,\n        UpdateUserComponent,\n        UpdateRoleComponent,\n        CreateRoleComponent,\n        LoaderComponent,\n        CustomFieldsComponent,\n        SeparatorComponent,\n        FormBuilderComponent,\n        FormListComponent,\n        SuppliersListComponent,\n        UpdateSupplierComponent,\n        CreateSupplierComponent,\n        CustomersListComponent,\n        CreateCustomerComponent,\n        UpdateCustomerComponent,\n        CreateOutputComponent,\n        OutputsListComponent,\n        UpdateOutputComponent,\n        UpdatePositionsMaskComponent,\n        PositionsMaskListComponent,\n        CreatePositionsMaskComponent,\n        FilterPipe,\n        SplitterFormListComponent,\n        SplitterFormBuilderComponent,\n        SplitterUpdateOutputComponent,\n        SplitterCreateOutputComponent,\n        SplitterOutputListComponent,\n        ListVerifierAiModelComponent,\n        CreateVerifierAiModelComponent,\n        UpdateVerifierAiModelComponent,\n        ListSplitterAiModelComponent,\n        CreateSplitterAiModelComponent,\n        UpdateSplitterAiModelComponent,\n        HistoryComponent,\n        StatisticsComponent,\n        CreateDoctypeComponent,\n        ListDoctypeComponent,\n        CreateFolderDoctypeComponent,\n        ConfigurationsComponent,\n        DocserversComponent,\n        RegexComponent,\n        HintServiceComponent,\n        ErrorServiceComponent,\n        Error500Component,\n        LoginMethodsComponent,\n        VariousSettingsVerifierComponent,\n        MailCollectComponent,\n        UserQuotaComponent,\n        SettingsMenuComponent,\n        ForgotPasswordComponent,\n        ResetPasswordComponent,\n        MonitoringListComponent,\n        MonitoringDetailsComponent,\n        SplitterUpdateStatusComponent,\n        VerifierStatusUpdateComponent,\n        WorkflowListComponent,\n        WorkflowBuilderComponent,\n        WorkflowListSplitterComponent,\n        WorkflowBuilderSplitterComponent\n    ],\n    imports: [\n        BrowserModule,\n        SettingsRoutingModule,\n        AppRoutingModule,\n        AppMaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        EditorModule,\n        ServicesModule,\n        NgsgModule,\n        NgxChartsModule,\n        CodeEditorModule.forRoot(),\n        ToastrModule.forRoot({\n            maxOpened: 1,\n            enableHtml: true,\n            preventDuplicates: true\n        }),\n        TranslateModule.forRoot({\n            defaultLanguage: 'fra',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        FormsModule,\n        NgxFileDragDropModule,\n        DragDropModule,\n        NgxMatSelectSearchModule,\n        MatSelectCountryModule.forRoot('fr')\n    ],\n    providers: [\n        Title,\n        TranslateService,\n        LastUrlService,\n        HintServiceComponent,\n        ErrorServiceComponent,\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'outline'}},\n        {\n            provide: MatPaginatorIntl,\n            useClass: CustomMatPaginatorIntl\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: MiddlewareComponent,\n            multi: true\n        },\n        [{ provide: HTTP_INTERCEPTORS, useClass: TimeoutInterceptor, multi: true }]\n],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from  \"./env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"../services/locale.service\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private http: HttpClient,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        if (this.localeService.currentLang === undefined) {\n            this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                tap((data: any) => {\n                    this.translate.use(data.lang);\n                    this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                        this.itemsPerPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                        this.nextPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                        this.firstPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                        this.lastPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                        this.previousPageLabel = translated;\n                    });\n                    this.changes.next();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                this.itemsPerPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                this.nextPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                this.firstPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                this.lastPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                this.previousPageLabel = translated;\n            });\n            this.changes.next();\n        }\n    }\n\n    override getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length === 0 || pageSize === 0) { return '0 ' + this.translate.instant('PAGINATOR.of') + ` ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        return ` ${startIndex + 1} - ${endIndex} ` + this.translate.instant('PAGINATOR.on') + ` ${length} ` + ' | ' +\n            this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    };\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\ndeclare const require: any;\n\nexport const environment = {\n    url: 'http://localhost:5000',\n    customId: '',\n    fqdn: '',\n    production: false,\n    version: require('../../../package.json').version + ' (development mode)'\n};\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component } from '@angular/core';\nimport { UserService } from \"../../../services/user.service\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error-500.component.html',\n    styleUrls: ['./error-500.component.scss']\n})\nexport class Error500Component {\n\n    constructor(\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0 top-0 flex justify-center\">\n    <mat-sidenav-content class=\"flex items-center\">\n        <div class=\"text-center flex flex-col gap-20\">\n            <div class=\"text-gray-900 leading-none\" style=\"font-size: 15rem\">\n                500\n            </div>\n            <div class=\"text-green-400\">\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 3s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin fa-spin-reverse mx-4\" style=\"--fa-animation-duration: 3.5s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 4s;\"></i>\n            </div>\n            <div class=\"text-5xl\" [innerHTML]=\"'ERROR.500' | translate\"></div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { environment } from \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n    emailControl            : FormControl = new FormControl('', [Validators.required, Validators.email, Validators.minLength(5)]);\n    image                   : SafeUrl = '';\n    loading                 : boolean = true;\n    sending                 : boolean = false;\n    smtpStatus              : boolean = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n\n        const b64Content = this.localStorageService.get('login_image_b64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.localStorageService.save('login_image_b64', data);\n                    this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n        }\n\n        this.http.get(environment['url'] + '/ws/smtp/isServerUp').pipe(\n            tap((data: any) => {\n                this.smtpStatus = data.status;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onSubmit() {\n        if (this.emailControl.valid) {\n            this.sending = true;\n            const email = this.emailControl.value;\n            const currentUrl = window.location.href.replace('/forgotPassword', '');\n            this.http.post(environment['url'] + '/ws/users/getByMail', {email: email}).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/users/sendEmailForgotPassword', {userId: data.id, currentUrl: currentUrl}).pipe(\n                        tap((data: any) => {\n                            this.notify.success(this.translate.instant('USER.forgot_password_email_sent'));\n                        }),\n                        finalize(() => this.sending = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    this.sending = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<div class=\"relative top-16 2xl:top-32 flex justify-center h-20\" *ngIf=\"this.image\">\n    <img [src]=\"this.image\" alt=\"Open-Capture logo\">\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <mat-card class=\"text-center w-full 2xl:w-1/4 sm:w-1/2\">\n        <mat-card-title class=\"my-4\">\n            {{ 'GLOBAL.forgot-password' | translate }}\n        </mat-card-title>\n        <app-hint *ngIf=\"this.smtpStatus\" class=\"m-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.forgot_password_hint' | translate\"></app-hint>\n        <app-hint-error *ngIf=\"!this.smtpStatus\" class=\"m-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.smtp_server_down' | translate\"></app-hint-error>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.email' | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.emailControl\" type=\"text\" placeholder=\"{{ 'USER.email' | translate }}\" required>\n                    <mat-error *ngIf=\"this.emailControl.invalid\">{{ 'ERROR.bad_email_pattern' | translate }}</mat-error>\n                </mat-form-field>\n                <div [class.cursor-not-allowed]=\"!this.smtpStatus\">\n                    <button mat-button [disabled]=\"!this.smtpStatus || this.sending\" [class.bg-gray-400]=\"!this.smtpStatus\"\n                            [class.bg-green-400]=\"this.smtpStatus\" class=\"p-6 valid_button\" type=\"submit\">\n                        <span *ngIf=\"!this.sending\">\n                            {{ 'SPLITTER.send' | translate }}\n                        </span>\n                        <i *ngIf=\"this.sending\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n        <div class=\"text-center relative top-8 text-gray-900\">\n            <a routerLink=\"/login\">\n                {{ 'AUTH.back_to_login' | translate }}\n            </a>\n        </div>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { DatePipe } from '@angular/common';\nimport { UserService } from \"../../services/user.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    providers: [DatePipe]\n})\nexport class HistoryComponent implements OnInit {\n    filteredUsers       : Observable<any> | any;\n    columnsToDisplay    : string[] = ['id', 'history_module', 'history_submodule', 'history_date', 'user_info', 'history_desc', 'user_ip'];\n    loading             : boolean  = true;\n    toHighlight         : string   = '';\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    history             : any;\n    users               : any;\n    userSelected        : string = '';\n    moduleSelected      : string = '';\n    subModuleSelected   : string = '';\n    form                : any[]    = [\n        {\n            'id': 'user_id',\n            'type': 'autocomplete',\n            'label': this.translate.instant('HISTORY.user'),\n            'control': new FormControl(),\n            'values': []\n        },\n        {\n            'id': 'module',\n            'label': this.translate.instant('CUSTOM-FIELDS.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'general',\n                    'label': this.translate.instant('HISTORY.general')\n                },\n                {\n                    'id': 'accounts',\n                    'label': this.translate.instant('HISTORY.accounts')\n                },\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'submodule',\n            'type': 'select',\n            'label': this.translate.instant('HISTORY.submodule'),\n            'control': new FormControl(),\n            'values': []\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        private datePipe: DatePipe,\n        private userService: UserService,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.users = [];\n                this.form.forEach((element: any) => {\n                    if (element.id === 'user_id') {\n                        this.http.get(environment['url'] + '/ws/history/users', {headers: this.authService.headers}).pipe(\n                            tap((userHistory: any) => {\n                                userHistory.history.forEach((_user: any) => {\n                                    data.users.forEach((user: any) => {\n                                        if (_user.user_id === user.id) {\n                                            this.users.push(user);\n                                        }\n                                    });\n                                });\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.filteredUsers = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.users) : this.users)\n                        );\n                    } else if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadHistory();\n    }\n\n    loadHistory() {\n        this.http.get(\n            environment['url'] + '/ws/history/list?limit=' + this.pageSize + '&offset=' + this.offset + '&user=' + this.userSelected + '&submodule=' + this.subModuleSelected + '&module=' + this.moduleSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.history[0]) this.total = data.history[0].total;\n                this.history = data.history;\n                this.form.forEach((element: any) => {\n                    if (element.id === 'module') {\n                        element.values.forEach((module: any) => {\n                            this.history.forEach((history: any) => {\n                                if (history.history_module === module.id) {\n                                    history.history_module = this.translate.instant(module.label);\n                                }\n                            });\n                        });\n                    }\n                    if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules?module=' + this.moduleSelected, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n\n                this.history.forEach((element: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    element.history_date = this.datePipe.transform(element.history_date, format + ' HH:mm:ss');\n                });\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.loading = true;\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n    }\n\n    setSelectedUser(userId: any) {\n        this.userSelected = userId;\n        this.pageIndex = 0;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedModule(module: any) {\n        this.moduleSelected = module;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedSubModule(subModule: any) {\n        this.subModuleSelected = subModule;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    resetFilter() {\n        this.subModuleSelected = '';\n        this.moduleSelected = '';\n        this.userSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadHistory();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadHistory();\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    sortData(sort: Sort) {\n        const data = this.history.slice();\n        if (!sort.active || sort.direction === '') {\n            this.history = data;\n            return;\n        }\n\n        this.history = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'history_module': return this.compare(a.history_module, b.history_module, isAsc);\n                case 'history_submodule': return this.compare(a.history_submodule, b.history_submodule, isAsc);\n                case 'history_date': return this.compare(a.history_date, b.history_date, isAsc);\n                case 'user_info': return this.compare(a.user_info, b.user_info, isAsc);\n                case 'history_desc': return this.compare(a.history_desc, b.history_desc, isAsc);\n                case 'user_ip': return this.compare(a.user_ip, b.user_ip, isAsc);\n                default: return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center\">\n            <div class=\"m-auto w-1/12 text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n            <form class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                <ng-container *ngFor=\"let field of form\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id === 'submodule'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"setSelectedSubModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['history_submodule']\">\n                                {{ option['history_submodule'] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id === 'module'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"setSelectedModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'autocomplete'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                        <mat-hint *ngIf=\"field.hint\" class=\"text-gray-600\">{{ field.hint }}</mat-hint>\n                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"setSelectedUser($event.option.id)\">\n                            <mat-option *ngFor=\"let option of this.filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                <span [innerHTML]=\"option['lastname'] + ' ' + option['firstname'] + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                 [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                <i class=\"fa-solid fa-sync-alt\"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n        <div class=\"flex justify-center\">\n            <mat-table matSort [dataSource]=\"history\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 100px!important;\">{{ 'HEADER.id_simple' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 100px!important;\">{{ element.id }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_module\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\">{{ 'CUSTOM-FIELDS.module' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\">{{ element['history_module'] }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_submodule\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 190px!important;\">{{ 'HISTORY.submodule' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 190px!important;\">{{ element['history_submodule'] }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_date\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\">{{ 'HISTORY.history_date' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\">{{ element.date }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_info\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 285px!important;\">{{ 'HISTORY.user_info' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 300px!important;\">{{ element['user_info'] }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_desc\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'HISTORY.history_desc' | translate }}</mat-header-cell>\n                    <mat-cell class=\"p-0.5\" *matCellDef=\"let element\" [innerHTML]=\"'<span>' + element['history_desc'] + '</span>'\"></mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_ip\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 250px !important\">{{ 'HISTORY.user_ip' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 250px !important\">{{ element['user_ip'] }}</mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"hover:text-green-400 select-none hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n        </div>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../../services/user.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Router } from \"@angular/router\";\nimport { LastUrlService } from \"../../services/last-url.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    unseenBatches : any = {'splitter': 0, 'verifier': 0};\n\n    constructor(\n        private router: Router,\n        private http : HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.setValue('');\n        this.localStorageService.save('monitoring_minimize_display', 'true');\n        const splitter = this.privilegesService.hasPrivilege('access_splitter');\n        const verifier = this.privilegesService.hasPrivilege('access_verifier');\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        this.userService.user   = this.userService.getUserFromLocal();\n        if (lastUrl === '/login') {\n            if (verifier && !splitter) {\n                this.router.navigate(['/verifier/list']).then();\n            } else if (splitter && !verifier) {\n                this.router.navigate(['/splitter/list']).then();\n            } else {\n                this.checkConnection();\n            }\n        } else {\n            this.checkConnection();\n        }\n\n        this.http.get(environment['url'] + '/ws/verifier/getUnseen/user/' + this.userService.user.id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.unseenBatches['verifier'] = data['unseen'];\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/getUnseen/user/' + this.userService.user.id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.unseenBatches['splitter'] = data['unseen'];\n            })\n        ).subscribe();\n    }\n\n    checkConnection() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const token = this.authService.getToken();\n        if (token) {\n            this.http.post(environment['url'] + '/ws/auth/checkToken', {'token': token}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.authService.logout();\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    setValue(value: string) {\n        this.localStorageService.save('splitter_or_verifier', value);\n    }\n\n    getUnseenBatches(module: string) {\n        return this.unseenBatches[module];\n    }\n}\n","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_splitter')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 20rem\"></div>\n        </a>\n        <div class=\"absolute inline-flex items-center justify-center w-12 h-10 text-md -right-1 font-bold\n                    text-white bg-green-400 rounded-full -top-4\">\n            {{ getUnseenBatches('splitter') }}\n        </div>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_verifier')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier md:w-full bg-no-repeat bg-center h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 12rem\"></div>\n        </a>\n        <div class=\"absolute inline-flex items-center justify-center w-12 h-10 text-md -right-1 font-bold\n                    text-white bg-green-400 rounded-full -top-4\">\n            {{ getUnseenBatches('verifier') }}\n        </div>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-loader',\n    template:\n        '<div class=\"w-full h-full\">' +\n        '    <div id=\"preloader\" class=\"absolute inset-0 bg-white z-30\">' +\n        '            <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">' +\n        '                <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"' +\n        '                     height=\"300\">' +\n        '                    <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">' +\n        '                        <stop offset=\"0%\" stop-color=\"#76B442\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                        <stop offset=\"100%\" stop-color=\"#A7A8AA\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                    </linearGradient>' +\n        '                    <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7' +\n        '                            c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1' +\n        '                            c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4' +\n        '                            L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7' +\n        '                            C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>' +\n        '            </svg>' +\n        '        </div>' +\n        '    </div>' +\n        '</div>',\n})\n\nexport class LoaderComponent implements OnInit {\n\n    ngOnInit() {\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../env\";\nimport { Router } from \"@angular/router\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport {DomSanitizer, SafeHtml, SafeUrl} from \"@angular/platform-browser\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm               : any;\n    enableLoginMethodName   : any;\n    loginImage              : SafeUrl   = '';\n    loginTopMessage         : SafeHtml  = '';\n    loginBottomMessage      : SafeHtml  = '';\n    loading                 : boolean   = true;\n    processLogin            : boolean   = false;\n    showPassword            : boolean   = false;\n    isConnectionBtnDisabled : boolean   = true;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n            tap((data: any) => {\n                this.localStorageService.save('login_image_b64', data);\n                this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/loginTopMessage').pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginTopMessage = this.sanitizer.bypassSecurityTrustHtml(data.configuration[0].data.value);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/loginBottomMessage').pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginBottomMessage = this.sanitizer.bypassSecurityTrustHtml(data.configuration[0].data.value);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/auth/getEnabledLoginMethod', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['login_method_name'][0]) {\n                    const login_method_name = data['login_method_name'][0];\n                    this.enableLoginMethodName = login_method_name['method_name'];\n                } else {\n                    this.notify.error(this.translate.instant('LOGIN-METHODS.no_default_login_methods'));\n                    this.enableLoginMethodName = 'default';\n                }\n                this.isConnectionBtnDisabled = false;\n            }),\n            catchError((err: any) => {\n                this.isConnectionBtnDisabled = true;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onSubmit() {\n        const password = this.loginForm.get('password').value;\n        const username = this.loginForm.get('username').value;\n        if (password && username) {\n            this.processLogin = true;\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())));\n                    this.localStorageService.save('monitoring_minimize_display', 'true');\n                    this.authService.generateHeaders();\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (this.authService.getCachedUrl()) {\n                            this.router.navigate([this.authService.getCachedUrl()]).then(() => {\n                                if (data.body.admin_password_alert) {\n                                    this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                }\n                            });\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.router.navigate(['/home']).then(() => {\n                                if (data.body.admin_password_alert) {\n                                    this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                }\n                            });\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    this.processLogin = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if (this.loginForm.get(field).hasError('required'))\n            return this.translate.instant('AUTH.field_required');\n        return this.translate.instant('ERROR.unknow_error');\n    }\n\n    protected readonly environment = environment;\n}\n","<div class=\"min-h-screen flex\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <div class=\"w-full flex items-center justify-center text-center flex-col\">\n        <div class=\"w-11/12 max-w-md\" *ngIf=\"this.loginImage\">\n            <img class=\"m-auto\" [src]=\"this.loginImage\" alt=\"Open-Capture logo\">\n            <mat-card-subtitle [innerHTML]=\"this.loginTopMessage\"></mat-card-subtitle>\n        </div>\n        <mat-card class=\"text-center m-6 mb-0 w-11/12 max-w-md\">\n            <mat-card-title class=\"m-5\">\n                {{ 'GLOBAL.login' | translate }}\n            </mat-card-title>\n\n            <mat-card-content>\n                <form [formGroup]=\"this.loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                        <input matInput id=\"username\" formControlName=\"username\" type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                        <mat-error *ngIf=\"this.loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                        <input matInput id=\"password\" autocomplete=\"off\" formControlName=\"password\"\n                               [type]=\"this.showPassword ? 'text' : 'password'\"\n                               placeholder=\"{{ 'USER.password' | translate }}\" required>\n                        <mat-icon matSuffix (click)=\"this.showPassword = !this.showPassword\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword\" [class.fa-eye]=\"this.showPassword\"></i>\n                        </mat-icon>\n                        <mat-error *ngIf=\"this.loginForm.controls.password.invalid\">\n                            {{ getErrorMessage('password') }}\n                        </mat-error>\n                        <mat-hint align=\"end\" *ngIf=\"this.enableLoginMethodName === 'ldap'\">\n                            <span class=\"underline decoration-1\">\n                                {{ this.enableLoginMethodName | uppercase }} {{ 'LOGIN-METHODS.enabled' | translate }}\n                            </span>\n                        </mat-hint>\n                    </mat-form-field>\n                    <div class=\"text-right mb-5 text-gray-900\" *ngIf=\"this.enableLoginMethodName === 'default'\">\n                        <a routerLink=\"/forgotPassword\">\n                            {{ 'AUTH.forgot_password' | translate }}\n                        </a>\n                    </div>\n                    <button id=\"login\" mat-button [disabled]=\"this.processLogin || this.isConnectionBtnDisabled\"\n                            class=\"w-full mb-4 p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                               transition duration-300\" type=\"submit\" style=\"max-width: 250px;\">\n                        <span *ngIf=\"!this.processLogin && !this.isConnectionBtnDisabled\">\n                            {{ 'AUTH.login' | translate }}\n                        </span>\n                        <i *ngIf=\"this.processLogin || this.isConnectionBtnDisabled\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                    </button>\n                </form>\n            </mat-card-content>\n        </mat-card>\n        <span class=\"mt-5\" [innerHTML]=\"this.loginBottomMessage\"></span>\n        <div class=\"flex flex-col gap-y-2 absolute bottom-px right-px\">\n            <div class=\"flex gap-x-2 mr-2 mb-2\">\n                <span class=\"text-gray-900 text-sm text-right\">\n                    Open-Capture version {{ environment.version }}\n                    <br>\n                    Powered by\n                    <a class=\"text-green-400\" href=\"https://edissyum.com/\" target=\"_blank\">\n                        Edissyum Consulting\n                    </a>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private authService: AuthService\n    ) {}\n\n    ngOnInit(): void {\n        this.authService.logout();\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Component, Input, OnInit } from '@angular/core';\nimport { UserService } from \"../../services/user.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss']\n})\n\nexport class MenuComponent implements OnInit {\n    @Input() image              : any;\n    @Input() imageMobile        : any;\n    profileDropdownCurrentState : boolean = false;\n    mobileMenuState             : boolean = false;\n\n    constructor(\n        public router: Router,\n        public location: Location,\n        public authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        public localeService: LocaleService,\n        public privilegesService: PrivilegesService,\n        public localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            this.userService.user = this.userService.getUserFromLocal();\n        }, 100);\n\n        if (this.userService.user) {\n            this.localeService.getLocales();\n            this.localeService.getCurrentLocale();\n        }\n\n        const k = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];\n        let n = 0;\n        document.addEventListener('keydown', (e) => {\n            if (e.key === k[n++]) {\n                if (n === k.length) {\n                    const audio = new Audio(\"assets/imgs/konami.mp3\");\n                    const konami = document.getElementById('konami');\n                    konami!.style.display = \"block\";\n                    konami!.style.transition = \"opacity .5s\";\n                    konami!.style.opacity = \"1\";\n                    audio.volume = 0.3;\n                    audio.play().then(r => setTimeout(() => {\n                        konami!.style.transition = \"opacity 1s\";\n                        konami!.style.opacity = \"0\";\n                        setTimeout(() => {\n                            konami!.style.display = \"none\";\n                        }, 1000);\n                    }, 3000));\n                    n = 0;\n                }\n            }\n            else n = 0;\n        });\n    }\n\n    getSplitterOrVerifier() {\n        return this.localStorageService.get('splitter_or_verifier');\n    }\n\n    toggleProfileDropdown() {\n        this.profileDropdownCurrentState = !this.profileDropdownCurrentState;\n    }\n\n    closeprofileDropDown() {\n        this.profileDropdownCurrentState = false;\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = !this.mobileMenuState;\n    }\n}\n","<app-process-watcher></app-process-watcher>\n<nav style=\"background: #f8f9fa\" class=\"shadow-md relative z-40\">\n    <div class=\"mx-auto px-2 sm:px-6 lg:px-8\" style=\"max-width: 100rem\">\n        <div class=\"relative flex items-center justify-between h-16 z-50\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center lg:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white\n                        hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\" aria-expanded=\"false\">\n                    <svg *ngIf=\"!this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 items-center sm:hidden xl:flex\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.image\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"flex-shrink-0 items-center sm:flex xl:hidden\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.imageMobile\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden lg:block sm:ml-3\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [class.text-gray-500]=\"!location.path().includes('/home')\"\n                                [class.bg-transparent]=\"!location.path().includes('/home')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button [routerLink]=\"'/' + this.getSplitterOrVerifier()\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier()\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [class.text-gray-500]=\"!location.path().includes('/' + this.getSplitterOrVerifier()) || location.path().includes('/settings')\"\n                                [class.bg-transparent]=\"!location.path().includes('/' + this.getSplitterOrVerifier()) || location.path().includes('/settings')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && getSplitterOrVerifier() !== undefined && getSplitterOrVerifier() !== '' && getSplitterOrVerifier() !== null\"\n                                [disabled]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.cursor-not-allowed]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.hover:bg-gray-500]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.hover:text-white]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.text-gray-500]=\"!location.path().includes('/upload')\"\n                                [class.bg-transparent]=\"!location.path().includes('/upload')\"\n                                class=\"px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex absolute inset-y-0 right-0 items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <div class=\"ml-3 mr-0 md:mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/settings\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            [matTooltip]=\"this.translate.instant('GLOBAL.settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-cog\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('history')\">\n                    <button id=\"history-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/history\"\n                            [class.settings_active]=\"location.path().includes('history')\"\n                            [matTooltip]=\"'GLOBAL.history' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-history\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('statistics')\">\n                    <button id=\"statistics-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/statistics\"\n                            [class.settings_active]=\"location.path().includes('statistics')\"\n                            [matTooltip]=\"'GLOBAL.statistics' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-chart-bar\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('monitoring')\">\n                    <button id=\"monitoring-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/monitoring\"\n                            [class.settings_active]=\"location.path().includes('monitoring')\"\n                            [matTooltip]=\"'GLOBAL.monitoring' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-magnifying-glass-chart\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative border-l border-green-400 pl-5\" *ngIf=\"this.privilegesService.hasPrivilege('suppliers_list')\">\n                    <button id=\"supplier-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/suppliers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/suppliers')\"\n                            [matTooltip]=\"'ACCOUNTS.suppliers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-city\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.privilegesService.hasPrivilege('customers_list')\">\n                    <button id=\"customer-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/customers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/customers')\"\n                            [matTooltip]=\"'ACCOUNTS.customers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-users\"></i>\n                    </button>\n                </div>\n                <div class=\"my_profile ml-4 relative py-2 px-1 hover:cursor-pointer\" (click)=\"toggleProfileDropdown()\" id=\"user-menu\" aria-haspopup=\"true\"\n                     [class.profile_active]=\"location.path().includes('profile/' + this.userService.user['id'])\">\n                    <span *ngIf=\"this.userService.user\" class=\"flex items-center\"\n                          [matTooltip]=\"this.translate.instant('USER.my_profile')\">\n                        <div class=\"hidden xl:block\">\n                            <strong>\n                                {{ this.userService.user['lastname'] }} {{ this.userService.user['firstname'] }}\n                            </strong>\n                            <br>({{ this.userService.user['username'] }})\n                        </div>\n                        <span class=\"ml-2\">\n                            <i class=\"fa-solid fa-user text-xl\"></i>\n                        </span>\n                    </span>\n                    <div class=\"ml-3 mr-0 md:mr-2 relative\">\n                        <div [class.hidden]=\"!this.profileDropdownCurrentState\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                             role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\" *ngIf=\"this.userService.user\">\n                            <a (click)=\"closeprofileDropDown()\" routerLink=\"/profile/{{ this.userService.user['id'] }}\"\n                               class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                                {{ 'USER.my_profile' | translate }}\n                            </a>\n                            <a (click)=\"closeprofileDropDown()\" routerLink=\"/logout\"\n                               class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                                {{ 'GLOBAL.log_out' | translate }}\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"this.mobileMenuState\" id=\"mobile-menu\">\n            <div class=\"space-y-1 px-2 pt-2 pb-3 text-gray-500\">\n                <a routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.home' | translate }}\n                </a>\n                <a routerLink=\"/verifier\" *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'verifier'\"\n                   [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.batches' | translate }}\n                </a>\n                <a routerLink=\"/splitter\" *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'splitter'\"\n                   [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.batches' | translate }}\n                </a>\n                <a routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.upload' | translate }}\n                </a>\n            </div>\n        </div>\n    </div>\n</nav>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from \"./env\";\nimport { Observable } from \"rxjs\";\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { LocalStorageService } from \"../services/local-storage.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class MiddlewareComponent implements HttpInterceptor {\n\n    constructor(\n        private router: Router,\n        private localStorage: LocalStorageService\n    ) {}\n\n    isValidIP(str: any) {\n        const arr = str.split(\".\").filter((el: any) => !/^0.|\\D/g.test(el));\n        return arr.filter((el: any) => el.length && el >= 0 && el <= 255).length === 4;\n    }\n\n    isValidFQDN(str: any) {\n        return /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/g.test(str);\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        if (!environment['customId'] && /http(s)?:\\/\\/|backend_oc\\//.test(request.url)) {\n            let currentUrl = window.location.href;\n            currentUrl = currentUrl.replace('http://', '').replace('https://', '');\n            currentUrl = currentUrl.replace(new RegExp('//'), '/');\n            const currentUrlArray = currentUrl.split('/');\n            if (this.isValidFQDN(currentUrlArray[0])) {\n                environment['fqdn'] = currentUrlArray[0];\n            }\n            for (let i = 0; i <= currentUrlArray.length; i++) {\n                if (currentUrlArray[i] === 'dist') {\n                    let customId = '';\n                    const isIp = this.isValidIP(currentUrlArray[i - 1]);\n                    const isFQDN = this.isValidFQDN(currentUrlArray[i - 1]);\n                    const currentCustom = environment['customId'];\n                    customId = currentUrlArray[i - 1];\n                    if (!isFQDN && !isIp && currentUrlArray[i - 1] !== 'localhost' && !currentUrlArray[i - 1].includes('opencapture') && !currentUrlArray[i - 1].includes('opencaptureforinvoices') && !currentUrlArray[i - 1].includes('backend_oc')) {\n                        customId = currentUrlArray[i - 1];\n                        const oldUrl = environment['url'];\n                        environment['customId'] = customId;\n                        environment['url'] += '/' + customId;\n                        if (environment.production) {\n                            environment['url'] = '../' + environment['url'];\n                        }\n                        const token = this.localStorage.get('OpenCaptureToken_' + customId);\n                        if (currentCustom && customId !== currentCustom) {\n                            this.router.navigate(['/logout']).then();\n                        }\n                        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n                        const newRequest = new HttpRequest(request.method as any,\n                            request.url.replace(oldUrl, environment['url']), {headers: headers});\n                        request = Object.assign(request, newRequest);\n                        return next.handle(request);\n                    }\n                }\n            }\n        }\n        return next.handle(request);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'app-monitoring-details',\n    templateUrl: './monitoring-details.component.html',\n    styleUrls: ['./monitoring-details.component.scss']\n})\n\nexport class MonitoringDetailsComponent implements OnInit, OnDestroy {\n    columnsToDisplay    : string[]              = ['step', 'event_date', 'event_message', 'status'];\n    loading             : boolean               = true;\n    processData         : any                   = [];\n    pageSize            : number                = 10;\n    pageIndex           : number                = 0;\n    total               : number                = 0;\n    splitterCpt         : number                = 0;\n    workflowLabel       : string                = '';\n    processId           : number | undefined;\n    steps               : any;\n    allSteps            : any;\n    timer               : any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.processId = this.route.snapshot.params['id'];\n        await this.loadProcess();\n\n        this.timer = setInterval(()=> {\n            if (this.processData.status === 'done') {\n                clearInterval(this.timer);\n                return;\n            }\n            this.loadProcess();\n        }, 4000);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timer);\n    }\n\n    async loadProcess() {\n        this.http.get(environment['url'] + '/ws/monitoring/getProcessById/' + this.processId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.process && Object.keys(data.process).length > 0) {\n                    this.processData = data.process[0];\n                    const now = new Date();\n                    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n                    const diffDays = Math.abs((now.getTime() - new Date(this.processData['creation_date']).getTime()) / (oneDay));\n                    if (diffDays <= 1) {\n                        this.processData.time = 'today';\n                    } else if (diffDays > 1 && diffDays <= 2) {\n                        this.processData.time = 'yesterday';\n                    } else {\n                        this.processData.time = 'older';\n                    }\n\n                    if (this.processData.workflow_id && this.workflowLabel === '') {\n                        this.http.get(environment['url'] + '/ws/workflows/' + this.processData.module + '/getByWorkflowId/' + this.processData.workflow_id, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                this.workflowLabel = data.label;\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                this.router.navigate(['/monitoring']).then();\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                    const listOfSteps: any = [];\n                    if (Object.keys(this.processData.steps).length > 0) {\n                        this.total = Object.keys(this.processData.steps).length;\n                        Object.keys(this.processData.steps).forEach((step: any) => {\n                            this.processData.steps[step].step = parseInt(step);\n                            this.processData.steps[step].date = moment(this.processData.steps[step].date).format('LLL');\n                            listOfSteps.push(this.processData.steps[step]);\n                        });\n                    }\n                    if (this.processData['elapsed_time']) {\n                        const hours = this.processData.elapsed_time.slice(0, 2);\n                        const minutes = this.processData.elapsed_time.slice(3, 5);\n                        const seconds = this.processData.elapsed_time.slice(6, 11);\n\n                        let message = '';\n                        if (hours && hours !== '00') {\n                            if (parseInt(hours) > 1) {\n                                message += hours + ' ' + this.translate.instant('MONITORING.hours') + ', ';\n                            } else {\n                                message += hours + ' ' + this.translate.instant('MONITORING.hour') + ', ';\n                            }\n                        }\n                        if (minutes && minutes !== '00') {\n                            if (parseInt(minutes) > 1) {\n                                message += minutes + ' ' + this.translate.instant('MONITORING.minutes') + ' ' + this.translate.instant('MONITORING.and') + ' ';\n                            } else {\n                                message += minutes + ' ' + this.translate.instant('MONITORING.minute') + ' ' + this.translate.instant('MONITORING.and') + ' ';\n                            }\n                        }\n                        if (seconds) {\n                            if (parseInt(minutes) < 1 && parseInt(hours) < 1) {\n                                const seconds_splitted = seconds.slice(0, 2);\n                                const microseconds = seconds.slice(3, 5);\n                                message += seconds_splitted + ' ' + this.translate.instant('MONITORING.seconds');\n                                message += ' ' + this.translate.instant('MONITORING.and') + ' ';\n                                message +=  microseconds + ' ' + this.translate.instant('MONITORING.microseconds');\n                            } else {\n                                if (parseInt(seconds) > 1) {\n                                    message += seconds + ' ' + this.translate.instant('MONITORING.seconds');\n                                } else {\n                                    message += seconds + ' ' + this.translate.instant('MONITORING.second');\n                                }\n                            }\n                        }\n                        this.processData.elapsedTimeMessage = message;\n                    }\n\n                    this.allSteps = listOfSteps;\n                    this.steps = listOfSteps.slice().splice(0, this.pageSize)\n                } else {\n                    this.notify.error(this.translate.instant('MONITORING.process_doesnt_exist', {id: this.processId}));\n                    this.router.navigate(['/monitoring']);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        const data = this.allSteps.slice();\n        this.steps = data.splice(this.pageSize * event.pageIndex, this.pageSize + (this.pageSize * (event.pageIndex)));\n    }\n\n    protected readonly window = window;\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div class=\"settings_header flex justify-between p-4 items-center bg-green-400 bg-opacity-60 text-gray-900 relative z-50\">\n            <div class=\"cursor-pointer\" [matTooltip]=\"'GLOBAL.back' | translate\" (click)=\"window.history.back()\">\n                <i class=\"fa-solid fa-arrow-left fa-xl\"></i>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center\">\n                <div class=\"grid my-10 mx-10\">\n                    <span class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.process_id' | translate }}\n                    </span>\n                    <span class=\"text-center text-xl\">\n                        {{ this.processId }}\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\" *ngIf=\"this.processData['document_ids']\">\n                    <span class=\"text-gray-400 text-base text-center\">\n                        <span *ngIf=\"this.processData['document_ids'].length <= 1\">\n                            {{ 'MONITORING.document_id' | translate }}\n                        </span>\n                        <span *ngIf=\"this.processData['document_ids'].length > 1\">\n                            {{ 'MONITORING.documents_id' | translate }}\n                        </span>\n                    </span>\n                    <span class=\"text-center text-xl\" *ngIf=\"this.processData['document_ids']\">\n                        <div>\n                            <span class=\"material-icons mr-3 relative top-1 font-light cursor-pointer text-gray-400\" *ngIf=\"this.processData['document_ids'].length > 1\"\n                                  (click)=\"this.splitterCpt !== 0 ? this.splitterCpt = this.splitterCpt - 1 : this.splitterCpt = this.processData['document_ids'].length - 1\">\n                                arrow_back\n                            </span>\n                            <a [routerLink]=\"'../../verifier/viewer/' + this.processData['document_ids'][0]\" *ngIf=\"this.processData.module === 'verifier'\">\n                                {{ this.processData['document_ids'][this.splitterCpt] }}\n                            </a>\n                            <a [routerLink]=\"'../../splitter/viewer/' + this.processData.time + '/' + this.processData['document_ids'][this.splitterCpt]\" *ngIf=\"this.processData.module === 'splitter'\">\n                                {{ this.processData['document_ids'][this.splitterCpt] }}\n                            </a>\n                            <span class=\"material-icons ml-3 relative top-1 font-light cursor-pointer text-gray-400\" *ngIf=\"this.processData['document_ids'].length > 1\"\n                                  (click)=\"this.splitterCpt < this.processData['document_ids'].length - 1 ? this.splitterCpt = this.splitterCpt + 1 : this.splitterCpt = 0\">\n                                arrow_forward\n                            </span>\n                        </div>\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <span *ngIf=\"this.processData['workflow_id']\">\n                        <div class=\"text-gray-400 text-base text-center\">\n                            {{ 'MONITORING.workflow_associated' | translate }}\n                        </div>\n                        <div class=\"text-center text-xl\">\n                            {{ this.workflowLabel }}\n                        </div>\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'HEADER.creation_date' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.creation_date_formated }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'HEADER.end_date' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.end_date_formated }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.process_time' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.elapsedTimeMessage }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.status' | translate }}\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'wait' && !this.processData.error\" class=\"text-gray-400 text-center text-3xl\"\n                          [matTooltip]=\"'MONITORING.wait' | translate\">\n                        <i class=\"fa-solid fa-clock text-gray-400\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'running' && !this.processData.error\" class=\"text-gray-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.running' | translate\">\n                        <i class=\"fa-solid fa-person-running fa-fade text-green-400\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'done' && !this.processData.error\" class=\"text-green-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.done' | translate\">\n                        <i class=\"fa-solid fa-check\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'error' || this.processData.error\" class=\"text-red-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.error' | translate\">\n                        <i class=\"fa-solid fa-xmark\"></i>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n            <div class=\"overflow-x-hidden h-full-overflow\">\n                <div class=\"flex justify-center\">\n                    <mat-table matSort [dataSource]=\"this.steps\" class=\"w-full\">\n                        <ng-container matColumnDef=\"step\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'MONITORING.step' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\"> {{ element.step }} </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"event_date\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.event_date' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\"> {{ element.date }} </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"event_message\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.event_message' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.message\"></mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"status\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.status !== 'error'\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-check text-green-400 text-lg w-6\"></i>\n                            {{ 'MONITORING.task_done' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'error'\" class=\"text-red-400\">\n                            <i class=\"fa-solid fa-xmark text-lg w-6\"></i>\n                            {{ 'MONITORING.task_error' | translate }}\n                        </span>\n                            </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                                 class=\"hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n                    </mat-table>\n                </div>\n                <mat-paginator showFirstLastButtons\n                               [length]=\"total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport {interval, of} from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport * as moment from \"moment/moment\";\n\n@Component({\n    selector: 'app-monitoring-list',\n    templateUrl: './monitoring-list.component.html',\n    styleUrls: ['./monitoring-list.component.scss']\n})\nexport class MonitoringListComponent implements OnInit, OnDestroy {\n    columnsToDisplay    : string[] = ['module', 'creation_date', 'end_date', 'filename', 'last_message', 'status'];\n    loading             : boolean  = true;\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    allProcessData      : any      = [];\n    moduleSelected      : string   = '';\n    statusSelected      : string   = '';\n    processData         : any;\n    form                : any[]    = [\n        {\n            'id': 'module',\n            'label': this.translate.instant('CUSTOM-FIELDS.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'status',\n            'type': 'select',\n            'label': this.translate.instant('HEADER.status'),\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'running',\n                    'label': this.translate.instant('MONITORING.running')\n                },\n                {\n                    'id': 'done',\n                    'label': this.translate.instant('MONITORING.done')\n                },\n                {\n                    'id': 'error',\n                    'label': this.translate.instant('MONITORING.error')\n                }\n            ]\n        }\n    ];\n    timer               : any;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) { }\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/monitoring/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allProcessData = data.processss;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.loadMonitoring();\n        this.timer = setInterval(()=>{\n            this.loadMonitoring();\n        }, 4000);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timer);\n    }\n\n    loadMonitoring() {\n        this.http.get(\n            environment['url'] + '/ws/monitoring/list?limit=' + this.pageSize + '&offset=' + this.offset + '&module=' + this.moduleSelected + '&status=' + this.statusSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.processData = data.processses;\n                if (data.processses[0]) this.total = data.processses[0].total;\n                this.processData.forEach((element: any) => {\n                    const numberOfSteps = Object.keys(element.steps).length;\n                    if (element.steps[numberOfSteps]) {\n                        element.last_message = element.steps[numberOfSteps].message;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadMonitoring();\n    }\n\n    resetFilter() {\n        this.moduleSelected = '';\n        this.statusSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadMonitoring();\n    }\n\n    updateData(id: string, value: string) {\n        if (id === 'module') {\n            this.moduleSelected = value;\n        } else if (id === 'status') {\n            this.statusSelected = value;\n        }\n        this.loadMonitoring();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allProcessData.slice();\n        if (!sort.active || sort.direction === '') {\n            this.processData = data;\n            return;\n        }\n\n        this.processData = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'module': return this.compare(a.module, b.module, isAsc);\n                case 'creation_date': return this.compare(a.creation_date, b.creation_date, isAsc);\n                case 'end_date': return this.compare(a.end_date, b.end_date, isAsc);\n                case 'last_message': return this.compare(a.last_message, b.last_message, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                default: return 0;\n            }\n        });\n        this.processData = this.processData.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900 relative z-50\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center\">\n                <div class=\"m-auto text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n                <form class=\"grid grid-cols-2 w-6/12 gap-6 mt-5 mb-0 text-center\">\n                    <ng-container *ngFor=\"let field of form\">\n                        <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                        [required]=\"field['required']\" (selectionChange)=\"updateData(field.id, $event.value)\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n                <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                     [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                    <i class=\"fa-solid fa-sync-alt\"></i>\n                </div>\n            </div>\n            <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n            <div class=\"flex justify-center\">\n                <mat-table matSort [dataSource]=\"this.processData\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                    <ng-container matColumnDef=\"module\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ 'MONITORING.' + element.module | translate }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"creation_date\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.creation_date' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [matTooltip]=\"element.creation_date_formated\"> {{ element.creation_date }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"end_date\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.end_date' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [matTooltip]=\"element.end_date_formated\"> {{ element.end_date }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"filename\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.filename' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"truncate w-10/12\">\n                                {{ element.filename }}\n                            </span>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"last_message\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.last_message' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.last_message\"></mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"status\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.status === 'wait' && !element.error\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-clock text-lg w-6\"></i>\n                            {{ 'MONITORING.wait' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'running' && !element.error\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-person-running fa-fade text-green-400 text-lg w-6\"></i>\n                            {{ 'MONITORING.running' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'done' && !element.error\" class=\"text-green-400\">\n                            <i class=\"fa-solid fa-check text-lg w-6\"></i>\n                            {{ 'MONITORING.done' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'error' || element.error\" class=\"text-red-400\">\n                            <i class=\"fa-solid fa-xmark text-lg w-6\"></i>\n                            {{ 'MONITORING.error' | translate }}\n                        </span>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\" [routerLink]=\"'/monitoring/' + row.id\"\n                             class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n                </mat-table>\n            </div>\n            <mat-paginator showFirstLastButtons\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit  } from '@angular/core';\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(\n        private notify: NotificationService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    ngOnInit(): void {\n        this.translate.get('ERROR.404').subscribe((translated: string) => {\n            this.notify.error(translated);\n            this.router.navigate(['/login']).then();\n        });\n    }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\" height=\"300\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { PasswordVerificationService } from \"../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    userId                      : any;\n    profile                     : any;\n    roles                       : any[]         = [];\n    profileForm                 : any[]         = [\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'old_password',\n            label: this.translate.instant('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: this.translate.instant('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private privilegeService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) { }\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.userId = parseInt(this.route.snapshot.params['id']);\n        const loggedUserId = this.userService.user.id;\n\n        if (this.userId !== parseInt(loggedUserId)) {\n            if (!this.privilegeService.hasPrivilege('update_user')) {\n                this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                    this.notify.error(translated);\n                    this.router.navigateByUrl('/home').then();\n                });\n            }\n        }\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id + '?full',\n            {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    } else {\n                        if ((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                for (const field in this.profile) {\n                    if (this.profile.hasOwnProperty(field)) {\n                        this.profileForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.profile[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.profileForm.forEach((element: any) => {\n            if (element.id === 'new_password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidityUnique(this.profileForm);\n                    }\n                    this.profileForm.filter((element: any) => element.id === 'old_password')[0].required = !!value;\n                });\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            this.loading = true;\n            const user : any = {};\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                environment['url'] + '/ws/users/update/' + this.userId, {'args': user},\n                {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId === this.userService.user.id) {\n                        this.userService.setUser(data.user);\n                    }\n                }),\n                finalize(() => this.loading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n\n        this.profileForm.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId === this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId !== this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{ this.profile['username'] }}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block m-2\" *ngIf=\"field.type !== 'select'\"\n                                    [class.pointer-events-none]=\"field.type === 'password' && this.disablePasswordModification\">\n                        <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input [readonly]=\"field.type === 'password' && this.disablePasswordModification\" matInput\n                               [formControl]=\"field['control']\" [type]=\"field.type\" [required]=\"field['required']\"\n                               [email]=\"field.type === 'email'\" [placeholder]=\"field.label | translate\">\n                        <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                        <mat-icon *ngIf=\"field.id === 'old_password'\" matSuffix (click)=\"field.type === 'password' ? field.type = 'text' : field.type = 'password'\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type === 'password'\" [class.fa-eye]=\"field.type !== 'password'\"></i>\n                        </mat-icon>\n                        <mat-icon *ngIf=\"field.id === 'new_password'\" matSuffix (click)=\"field.type === 'password' ? field.type = 'text' : field.type = 'password'\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type === 'password'\" [class.fa-eye]=\"field.type !== 'password'\"></i>\n                        </mat-icon>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['username'] === 'admin' || this.userService.getUserFromLocal()['privileges'] !== '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { environment } from \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PasswordVerificationService } from \"../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n    loading                 : boolean = true;\n    showPassword            : boolean = false;\n    image                   : SafeUrl = '';\n    resetToken              : string  = '';\n    passwordForm            : any[]   = [\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl()\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl()\n        }\n    ];\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private localStorageService: LocalStorageService,\n        public passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n        this.resetToken = this.route.snapshot.queryParams['reset_token'];\n        if (!this.resetToken) {\n            this.translate.get('AUTH.token_not_provided').subscribe((translated: string) => {\n                this.notify.error(this.translate.instant(translated));\n                this.authService.logout();\n            });\n        }\n        const b64Content = this.localStorageService.get('login_image_b64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.localStorageService.save('login_image_b64', data);\n                    this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                }),\n                finalize(() => { this.loading = false; }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n            this.loading = false;\n        }\n\n        this.passwordForm.forEach((element: any) => {\n            element.control.valueChanges.subscribe((value: any) => {\n                if (value) {\n                    this.passwordVerification.checkPasswordValidity(this.passwordForm);\n                }\n            });\n        });\n    }\n\n    onSubmit() {\n        const passwordConfirm = this.passwordForm.filter((element: any) => element.id === 'password_check')[0].control.value;\n        this.http.put(environment['url'] + '/ws/users/resetPassword', {resetToken: this.resetToken, newPassword: passwordConfirm}).pipe(\n            tap((data: any) => {\n                this.notify.success(this.translate.instant('USER.password_reset_success'));\n                this.authService.logout();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.passwordForm.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div class=\"relative top-16 2xl:top-32 flex justify-center h-20\" *ngIf=\"this.image\">\n    <img [src]=\"this.image\" alt=\"Open-Capture logo\">\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <mat-card class=\"text-center w-full 2xl:w-1/4 sm:w-1/2\">\n        <mat-card-title class=\"my-4\">\n            {{ 'GLOBAL.reset-password' | translate }}\n        </mat-card-title>\n        <app-hint class=\"mx-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_min_length' | translate : {min: this.passwordVerification.passwordRules.minLength}\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.specialCharMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_special_char_mandatory' | translate\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.uppercaseMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_uppercase_mandatory' | translate\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.numberMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_number_mandatory' | translate\"></app-hint>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of passwordForm\">\n                    <mat-form-field class=\"block mb-4\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\"\n                               [type]=\"this.showPassword ? 'text' : 'password'\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                        <mat-icon matSuffix (click)=\"this.showPassword = !this.showPassword\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword\" [class.fa-eye]=\"this.showPassword\"></i>\n                        </mat-icon>\n                        <mat-hint class=\"text-red-400\" *ngIf=\"field.control.invalid\" [innerHTML]=\"getErrorMessage(field.id)\"></mat-hint>\n                    </mat-form-field>\n                </ng-container>\n                <div>\n                    <button mat-button class=\"w-1/2 valid_button\" type=\"submit\">\n                        {{ 'AUTH.modify_password' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n        <div class=\"text-center relative top-8 text-gray-900\">\n            <a routerLink=\"/login\">\n                {{ 'AUTH.back_to_login' | translate }}\n            </a>\n        </div>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-about-us',\n    templateUrl: './about-us.component.html',\n    styleUrls: ['./about-us.component.scss']\n})\n\nexport class AboutUsComponent implements OnInit {\n    lastVersion    : any       = '';\n    loading        : boolean   = true;\n    isProd         : boolean   = false;\n    currentVersion : any       = 'dev';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.isProd = environment.production;\n        this.currentVersion = environment.version;\n        this.http.get(environment['url'] + '/ws/config/gitInfo').pipe(\n            tap((data: any) => {\n                if (data.git_latest) {\n                    this.lastVersion = data.git_latest;\n                } else {\n                    this.lastVersion = undefined;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                Open-Capture&nbsp;<span *ngIf=\"!this.loading\"><strong>version <span id=\"gitVersion\">{{ this.currentVersion }}</span></strong>&nbsp;</span>\n                <span *ngIf=\"!this.lastVersion === undefined\">\n                    |<span class=\"text-red-600\">&nbsp;{{ 'ERROR.git_connection' | translate }}</span>\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion > this.currentVersion && this.isProd\">\n                    | {{ 'ABOUT-US.new_version_available' | translate }} (<strong>\n                        <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                           target=\"_blank\">{{ this.lastVersion }}</a>\n                    </strong>)\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion < this.currentVersion && this.isProd\">\n                    | {{ 'ABOUT-US.are_you_in_future' | translate }} ({{ 'ABOUT-US.last_official_version' | translate }}&nbsp;:\n                    <strong>\n                        <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                            target=\"_blank\">{{ this.lastVersion }}</a>\n                    </strong>)\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div id=\"license\" class=\"text-center mt-10\">\n                <h2>{{ 'ABOUT-US.license' | translate }}</h2>\n                {{ 'ABOUT-US.distributed_under' | translate }}\n                <a class=\"text-green-400\" href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n                    {{ 'ABOUT-US.gnu_license' | translate }}\n                </a>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"edissyum text-center mt-10 text-lg\" style=\"line-height: 35px !important;\">\n                <h2>{{ 'ABOUT-US.editor' | translate }}</h2>\n                <div class=\"grid grid-cols-2 gap-10 w-1/2 m-auto\">\n                    <div class=\"text-right\">\n                        Edissyum Consulting <br>\n                        98 Avenue Pierre Semard <br>\n                        84200 Carpentras\n                    </div>\n                    <div class=\"text-left\" style=\"width: 200%\">\n                        {{ 'ABOUT-US.official_website' | translate }} : <a class=\"text-green-400\" href=\"https://kutt.it/OpenCaptureWebSite\">open-capture.com</a><br>\n                        Documentation : <a class=\"text-green-400\" href=\"https://kutt.it/DocumentationV2\">edissyum.gitbook.io/open-capture-for-invoices-v2</a> <br>\n                        Support : <a class=\"text-green-400\" href=\"https://kutt.it/OCForInvoices_ISSUES\">github.com/edissyum/opencapture</a>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"flex justify-center items-center mt-10 mb-5\">\n                <div>\n                    <img src=\"assets/imgs/login_image.png\" alt=\"Open-Capture\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n            </div>\n            <div class=\"logo grid grid-cols-7\">\n                <div id=\"verifier\" class=\"m-auto col-start-2 col-span-2\">\n                    <img src=\"assets/imgs/logo_verifier.png\" alt=\"Open-Capture Verifier\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n                <div id=\"splitter\" class=\"m-auto col-start-5 col-span-2\">\n                    <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : BRICH Oussama</h3>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div id=\"dependency\" class=\"text-center mt-10 mb-10\">\n                <h2>{{ 'ABOUT-US.dependency' | translate }}</h2>\n                <h4><i>{{ 'ABOUT-US.thanks_to_developers' | translate }}</i></h4>\n                <div>\n                    <ul>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://angular.io/\">Angular</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://material.angular.io/\">Angular Material</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://jquery.com/download/\">jQuery</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/kreuzerk/ng-sortgrid\">NgSortGridModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/telebroad/ngx-file-drag-drop\">NgxFileDragDropModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/ngx-translate/core\">NgxTranslateModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/swimlane/ngx-charts\">NgxCharts</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/ngx-translate/\">NgxTranslate</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/Kr0san89/ng-click-outside\">Click Outside 2</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/tyxla/remove-accents\">Remove-accent</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/hjnilsson/country-flags\">SVG Country Flags</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/angular-material-extensions/select-country\">Select Country</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://tailwindcss.com/\">Tailwind CSS</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://fontawesome.com/\">FontAwesome</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://www.npmjs.com/package/moment\">moment</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from  \"../../../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { LocaleService } from \"../../../../services/locale.service\";\nimport { PasswordVerificationService } from \"../../../../services/password-verification.service\";\nimport {FormControl, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-configurations',\n    templateUrl: './configurations.component.html',\n    styleUrls: ['./configurations.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfigurationsComponent implements OnInit {\n    columnsToDisplay        : string[]      = ['id', 'label', 'description', 'type', 'content', 'actions'];\n    emailTestControl        : FormControl   = new FormControl('', Validators.email);\n    tokenExpirationControl  : FormControl   = new FormControl(7);\n    tokenUserControl        : FormControl   = new FormControl('');\n    headers                 : HttpHeaders   = this.authService.headers;\n    filteredUsers           : Observable<any> | any;\n    updateLoading           : boolean       = false;\n    updating                : boolean       = false;\n    sending                 : boolean       = false;\n    smtpFormValid           : boolean       = false;\n    loading                 : boolean       = true;\n    configurations          : any           = [];\n    allConfigurations       : any           = [];\n    toHighlight             : string        = '';\n    token                   : string        = '';\n    search                  : string        = '';\n    loginImage              : SafeUrl       = '';\n    loginBottomMessage      : FormControl   = new FormControl();\n    loginTopMessage         : FormControl   = new FormControl();\n    pageSize                : number        = 10;\n    pageIndex               : number        = 0;\n    selectedIndex           : number        = 0;\n    total                   : number        = 0;\n    offset                  : number        = 0;\n    units                   : any           = [\n        {\n            id: 'general',\n            label: marker('MAILCOLLECT.smtp_general')\n        },\n        {\n            id: 'auth',\n            label: marker('MAILCOLLECT.smtp_auth')\n        },\n        {\n            id: 'notif_error',\n            label: marker('MAILCOLLECT.smtp_notif_error')\n        }\n    ];\n    smtpForm                : any[]         = [\n        {\n            id: 'smtpHost',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_host'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'smtpPort',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_port'),\n            type: 'number',\n            required: true\n        },\n        {\n            id: 'smtpProtocoleSecure',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_protocol'),\n            type: 'select',\n            required: true,\n            values: [\n                {\n                    id: 'none',\n                    label: marker('MAILCOLLECT.protocol_none')\n                },\n                {\n                    id: 'ssl',\n                    label: 'SSL'\n                },\n                {\n                    id: 'tls',\n                    label: 'TLS'\n                }\n            ]\n        },\n        {\n            id: 'smtpNotifOnError',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_notif_on_error'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'smtpDelay',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_delay'),\n            type: 'number',\n            required: false\n        },\n        {\n            id: 'smtpAuth',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.enable_smtp_auth'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'smtpLogin',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_login'),\n            type: 'text',\n            required: false\n        },\n        {\n            id: 'smtpPwd',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_pwd'),\n            type: 'password',\n            required: false\n        },\n        {\n            id: 'smtpFromMail',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_from_mail'),\n            type: 'text',\n            required: false\n        },\n        {\n            id: 'smtpDestAdminMail',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_dest_admin_mail'),\n            type: 'text',\n            required: false\n        }\n    ];\n    colorsMap               : any[]         = [\n        '#97BF3D', 'Open-Capture Green',\n        '#A7A8AA', 'Open-Capture Light Gray',\n        '#4C4C4E', 'Open-Capture Gray',\n        '#ECCAFA', 'Light Purple',\n        '#C2E0F4', 'Light Blue',\n\n        '#2DC26B', 'Green',\n        '#F1C40F', 'Yellow',\n        '#E03E2D', 'Red',\n        '#B96AD9', 'Purple',\n        '#3598DB', 'Blue',\n\n        '#169179', 'Dark Turquoise',\n        '#E67E23', 'Orange',\n        '#BA372A', 'Dark Red',\n        '#843FA1', 'Dark Purple',\n        '#236FA1', 'Dark Blue',\n\n        '#000000', 'Black',\n        '#ffffff', 'White'\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n        public passwordVerification: PasswordVerificationService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/configurations') || lastUrl === '/') {\n            if (this.localStorageService.get('configurationsPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('configurationsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('configurationsPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurations', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allConfigurations = data.configurations;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/smtp', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    Object.keys(data.configuration[0].data.value).forEach((config: any ) => {\n                        this.smtpForm.forEach((element: any) => {\n                            if (element.id === config) {\n                                if (data.configuration[0].data.value[config]) {\n                                    element.control.setValue(data.configuration[0].data.value[config]);\n                                }\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/loginBottomMessage', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginBottomMessage.setValue(data.configuration[0].data.value);\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/loginTopMessage', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginTopMessage.setValue(data.configuration[0].data.value);\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        const b64Content = this.localStorageService.get('login_image_b64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n        }\n\n        this.loadConfigurations();\n        this.smtpForm.forEach((element: any) => {\n            if (element.id === 'smtpNotifOnError' || element.id === 'smtpAuth') {\n                const unit = element.unit;\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.smtpForm.forEach((element: any) => {\n                        if (element.unit === unit && (element.id !== 'smtpNotifOnError' && element.id !== 'smtpAuth')) {\n                            if (!value) {\n                                element.control.disable();\n                            } else {\n                                element.control.enable();\n                            }\n                        }\n                    });\n                });\n                element.control.setValue(element.control.value);\n            }\n        });\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.filteredUsers = this.tokenUserControl.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, data.users) : data.users)\n                );\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => (option.lastname + ' ' + option.firstname + ' (' + option.username + ')').toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    onTabChanged(event: any) {\n        this.selectedIndex = event.index;\n    }\n\n    updateLoginBottomText() {\n        const data: any = {\n            'value': this.loginBottomMessage.value\n        };\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/loginBottomMessage', {'args': data},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CONFIGURATIONS.login_bottom_message_updated'));\n            }),\n            finalize(() => this.updating = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateLoginTopText() {\n        const data: any = {\n            'value': this.loginTopMessage.value\n        };\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/loginTopMessage', {'args': data},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CONFIGURATIONS.login_top_message_updated'));\n            }),\n            finalize(() => this.updating = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setSelectedUser(event: any) {\n        this.tokenUserControl.setValue(event.option.value.username);\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    copyToken() {\n        navigator.clipboard.writeText(this.token).then(() => {\n            this.notify.success(this.translate.instant('CONFIGURATIONS.token_copied'));\n        });\n    }\n\n    generateAuthToken() {\n        if (this.tokenUserControl.value && this.tokenExpirationControl.value) {\n            const args = {\n                'username': this.tokenUserControl.value,\n                'expiration': this.tokenExpirationControl.value\n            };\n            this.http.post(environment['url'] + '/ws/auth/generateAuthToken', args, {headers: this.authService.headers}).pipe(\n                tap((token: any) => {\n                    if (token) {\n                        this.token = token['token'];\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('CONFIGURATIONS.check_form_completion'));\n        }\n    }\n\n    updatePasswordRules() {\n        this.updating = true;\n        if (!this.passwordVerification.minLengthEnabled) {\n            this.passwordVerification.passwordRules.minLength = 0;\n        } else if (this.passwordVerification.passwordRules.minLength === 0) {\n            this.passwordVerification.passwordRules.minLength = 8;\n        }\n\n        const args = {\n            'value': this.passwordVerification.passwordRules,\n            'type': 'json',\n            'description': ''\n        };\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/passwordRules', {'args': args},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CONFIGURATIONS.password_rules_updated'));\n            }),\n            finalize(() => this.updating = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onClick(logo: any) {\n        logo.click();\n    }\n\n    disableField(unit: any) {\n        let ret = false;\n        const enableUnit = this.smtpForm.find((element: any) => element.type === 'boolean' && element.unit === unit);\n        if (enableUnit) {\n            ret = enableUnit.control.value !== true;\n        }\n        return ret;\n    }\n\n    testSmtp() {\n        if (this.emailTestControl.errors) {\n            this.notify.error(this.translate.instant('MAILCOLLECT.test_email_bad_format'));\n            return;\n        }\n        this.updateSmtp(false);\n\n        this.sending = true;\n        this.smtpFormValid = false;\n        this.http.post(environment['url'] + '/ws/smtp/test', {'email': this.emailTestControl.value}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('MAILCOLLECT.smtp_test_success', {email: this.emailTestControl.value}));\n            }),\n            finalize(() => {\n                this.sending = false;\n                this.smtpFormValid = true;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateSmtp(showSuccess: boolean = true) {\n        if (this.isValidForm(this.smtpForm)) {\n            const data: any = {\n                'value': {}\n            };\n\n            this.smtpForm.forEach((element: any) => {\n                data['value'][element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/config/updateConfiguration/smtp', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    if (showSuccess) {\n                        this.notify.success(this.translate.instant('MAILCOLLECT.smtp_general_settings_updated'));\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    upload(fileInput: any) {\n        if (fileInput.target.files && fileInput.target.files[0]) {\n            this.loading = true;\n            const reader = new FileReader();\n            reader.readAsDataURL(fileInput.target.files[0]);\n            reader.onload = (value: any) => {\n                const args = {\n                    'image_content': value.target.result\n                };\n                this.http.put(environment['url'] + '/ws/config/updateLoginImage', {'args': args},\n                    {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.loginImage = this.sanitizer.bypassSecurityTrustUrl(args['image_content']);\n                        this.localStorageService.save('login_image_b64', args['image_content'].replace('data:image/png;base64,', ''));\n                        const currentUrl = this.router.url;\n                        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n                            this.router.navigate([currentUrl]).then();\n                        });\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.login_image_changed'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            };\n        }\n    }\n\n    loadConfigurations() {\n        this.http.get(environment['url'] + '/ws/config/getConfigurations?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configurations[0]) this.total = data.configurations[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadConfigurations();\n                }\n                this.configurations = data.configurations;\n                this.configurations.forEach((element: any) => {\n                    switch (element.data.type) {\n                        case 'int':\n                            element.data.label_type = marker('CONFIGURATIONS.int');\n                            break;\n                        case 'float':\n                            element.data.label_type = marker('CONFIGURATIONS.float');\n                            break;\n                        case 'string':\n                            element.data.label_type = marker('CONFIGURATIONS.string');\n                            break;\n                        case 'bool':\n                            element.data.label_type = marker('CONFIGURATIONS.bool');\n                            break;\n                        default:\n                            break;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number) {\n        this.updateLoading = true;\n        const value = event.target ? event.target.value : event.value;\n        this.configurations.forEach((element: any) => {\n            if (element.id === id) {\n                element.data.value = value;\n                this.http.put(environment['url'] + '/ws/config/updateConfiguration/' + element.id, element, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.configuration_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchConfiguration(event: any) {\n        this.search = event.target.value;\n        this.loadConfigurations();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('configurationsPageIndex', event.pageIndex);\n        this.loadConfigurations();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allConfigurations.slice();\n        if (!sort.active || sort.direction === '') {\n            this.configurations = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.configurations = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'description': return this.compare(a.data.description, b.data.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.configurations = this.configurations.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    isValidForm(form: any, notify: boolean = true) {\n        let state = true;\n\n        form.forEach((element: any) => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        if (!state && notify) {\n            this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n        } else {\n            this.smtpFormValid = true;\n        }\n\n        return state;\n    }\n\n    getErrorMessage(field: any, process: any) {\n        let error: any;\n        process.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                    this.smtpFormValid = false;\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'CONFIGURATIONS.search_config' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchConfiguration($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <mat-tab-group dynamicHeight (selectedTabChange)=\"onTabChanged($event)\">\n                <mat-tab [label]=\"'CONFIGURATIONS.global' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center\" style=\"height: calc(100vh - 11rem) !important\">\n                        <div class=\"grid grid-cols-2 gap-6\">\n                            <div>\n                                <h3 class=\"text-gray-900 m-4\">{{ \"CONFIGURATIONS.change_image\" | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <mat-hint class=\"text-gray-600\">\n                                    {{ \"CONFIGURATIONS.authorized_extensions\" | translate }}\n                                </mat-hint>\n                                <div style=\"min-height: 12rem\" class=\"mt-4\">\n                                    <img class=\"shadow-md hover:shadow-xl m-auto p-2 transition-all ease-in-out duration-500\n                                 cursor-pointer shadow-gray-900 hover:shadow-gray-900\" [src]=\"this.loginImage\" alt=\"Login image\"\n                                         (click)=\"onClick(logo)\">\n                                    <input type=\"file\" name=\"files[]\" #logo (change)=\"upload($event)\" accept=\"image/png\" class=\"hidden\">\n                                </div>\n                            </div>\n                            <div>\n                                <h3 class=\"text-gray-900 m-4\">{{ \"PRIVILEGES.change_language\" | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <div class=\"ml-3 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('change_language')\">\n                                    <mat-form-field class=\"language origin-top-right right-0 mt-4 w-1/2\">\n                                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                                        <mat-select (selectionChange)=\"this.localeService.changeLocale($event)\"\n                                                    [disabled]=\"this.localeService.localeLoading\"\n                                                    [(value)]=\"this.localeService.currentLang\">\n                                            <mat-option *ngFor=\"let lang of this.localeService.langs\" [value]=\"lang[0]\">\n                                                {{ lang[1] }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <i *ngIf=\"this.localeService.localeLoading\"\n                                       class=\"fa-solid fa-earth-europe fa-beat fa-lg text-gray-900 ml-4\"></i>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"grid grid-cols-2\" *ngIf=\"this.selectedIndex === 0\">\n                            <div class=\"mb-5 mx-5 h-48\">\n                                <h3 class=\"text-gray-900\">{{ 'CONFIGURATIONS.top_login_text' | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <editor [formControl]=\"loginTopMessage\"\n                                        [init]=\"{\n                                        menubar: false,\n                                        branding: false,\n                                        promotion: false,\n                                        language: 'fr_FR',\n                                        base_url: './tinymce',\n                                        language_url: './assets/i18n/tinymce/langs/fr_FR.js',\n                                        toolbar: 'undo redo | formatselect | bold italic forecolor backcolor | link | alignleft aligncenter alignright alignjustify',\n                                        plugins: 'lists link image table code wordcount',\n                                        color_map: this.colorsMap\n                                    }\">\n                                </editor>\n                                <div class=\"flex justify-center m-6\">\n                                    <button class=\"p-6 valid_button\" type=\"submit\" mat-button (click)=\"updateLoginTopText()\">\n                                        {{ 'CONFIGURATIONS.save_login_text' | translate }}\n                                    </button>\n                                </div>\n                            </div>\n                            <div class=\"mb-5 mx-5 h-48\">\n                                <h3 class=\"text-gray-900\">{{ 'CONFIGURATIONS.bottom_login_text' | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <editor [formControl]=\"loginBottomMessage\"\n                                        [init]=\"{\n                                        menubar: false,\n                                        branding: false,\n                                        promotion: false,\n                                        language: 'fr_FR',\n                                        base_url: './tinymce',\n                                        language_url: './assets/i18n/tinymce/langs/fr_FR.js',\n                                        toolbar: 'undo redo | formatselect | bold italic forecolor backcolor | link | alignleft aligncenter alignright alignjustify',\n                                        plugins: 'lists link image table code wordcount',\n                                        color_map: this.colorsMap\n                                    }\">\n                                </editor>\n                                <div class=\"flex justify-center m-6\">\n                                    <button class=\"p-6 valid_button\" type=\"submit\" mat-button (click)=\"updateLoginBottomText()\">\n                                        {{ 'CONFIGURATIONS.save_login_text' | translate }}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.generate_token' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 11rem) !important\">\n                        <div class=\"text-center\">\n                            <div class=\"text-lg text-gray-900 mb-4\">\n                                {{ \"CONFIGURATIONS.token_expiration\" | translate }}\n                            </div>\n                            <mat-form-field class=\"w-96\">\n                                <input matInput type=\"number\" [formControl]=\"this.tokenExpirationControl\" required>\n                            </mat-form-field>\n                        </div>\n                        <hr class=\"border border-green-400 w-1/4 m-auto mb-4\">\n                        <div class=\"text-center w-auto\">\n                            <div class=\"text-lg text-gray-900 mb-4\">\n                                {{ \"CONFIGURATIONS.token_associated_user\" | translate }}\n                            </div>\n                            <mat-form-field class=\"w-96\">\n                                <input matInput id=\"associated_user\" type=\"text\" [matAutocomplete]=\"autocomplete\" [placeholder]=\"'CONFIGURATIONS.select_user' | translate\" required>\n                                <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"setSelectedUser($event)\">\n                                    <mat-option *ngFor=\"let option of this.filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                        <span [innerHTML]=\"option['lastname'] + ' ' + option['firstname'] + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                                    </mat-option>\n                                </mat-autocomplete>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"text-center mt-8\">\n                            <button class=\"valid_button\" type=\"submit\" mat-button (click)=\"generateAuthToken()\">\n                                {{ 'CONFIGURATIONS.generate_token' | translate }}\n                            </button>\n                            <div class=\"mt-8 text-gray-900\" *ngIf=\"this.token\">\n                                {{ this.token }}\n                                <i class=\"ml-4 fa-solid fa-copy text-2xl cursor-pointer\"\n                                   [matTooltip]=\"'CONFIGURATIONS.copy_token' | translate\"\n                                   (click)=\"copyToken()\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.password_rules' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow text-center\">\n                        <div class=\"flex flex-col items-center justify-center items-center gap-4 mt-4\">\n                            <div class=\"text-left\">\n                                <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.minLengthEnabled\" [checked]=\"this.passwordVerification.passwordRules.minLength > 0\"\n                                                  (change)=\"updatePasswordRules()\" [disabled]=\"this.updating\">\n                                    {{ \"CONFIGURATIONS.enable_password_min_length\" | translate }}\n                                </mat-slide-toggle>\n                                <mat-form-field appearance=\"outline\" class=\"w-4/12 ml-2\">\n                                    <mat-label>{{ \"CONFIGURATIONS.password_min_length\" | translate }}</mat-label>\n                                    <input matInput type=\"number\" [(ngModel)]=\"this.passwordVerification.passwordRules.minLength\"\n                                           [disabled]=\"!this.passwordVerification.minLengthEnabled || this.updating\" (change)=\"updatePasswordRules()\">\n                                </mat-form-field>\n                                <div class=\"mb-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules.uppercaseMandatory\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_uppercase_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                                <div class=\"my-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules.specialCharMandatory\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_special_char_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                                <div class=\"my-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules.numberMandatory\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_number_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.smtp' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 11rem) !important\">\n                        <div class=\"hint text-center\">\n                            <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n                            <div class=\"message w-auto\">\n                                <span class=\"text-lg\">\n                                    {{ \"CONFIGURATIONS.smtp_test_email\" | translate }}\n                                </span>\n                                <mat-form-field subscriptSizing=\"dynamic\" [ngStyle]=\"{'width.ch': this.emailTestControl.value.length, 'min-width.ch': 20}\">\n                                    <input matInput type=\"text\" [formControl]=\"this.emailTestControl\">\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <ng-container *ngFor=\"let unit of this.units\">\n                            <h2 class=\"text-gray-900\">{{ unit['label'] | translate }}</h2>\n                            <div class=\"flex justify-center mx-10\">\n                                <div class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                                    <ng-container *ngFor=\"let field of this.smtpForm\">\n                                        <ng-container *ngIf=\"field.unit === unit['id']\">\n                                            <div *ngIf=\"field.type === 'boolean'\" class=\"col-span-3 mb-8\">\n                                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field['control']\">\n                                                    {{ field.label | translate }}\n                                                </mat-slide-toggle>\n                                            </div>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'text' || field.type === 'password' || field.type === 'number'\"\n                                                [class.pointer-events-none]=\"disableField(unit['id'])\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [type]=\"field.type\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [readonly]=\"disableField(unit['id'])\" (keyup)=\"isValidForm(this.smtpForm, false)\">\n                                                <mat-icon matSuffix *ngIf=\"field.id === 'smtpPwd'\" (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text' \"\n                                                          class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                                </mat-icon>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\" (selectionChange)=\"isValidForm(this.smtpForm, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                                        {{ option['label'] | translate }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </ng-container>\n                        <div class=\"flex justify-center items-center mt-4\">\n                            <span [class.cursor-not-allowed]=\"!this.emailTestControl.value\">\n                                <button class=\"p-6 mr-4 border min-w-56 text-white transition border-solid duration-300 border-gray-900 hover:text-gray-900 hover:bg-transparent\" mat-button (click)=\"this.testSmtp()\"\n                                        [disabled]=\"!this.emailTestControl.value\"\n                                        [class.bg-gray-900]=\"this.emailTestControl.value\"\n                                        [class.bg-gray-400]=\"!this.emailTestControl.value\">\n                                    <span *ngIf=\"!this.sending\">\n                                        {{ \"CONFIGURATIONS.test_smtp\" | translate }}\n                                    </span>\n                                    <span *ngIf=\"this.sending\">\n                                        <i class=\"fa fa-circle-notch fa-spin fa-2x\"></i>\n                                    </span>\n                                </button>\n                            </span>\n                            <button class=\"ml-4 min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.smtpFormValid\"\n                                    [class.bg-gray-400]=\"!this.smtpFormValid\"\n                                    [class.bg-green-400]=\"this.smtpFormValid\"\n                                    type=\"submit\" mat-button (click)=\"this.updateSmtp()\">\n                                {{ 'CONFIGURATIONS.update_smtp' | translate }}\n                            </button>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.advanced' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow text-center p-8\">\n                        <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n                        <mat-table matSort [dataSource]=\"configurations\" (matSortChange)=\"sortData($event)\">\n                            <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"label\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"description\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.data.description }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"type\">\n                                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.type' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.data.label_type | translate }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"content\">\n                                <mat-header-cell *matHeaderCellDef>{{ 'HEADER.value' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                                    <ng-container *ngIf=\"!element.updateMode else update\">\n                                        {{ element.data.value }}\n                                    </ng-container>\n                                    <ng-template #update>\n                                        <mat-form-field appearance=\"outline\" *ngIf=\"element.data.type === 'bool'\">\n                                            <mat-select class=\"relative -top-3\" [(ngModel)]=\"element.data.value\"\n                                                        (selectionChange)=\"updateValue($event, element.id)\">\n                                                <mat-option [value]=\"true\">Activer</mat-option>\n                                                <mat-option [value]=\"false\">Désactiver</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\"\n                                                        *ngIf=\"element.data.type === 'int' || element.data.type === 'float'\">\n                                            <input matInput type=\"number\" [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                                   class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                        </mat-form-field>\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"element.data.type === 'string'\">\n                                            <input matInput [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                                   class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                        </mat-form-field>\n                                    </ng-template>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"actions\">\n                                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\">\n                                    <button *ngIf=\"!element.updateMode\"\n                                            (click)=\"element.updateMode = true\"\n                                            matTooltip=\"{{ 'CONFIGURATIONS.update' | translate }}\" mat-icon-button\n                                            class=\"inline-block align-text-top\">\n                                        <i class=\"fa-solid fa-edit text-lg\"></i>\n                                    </button>\n                                    <button *ngIf=\"element.updateMode\"\n                                            (click)=\"element.updateMode = false;\"\n                                            matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                            class=\"inline-block align-text-top\">\n                                        <i *ngIf=\"!this.updateLoading\" class=\"fa-solid text-lg fa-check\"></i>\n                                        <i *ngIf=\"this.updateLoading\" class=\"fa-solid text-lg fa-circle-notch fa-spin\"></i>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n                        </mat-table>\n                        <mat-paginator showFirstLastButtons\n                                       *ngIf=\"this.total > 0\"\n                                       [length]=\"this.total\"\n                                       [pageSize]=\"pageSize\"\n                                       [pageIndex]=\"pageIndex\"\n                                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                                       (page)=\"onPageChange($event)\">\n                        </mat-paginator>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { remove } from \"remove-accents\";\n\n@Component({\n    selector: 'app-custom-fields',\n    templateUrl: './custom-fields.component.html',\n    styleUrls: ['./custom-fields.component.scss']\n})\nexport class CustomFieldsComponent implements OnInit {\n    update                  : boolean       = false;\n    loading                 : boolean       = true;\n    isSplitter              : boolean       = false;\n    inactiveFields          : any[]         = [];\n    activeFields            : any[]         = [];\n    selectOptions           : any[]         = [];\n    inactiveOrActive        : string        = '';\n    regexResult             : string        = '';\n    regexControl            : FormControl   = new FormControl();\n    regexTestControl        : FormControl   = new FormControl();\n    regexRemoveSpecialChar  : FormControl   = new FormControl();\n    regexRemoveKeyWord      : FormControl   = new FormControl();\n    regexFormat             : FormControl   = new FormControl();\n    formats                 : any[]         = [\n        {\n            'id': 'text',\n            'label': this.translate.instant('FORMATS.text')\n        },\n        {\n            'id': 'date',\n            'label': this.translate.instant('FORMATS.date')\n        },\n        {\n            'id': 'number_float',\n            'label': this.translate.instant('FORMATS.number')\n        }\n    ];\n    updateCustomId          : any;\n    form!                   : FormGroup;\n    parent                  : any[]         = [\n        {\n            'id': 'verifier',\n            'label': this.translate.instant('HOME.verifier')\n        },\n        {\n            'id': 'splitter',\n            'label': this.translate.instant('HOME.splitter')\n        }\n    ];\n    addFieldInputs          : any[]         = [\n        {\n            field_id    : 'label_short',\n            controlType : 'text',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('HEADER.label_short'),\n            autoComplete: [],\n            required    : true\n        },\n        {\n            field_id    : 'label',\n            controlType : 'text',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('HEADER.label'),\n            autoComplete: [],\n            required    : true\n        },\n        {\n            field_id    : 'module',\n            controlType : 'dropdown',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('CUSTOM-FIELDS.module'),\n            options     : [\n                { key: 'verifier', value: this.translate.instant('HOME.verifier') },\n                { key: 'splitter', value: this.translate.instant('HOME.splitter') }\n            ],\n            required: true,\n            autoComplete: []\n        },\n        {\n            field_id    : 'type',\n            controlType : 'dropdown',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('CUSTOM-FIELDS.type'),\n            options     : [\n                { key: 'text', value: this.translate.instant('FORMATS.text') },\n                { key: 'regex', value: this.translate.instant('FORMATS.regex'), module: 'verifier' },\n                { key: 'date', value: this.translate.instant('FORMATS.date') },\n                { key: 'textarea', value: this.translate.instant('FORMATS.textarea') },\n                { key: 'select', value: this.translate.instant('FORMATS.select') },\n                { key: 'checkbox', value: this.translate.instant('CUSTOM-FIELDS.checkbox') }\n            ],\n            autoComplete: [],\n            required: true\n        },\n        {\n            field_id    : 'metadata_key',\n            controlType : 'text',\n            control     : new FormControl(),\n            label       : this.translate.instant('SETTINGS.autocomplete'),\n            limit       : 'splitter',\n            autoComplete: [\n                { key: '', value: this.translate.instant('SPLITTER.Other') },\n                { key: 'SEPARATOR_MEM', value: this.translate.instant('SPLITTER.separator_mem') },\n                { key: 'SEPARATOR_META1', value: this.translate.instant('SPLITTER.separator_meta1') },\n                { key: 'SEPARATOR_META2', value: this.translate.instant('SPLITTER.separator_meta2') },\n                { key: 'SEPARATOR_META3', value: this.translate.instant('SPLITTER.separator_meta3') }\n            ],\n            required    : false,\n            class       : \"\"\n        }\n    ];\n    unallowedFields         : any[]         = ['vat_rate', 'vat_amount', 'no_rate_amount', 'description', 'line_ht',\n        'unit_price', 'quantity'];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.retrieveCustomFields();\n        this.form = this.toFormGroup();\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'label_short') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value.match(/[\\u00C0-\\u017F]/gi) !== null) {\n                        element.control.setValue(remove(value));\n                    }\n\n                    if (value.match(/[!-\\/=£`°\\\\|\\]\\[@{}]/g) !== null) {\n                        element.control.setValue(value.replace(/[!-\\/=£`°\\\\|\\]\\[@{}]/g, \"\"));\n                    }\n                });\n            }\n        });\n    }\n\n    dropCustomField(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.enableCustomField(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n        }\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.addFieldInputs.forEach(input => {\n            group[input.field_id] = input.required ? new FormControl(input.value || '', Validators.required)\n                : new FormControl(input.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    checkRegex() {\n        if (this.regexTestControl.value && this.regexControl.value && this.regexControl.value !== '\\\\') {\n            const regex = new RegExp(this.regexControl.value, 'gi');\n            this.regexResult = this.regexTestControl.value.replace(regex, function(str: any) {\n                if (str) {\n                    return '<span class=\"text-white bg-green-400 p-1\">' + str + '</span>';\n                }\n                return str;\n            });\n            if (this.regexRemoveKeyWord.value) {\n                const regex = new RegExp(this.regexControl.value.substring(0, this.regexControl.value.length - 2), 'gi');\n                const tmp = this.regexTestControl.value.match(regex);\n                if (tmp === null) {\n                    return;\n                }\n                this.regexResult = this.regexResult.replace('<span class=\"text-white bg-green-400 p-1\">', '');\n                this.regexResult = this.regexResult.replace('</span>', '');\n                const colored = '<span class=\"text-white bg-green-400 p-1\">' + this.regexResult.replace(tmp, '') + '</span>';\n                this.regexResult = tmp + colored;\n            }\n        }\n    }\n\n    moveToActive(index: number) {\n        this.enableCustomField(this.inactiveFields, this.activeFields, index, this.activeFields.length);\n    }\n\n    moveToInactive(index: number) {\n        this.enableCustomField(this.activeFields, this.inactiveFields, index, this.inactiveFields.length);\n    }\n\n    displayInput(input: any) {\n        let _return = false;\n        if (input.limit) {\n            this.addFieldInputs.forEach((element: any) => {\n                if (element.field_id === 'module') {\n                    if (element.control.value === input.limit) {\n                        _return = true;\n                    }\n                }\n            });\n        }\n        this.isSplitter = _return;\n        return _return;\n    }\n\n    displayType(event: any) {\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                element.options.forEach((option: any) =>  {\n                    option.hide = option.module && option.module !== event.value;\n                });\n            }\n        });\n    }\n\n    retrieveCustomFields() {\n        this.loading        = true;\n        this.activeFields   = [];\n        this.inactiveFields = [];\n        let newField;\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: any) => {\n                    newField = {\n                        'id'            : field.id,\n                        'label_short'   : field.label_short,\n                        'module'        : field.module,\n                        'label'         : field.label,\n                        'type'          : field.type,\n                        'enabled'       : field.enabled,\n                        'settings'      : field.settings,\n                        'metadata_key'  : field.metadata_key\n                    };\n                    field.enabled ? this.activeFields.push(newField) : this.inactiveFields.push(newField);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    addSelectOption() {\n        this.selectOptions.push({\n            idControl      : new FormControl(),\n            labelControl   : new FormControl()\n        });\n    }\n\n    displayChoicesList() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                if (element.control.value && (element.control.value === 'checkbox' || element.control.value === 'select')) {\n                    _return = true;\n                }\n            }\n        });\n        return _return;\n    }\n\n    displayRegex() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                if (element.control.value && element.control.value === 'regex') {\n                    _return = true;\n                }\n            }\n        });\n        return _return;\n    }\n\n    dropSelectOption(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.selectOptions, event.previousIndex, event.currentIndex);\n    }\n\n    deleteSelectOption(optionIndex: number) {\n        this.selectOptions.splice(optionIndex, 1);\n    }\n\n    addSelectOptionsToArgs(args: any) {\n        args.options  = [];\n        for (const option of this.selectOptions) {\n            args.options.push({\n                id      : option.idControl.value,\n                label   : option.labelControl.value\n            });\n        }\n        return args;\n    }\n\n    addCustomField() {\n        this.loading = true;\n        let newField: any = {};\n        newField = this.addSelectOptionsToArgs(newField);\n\n        for (const field of this.addFieldInputs) {\n            if (field.required && !field.control.value) {\n                field.control.setErrors({'incorrect': true});\n                this.loading = false;\n                return;\n            }\n            newField[field.field_id] = field.control.value;\n            if (this.unallowedFields.includes(newField.label_short)) {\n                this.notify.error(this.translate.instant('CUSTOM-FIELDS.unallowed_fields'));\n                this.loading = false;\n                return;\n            }\n        }\n\n        if (newField.type === 'regex') {\n            newField.regex = {\n                'format': this.regexFormat.value,\n                'content': this.regexControl.value,\n                'test': this.regexTestControl.value,\n                'remove_keyword': this.regexRemoveKeyWord.value,\n                'remove_special_char': this.regexRemoveSpecialChar.value\n            };\n        }\n\n        this.http.post(environment['url'] + '/ws/customFields/add', newField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                newField['id'] = data.id;\n                this.retrieveCustomFields();\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_added'));\n                this.resetForm();\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustom(customFieldId: number, activeOrInactive: string) {\n        this.http.delete(environment['url'] + '/ws/customFields/delete/' + customFieldId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.deleted'));\n\n                if (activeOrInactive === 'active') {\n                    this.activeFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                } else {\n                    this.inactiveFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustomField(customFieldId: number, activeOrInactive: string) {\n        if (customFieldId) {\n            this.http.get(environment['url'] + '/ws/customFields/customPresentsInForm/' + customFieldId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data) {\n                        let custom_label = '';\n                        this.activeFields.forEach((element:any) => {\n                            if (element.id === customFieldId) {\n                                custom_label = element.label;\n                            }\n                        });\n                        if (custom_label === '') {\n                            this.inactiveFields.forEach((element:any) => {\n                                if (element.id === customFieldId) {\n                                    custom_label = element.label;\n                                }\n                            });\n                        }\n\n                        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                            data: {\n                                confirmTitle        : this.translate.instant('CUSTOM-FIELDS.custom_exists'),\n                                confirmText         : this.translate.instant('CUSTOM-FIELDS.confirm_delete', {custom_field: custom_label}),\n                                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                                confirmButtonColor  : \"warn\",\n                                cancelButton        : this.translate.instant('GLOBAL.cancel')\n                            },\n                            width: \"600px\"\n                        });\n\n                        dialogRef.afterClosed().subscribe((result: any) => {\n                            if (result) {\n                                this.deleteCustom(customFieldId, activeOrInactive);\n                            }\n                        });\n                    } else {\n                        this.deleteCustom(customFieldId, activeOrInactive);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableCustomField(oldList: any[], newList: any[], oldIndex: number, newIndex: number) {\n        let updatedField = oldList[oldIndex];\n\n        updatedField = {\n            'id': updatedField['id'],\n            'label_short': updatedField['label_short'],\n            'module': updatedField['module'],\n            'label': updatedField['label'],\n            'type': updatedField['type'],\n            'enabled': !updatedField['enabled'],\n            'metadata_key': updatedField['metadata_key']\n        };\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                transferArrayItem(\n                    oldList,\n                    newList,\n                    oldIndex,\n                    newIndex,\n                );\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomOnSubmit() {\n        let updatedField : any = {};\n        updatedField           = this.addSelectOptionsToArgs(updatedField);\n        updatedField['id']     = this.updateCustomId;\n        if (this.inactiveOrActive === 'active') {\n            this.addFieldInputs.forEach((field: any) => {\n                this.activeFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = true;\n        } else {\n            this.addFieldInputs.forEach((field: any) => {\n                this.inactiveFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = false;\n        }\n\n        if (updatedField.type === 'regex') {\n            updatedField.regex = {\n                'format': this.regexFormat.value,\n                'content': this.regexControl.value,\n                'test': this.regexTestControl.value,\n                'remove_keyword': this.regexRemoveKeyWord.value,\n                'remove_special_char': this.regexRemoveSpecialChar.value\n            };\n        }\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n                this.resetForm();\n                this.retrieveCustomFields();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomField(customField: any, activeOrInactive: string) {\n        this.update = true;\n        this.selectOptions = [];\n        if (customField) {\n            this.updateCustomId = customField.id;\n            this.inactiveOrActive = activeOrInactive;\n            this.addFieldInputs.forEach((element: any) => {\n                element.control.setValue(customField[element.field_id]);\n            });\n            if (customField.settings.options) {\n                for (const option of customField.settings.options) {\n                    this.selectOptions.push({\n                        'idControl'     : new FormControl(option.id),\n                        'labelControl'  : new FormControl(option.label)\n                    });\n                }\n            }\n\n            if (customField.settings.regex) {\n                this.regexFormat.setValue(customField.settings.regex.format);\n                this.regexControl.setValue(customField.settings.regex.content);\n                this.regexRemoveKeyWord.setValue(customField.settings.regex.remove_keyword);\n                this.regexRemoveSpecialChar.setValue(customField.settings.regex.remove_special_char);\n            }\n        }\n    }\n\n    resetForm() {\n        this.regexFormat.setValue('');\n        this.regexControl.setValue('');\n        this.regexRemoveKeyWord.setValue('');\n        this.regexRemoveSpecialChar.setValue('');\n        this.addFieldInputs.forEach((field: any) => {\n            field.control.setValue('');\n            field.control.setErrors(null);\n        });\n        this.selectOptions      = [];\n        this.inactiveOrActive   = '';\n        this.updateCustomId     = '';\n        this.update             = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-accordion>\n                <mat-expansion-panel [expanded]=\"true\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            {{ 'SETTINGS.add_custom_fields' | translate }}\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <form [formGroup]=\"form\">\n                        <div class=\"cursor-pointer relative top-9 ml-4 w-1/12\" matTooltip=\"{{ 'CUSTOM-FIELDS.reset' | translate }}\"\n                             (click)=\"resetForm()\">\n                            <i class=\"self-center fa-solid fa-sync fa-lg hover:text-green-400\"></i>\n                        </div>\n                        <div class=\"mx-12 grid grid-cols-4 gap-4\" [class.grid-cols-5]=\"isSplitter\">\n                            <div *ngFor=\"let input of addFieldInputs\">\n                                <div *ngIf=\"!input.limit || (input.limit && displayInput(input))\">\n                                    <mat-form-field *ngIf=\"input['controlType'] === 'text'\" class=\"w-full\">\n                                        <mat-label>{{ input.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"input['control']\" [id]=\"input.field_id\"\n                                               [type]=\"input.type\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [panelWidth]=\"'auto'\">\n                                        <span *ngIf=\"input.control.value === null || input.control.value === '' || input.control.value === undefined\">\n                                            <mat-option *ngFor=\"let option of input['autoComplete']\" [value]=\"option.key\">\n                                                <span class=\"text-md\" [innerHTML]=\"option.value | translate\"></span>\n                                                <span class=\"text-sm text-green-400 ml-3\">{{ option.key }}</span>\n                                            </mat-option>\n                                        </span>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"input['controlType'] === 'dropdown'\" class=\"w-full\">\n                                        <mat-label>{{ input.label | translate }}</mat-label>\n                                        <mat-select [id]=\"input['field_id']\" [formControl]=\"input['control']\"\n                                                    (selectionChange)=\"input['field_id'] === 'module' ? displayType($event) : ''\">\n                                            <ng-container *ngFor=\"let opt of input.options\">\n                                                <mat-option *ngIf=\"!opt['hide']\" [value]=\"opt.key\">\n                                                    {{ opt.value | translate }}\n                                                </mat-option>\n                                            </ng-container>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center flex-col\" *ngIf=\"displayChoicesList()\">\n                            <span class=\"text-center\">{{ 'CUSTOM-FIELDS.select_options' | translate }}</span>\n                            <div class=\"flex justify-center\">\n                                <div cdkDropList class=\"select-options-list w-96\"\n                                     (cdkDropListDropped)=\"dropSelectOption($event)\">\n                                    <div *ngIf=\"selectOptions.length === 0\" class=\"my-14 text-center text-gray-400\">{{ 'CUSTOM-FIELDS.no_option_added' | translate }}</div>\n                                    <div class=\"drop-box-option p-4\" *ngFor=\"let option of selectOptions; let optionIndex = index;\" cdkDrag>\n                                        <mat-form-field class=\"w-40 mr-2\">\n                                            <mat-label>{{ 'HEADER.id' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option.idControl\" type=\"text\">\n                                        </mat-form-field>\n                                        <mat-form-field class=\"w-40\">\n                                            <mat-label>{{ 'HEADER.label' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option.labelControl\" type=\"text\">\n                                        </mat-form-field>\n                                        <div matTooltip=\"{{ 'CUSTOM-FIELDS.delete_choice' | translate }}\"\n                                             (click)=\"deleteSelectOption(optionIndex)\" class=\"top-0 mx-2 h-8 cursor-pointer\">\n                                            <i class=\"fa-solid fa-trash fa-lg hover:text-green-400\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div matTooltip=\"{{ 'CUSTOM-FIELDS.add_choice' | translate }}\"\n                                     (click)=\"addSelectOption()\" class=\"top-0 mx-2 h-8 inline-block\">\n                                    <i class=\"fa-solid fa-plus fa-lg hover:text-green-400\"></i>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center flex-col\" *ngIf=\"displayRegex()\">\n                            <hr class=\"border-green-400 w-11/12 m-auto\">\n                            <div class=\"mx-auto w-11/12 mt-8\">\n                                <div class=\"flex flex-row gap-10 justify-center\">\n                                    <mat-slide-toggle [formControl]=\"regexRemoveKeyWord\" class=\"mb-8 flex justify-center\" (change)=\"checkRegex()\">\n                                        <span class=\"justify-center\">{{ 'CUSTOM-FIELDS.regex_remove_keyword' | translate }}</span>\n                                        <span class=\"relative text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"'CUSTOM-FIELDS.regex_remove_keyword_hint' | translate\">\n                                           <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                    <mat-slide-toggle [formControl]=\"regexRemoveSpecialChar\" class=\"mb-8 flex justify-center\">\n                                        <span class=\"justify-center\">{{ 'CUSTOM-FIELDS.regex_remove_special_char' | translate }}</span>\n                                        <span class=\"relative text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"'CUSTOM-FIELDS.regex_remove_special_char_hint' | translate\">\n                                           <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                    <mat-form-field class=\"w-1/3\">\n                                        <mat-label>{{ 'CUSTOM-FIELDS.regex_format' | translate }}</mat-label>\n                                        <mat-select [formControl]=\"regexFormat\" (selectionChange)=\"checkRegex()\">\n                                            <mat-option *ngFor=\"let opt of formats\" [value]=\"opt.id\">\n                                                {{ opt.label | translate }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"-mt-4 mb-4\">\n                                    <app-hint [specificClass]=\"'w-1/2'\" *ngIf=\"regexRemoveKeyWord.value\"\n                                              [message]=\"'CUSTOM-FIELDS.regex_remove_keyword_explanation' | translate\"></app-hint>\n                                </div>\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ 'FORMATS.regex' | translate }}</mat-label>\n                                    <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" matInput [value]=\"regexControl.value\"\n                                              [formControl]=\"regexControl\" (keyup)=\"checkRegex()\" spellcheck=\"false\"></textarea>\n                                </mat-form-field>\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ 'FORMATS.test_string' | translate }}</mat-label>\n                                    <input matInput type=\"text\" [formControl]=\"regexTestControl\" (keyup)=\"checkRegex()\">\n                                </mat-form-field>\n                                <span>\n                                {{ 'CUSTOM-FIELDS.regex_results' | translate }} : <span [innerHTML]=\"regexResult\"></span>\n                            </span>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center m-5\">\n                            <button class=\"valid_button\" mat-button (click)=\"addCustomField()\" *ngIf=\"!update\">\n                                {{ 'CUSTOM-FIELDS.add' | translate }}\n                            </button>\n                            <button class=\"valid_button\"\n                                    mat-button (click)=\"$event.stopPropagation();updateCustomOnSubmit()\" *ngIf=\"update\">\n                                {{ 'CUSTOM-FIELDS.update' | translate }}\n                            </button>\n                        </div>\n                    </form>\n                </mat-expansion-panel>\n            </mat-accordion>\n            <div class=\"custom-fields-control w-full\">\n                <mat-tab-group>\n                    <mat-tab *ngFor=\"let parent of this.parent\" [label]=\"this.translate.instant(parent.label)\">\n                        <div cdkDropListGroup class=\"w-max mx-auto\">\n                            <div class=\"list-container\">\n                                <h2>{{ 'HEADER.inactive' | translate }}</h2>\n                                <div cdkDropList [cdkDropListData]=\"inactiveFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                     class=\"custom-fields-list\"\n                                     style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of inactiveFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button matTooltip=\"{{ 'GLOBAL.move_to_active' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToActive(i)\">\n                                                <i class=\"fa fa-plus\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.edit' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'inactive')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'inactive')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                                </div>\n                            </div>\n                            <div class=\"list-container\">\n                                <h2>{{ 'HEADER.active' | translate }}</h2>\n                                <div cdkDropList [cdkDropListData]=\"activeFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                     class=\"custom-fields-list\"\n                                     style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of activeFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button matTooltip=\"{{ 'GLOBAL.move_to_inactive' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToInactive(i)\">\n                                                <i class=\"fa fa-minus\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.edit' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'active')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'active')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-docservers',\n    templateUrl: './docservers.component.html',\n    styleUrls: ['./docservers.component.scss'],\n    providers: [\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }}\n    ]\n})\nexport class DocserversComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['id', 'docserver_id', 'description', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    docservers          : any           = [];\n    allDocservers       : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/docservers') || lastUrl === '/') {\n            if (this.localStorageService.get('docserversPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('docserversPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('docserversPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getDocservers', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allDocservers = data.docservers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadDocservers();\n    }\n\n    loadDocservers() {\n        this.http.get(environment['url'] + '/ws/config/getDocservers?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.docservers[0]) this.total = data.docservers[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadDocservers();\n                }\n                this.docservers = data.docservers;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number, docserver: string) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.docservers.forEach((element: any) => {\n            if (element.id === id) {\n                element.path = value;\n                this.http.put(environment['url'] + '/ws/config/updateDocserver/' + element.id, {'data': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('DOCSERVERS.docserver_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchDocservers(event: any) {\n        this.search = event.target.value;\n        this.loadDocservers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('docserversPageIndex', event.pageIndex);\n        this.loadDocservers();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allDocservers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.docservers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.docservers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.docservers = this.docservers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'DOCSERVERS.search_docserver' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchDocservers($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n            <mat-table matSort [dataSource]=\"docservers\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"docserver_id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"docserver_id\"> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.docserver_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"description\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.description }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"content\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.path' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                        <ng-container *ngIf=\"!element.updateMode else update\">\n                            {{ element.path }}\n                        </ng-container>\n                        <ng-template #update>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input matInput [value]=\"element.path\" (keyup.enter)=\"updateValue($event, element.id, element.docserver_id)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id, element.docserver_id)\">\n                            </mat-form-field>\n                        </ng-template>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"!element.updateMode\"\n                                (click)=\"element.updateMode = true\"\n                                matTooltip=\"{{ 'DOCSERVERS.update' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-edit text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"element.updateMode\"\n                                (click)=\"element.updateMode = false;\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                            <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           *ngIf=\"this.total > 0\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Essaid MEGHELLET <essaid.meghellet@edissyum.com>*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n  selector: 'app-login-methods',\n  templateUrl: './login-methods.component.html',\n  styleUrls: ['./login-methods.component.scss']\n})\nexport class LoginMethodsComponent implements OnInit {\n    loading                 : boolean   = true;\n    isSaveBtnDisabled       : boolean   = true;\n    isNextBtnDisabled       : boolean   = true;\n    isLaunchBtnDisabled     : boolean   = true;\n    isLaunchBtnClicked      : boolean   = false;\n    isProcessLaunched       : boolean   = false;\n    showPassword            : boolean   = false;\n    isLdapChecked           : boolean   = false;\n    isDefaultChecked        : boolean   = false;\n    connexionServerStatus   : boolean   = false;\n    synchroUsersStatus      : boolean   = false;\n    isProcessConnectionLaunched       : boolean   = false;\n    label                   : any[]     = [\n        marker ('LOGIN-METHODS.ldap'),\n        marker ('LOGIN-METHODS.default')\n    ];\n    loginMethods      : any[]     = [\n        {\n            login_method_name : '',\n            enabled :''\n        }\n    ];\n    connectionFormGroup     : any[]     = [\n        {\n            id: 'typeAD',\n            label: this.translate.instant('LOGIN-METHODS.typeAD'),\n            type: 'select',\n            control: new FormControl(),\n            values: ['openLDAP', 'adLDAP'],\n            required: true\n        },\n        {\n            id: 'host',\n            label: this.translate.instant('LOGIN-METHODS.host'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : ldap://192.168.10.180'\n        },\n        {\n            id: 'port',\n            label: this.translate.instant('LOGIN-METHODS.port'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : 389'\n        },\n        {\n            id: 'loginAdmin',\n            label: this.translate.instant('LOGIN-METHODS.login_admin'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : admin'\n        },\n        {\n            id: 'passwordAdmin',\n            label: this.translate.instant('LOGIN-METHODS.password_admin'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'baseDN',\n            label: this.translate.instant('LOGIN-METHODS.base_dn'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : dc=edissyum,dc=com'\n        },\n        {\n            id: 'prefix',\n            label: this.translate.instant('LOGIN-METHODS.prefix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : edissyum'\n        },\n        {\n            id: 'suffix',\n            label: this.translate.instant('LOGIN-METHODS.suffix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : @domaine-edisslab.com'\n        }\n\n    ];\n    synchroparamsFormGroup  : any[]     = [\n        {\n            id: 'attributSourceUser',\n            label: this.translate.instant('LOGIN-METHODS.source_user_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : uid'\n        },\n        {\n            id: 'classObject',\n            label: this.translate.instant('LOGIN-METHODS.class_Object'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : posixAccount'\n        },\n        {\n            id: 'classUser',\n            label: this.translate.instant('LOGIN-METHODS.class_user'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : objectClass'\n        },\n        {\n            id: 'attributFirstName',\n            label: this.translate.instant('LOGIN-METHODS.first_name_attribute'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : givenname'\n        },\n        {\n            id: 'attributLastName',\n            label: this.translate.instant('LOGIN-METHODS.last_name_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : sn'\n        },\n        {\n            id: 'usersDN',\n            label: this.translate.instant('LOGIN-METHODS.usersDN'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : cn=employes,ou=utilisateurs,dc=edissyum,dc=com'\n        },\n        {\n            id: 'attributRoleDefault',\n            label: this.translate.instant('LOGIN-METHODS.role_default'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : Utilisateur'\n        }\n\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        private _formBuilder: FormBuilder,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                this.loginMethods = data.login_methods;\n                for ( const login_method_name of this.loginMethods ) {\n                    if (login_method_name['method_name'] === 'default') {\n                        this.isDefaultChecked = !!login_method_name['enabled'];\n                    }\n                    if (login_method_name['method_name'] === 'ldap') {\n                        this.isLdapChecked = !!login_method_name['enabled'];\n                    }\n                }\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.synchroparamsFormGroup.forEach((element:any) => {\n                    if (element.id === 'attributRoleDefault') {\n                        element.values = data.roles;\n                    }\n                });\n\n                this.http.get(environment['url'] + '/ws/auth/retrieveLdapConfigurations', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        const configs : any = data.ldap_configurations;\n                        this.connectionFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                if (element.type !== 'password') {\n                                    element.control.setValue(config.data[element.id]);\n                                }\n                            }\n                        });\n                        this.synchroparamsFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                element.control.setValue(config.data[element.id]);\n                            }\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    updateTypeAd(event: any, id: any) {\n        if  (event.isUserInput) {\n            let required = true;\n            if (id === 'typeAD' && event.source.value === 'adLDAP') {\n                required = false;\n            }\n            this.connectionFormGroup.forEach((element: any) => {\n                if (element.id === 'baseDN') {\n                    element.required = required;\n                }\n            });\n        }\n    }\n\n    changedDefaultMethod(loginMethodName: any): void {\n        if (!this.isDefaultChecked) {\n            this.enableLoginMethod(loginMethodName);\n        } else if (this.isDefaultChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    changedLdapMethod(loginMethodName: any): void {\n        if (!this.isLdapChecked) {\n            this.isLdapChecked = true;\n        } else if (this.isLdapChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    isValidConnexionForm() {\n        let state = true;\n        this.connectionFormGroup.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    isValidSynchronizationForm() {\n        let state = true;\n        this.connectionFormGroup.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    disableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/disableLoginMethodName', loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = false;\n                }\n                if (loginMethodName['method_name'] === 'ldap') {\n                    this.isLdapChecked = false;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_disabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    enableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/enableLoginMethodName', loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = true;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_enabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    checkLdapConnexion(): void {\n        if (this.isValidConnexionForm()) {\n            this.isProcessConnectionLaunched = true;\n            const server_data : any = {};\n            this.connectionFormGroup.forEach(element => {\n                server_data[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/connectionLdap', server_data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.isProcessConnectionLaunched = false;\n                    this.isLaunchBtnDisabled = false;\n                    this.connexionServerStatus = true;\n                    this.isNextBtnDisabled = false;\n                    this.notify.success(this.translate.instant('LOGIN-METHODS.server_ldap_connection'));\n                }),\n                catchError ((err: any) => {\n                    this.isProcessConnectionLaunched = false;\n                    this.isLaunchBtnDisabled = true;\n                    this.isSaveBtnDisabled = true;\n                    this.isNextBtnDisabled = true;\n                    this.connexionServerStatus = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of (false);\n                })\n            ).subscribe();\n        }\n    }\n\n    ldapSynchronization(): void {\n        if (this.isValidSynchronizationForm() && this.isValidConnexionForm()) {\n            this.isLaunchBtnClicked = true;\n            this.isProcessLaunched = true;\n            const synchronizationData : any = {};\n            this.connectionFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n            this.synchroparamsFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/ldapSynchronization', synchronizationData, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.isProcessLaunched = false;\n                    this.isLaunchBtnClicked = false;\n                    this.isSaveBtnDisabled = false;\n                    this.isNextBtnDisabled = false;\n                    this.isLaunchBtnDisabled = false;\n                    this.synchroUsersStatus = true;\n                    this.notify.success(this.translate.instant('LOGIN-METHODS.result_synchronization_operation', {'users_added':data['create_users'], 'users_updated':data['update_users'], 'users_disabled':data['disabled_users']}));\n                }),\n                catchError ((err: any) => {\n                    this.isProcessLaunched = false;\n                    this.isLaunchBtnClicked = false;\n                    this.isSaveBtnDisabled = true;\n                    this.isLaunchBtnDisabled = true;\n                    this.synchroUsersStatus = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of (false);\n                })\n            ).subscribe();\n        } else {\n            this.isLaunchBtnDisabled = true;\n        }\n    }\n\n    saveLoginMethodConfigs(): void {\n        if (this.isValidSynchronizationForm() && this.isValidConnexionForm()) {\n            if (this.connexionServerStatus && this.synchroUsersStatus) {\n                const methodDataToSave : any = {};\n                this.connectionFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                this.synchroparamsFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                this.http.post(environment['url'] + '/ws/auth/saveLoginMethodConfigs', methodDataToSave, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.isLdapChecked = true;\n                        this.notify.success(this.translate.instant('LOGIN-METHODS.save_ldap_infos_success'));\n                    }),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }\n        } else {\n            this.isSaveBtnDisabled = true;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <app-hint [message]=\"'LOGIN-METHODS.limit_enabled_methods' | translate\"></app-hint>\n        <mat-tab-group class=\"login-methods-tab\">\n            <mat-tab *ngFor=\"let method of this.loginMethods\"\n                     [label]=\"'LOGIN-METHODS.' + method['method_name'] | translate\">\n                <div class=\"list-container\">\n                    <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'default'\">\n                        <mat-slide-toggle [checked]=\"this.isDefaultChecked\" (change)=\"changedDefaultMethod(method)\">\n                            <span class=\"justify-center\">\n                                {{ 'LOGIN-METHODS.enable_method' | translate }}\n                            </span>\n                        </mat-slide-toggle>\n                    </div>\n                    <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'ldap'\">\n                        <mat-slide-toggle [checked]=\"this.isLdapChecked\" (change)=\"changedLdapMethod(method)\">\n                            <span class=\"justify-center\">\n                                {{ 'LOGIN-METHODS.enable_method' | translate }}\n                            </span>\n                        </mat-slide-toggle>\n                        <div [class.pointer-events-none]=\"!this.isLdapChecked\"\n                             [class.opacity-30]=\"!this.isLdapChecked\">\n                            <mat-stepper orientation=\"horizontal\">\n                                <mat-step>\n                                    <form class=\"grid gap-x-8 gap-y-2 grid-cols-3 text-center m-5\">\n                                        <ng-template matStepLabel>\n                                            {{ \"LOGIN-METHODS.connection\" | translate }}\n                                        </ng-template>\n                                        <ng-container *ngFor=\"let field of connectionFormGroup\">\n                                            <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                                    <mat-option *ngFor=\"let option of field.values\"\n                                                                (onSelectionChange)=\"updateTypeAd($event, field.id)\"\n                                                            [value]=\"option\">{{ option }}</mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'password'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field['control']\"\n                                                       [placeholder]=\"field.label | translate\"\n                                                       [required]=\"field['required']\"\n                                                       [type]=\"showPassword ? 'text' : 'password'\">\n                                                <mat-icon matSuffix class=\"text-green-400 relative cursor-pointer -top-1.5 text-base\"\n                                                          (click)=\"this.showPassword = !this.showPassword\">\n                                                    <i class=\"fa fa-1x\"  [class.fa-eye-slash]=\"!showPassword\"\n                                                       [class.fa-eye]=\"showPassword\"></i>\n                                                </mat-icon>\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field['control']\"\n                                                       [type]=\"field.type\" [required]=\"field['required']\"\n                                                       [placeholder]=\"field.label | translate\">\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </form>\n                                    <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                        <button type=\"submit\" mat-button (click)=\"checkLdapConnexion()\"\n                                                class=\"gray_button col-start-3\">\n                                            <span *ngIf=\"!this.isProcessConnectionLaunched\">\n                                                {{ \"LOGIN-METHODS.test_connection\" | translate }}\n                                            </span>\n                                            <i *ngIf=\"this.isProcessConnectionLaunched\"\n                                               class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                                        </button>\n                                        <div [class.cursor-not-allowed]=\"this.isNextBtnDisabled\">\n                                            <button matStepperNext mat-button [disabled]=\"this.isNextBtnDisabled\"\n                                                    [class.bg-gray-400]=\"this.isNextBtnDisabled\"\n                                                    [class.border-gray-400]=\"this.isNextBtnDisabled\"\n                                                    class=\"valid_button ml-2 w-full\">\n                                                {{ \"LOGIN-METHODS.next\" | translate }}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </mat-step>\n                                <mat-step [aria-labelledby]=\"this.isNextBtnDisabled ? 'disabled_step' : ''\">\n                                    <ng-template matStepLabel>\n                                        {{ \"LOGIN-METHODS.synchronization\" | translate }}\n                                    </ng-template>\n                                    <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                        <ng-container *ngFor=\"let field of synchroparamsFormGroup\">\n                                            <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                                    <mat-option *ngFor=\"let option of field.values\"\n                                                            [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                                                </mat-select>\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field['control']\"\n                                                       [required]=\"field['required']\"\n                                                       [type]=\"field.type\" [placeholder]=\"field.label | translate\">\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                        <button matStepperPrevious mat-button class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 col-start-3\">\n                                            {{ \"LOGIN-METHODS.return\" | translate }}\n                                        </button>\n                                        <div [class.cursor-not-allowed]=\"this.isNextBtnDisabled\">\n                                            <button matStepperNext mat-button [disabled]=\"this.isNextBtnDisabled\"\n                                                    [class.bg-gray-400]=\"this.isNextBtnDisabled\"\n                                                    [class.border-gray-400]=\"this.isNextBtnDisabled\"\n                                                    class=\"valid_button ml-2 w-full\">\n                                                {{ \"LOGIN-METHODS.next\" | translate }}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </mat-step>\n                                <mat-step [aria-labelledby]=\"this.isNextBtnDisabled ? 'disabled_step' : ''\">\n                                    <ng-template matStepLabel>\n                                        {{ \"LOGIN-METHODS.launching\" | translate }}\n                                    </ng-template>\n                                    <p>{{ \"LOGIN-METHODS.end_ldap_setup\" | translate }}</p>\n                                    <div class=\"mb-6 grid grid-cols-3 gap-4 h-12 text-gray-900\">\n                                        <button matStepperPrevious mat-button\n                                                class=\"p-6 border-solid border-red-400 border bg-red-400 text-white\n                                                hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                            {{ \"LOGIN-METHODS.return\" | translate }}\n                                        </button>\n                                        <div [class.cursor-not-allowed]=\"this.isLaunchBtnDisabled\">\n                                            <button matStepperNext mat-button [disabled]=\"this.isLaunchBtnDisabled\"\n                                                    [class.bg-gray-400]=\"this.isLaunchBtnDisabled\" type=\"submit\"\n                                                    (click)=\"ldapSynchronization()\"\n                                                    [class.border-gray-400]=\"this.isLaunchBtnDisabled\" class=\"valid_button ml-2 w-full\">\n                                                <span *ngIf=\"!this.isProcessLaunched\">\n                                                    {{ \"LOGIN-METHODS.launch\" | translate }}\n                                                </span>\n                                                <i *ngIf=\"this.isLaunchBtnClicked\"\n                                                   class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                                            </button>\n                                        </div>\n                                        <button (click)=\"saveLoginMethodConfigs()\" mat-button\n                                                [disabled]=\"this.isSaveBtnDisabled\"\n                                                [class.cursor-not-allowed]=\"this.isSaveBtnDisabled\" class=\"valid_button\">\n                                            {{ \"LOGIN-METHODS.register\" | translate }}\n                                        </button>\n                                    </div>\n                                </mat-step>\n                            </mat-stepper>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl } from '@angular/forms';\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n    selector: 'app-mailcollect',\n    templateUrl: './mailcollect.component.html',\n    styleUrls: ['./mailcollect.component.scss']\n})\n\nexport class MailCollectComponent implements OnInit {\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    folderLoading       : boolean       = false;\n    processLoading      : boolean       = false;\n    loadingProcessName  : boolean       = false;\n    formValid           : { [key: string]: boolean; } = {};\n    allCustomers        : any           = [];\n    allForms            : any           = [];\n    allSplitterWorkflows   : any           = [];\n    processesMail       : any           = [];\n    allprocessesMail    : any           = [];\n    processes           : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    selectedIndex       : number        = 0;\n    search              : string        = '';\n    defaultProcessData  : any           = [\n        {\n            id: 'name',\n            control: new FormControl()\n        },\n        {\n            id: 'secured_connection',\n            unit: 'general',\n            control: new FormControl(true),\n            label: marker('MAILCOLLECT.secured_connection'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'hostname',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.hostname'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'enabled',\n            control: new FormControl(),\n            disabled: true,\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'port',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.port'),\n            type: 'number',\n            required: true\n        },\n        {\n            id: 'login',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('FORMATS.email'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'password',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('USER.password'),\n            type: 'password',\n            required: true\n        },\n        {\n            id: 'is_splitter',\n            unit: 'splitter',\n            control: new FormControl(false),\n            label: marker('MAILCOLLECT.is_splitter'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'splitter_technical_workflow_id',\n            unit: 'splitter',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.splitter_technical_workflow_id'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'folder_to_crawl',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_to_crawl'),\n            type: 'autocomplete',\n            required: true\n        },\n        {\n            id: 'folder_destination',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_destination'),\n            type: 'autocomplete',\n            required: true\n        },\n        {\n            id: 'folder_trash',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_trash'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'action_after_process',\n            unit: 'folders',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.action_after_process'),\n            type: 'select',\n            values: [\n                {\n                    id: 'move',\n                    label: marker('MAILCOLLECT.move')\n                },\n                {\n                    id: 'delete',\n                    label: marker('MAILCOLLECT.delete')\n                },\n                {\n                    id: 'none',\n                    label: marker('MAILCOLLECT.none')\n                }\n            ],\n            required: true\n        },\n        {\n            id: 'verifier_customer_id',\n            unit: 'verifier',\n            control: new FormControl(),\n            label: marker('WORKFLOW.associated_customer'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'verifier_form_id',\n            unit: 'verifier',\n            control: new FormControl(),\n            label: marker('POSITIONS-MASKS.form_associated'),\n            type: 'autocomplete',\n            required: false\n        }\n    ];\n    toHighlight         : string        = '';\n    folders             : any[]         = [];\n    units               : any           = [\n        {\n            id: 'general',\n            label: marker('MAILCOLLECT.general')\n        },\n        {\n            id: 'folders',\n            label: marker('MAILCOLLECT.folders')\n        },\n        {\n            id: 'splitter',\n            label: marker('MAILCOLLECT.splitter')\n        },\n        {\n            id: 'verifier',\n            label: marker('MAILCOLLECT.verifier')\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allCustomers = data.customers;\n                this.allCustomers.forEach((element: any) => {\n                    element.label = element.name;\n                });\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'verifier_customer_id') {\n                        element.values = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.allCustomers) : this.allCustomers)\n                        );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allForms = data.forms;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'verifier_form_id') {\n                        element.values = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.allForms) : this.allForms)\n                        );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSplitterWorkflows = data.workflows;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'splitter_technical_workflow_id') {\n                        element.values = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.allSplitterWorkflows) : this.allSplitterWorkflows)\n                        );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.loadProcess();\n        });\n    }\n\n    processIsEnabled(process: any) {\n        let enabled = false;\n        process.forEach((element: any) => {\n            if (element.id === 'enabled') {\n                enabled = element.control.value;\n            }\n        });\n        return enabled;\n    }\n\n    updateProcessName(process: any, new_process_name: any, updateDatabase: boolean = true) {\n        if (new_process_name) {\n            this.loadingProcessName = true;\n            this.formValid[new_process_name] = false;\n            let oldProcessName = '';\n            process.forEach((element: any) => {\n                if (element.id === 'name') {\n                    oldProcessName = element.control.value;\n                    element.control.setValue(new_process_name);\n                }\n            });\n            if (updateDatabase && oldProcessName) {\n                this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + oldProcessName, {\"name\": new_process_name}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('MAILCOLLECT.process_name_updated'));\n                    }),\n                    finalize(() => {\n                        this.loadingProcessName = false;\n                        process.edit_name = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    displayFn(option: any) {\n        if (option) return option.name ? option.name : option.label ? option.label : option.input_label;\n        return '';\n    }\n\n    addProcess() {\n        const newProcess: any = [];\n        this.defaultProcessData.forEach((process_default: any) => {\n            newProcess.push(process_default);\n        });\n        this.processes.push(newProcess);\n    }\n\n    loadProcess() {\n        this.processes = [];\n        this.http.get(environment['url'] + '/ws/mailcollect/getProcesses', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.processes.forEach((process: any) => {\n                    const newProcess: any = [];\n                    this.defaultProcessData.forEach((process_default: any) => {\n                        Object.keys(process).forEach((element: any) => {\n                            if (element === process_default.id) {\n                                let value = process[element];\n                                if (element === 'name') {\n                                    this.formValid[value] = true;\n                                }\n                                if (element === 'verifier_customer_id') {\n                                    for (let i = 0; i < this.allCustomers.length; i++) {\n                                        if (parseInt(this.allCustomers[i].id) === parseInt(process[element])) {\n                                            value = this.allCustomers[i];\n                                        }\n                                    }\n                                } else if (element === 'verifier_form_id') {\n                                    for (let i = 0; i < this.allForms.length; i++) {\n                                        if (parseInt(this.allForms[i].id) === parseInt(process[element])) {\n                                            value = this.allForms[i];\n                                        }\n                                    }\n                                } else if (element === 'splitter_technical_workflow_id') {\n                                    for (let i = 0; i < this.allSplitterWorkflows.length; i++) {\n                                        if (parseInt(this.allSplitterWorkflows[i].id) === parseInt(process[element])) {\n                                            value = this.allSplitterWorkflows[i];\n                                        }\n                                    }\n                                } else if (element === 'folder_trash' || element === 'folder_to_crawl' || element === 'folder_destination') {\n                                    value = {id: process[element], label: process[element]};\n                                }\n                                process_default.control.setValue(value);\n                                newProcess.push(process_default);\n                            }\n                        });\n                    });\n                    newProcess.exists = true;\n                    this.resetDefaultData();\n                    this.processes.push(newProcess);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetDefaultData() {\n        this.defaultProcessData = [\n            {\n                id: 'name',\n                control: new FormControl()\n            },\n            {\n                id: 'secured_connection',\n                unit: 'general',\n                control: new FormControl(true),\n                label: marker('MAILCOLLECT.secured_connection'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'hostname',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.hostname'),\n                type: 'text',\n                required: true\n            },\n            {\n                id: 'enabled',\n                control: new FormControl(),\n                disabled: true,\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'port',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.port'),\n                type: 'number',\n                required: true\n            },\n            {\n                id: 'login',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('FORMATS.email'),\n                type: 'text',\n                required: true\n            },\n            {\n                id: 'password',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('USER.password'),\n                type: 'password',\n                required: true\n            },\n            {\n                id: 'is_splitter',\n                unit: 'splitter',\n                control: new FormControl(false),\n                label: marker('MAILCOLLECT.is_splitter'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'splitter_technical_workflow_id',\n                unit: 'splitter',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.splitter_technical_workflow_id'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'folder_to_crawl',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_to_crawl'),\n                type: 'autocomplete',\n                required: true\n            },\n            {\n                id: 'folder_destination',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_destination'),\n                type: 'autocomplete',\n                required: true\n            },\n            {\n                id: 'folder_trash',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_trash'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'action_after_process',\n                unit: 'folders',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.action_after_process'),\n                type: 'select',\n                values: [\n                    {\n                        id: 'move',\n                        label: marker('MAILCOLLECT.move')\n                    },\n                    {\n                        id: 'delete',\n                        label: marker('MAILCOLLECT.delete')\n                    },\n                    {\n                        id: 'none',\n                        label: marker('MAILCOLLECT.none')\n                    }\n                ],\n                required: true\n            },\n            {\n                id: 'verifier_customer_id',\n                unit: 'verifier',\n                control: new FormControl(),\n                label: marker('WORKFLOW.associated_customer'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'verifier_form_id',\n                unit: 'verifier',\n                control: new FormControl(),\n                label: marker('POSITIONS-MASKS.form_associated'),\n                type: 'autocomplete',\n                required: false\n            }\n        ];\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'splitter_technical_workflow_id') {\n                element.values = element.control.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, this.allSplitterWorkflows) : this.allSplitterWorkflows)\n                );\n            }\n        });\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'verifier_customer_id') {\n                element.values = element.control.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, this.allCustomers) : this.allCustomers)\n                );\n            }\n        });\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'verifier_form_id') {\n                element.values = element.control.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, this.allForms) : this.allForms)\n                );\n            }\n        });\n    }\n\n    getNameOfProcess(process: any) {\n        let name = '';\n        process.forEach((element: any) => {\n            if (element.id === 'name') {\n                name = element.control.value;\n            }\n        });\n        return name;\n    }\n\n    createProcess(process: any) {\n        if (!this.getNameOfProcess(process)) {\n            this.notify.error(this.translate.instant('MAILCOLLECT.process_name_mandatory'));\n            return;\n        }\n\n        if (this.isValidForm(process)) {\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_customer_id' && element.id !== 'verifier_form_id' &&\n                    element.id !== 'splitter_technical_workflow_id' && element.id !== 'folder_to_crawl' &&\n                    element.id !== 'folder_destination' && element.id !== 'folder_trash') {\n                    data[element.id] = element.control.value;\n                } else {\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/createProcess', data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_created'));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_duplicate_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateProcess(process);\n            }\n        });\n    }\n\n    duplicateProcess(process: any) {\n        this.addProcess();\n        this.processes[this.processes.length - 1].forEach((element: any) => {\n            process.forEach((element_child: any ) => {\n                if (element.id === element_child.id && element.id !== 'name') {\n                    element.control.setValue(element_child.control.value);\n                }\n            });\n        });\n    }\n\n    disableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_disable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableProcess(processName);\n            }\n        });\n    }\n\n    disableProcess(processName: string) {\n        this.http.put(environment['url'] + '/ws/mailcollect/disableProcess/' + processName, {}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_disabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    enableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_enable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableProcess(processName);\n            }\n        });\n    }\n\n    enableProcess(processName: string) {\n        this.http.put(environment['url'] + '/ws/mailcollect/enableProcess/' + processName, {}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_enabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_delete_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteProcess(processName);\n            }\n        });\n    }\n\n    deleteProcess(processName: string) {\n        this.http.delete(environment['url'] + '/ws/mailcollect/deleteProcess/' + processName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 300);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_deleted'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateProcess(process: any) {\n        if (this.isValidForm(process)) {\n            this.processLoading = true;\n\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_customer_id' && element.id !== 'verifier_form_id' &&\n                    element.id !== 'splitter_technical_workflow_id' && element.id !== 'folder_to_crawl' &&\n                    element.id !== 'folder_destination' && element.id !== 'folder_trash') {\n                    data[element.id] = element.control.value;\n                } else {\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + data['name'], data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_updated'));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    retrieveFolders(process: any) {\n        this.formValid[this.getNameOfProcess(process)] = false;\n        this.folderLoading = true;\n        let port = '';\n        let login = '';\n        let hostname = '';\n        let password = '';\n        let secured_connection = '';\n        process.forEach((element: any) => {\n            if (element.id === 'hostname') {\n                hostname = element.control.value;\n            }\n            if (element.id === 'port') {\n                port = element.control.value;\n            }\n            if (element.id === 'secured_connection') {\n                secured_connection = element.control.value;\n            }\n            if (element.id === 'login') {\n                login = element.control.value;\n            }\n            if (element.id === 'password') {\n                password = element.control.value;\n            }\n        });\n\n        if (hostname && login && password) {\n            const data = {\n                'port': port,\n                'login': login,\n                'hostname': hostname,\n                'password': password,\n                'secured_connection': secured_connection\n            };\n\n            this.http.post(environment['url'] + '/ws/mailcollect/retrieveFolders', data, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    data.forEach((element: any) => {\n                        this.folders.push({'id': element, 'label': element});\n                    });\n\n                    process.forEach((element: any) => {\n                        if (element.id === 'folder_trash' || element.id === 'folder_to_crawl' || element.id === 'folder_destination') {\n                            element.values = element.control.valueChanges.pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.folders) : this.folders)\n                            );\n                        }\n                    });\n                    this.notify.success(this.translate.instant('MAILCOLLECT.folders_updated'));\n                    this.formValid[this.getNameOfProcess(process)] = true;\n                }),\n                finalize(() => this.folderLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.folderLoading = false;\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option['label'].toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allprocessesMail.slice();\n        if (!sort.active || sort.direction === '') {\n            this.processesMail = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.processesMail = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.processesMail = this.processesMail.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    isValidForm(process: any, notify: boolean = true) {\n        let state = true;\n\n        process.forEach((element: any) => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        if (!state && notify) {\n            this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n        } else {\n            this.formValid[this.getNameOfProcess(process)] = true;\n        }\n\n        return state;\n    }\n\n    getErrorMessage(field: any, process: any) {\n        let error: any;\n        process.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                    this.formValid[this.getNameOfProcess(process)] = false;\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex text-gray-900\">\n                <button mat-icon-button (click)=\"addProcess()\" class=\"ml-2\">\n                    <i class=\"fa-solid fa-plus text-2xl\" [matTooltip]=\"'MAILCOLLECT.add_process' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full\">\n            <mat-tab-group [selectedIndex]=\"this.selectedIndex\" dynamicHeight>\n                <mat-tab *ngFor=\"let process of this.processes\">\n                    <ng-template mat-tab-label>\n                        <span class=\"actions\" *ngIf=\"getNameOfProcess(process) !== '' && getNameOfProcess(process) !== null else input\">\n                            <span *ngIf=\"!process.edit_name\">\n                                {{ getNameOfProcess(process) }}\n                            </span>\n\n                            <i *ngIf=\"!process.edit_name\" [title]=\"'MAILCOLLECT.edit_process_name' | translate\"\n                               class=\"fas fa-edit ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"process.edit_name = true\"></i>\n                            <i *ngIf=\"!process.edit_name\" [title]=\"'MAILCOLLECT.delete_process' | translate\"\n                               class=\"fas fa-trash text-red-600 ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"deleteConfirmDialog(process)\"></i>\n                            <i *ngIf=\"processIsEnabled(process)\" [title]=\"'MAILCOLLECT.disable_process' | translate\"\n                               class=\"fas fa-pause ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"disableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"!processIsEnabled(process)\" [title]=\"'MAILCOLLECT.enable_process' | translate\"\n                               class=\"fas fa-play ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"enableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"process.exists\" [title]=\"'MAILCOLLECT.duplicate_process' | translate\"\n                               class=\"fas fa-clone ml-5 text-green-400 hover:scale-125 transition-all duration-75\"\n                               (click)=\"duplicateConfirmDialog(process)\"></i>\n\n                            <div *ngIf=\"process.edit_name\" class=\"grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name [value]=\"getNameOfProcess(process)\" matInput\n                                               (focusout)=\"updateProcessName(process, new_process_name.value)\"\n                                               type=\"text\" placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i *ngIf=\"!this.loadingProcessName\" class=\"fas fa-check ml-2\" (click)=\"updateProcessName(process, new_process_name.value)\"></i>\n                                    <i *ngIf=\"this.loadingProcessName\" class=\"fa-solid fa-circle-notch fa-spin\"></i>\n                                </div>\n                            </div>\n                        </span>\n                        <ng-template #input>\n                            <div class=\"actions grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name_input matInput type=\"text\"\n                                               (focusout)=\"updateProcessName(process, new_process_name_input.value)\"\n                                               placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i class=\"fas fa-check ml-1\" (click)=\"updateProcessName(process, new_process_name_input.value, false)\"></i>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ng-template>\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 9rem) !important\">\n                        <ng-container *ngFor=\"let unit of this.units\">\n                            <h2 class=\"text-gray-900\">{{ unit['label'] | translate }}</h2>\n                            <div class=\"flex justify-center mx-10\">\n                                <div class=\"grid grid-cols-2 gap-6 w-full mb-0 text-center\">\n                                    <ng-container *ngFor=\"let field of process\">\n                                        <ng-container *ngIf=\"field.unit === unit['id']\">\n                                            <div *ngIf=\"field.type === 'boolean'\" class=\"col-span-2 mb-8\">\n                                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field['control']\">\n                                                    {{ field.label | translate }}\n                                                </mat-slide-toggle>\n                                            </div>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'text' || field.type === 'password' || field.type === 'number'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [type]=\"field.type\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       (keyup)=\"isValidForm(process, false)\">\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                                <mat-icon matSuffix *ngIf=\"field.id === 'password'\"\n                                                          (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text'\"\n                                                          class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                                </mat-icon>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'autocomplete'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [type]=\"field.type\" [matAutocomplete]=\"autocomplete\" (keyup)=\"isValidForm(process, false)\">\n                                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                                      [matTooltip]=\"field.hint | translate\">\n                                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                                </span>\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                                <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"isValidForm(process, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option\" [id]=\"option.id\">\n                                                        <span [innerHTML]=\"option.label | highlight: toHighlight\"></span>\n                                                    </mat-option>\n                                                </mat-autocomplete>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\" (selectionChange)=\"isValidForm(process, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                                        {{ option['label'] | translate }}\n                                                    </mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </div>\n\n                            <span *ngIf=\"unit['id'] === 'general'\">\n                                <div class=\"hint text-center\">\n                                    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n                                    <div class=\"message w-auto\">\n                                        <button class=\"gray_button col-start-3\" mat-button (click)=\"retrieveFolders(process)\">\n                                            <span *ngIf=\"!this.folderLoading\">\n                                                {{ 'MAILCOLLECT.test_settings_and_retrieve_folders' | translate }}\n                                            </span>\n                                            <i *ngIf=\"this.folderLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-green-400\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </span>\n                        </ng-container>\n                        <div class=\"mb-6 flex justify-center\">\n                            <button *ngIf=\"process.exists\" mat-button (click)=\"updateProcess(process)\" class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-gray-400]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-green-400]=\"this.formValid[getNameOfProcess(process)]\">\n                                <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.update_process' | translate }}</span>\n                                <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                            </button>\n                            <button *ngIf=\"!process.exists\" mat-button (click)=\"createProcess(process)\" class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-gray-400]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-green-400]=\"this.formValid[getNameOfProcess(process)]\">\n                                <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.create_process' | translate }}</span>\n                                <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-regex',\n    templateUrl: './regex.component.html',\n    styleUrls: ['./regex.component.scss']\n})\nexport class RegexComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['regex_id', 'label', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    regex               : any           = [];\n    allRegex            : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/regex') || lastUrl === '/') {\n            if (this.localStorageService.get('regexPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('regexPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('regexPageIndex');\n\n        this.http.get(environment['url'] + '/ws/config/getRegex', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allRegex = data.regex;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.loadRegex();\n    }\n\n    loadRegex() {\n        this.http.get(environment['url'] + '/ws/config/getRegex?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.regex[0]) this.total = data.regex[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRegex();\n                }\n                this.regex = data.regex;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.regex.forEach((element: any) => {\n            if (element.id === id) {\n                element.content = value;\n                this.http.put(environment['url'] + '/ws/config/updateRegex/' + element.id, {'args': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('REGEX.regex_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchRegex(event: any) {\n        this.search = event.target.value;\n        this.loadRegex();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('regexPageIndex', event.pageIndex);\n        this.loadRegex();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allRegex.slice();\n        if (!sort.active || sort.direction === '') {\n            this.regex = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.regex = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'regex_id': return this.compare(a.regex_id, b.regex_id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default: return 0;\n            }\n        });\n        this.regex = this.regex.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'REGEX.search_regex' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchRegex($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n            <mat-table matSort [dataSource]=\"regex\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"regex_id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"regex_id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.regex_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"content\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.value' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true;\">\n                        <ng-container *ngIf=\"!element.updateMode else update\">\n                            {{ element.content }}\n                        </ng-container>\n                        <ng-template #update>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input [id]=\"element.id\" autofocus matInput [value]=\"element.content\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                            </mat-form-field>\n                        </ng-template>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"!element.updateMode\"\n                                (click)=\"element.updateMode = true;\"\n                                matTooltip=\"{{ 'REGEX.update' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-edit text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"element.updateMode\"\n                                (click)=\"element.updateMode = false;\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                            <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           *ngIf=\"this.total > 0\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-role.component.html',\n    styleUrls: ['./create-role.component.scss']\n})\nexport class CreateRoleComponent implements OnInit {\n    loading         : boolean   = true;\n    privileges      : any;\n    rolePrivileges  : any[]     = [];\n    roles           : any[]     = [];\n    assignRoles     : any[]     = [];\n    roleForm        : any[]     = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            maxLength: 255\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            maxLength: 10\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {\n                'assign_roles': this.assignRoles\n            };\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.post(environment['url'] + '/ws/roles/create', {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    const newRoleId = data.id;\n                    this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + newRoleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('ROLE.created'));\n                            this.router.navigate(['/settings/general/roles/']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/settings/general/roles/');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        if (this.rolePrivileges) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilegeId === element) {\n                    found = true;\n                }\n            });\n        }\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n\n    updateAssignRoles(role: any) {\n        if (this.assignRoles.includes(role.id)) {\n            const index = this.assignRoles.indexOf(role.id, 0);\n            this.assignRoles.splice(index, 1);\n        }\n        else {\n            this.assignRoles.push(role.id);\n        }\n    }\n\n    selectAllAssignRoles(check: boolean) {\n        this.assignRoles = [];\n        if (check) {\n            this.roles.forEach((element: any) => {\n                this.assignRoles.push(element.id);\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center\">\n                <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-2 gap-6 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of roleForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput  [maxLength]=\"field.maxLength\" [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <mat-tab-group *ngIf=\"this.privileges\" dynamicHeight>\n                    <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                        <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                            <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                              [name]=\"privilege\"\n                                              [checked]=\"this.hasPrivilege(privilege)\"\n                                              (change)=\"changePrivilege($event)\">\n                                {{ 'PRIVILEGES.' + privilege | translate }}\n                                <button (click)=\"$event.stopPropagation(); authorizedRoles.toggle();\"\n                                        class=\"m-2 hover:text-green-400\"\n                                        [matTooltip]=\"this.translate.instant('ROLE.authorized_assign_roles')\"\n                                        *ngIf=\"['add_role', 'update_role'].includes(privilege)\">\n                                    <i class=\"fa-solid fa-gears fa-xl text-gray-900\"></i>\n                                </button>\n                            </mat-slide-toggle>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n            <div class=\"flex justify-center items-center mt-10\">\n                <button class=\"valid_button\" (click)=\"onSubmit()\" mat-button>\n                    {{ 'ROLE.create_role' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #authorizedRoles mode=\"side\" position=\"end\" class=\"w-1/5 flex flex-col border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ROLE.authorized_assign_roles\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full mt-2 flex justify-center\">\n            <div class=\"w-20 rounded-lg bg-slate-100 border border-gray-200\">\n                <button (click)=\"selectAllAssignRoles(true)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.select_all' | translate\">\n                    <i class=\"fa-solid fa-circle-check fa-xl\"></i>\n                </button>\n                <button (click)=\"selectAllAssignRoles(false)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.unselect_all' | translate\">\n                    <i class=\"fa-solid fa-ban fa-xl\"></i>\n                </button>\n            </div>\n        </div>\n        <mat-checkbox *ngFor=\"let assignRoleOption of this.roles\"\n                      [checked]=\"this.assignRoles.includes(assignRoleOption.id)\"\n                      (change)=\"updateAssignRoles(assignRoleOption)\" class=\"mt-2 w-full text-xl\">\n            <span>{{ assignRoleOption.label }}</span>\n        </mat-checkbox>\n        <span class=\"w-full mt-8 text-gray-400 flex justify-center\" *ngIf=\"this.roles.length === 0\"  style=\"height: calc(100% - 230px)\">\n            {{ \"ROLE.no_authorized_assign_role\" | translate }}\n        </span>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class RolesListComponent implements OnInit {\n    columnsToDisplay: string[] = ['id', 'label_short', 'label', 'status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean = true;\n    roles           : any = [];\n    pageSize        : number = 10;\n    pageIndex       : number = 0;\n    total           : number = 0;\n    offset          : number = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        // If we came from another route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/roles') || lastUrl === '/') {\n            if (this.localStorageService.get('rolesPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('rolesPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('rolesPageIndex');\n        }\n        this.loadRoles();\n    }\n\n    loadRoles(): void {\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id  +\n            '?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                if (data.roles[0]) this.total = data.roles[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRoles();\n                }\n                this.roles = data.roles;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('rolesPageIndex', event.pageIndex);\n        this.loadRoles();\n    }\n\n    deleteConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteRole(roleId);\n            }\n        });\n    }\n\n    disableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_disable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableRole(roleId);\n            }\n        });\n    }\n\n    enableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_enable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableRole(roleId);\n            }\n        });\n    }\n\n    deleteRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/roles/delete/' + roleId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                    this.notify.success(this.translate.instant('ROLE.role_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/disable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/enable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.roles.slice();\n        if (!sort.active || sort.direction === '') {\n            this.roles = data;\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label_short\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label_short }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/general/roles/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-role.component.html',\n    styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean   = true;\n    roleId          : any;\n    role            : any;\n    roles           : any[]     = [];\n    assignRoles     : any[]     = [];\n    privileges      : any;\n    rolePrivileges  : any;\n    roleForm        : any[]     = [\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'enabled',\n            label: this.translate.instant('ROLE.enable'),\n            type: 'checkbox',\n            control: new FormControl(),\n            required: true\n        }\n    ];\n\n    // Only used to get translation available while running the extract-translations\n    parentLabel = [\n        marker('PRIVILEGES.general'),\n        marker('PRIVILEGES.administration'),\n        marker('PRIVILEGES.verifier'),\n        marker('PRIVILEGES.splitter'),\n        marker('PRIVILEGES.accounts')\n    ];\n    privilegesLabel = [\n        marker('MONITORING.verifier'),\n        marker('MONITORING.splitter'),\n        marker('PRIVILEGES.access_verifier'),\n        marker('PRIVILEGES.access_splitter'),\n        marker('PRIVILEGES.settings'),\n        marker('PRIVILEGES.upload'),\n        marker('PRIVILEGES.users_list'),\n        marker('PRIVILEGES.add_user'),\n        marker('PRIVILEGES.update_user'),\n        marker('PRIVILEGES.roles_list'),\n        marker('PRIVILEGES.add_role'),\n        marker('PRIVILEGES.update_role'),\n        marker('PRIVILEGES.version_update'),\n        marker('PRIVILEGES.custom_fields'),\n        marker('PRIVILEGES.forms_list'),\n        marker('PRIVILEGES.customers_list'),\n        marker('PRIVILEGES.suppliers_list'),\n        marker('PRIVILEGES.create_supplier'),\n        marker('PRIVILEGES.update_supplier'),\n        marker('PRIVILEGES.change_language'),\n        marker('PRIVILEGES.form_builder'),\n        marker('PRIVILEGES.export_suppliers'),\n        marker('PRIVILEGES.import_suppliers'),\n        marker('PRIVILEGES.history'),\n        marker('PRIVILEGES.add_output'),\n        marker('PRIVILEGES.add_form'),\n        marker('PRIVILEGES.update_output'),\n        marker('PRIVILEGES.position_mask_list'),\n        marker('PRIVILEGES.update_form'),\n        marker('PRIVILEGES.outputs_list'),\n        marker('PRIVILEGES.add_position_mask'),\n        marker('PRIVILEGES.update_position_mask'),\n        marker('PRIVILEGES.create_customer'),\n        marker('PRIVILEGES.update_customer'),\n        marker('PRIVILEGES.document_type_splitter'),\n        marker('PRIVILEGES.separator_splitter'),\n        marker('PRIVILEGES.update_output_splitter'),\n        marker('PRIVILEGES.add_output_splitter'),\n        marker('PRIVILEGES.outputs_list_splitter'),\n        marker('PRIVILEGES.update_form_splitter'),\n        marker('PRIVILEGES.add_form_splitter'),\n        marker('PRIVILEGES.forms_list_splitter'),\n        marker('PRIVILEGES.statistics'),\n        marker('PRIVILEGES.configurations'),\n        marker('PRIVILEGES.docservers'),\n        marker('PRIVILEGES.regex'),\n        marker('PRIVILEGES.update_document_type'),\n        marker('PRIVILEGES.add_document_type'),\n        marker('PRIVILEGES.login_methods'),\n        marker('PRIVILEGES.verifier_settings'),\n        marker('PRIVILEGES.mailcollect'),\n        marker('PRIVILEGES.user_quota'),\n        marker('PRIVILEGES.list_ai_model'),\n        marker('PRIVILEGES.list_ai_model_splitter'),\n        marker('PRIVILEGES.create_ai_model'),\n        marker('PRIVILEGES.create_ai_model_splitter'),\n        marker('PRIVILEGES.update_ai_model'),\n        marker('PRIVILEGES.update_ai_model_splitter'),\n        marker('PRIVILEGES.update_status'),\n        marker('PRIVILEGES.update_status_splitter'),\n        marker('PRIVILEGES.access_config'),\n        marker('PRIVILEGES.monitoring'),\n        marker('PRIVILEGES.verifier_display'),\n        marker('PRIVILEGES.workflows_list'),\n        marker('PRIVILEGES.add_workflow'),\n        marker('PRIVILEGES.update_workflow'),\n        marker('PRIVILEGES.workflows_list_splitter'),\n        marker('PRIVILEGES.add_workflow_splitter'),\n        marker('PRIVILEGES.update_workflow_splitter')\n    ];\n    // End translation\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.roleId = this.route.snapshot.params['id'];\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/roles/getById/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.role = data;\n                this.assignRoles = data['assign_roles'];\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.roleForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/general/roles']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/getbyRoleId/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.rolePrivileges = data;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {\n                'assign_roles': this.assignRoles\n            };\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.put(environment['url'] + '/ws/roles/update/' + this.roleId, {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + this.roleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ROLE.updated'));\n                    this.router.navigate(['/settings/general/roles/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        this.rolePrivileges.forEach((element: any) => {\n            if (privilegeId === element) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n\n    updateAssignRoles(role: any) {\n        if (this.assignRoles.includes(role.id)) {\n            const index = this.assignRoles.indexOf(role.id, 0);\n            this.assignRoles.splice(index, 1);\n        }\n        else {\n            this.assignRoles.push(role.id);\n        }\n    }\n\n    selectAllAssignRoles(check: boolean) {\n        this.assignRoles = [];\n        if (check) {\n            this.roles.forEach((element: any) => {\n                this.assignRoles.push(element.id);\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;<span *ngIf=\"this.role\">{{ this.role['label'] }}</span>\n                <strong *ngIf=\"this.role\">&nbsp;({{ this.role['label_short'] }})</strong>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center\">\n                <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of roleForm\">\n                    <span *ngIf=\"field.type === 'text'\" [class.cursor-not-allowed]=\"field.id === 'label_short'\">\n                        <mat-form-field [class.pointer-events-none]=\"field.id === 'label_short'\" class=\"w-full\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\"\n                                   [readonly]=\"field.id === 'label_short'\" [class.text-gray-400]=\"field.id === 'label_short'\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                    </span>\n                        <mat-slide-toggle class=\"mt-4\" *ngIf=\"field.type === 'checkbox'\" [formControl]=\"field['control']\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mx-2\">\n                <mat-tab-group *ngIf=\"this.privileges && this.rolePrivileges\" dynamicHeight class=\"w-full\">\n                    <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                        <div class=\"grid grid-cols-4 gap-x-40 gap-y-10 mt-10\">\n                            <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                              [name]=\"privilege\" [checked]=\"this.hasPrivilege(privilege)\"\n                                              (change)=\"changePrivilege($event)\">\n                                {{ 'PRIVILEGES.' + privilege | translate }}\n                                <button (click)=\"$event.stopPropagation(); authorizedRoles.toggle();\"\n                                        class=\"m-2 hover:text-green-400\"\n                                        [matTooltip]=\"this.translate.instant('ROLE.authorized_assign_roles')\"\n                                        *ngIf=\"['add_role', 'update_role'].includes(privilege)\">\n                                    <i class=\"fa-solid fa-gears fa-xl text-gray-900\"></i>\n                                </button>\n                            </mat-slide-toggle>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n            <div class=\"flex justify-center items-center mt-10\">\n                <button class=\"valid_button\" (click)=\"onSubmit()\" mat-button>\n                    {{ 'ROLE.update' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #authorizedRoles mode=\"side\" position=\"end\" class=\"w-1/5 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ROLE.authorized_assign_roles\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full mt-2 flex justify-center\">\n            <div class=\"w-20 rounded-lg bg-slate-100 border border-gray-200\">\n                <button (click)=\"selectAllAssignRoles(true)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.select_all' | translate\">\n                    <i class=\"fa-solid fa-circle-check fa-xl\"></i>\n                </button>\n                <button (click)=\"selectAllAssignRoles(false)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.unselect_all' | translate\">\n                    <i class=\"fa-solid fa-ban fa-xl\"></i>\n                </button>\n            </div>\n        </div>\n        <mat-checkbox *ngFor=\"let assignRolesOption of this.roles\"\n                      [checked]=\"this.assignRoles.includes(assignRolesOption.id)\"\n                      (change)=\"updateAssignRoles(assignRolesOption)\" class=\"mt-2 w-full text-xl\">\n            <span>{{ assignRolesOption.label }}</span>\n        </mat-checkbox>\n        <span class=\"w-full mt-8 text-gray-400 flex justify-center\" *ngIf=\"this.roles.length === 0\"  style=\"height: calc(100% - 230px)\">\n            {{ \"ROLE.no_authorized_assign_role\" | translate }}\n        </span>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-user-quota',\n    templateUrl: './user-quota.component.html',\n    styleUrls: ['./user-quota.component.scss']\n})\nexport class UserQuotaComponent implements OnInit {\n    headers                 : HttpHeaders = this.authService.headers;\n    loading                 : boolean     = true;\n    quotaNumber             : number      = 0;\n    quotaEnabled            : boolean     = false;\n    quotaUsersfiltered      : any[]       = [];\n    usersControlSelect      : FormControl = new FormControl();\n    quotaEmailDestControl   : FormControl = new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"));\n    usersList               : any[]       = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data_users: any) => {\n                this.usersList = data_users.users;\n                this.http.get(environment['url'] + '/ws/config/getConfiguration/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        if (data.configuration.length === 1) {\n                            this.quotaEnabled = data.configuration[0].data.value.enabled;\n                            this.quotaNumber = data.configuration[0].data.value.quota;\n                            this.quotaEmailDestControl.setValue(data.configuration[0].data.value.email_dest);\n                            data.configuration[0].data.value.users_filtered.forEach((elem: any) => {\n                                this.usersList.forEach((user: any) => {\n                                    if (user['username'] === elem.trim()) {\n                                        this.quotaUsersfiltered.push(user['id']);\n                                    }\n                                });\n                                this.usersControlSelect.setValue(this.quotaUsersfiltered);\n                            });\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateQuotaNumber() {\n        this.loading = true;\n        const data: any = {\n            'value': {\n                'enabled': this.quotaEnabled,\n                'quota': this.quotaNumber,\n                'users_filtered': [],\n                'email_dest': this.quotaEmailDestControl.value\n            }\n        };\n        if (this.usersControlSelect.value) {\n            this.usersControlSelect.value.forEach((user_id: any) => {\n                this.usersList.forEach((user: any) => {\n                    if (user['id'] === user_id) {\n                        data['value']['users_filtered'].push(user['username']);\n                    }\n                });\n            });\n        }\n\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/userQuota',\n            {'args': data}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER-QUOTA.updated'));\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full overflow-auto h-full-overflow\">\n            <app-hint [message]=\"'USER-QUOTA.description' | translate\"></app-hint>\n            <hr class=\"border-green-400 relative z-30 w-1/3 mx-auto my-4\">\n            <div class=\"w-1/3 mx-auto my-10 text-center\">\n                <mat-slide-toggle [(ngModel)]=\"this.quotaEnabled\" matTooltip=\"{{ 'USER-QUOTA.enabled' | translate }}\">\n                    {{ 'USER-QUOTA.enabled' | translate }}\n                </mat-slide-toggle>\n            </div>\n            <div class=\"flex justify-center items-center align-middle\">\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.quota_number' | translate }}</mat-label>\n                    <input matInput type=\"number\" [(ngModel)]=\"this.quotaNumber\"/>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.filtered_users' | translate }}</mat-label>\n                    <mat-select [formControl]=\"usersControlSelect\" [multiple]=\"true\" [value]=\"this.quotaUsersfiltered\">\n                        <mat-option *ngFor=\"let option of this.usersList\" [value]=\"option['id']\">\n                            {{ option['lastname'] + ' ' + option['firstname'] }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.email_dest' | translate }}</mat-label>\n                    <input matInput type=\"text\" [formControl]=\"this.quotaEmailDestControl\"/>\n                </mat-form-field>\n            </div>\n            <div class=\"flex justify-center m-6\">\n                <button class=\"p-6 valid_button\" type=\"submit\" mat-button (click)=\"updateQuotaNumber()\">\n                    {{ 'USER-QUOTA.update' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { PasswordVerificationService } from \"../../../../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-create-user',\n    templateUrl: './create-user.component.html',\n    styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n    loading          : boolean   = true;\n    loadingCustomers : boolean   = true;\n    showPassword     : boolean   = false;\n    roles            : any[]     = [];\n    userFields       : any[]     = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl('', Validators.maxLength(50)),\n            required: true\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'mode',\n            label: this.translate.instant('USER.mode'),\n            type: 'select',\n            values: [\n                {\n                    'id': 'standard',\n                    'label': this.translate.instant('USER.standard'),\n                    'default' : true\n                },\n                {\n                    'id': 'webservice',\n                    'label': this.translate.instant('USER.webservice'),\n                    'default' : false\n                }\n            ],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    forms            : any[]     = [];\n    userForms        : any[]     = [];\n    customers        : any[]     = [];\n    userCustomers    : any[]     = [];\n    errorMessage     : string    = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms.push(data.forms);\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n                this.userFields.forEach(element => {\n                    if (element.id === 'role') {\n                        element.values = this.roles;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.userFields.forEach((element: any) => {\n            if (element.id === 'password_check' || element.id === 'password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidity(this.userFields);\n                    }\n                });\n            }\n        });\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found) {\n            this.userCustomers.push(customerId);\n        } else {\n            this.userCustomers.splice(cpt, 1);\n        }\n    }\n\n    hasForm(formId: any) {\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserForms(formId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found)\n            this.userForms.push(formId);\n        else\n            this.userForms.splice(cpt, 1);\n    }\n\n    isValidForm() {\n        let state = true;\n        this.userFields.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user : any = {};\n            this.userFields.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            user['customers'] = this.userCustomers;\n            user['forms']     = this.userForms;\n            this.http.post(environment['url'] + '/ws/users/new', user, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.created'));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userFields.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userFields\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                               [type]=\"field.type === 'password' && showPassword ? 'text' : field.type\"\n                               [placeholder]=\"field.label | translate\">\n                        <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                        <mat-icon *ngIf=\"field.id === 'password'\" matSuffix (click)=\"showPassword = !showPassword;\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                        </mat-icon>\n                        <mat-icon *ngIf=\"field.id === 'password_check'\" matSuffix\n                                  (click)=\"showPassword = !showPassword;\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                        </mat-icon>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'USER.create_user' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"USER.parameters\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group>\n            <mat-tab id='userCustomers' [label]=\"'ACCOUNTS.customers' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let customer of this.customers\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserCustomers(customer.id)\">\n                        <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                            {{ customer.name }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ customer.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasCustomer(customer.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n            <mat-tab id='userForms' [label]=\"'FORMS.forms' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let form of this.forms\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserForms(form.id)\">\n                        <span [class.text-green-400]=\"hasForm(form.id)\" class=\"hover:text-green-400\">\n                            {{ form.label }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ form.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasForm(form.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class UsersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role', 'status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    users           : any         = [];\n    allUsers        : any         = [];\n    roles           : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    activeUser      : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n    userQuotaConfig : any         = {};\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        // If we came from another route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/users') || lastUrl === '/') {\n            if (this.localStorageService.get('usersPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('usersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('usersPageIndex');\n\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allUsers = data.users;\n                this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.roles = data.roles;\n                        if (this.roles) {\n                            this.allUsers.forEach((user: any) => {\n                                this.roles.forEach((element: any) => {\n                                    if (user.role === element.id) {\n                                        user.role_label = element.label;\n                                    }\n                                });\n                            });\n                        }\n                        this.loadUsers();\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((config: any) => {\n                        this.userQuotaConfig = config.configuration[0].data.value;\n                        this.activeUser = this.allUsers.length;\n                        this.getUserQuotaFiltered();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchUser(event: any) {\n        this.search = event.target.value;\n        this.loadUsers();\n    }\n\n    getUserQuotaFiltered() {\n        this.allUsers.forEach((user: any) => {\n            if (this.userQuotaConfig.users_filtered.includes(user['username'])) {\n                this.activeUser -= 1;\n            }\n        });\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('usersPageIndex', event.pageIndex);\n        this.loadUsers();\n    }\n\n    loadUsers(): void {\n        this.http.get(environment['url'] + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.users[0]) this.total = data.users[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadUsers();\n                }\n                this.users = data.users;\n                if (this.roles) {\n                    this.users.forEach((user: any) => {\n                        this.roles.forEach((element: any) => {\n                            if (user.role === element.id) {\n                                user.role_label = element.label;\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteUser(userId);\n            }\n        });\n    }\n\n    disableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableUser(userId);\n            }\n        });\n    }\n\n    enableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableUser(userId);\n            }\n        });\n    }\n\n    deleteUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/users/delete/' + userId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                    this.notify.success(this.translate.instant('USER.user_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/disable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/enable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allUsers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.users = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role_label, b.role_label, isAsc);\n                case 'status': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n        this.users = this.users.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'USER.search_user' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchUser($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"w-full overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"username\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.username }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"firstname\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.firstname }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"lastname\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.lastname }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"role\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.role' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.role_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/general/users/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           [length]=\"this.total\"\n                           [pageSize]=\"this.pageSize\"\n                           [pageIndex]=\"this.pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n            <div *ngIf=\"this.userQuotaConfig.enabled\" class=\"text-center\">\n                <hr class=\"border-green-400 w-1/3 mx-auto mt-6 -mb-4\">\n                <span class=\"text-xl\">\n                    {{ 'USER-QUOTA.informations' | translate }}\n                    <span class=\"cursor-default relative top-7 text-green-400 text-8xl\"\n                          [class.text-green-400] = \"this.activeUser < this.userQuotaConfig.quota\"\n                          [class.text-red-400] = \"this.activeUser > this.userQuotaConfig.quota\"\n                          [class.text-orange-400] = \"this.activeUser === this.userQuotaConfig.quota\">&bull;</span>\n                </span>\n                <div class=\"m-2 mt-8 text-base\">\n                    {{ 'USER-QUOTA.quota_number' | translate }} : {{ this.userQuotaConfig.quota }}\n                </div>\n                <div class=\"m-2 text-base\">\n                    {{ 'USER.enabled' | translate }} : {{ this.activeUser }}\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport {PasswordVerificationService} from \"../../../../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-user.component.html',\n    styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    loadingCustomers            : boolean       = true;\n    showPassword                : boolean       = false;\n    userId                      : any;\n    user                        : any;\n    roles                       : any[]         = [];\n    userFields                  : any[]         = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'mode',\n            label: this.translate.instant('USER.mode'),\n            type: 'select',\n            values: [\n                {\n                    'id': 'standard',\n                    'label': this.translate.instant('USER.standard'),\n                    'default' : true\n                },\n                {\n                    'id': 'webservice',\n                    'label': this.translate.instant('USER.webservice'),\n                    'default' : false\n                }\n            ],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    forms                       : any[]         = [];\n    userForms                   : any[]         = [];\n    customers                   : any[]         = [];\n    userCustomers               : any[]         = [];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userId = this.route.snapshot.params['id'];\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.http.get(environment['url'] + '/ws/users/getCustomersByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.userCustomers = data;\n                        this.loadingCustomers = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms.push(data.forms);\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/users/getFormsByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.userForms = data;\n                        this.loadingCustomers = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    } else {\n                        if ((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.user = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.userFields.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.userFields.forEach((element: any) => {\n            if (element.id === 'password_check' || element.id === 'password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidity(this.userFields);\n                    }\n                });\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.userFields.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user: any = {};\n            this.userFields.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/users/update/' + this.userId, {'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.updated'));\n                    const _user = user['lastname'] + ' ' + user['firstname'];\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userFields.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasForm(formId: any) {\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n\n        if (!found) {\n            this.userCustomers.push(customerId);\n        } else {\n            this.userCustomers.splice(cpt, 1);\n        }\n\n        this.http.put(environment['url'] + '/ws/users/customers/update/' + this.userId, {'customers': this.userCustomers}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.customers_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/users/');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateUserForms(formId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n\n        if (!found) {\n            this.userForms.push(formId);\n        } else {\n            this.userForms.splice(cpt, 1);\n        }\n\n        this.http.put(environment['url'] + '/ws/users/forms/update/' + this.userId, {'forms': this.userForms}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.form_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/users/');\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.user\">\n                    {{ this.user['firstname'] }} {{ this.user['lastname'] }}<strong>&nbsp;({{ this.user['username'] }})</strong>\n                </span>\n            </h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userFields\">\n                    <span *ngIf=\"field.type !== 'select'\" [class.cursor-not-allowed]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\">\n                        <mat-form-field class=\"block\" [class.pointer-events-none]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\">\n                            <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                                {{ field.label | translate }}\n                            </mat-label>\n                            <input matInput [readonly]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\"\n                                   [class.text-gray-400]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\"\n                                   [formControl]=\"field['control']\" [type]=\"field.type === 'password' && showPassword ? 'text' : field.type\"\n                                   [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                            <mat-icon *ngIf=\"field.id === 'password'\" matSuffix (click)=\"showPassword = !showPassword;\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                            </mat-icon>\n                            <mat-icon *ngIf=\"field.id === 'password_check'\" matSuffix (click)=\"showPassword = !showPassword;\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                            </mat-icon>\n                        </mat-form-field>\n                    </span>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'USER.update' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"USER.parameters\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group>\n            <mat-tab id='userCustomers' [label]=\"'ACCOUNTS.customers' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let customer of this.customers\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserCustomers(customer.id)\">\n                        <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                            {{ customer.name }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ customer.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasCustomer(customer.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n            <mat-tab id='userForms' [label]=\"'FORMS.forms' | translate\">\n                <app-hint class=\"mt-1\" [specificClass]=\"'w-11/12'\" [message]=\"'USER.form_splitter_only' | translate\"></app-hint>\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let form of this.forms\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserForms(form.id)\">\n                        <span [class.text-green-400]=\"hasForm(form.id)\" class=\"hover:text-green-400\">\n                            {{ form.label }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ form.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasForm(form.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-settings-menu',\n    templateUrl: './settings-menu.component.html',\n    styleUrls: ['./settings-menu.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SettingsMenuComponent {\n    @Input() minimizeSideNav : any;\n\n    constructor(\n        public router: Router,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n}\n","<h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 py-4 truncate\" *ngIf=\"!this.minimizeSideNav else minimize\">\n    {{ \"SETTINGS.administration\" | translate }}\n</h3>\n<ng-template #minimize>\n    <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 py-4 truncate\"\n        [matTooltip]=\"'SETTINGS.administration' | translate\" [matTooltipPosition]=\"'above'\">\n        <i class=\"w-4 fa-solid fa-cog\"></i>\n    </h3>\n</ng-template>\n<mat-divider class=\"border-green-400\"></mat-divider>\n<mat-nav-list class=\"pt-0 px-1 overflow-x-hidden overflow-y-auto h-full-overflow\">\n    <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent(); let i = index\"\n                        [expanded]=\"parent['opened']\" (opened)=\"this.serviceSettings.closeOtherParent(this.router.url, parent['id'])\"\n                        class=\"rounded\" (click)=\"this.serviceSettings.setSelectedParentSettings(parent.id)\">\n        <mat-expansion-panel-header class=\"settings_expansion\" [class.border-t-0]=\"i === 0\" [class.p-4]=\"this.minimizeSideNav\">\n            <mat-panel-title class=\"text-sm\" [class.mr-0]=\"this.minimizeSideNav\" [matTooltip]=\"parent['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\">\n                <span *ngIf=\"!this.minimizeSideNav else minimizeParent\">\n                    {{ parent['label'] | translate }}\n                </span>\n                <ng-template #minimizeParent>\n                    <i class=\"w-4 fa-solid {{ parent['icon'] }}\"></i>\n                </ng-template>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"w-full border-t-2 border-gray-600\">\n            <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                 [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                 [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\">\n                <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                    <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\" [class.minified]=\"this.minimizeSideNav\" [expanded]=\"this.router.url.includes(setting['route'])\">\n                        <mat-expansion-panel-header class=\"font-normal w-full h-16 pl-0\" [class.p-4]=\"this.minimizeSideNav\">\n                            <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                <button [class.settings_admin_active]=\"this.router.url === setting['route']\"\n                                        class=\"pr-0 pl-3 font-normal w-full h-16 flex gap-4 justify-center items-center text-center\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        [routerLink]=\"setting['route']\" style=\"font-size: 0.82rem !important\">\n                                    <i [class.text-green-400]=\"this.router.url === setting['route']\"\n                                       class=\"w-4 text-lg rounded-full flex items-center justify-center {{ setting['icon'] }} 2xl:block\"\n                                       [matTooltip]=\"setting['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                                       [matTooltipPosition]=\"'right'\">\n                                    </i>\n                                    <p [class.font-medium]=\"this.router.url === setting['route']\" *ngIf=\"!this.minimizeSideNav\"\n                                       class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                                        {{ setting['label'] | translate }}\n                                    </p>\n                                </button>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                             [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                             [class.border-t]=\"!action['showOnlyIfActive']\"\n                             [class.w-full]=\"!action['showOnlyIfActive']\">\n                            <div class=\"border-b border-gray-400\"\n                                 *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] === '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                <button [class.settings_admin_active]=\"this.router.url.includes(action['route'])\"\n                                        [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                        [class.text-gray-800]=\"!this.router.url.includes(action['route'])\"\n                                        [class.ml-0]=\"this.minimizeSideNav\" [routerLink]=\"action['route']\"\n                                        [class.disable_link]=\"action['showOnlyIfActive']\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        class=\"font-normal w-full h-10 pl-8 text-xs flex gap-4 items-center text-center\">\n                                    <i class=\"w-4 text-sm rounded-full flex items-center justify-center 2xl:block ml-4 {{ action['icon'] }}\"\n                                       [matTooltip]=\"action['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                                       [matTooltipPosition]=\"'right'\"></i>\n                                    <p class=\"m-0 text-xs flex items-center justify-center\" *ngIf=\"!this.minimizeSideNav\">\n                                        {{ action['label'] | translate }}\n                                    </p>\n                                </button>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n                <ng-template #noActions>\n                    <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                            [class.settings_admin_active]=\"this.router.url === setting['route']\"\n                            class=\"pr-0 font-normal w-full h-16 flex gap-4 justify-center items-center text-center noActions\"\n                            [class.pl-3]=\"!this.minimizeSideNav\" [routerLink]=\"setting['route']\"\n                            (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\" style=\"font-size: 0.82rem !important\">\n                        <i class=\"w-4 rounded-full flex items-center justify-center fa-lg 2xl:block {{ setting['icon'] }}\"\n                           [matTooltip]=\"setting['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                           [matTooltipPosition]=\"'right'\"></i>\n                        <p [class.font-medium]=\"this.router.url === setting['route']\" *ngIf=\"!this.minimizeSideNav\"\n                           class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                            {{ setting['label'] | translate }}\n                        </p>\n                    </button>\n                </ng-template>\n            </div>\n        </div>\n    </mat-expansion-panel>\n</mat-nav-list>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { AboutUsComponent } from './general/about-us/about-us.component';\nimport { HasPrivilegeService } from \"../../services/has-privilege.service\";\nimport { SeparatorComponent } from \"./splitter/separator/separator.component\";\nimport { LoginRequiredService } from \"../../services/login-required.service\";\nimport { FormListComponent } from \"./verifier/form/list/form-list.component\";\nimport { WorkflowListComponent } from \"./verifier/workflow/list/workflow-list.component\";\nimport { WorkflowListSplitterComponent } from \"./splitter/workflow/list/workflow-list.component\";\nimport { UsersListComponent } from \"./general/users/list/users-list.component\";\nimport { RolesListComponent } from \"./general/roles/list/roles-list.component\";\nimport { SplitterFormListComponent } from \"./splitter/form/list/form-list.component\";\nimport { CreateUserComponent } from \"./general/users/create/create-user.component\";\nimport { UpdateUserComponent } from \"./general/users/update/update-user.component\";\nimport { CreateRoleComponent } from \"./general/roles/create/create-role.component\";\nimport { UpdateRoleComponent } from \"./general/roles/update/update-role.component\";\nimport { FormBuilderComponent } from \"./verifier/form/builder/form-builder.component\";\nimport { WorkflowBuilderComponent } from \"./verifier/workflow/builder/workflow-builder.component\";\nimport { WorkflowBuilderSplitterComponent } from \"./splitter/workflow/builder/workflow-builder.component\";\nimport { OutputsListComponent } from \"./verifier/outputs/list/outputs-list.component\";\nimport { ListDoctypeComponent } from \"./splitter/doctypes/list/list-doctype.component\";\nimport { CustomFieldsComponent } from \"./general/custom-fields/custom-fields.component\";\nimport { SplitterOutputListComponent } from \"./splitter/output/list/output-list.component\";\nimport { UpdateOutputComponent } from \"./verifier/outputs/update/update-output.component\";\nimport { ConfigurationsComponent } from \"./general/configurations/configurations.component\";\nimport { DocserversComponent } from \"./general/docservers/docservers.component\";\nimport { RegexComponent } from \"./general/regex/regex.component\";\nimport { MailCollectComponent } from \"./general/mailcollect/mailcollect.component\";\nimport { CreateOutputComponent } from \"./verifier/outputs/create/create-output.component\";\nimport { SplitterFormBuilderComponent } from \"./splitter/form/builder/form-builder.component\";\nimport { CreateDoctypeComponent } from \"./splitter/doctypes/create/create-doctype.component\";\nimport { SplitterUpdateOutputComponent } from \"./splitter/output/update/update-output.component\";\nimport { SplitterCreateOutputComponent } from \"./splitter/output/create/create-output.component\";\nimport { ListVerifierAiModelComponent } from \"./verifier/ai-model/list/list-ai-model.component\";\nimport { CreateVerifierAiModelComponent } from \"./verifier/ai-model/create/create-ai-model.component\";\nimport { UpdateVerifierAiModelComponent } from \"./verifier/ai-model/update/update-ai-model.component\";\nimport { ListSplitterAiModelComponent } from \"./splitter/ai-model/list/list-ai-model.component\";\nimport { CreateSplitterAiModelComponent } from \"./splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateSplitterAiModelComponent } from \"./splitter/ai-model/update/update-ai-model.component\";\nimport { PositionsMaskListComponent } from \"./verifier/positions-mask/list/positions-mask-list.component\";\nimport { CreatePositionsMaskComponent } from \"./verifier/positions-mask/create/create-positions-mask.component\";\nimport { UpdatePositionsMaskComponent } from \"./verifier/positions-mask/update/update-positions-mask.component\";\nimport { CreateFolderDoctypeComponent } from \"./splitter/doctypes/create-folder/create-folder-doctype.component\";\nimport { LoginMethodsComponent } from \"./general/login-methods/login-methods.component\";\nimport { VariousSettingsVerifierComponent } from \"./verifier/various-settings/various-settings.component\";\nimport { UserQuotaComponent } from \"./general/user-quota/user-quota.component\";\nimport { SplitterUpdateStatusComponent } from \"./splitter/update-status/update-status.component\";\nimport { VerifierStatusUpdateComponent } from \"./verifier/update-status/update-status.component\";\n\nconst routes: Routes = [\n    {\n        path: 'settings', component: SettingsComponent,\n        data: {title: 'GLOBAL.settings', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n// --- General\n    // Configurations\n    {\n        path: 'settings/general/configurations', component: ConfigurationsComponent,\n        data: {title: 'SETTINGS.configurations', privileges: ['settings', 'configurations']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/docservers', component: DocserversComponent,\n        data: {title: 'SETTINGS.docservers', privileges: ['settings', 'docservers']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/regex', component: RegexComponent,\n        data: {title: 'SETTINGS.regex', privileges: ['settings', 'regex']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/mailcollect', component: MailCollectComponent,\n        data: {title: 'SETTINGS.mailcollect', privileges: ['settings', 'mailcollect']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/user-quota', component: UserQuotaComponent,\n        data: {title: 'SETTINGS.user_quota', privileges: ['settings', 'user_quota']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users', component: UsersListComponent,\n        data: {title: 'SETTINGS.users_list', privileges: ['settings', 'users_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/new', component: CreateUserComponent,\n        data: {title: 'USER.create_user', privileges: ['settings', 'add_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/update/:id', component: UpdateUserComponent,\n        data: {title: 'USER.update', privileges: ['settings', 'update_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles', component: RolesListComponent,\n        data: {title: 'SETTINGS.roles_list', privileges: ['settings', 'roles_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/new', component: CreateRoleComponent,\n        data: {title: 'ROLE.create_role', privileges: ['settings', 'add_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/update/:id', component: UpdateRoleComponent,\n        data: {title: 'ROLE.update', privileges: ['settings', 'update_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/login-methods', component: LoginMethodsComponent,\n        data: {title: 'SETTINGS.login_methods', privileges: ['settings', 'login_methods']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/about-us', component: AboutUsComponent,\n        data: {title: 'SETTINGS.abouts_us', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/custom-fields', component: CustomFieldsComponent,\n        data: {title: 'SETTINGS.custom_fields', privileges: ['settings', 'custom_fields']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// --- END General\n// --- Verifier\n    {\n        path: 'settings/verifier', component: VariousSettingsVerifierComponent,\n        data: {title: 'SETTINGS.verifier_settings', privileges: ['settings', 'verifier_settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows', component: WorkflowListComponent,\n        data: {title: 'SETTINGS.list_workflows', privileges: ['settings', 'workflows_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows/builder/new', component: WorkflowBuilderComponent,\n        data: {title: 'SETTINGS.workflow_builder', privileges: ['settings', 'add_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows/builder/edit/:id', component: WorkflowBuilderComponent,\n        data: {title: 'SETTINGS.workflow_update', privileges: ['settings', 'update_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms', component: FormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/new', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/edit/:id', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs', component: OutputsListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/new', component: CreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/update/:id', component: UpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask', component: PositionsMaskListComponent,\n        data: {title: 'SETTINGS.list_positions_mask', privileges: ['settings', 'positions_mask_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/create', component: CreatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_builder', privileges: ['settings', 'add_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/update/:id', component: UpdatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_update', privileges: ['settings', 'update_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai', component: ListVerifierAiModelComponent,\n        data: {title: 'SETTINGS.artificial_intelligence', privileges: ['settings', 'list_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai/create', component: CreateVerifierAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.add_model', privileges: ['settings', 'create_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai/update/:id', component: UpdateVerifierAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.update_model', privileges: ['settings', 'update_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/status-update', component: VerifierStatusUpdateComponent,\n        data: {title: 'SETTINGS.status_update', privileges: ['settings', 'update_status']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// -- END Verifier\n// -- Splitter\n    {\n        path: 'settings/splitter/workflows', component: WorkflowListSplitterComponent,\n        data: {title: 'SETTINGS.list_workflows', privileges: ['settings', 'workflows_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/workflows/builder/new', component: WorkflowBuilderSplitterComponent,\n        data: {title: 'SETTINGS.workflow_builder', privileges: ['settings', 'add_workflow_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/workflows/builder/edit/:id', component: WorkflowBuilderSplitterComponent,\n        data: {title: 'SETTINGS.workflow_update', privileges: ['settings', 'update_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms', component: SplitterFormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/new', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/edit/:id', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/separator',\n        component: SeparatorComponent,\n        data: {title: 'SETTINGS.document_separator', privileges: ['settings', 'separator_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type',\n        component: ListDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'document_type_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/new',\n        component: CreateDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/create-folder',\n        component: CreateFolderDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs', component: SplitterOutputListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/new', component: SplitterCreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/update/:id', component: SplitterUpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai', component: ListSplitterAiModelComponent,\n        data: {title: 'SETTINGS.artificial_intelligence', privileges: ['settings', 'list_ai_model_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/create', component: CreateSplitterAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.add_model', privileges: ['settings', 'create_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/update/:id', component: UpdateSplitterAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.update_model', privileges: ['settings', 'update_ai_model_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/status-update', component: SplitterUpdateStatusComponent,\n        data: {title: 'SETTINGS.status_update', privileges: ['settings', 'update_status_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    }\n// -- END Splitter\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class SettingsRoutingModule {}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../services/user.service\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: \"settings.component.html\"\n})\n\nexport class SettingsComponent implements OnInit {\n    selectedSetting         : string    = this.serviceSettings.getSelectedSetting();\n    selectedParentSetting   : string    = this.serviceSettings.getSelectedParentSetting();\n    settings                : any       = this.serviceSettings.getSettings();\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.selectedSetting = this.serviceSettings.getSelectedSetting();\n        this.selectedParentSetting = this.serviceSettings.getSelectedParentSetting();\n        this.settings = this.serviceSettings.getSettings();\n        let settingsFound = false;\n        this.settings[this.selectedParentSetting].forEach((element: any) => {\n            if (element['id'] === this.selectedSetting) {\n                settingsFound = true;\n                const routeToGo = element.route;\n                if (routeToGo && this.privilegesService.hasPrivilege(element.privilege))\n                    this.router.navigateByUrl(routeToGo).then();\n            }\n        });\n\n        if (!settingsFound)\n            this.router.navigateByUrl('/settings/general/configurations').then();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport {DocumentTypeComponent} from \"../../../../splitter/document-type/document-type.component\";\n\n@Component({\n  selector: 'app-create-model',\n  templateUrl: './create-ai-model.component.html',\n  styleUrls: ['./create-ai-model.component.scss']\n})\n\nexport class CreateSplitterAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    forms               : any       = [];\n    AiModel             : any       = {\n        id             : 0,\n        trainFolders : [],\n        fields         : [\n            {\n                id: 'model_label',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_label\"),\n                type: 'text',\n                control: new FormControl('', Validators.required),\n                required: true\n            },\n            {\n                id: 'model_path',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_path\"),\n                type: 'text',\n                control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n                required: true\n            },\n            {\n                id: 'min_proba',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n                type: 'number',\n                control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveDoctypes();\n        this.retrieveForms();\n    }\n\n    retrieveDoctypes() {\n        this.http.get(environment['url'] + '/ws/ai/splitter/getTrainDocuments', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (const trainFolder of data) {\n                    this.AiModel.trainFolders.push({\n                        folder: trainFolder,\n                        isSelected: false,\n                        doctype: \"\",\n                        form: \"\"\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createModel() {\n        let startTraining = true;\n        let totalTrainFolders = 0;\n\n        this.AiModel.trainFolders.forEach((trainFolders: any) => {\n            if (trainFolders.isSelected && trainFolders.doctype === \"\") {\n                startTraining = false;\n            }\n            else {\n                totalTrainFolders ++;\n            }\n        });\n\n        if (this.isValidForm(this.AiModel.fields) && totalTrainFolders > 1) {\n            const selectedTrainFolders: any[] = [];\n            const minProba = this.getValueFromForm(this.AiModel.fields, 'min_proba');\n            const label = this.getValueFromForm(this.AiModel.fields, 'model_label');\n            const modelName = label.toLowerCase().replace(/ /g, \"_\") + '.sav';\n\n            this.AiModel.trainFolders.forEach((trainFolders: any) => {\n                if (trainFolders.isSelected) {\n                    const folder = trainFolders.folder;\n                    const formId = trainFolders.form;\n                    const doctype = trainFolders.doctype;\n                    selectedTrainFolders.push({\n                        form: formId,\n                        folder: folder,\n                        doctype: doctype\n                    });\n                }\n            });\n\n            for (const element of this.AiModel.trainFolders) {\n                const exists = Object.values(element).includes(modelName);\n                if (exists) {\n                    this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.already_existing_model'));\n                    startTraining = false;\n                    break;\n                }\n            }\n            if (startTraining) {\n                this.http.post(environment['url'] + '/ws/ai/splitter/trainModel/' + modelName,\n                    {label: label, docs: selectedTrainFolders, min_proba: minProba},\n                    {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.created'));\n                this.router.navigate(['/settings/splitter/ai']).then();\n            }\n        } else {\n            if (totalTrainFolders < 2) {\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.not_enough_checked'));\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveForms() {\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n               this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    openDoctypeTree(trainFolder: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: trainFolder.doctype  ? trainFolder.doctype  : \"\",\n                    label: \"\"\n                },\n                formId: trainFolder.form\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                trainFolder.doctype   = result.key;\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"mx-10 mt-10 mb-5 grid grid-cols-2 gap-4 place-items-stretch\">\n                <ng-container *ngFor=\"let field of this.AiModel.fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                               placeholder=\"{{ field.placeholder | translate }}\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}, format : \"model_name.sav\"\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'number'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                               [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h2 class=\"text-center m-4\">\n                {{ 'ARTIFICIAL-INTELLIGENCE.choose_documents' | translate }}\n            </h2>\n            <mat-list class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let trainFolder of this.AiModel.trainFolders, let i=index\">\n                    <mat-checkbox [(ngModel)]=\"trainFolder.isSelected\"\n                                  [ngModelOptions]=\"{standalone: true}\"\n                                  class=\"w-lg h-lg accent-green-400 checkBox_list cursor-pointer pr-4 pb-2\">\n                        {{ trainFolder.folder }}\n                    </mat-checkbox>\n                    <div *ngIf=\"trainFolder.isSelected\">\n                        <div class=\"mt-4\">\n                            <mat-form-field>\n                                <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"trainFolder['form']\">\n                                    <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">\n                                        {{ form.label }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <button class=\"max-w-full text-lg text-left hover:text-green-400\"\n                                *ngIf=\"trainFolder.form\"\n                                (click)=\"openDoctypeTree(trainFolder);\"\n                                matTooltip=\"{{ 'GLOBAL.edit' | translate }}\">\n                            <div class=\"font-medium truncate\">\n                                <i class=\"fa-solid fa-edit\"></i>\n                                {{ trainFolder.doctype }}\n                            </div>\n                        </button>\n                    </div>\n                </div>\n            </mat-list>\n        </div>\n        <div class=\"flex justify-center items-center mb-2 py-4\">\n            <button mat-button (click)=\"createModel()\" class=\"valid_button\">\n                <span class=\"block\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.train_a_model' | translate }}\n                </span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\n\n@Component({\n  selector: 'app-list-ai-splitter',\n  templateUrl: './list-ai-model.component.html',\n  styleUrls: ['./list-ai-model.component.scss']\n})\n\nexport class ListSplitterAiModelComponent implements OnInit {\n    loading             : boolean     = true;\n    showResponse        : boolean     = false;\n    isPredicting        : boolean     = false;\n    modelsList          : any         = [];\n    displayedColumns    : string[]    = ['id', 'model_label', 'train_time', 'accuracy_score', 'documents', 'min_proba', 'status', 'actions'];\n    offset              : number      = 0;\n    pageIndex           : number      = 0;\n    total               : number      = 0;\n    pageSize            : number      = 10;\n    clickedRow          : object      = {};\n    prediction          : any         = [];\n    fileControl         : FormControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension([\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveModels();\n    }\n\n    retrieveModels(offset?: number, size?: number) {\n        this.http.get(environment['url'] + '/ws/ai/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.modelsList = data.models;\n                for (let i = 0; i < this.modelsList.length; i++) {\n                    let tmp_doc = \"\";\n                    for (let j = 0; j < this.modelsList[i].documents.length; j++) {\n                        tmp_doc += this.modelsList[i].documents[j].folder + \", \";\n                        if (j === this.modelsList[i].documents.length - 1) {\n                            tmp_doc = tmp_doc.slice(0, -2);\n                        }\n                    }\n                    this.modelsList[i].documents = [tmp_doc];\n                }\n                this.total = this.modelsList.length;\n                if (offset !== undefined && size !== undefined) {\n                    this.modelsList = this.modelsList.slice(offset, offset + size);\n                } else {\n                    this.modelsList = this.modelsList.slice(0, 10);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.modelsList.slice();\n        if (!sort.active || sort.direction === '') {\n            this.modelsList = data;\n            return;\n        }\n\n        this.modelsList = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'model_path': return this.compare(a.path, b.path, isAsc);\n                case 'train_time': return this.compare(a.train_time, b.train_time, isAsc);\n                case 'type': return this.compare(a.type, b.type, isAsc);\n                case 'accuracy_score': return this.compare(a.accuracy, b.accuracy, isAsc);\n                case 'doc_types': return this.compare(a.doctypes, b.doctypes, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                case 'min_proba': return this.compare(a.min_proba, b.min_proba, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    selectRow(row : object) {\n        this.clickedRow = row;\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (![\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"].includes(fileExtension.toLowerCase())) {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    displaySelectedRowId() {\n        const disp = Object.values(this.clickedRow)[2];\n        if (disp) {\n            return (disp);\n        }\n        else return 0;\n    }\n\n    deleteConfirmDialog(modelId: number, model: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ARTIFICIAL-INTELLIGENCE.confirm_delete', {\"model\": model}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteModel(modelId);\n            }\n        });\n    }\n\n    deleteModel(modelId: number) {\n        if (modelId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/ai/splitter/delete/' + modelId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.retrieveModels();\n                    this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.retrieveModels(this.offset, this.pageSize);\n    }\n\n    onSubmit() {\n        this.showResponse = false;\n        const formData = new FormData();\n        const disp = Object.values(this.clickedRow)[2];\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        this.isPredicting = true;\n        this.http.post(environment['url'] + '/ws/ai/splitter/testModel/' + disp, formData, {headers: this.authService.headers}).pipe(\n            tap((res) => this.onResponse(res)),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_not_found'));\n                this.isPredicting = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onResponse(res: any) {\n        this.prediction = res;\n        this.showResponse = true;\n        this.isPredicting = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button *ngIf=\"displaySelectedRowId()\" (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\">\n            <mat-table [dataSource]=\"modelsList\" matSort (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"model_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.model_label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.model_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"train_time\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.train_time' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.train_time }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"accuracy_score\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.accuracy' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.accuracy_score }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"documents\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.doctypes' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.documents }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"min_proba\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.min_proba' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.min_proba }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span class=\"col-span-1 text-right\">\n                            <i *ngIf=\"element.status === 'training'\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training' | translate }}\"></i>\n                            <i *ngIf=\"element.status === 'error'\" class=\"fas fa-triangle-exclamation fa-lg my-4 text-amber-500 cursor-pointer\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.error' | translate }}\"></i>\n                            <i *ngIf=\"element.status === 'OK'\" class=\"fa-solid fa-check fa-lg my-4\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training_done' | translate }}\"></i>\n                        </span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button [disabled]=\"element.status !== 'OK'\" (click)=\"$event.stopPropagation(); sidenav2.open(); this.selectRow(element)\"\n                                matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-vial\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.model_label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/settings/splitter/ai/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\">\n                </mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n            <mat-card class=\"w-full border-solid border-green-400 border rounded-lg transition duration-300\">\n                <mat-card-title class=\"p-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.model_selected'| translate }}\n                    {{ displaySelectedRowId() }}\n                </mat-card-title>\n                <mat-card-actions class=\"block\">\n                    <div class=\"w-full\">\n                        <ngx-file-drag-drop\n                            [displayFileSize]=\"true\"\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            (valueChanged)=\"checkFile($event)\"\n                            [class.disabled]=\"this.isPredicting\"\n                            [class.pointer-events-none]=\"this.isPredicting\"\n                            [emptyPlaceholder]=\"'ARTIFICIAL-INTELLIGENCE.choose_file' | translate\">\n                        </ngx-file-drag-drop>\n                    </div>\n                    <div class=\"text-center\" [class.cursor-not-allowed]=\"this.isPredicting || this.fileControl.value!.length === 0\">\n                        <button mat-button (click)=\"onSubmit()\"\n                                [disabled]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                [class.bg-gray-400]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                class=\"w-3/5 valid_button\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.predict' | translate }}\n                        </button>\n                    </div>\n                </mat-card-actions>\n                <div *ngIf=\"showResponse === true\">\n                    <mat-divider></mat-divider>\n                    <mat-card-content class=\"pt-2\">\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.file' | translate }} : {{ prediction[0] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.prediction' | translate }} : {{ prediction[3] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.probability' | translate }} : {{ prediction[2]}} %</p>\n                    </mat-card-content>\n                </div>\n                <mat-card-footer>\n                    <mat-progress-bar *ngIf=\"isPredicting\" mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { lastValueFrom, of } from \"rxjs\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { environment } from \"../../../../env\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport {DocumentTypeComponent} from \"../../../../splitter/document-type/document-type.component\";\n@Component({\n  selector: 'app-update-model',\n  templateUrl: './update-ai-model.component.html',\n  styleUrls: ['./update-ai-model.component.scss']\n})\n\nexport class UpdateSplitterAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    forms               : any       = [];\n    AiModel             : any       = {\n        id             : 0,\n        trainFolders : [],\n        fields         : [\n            {\n                id: 'model_label',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_label\"),\n                type: 'text',\n                control: new FormControl('', Validators.required),\n                required: true\n            },\n            {\n                id: 'model_path',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_path\"),\n                type: 'text',\n                control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n                required: true\n            },\n            {\n                id: 'min_proba',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n                type: 'number',\n                control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit() {\n        this.serviceSettings.init();\n        this.AiModel.id = this.route.snapshot.params['id'];\n        await this.retrieveForms();\n        this.http.get(environment['url'] + '/ws/ai/getById/' + this.AiModel.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.AiModel.trainFolders = data.documents;\n                this.setFormValue(this.AiModel.fields, 'model_label', data.model_label);\n                this.setFormValue(this.AiModel.fields, 'model_path', data.model_path);\n                this.setFormValue(this.AiModel.fields, 'min_proba', data.min_proba);\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/ai']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateModel() {\n        if (this.isValidForm(this.AiModel.fields)) {\n            const minProba = this.getValueFromForm(this.AiModel.fields, 'min_proba');\n            const modelPath = this.getValueFromForm(this.AiModel.fields, 'model_path');\n            const modelLabel = this.getValueFromForm(this.AiModel.fields, 'model_label');\n\n            if (this.AiModel.id !== undefined) {\n                this.http.post(environment['url'] + '/ws/ai/splitter/update/' + this.AiModel.id, {\n                        min_proba: minProba,\n                        model_label: modelLabel,\n                        model_path: modelPath,\n                        doctypes: this.AiModel.trainDocuments\n                    }, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_updated'));\n                        this.router.navigate(['/settings/splitter/ai']).then();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    setFormValue(form: any, fieldId: any, value: any) {\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                element.control.setValue(value);\n            }\n        });\n    }\n\n    async retrieveForms() {\n        const retrieve = this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        );\n        return await lastValueFrom(retrieve).then();\n    }\n\n    openDoctypeTree(trainDocument: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: trainDocument.doctype ? trainDocument.doctype  : \"\",\n                    label: \"\"\n                },\n                formId: trainDocument.form\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                trainDocument.doctype   = result.key;\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"grid grid-cols-3 gap-6 m-10 w-11/12\">\n                <ng-container *ngFor=\"let field of AiModel['fields']\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'number'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">{{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}</mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <div class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let trainFolder of this.AiModel['trainFolders']\" class=\"text-center\">\n                    {{ trainFolder['folder'] }}\n                    <div class=\"mt-4\">\n                        <mat-form-field>\n                            <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                            <mat-select [(ngModel)]=\"trainFolder['form']\">\n                                <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">\n                                    {{ form.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <button class=\"max-w-full text-lg text-left hover:text-green-400\"\n                            *ngIf=\"trainFolder.form\"\n                            (click)=\"openDoctypeTree(trainFolder);\"\n                            matTooltip=\"{{ 'GLOBAL.edit' | translate }}\">\n                        <div class=\"font-medium truncate\">\n                            <i class=\"fa-solid fa-edit\"></i>\n                            {{ trainFolder.doctype }}\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button (click)=\"updateModel()\" mat-button class=\"valid_button m-5\">\n                <span class=\"block\">{{ \"ARTIFICIAL-INTELLIGENCE.update_model\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-folder-doc-type',\n  templateUrl: './create-folder-doctype.component.html',\n  styleUrls: ['./create-folder-doctype.component.scss']\n})\nexport class CreateFolderDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading             : boolean   = false;\n    noMasterFolder      : string    = '_NO_MASTER';\n    fields              : any       = [\n        {\n            id       : 'key',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.id'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false\n        },\n        {\n            id       : 'label',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.label'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false\n        }\n    ];\n    selectedFormId      : number | undefined;\n    form!               : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    addFolder() {\n        let newFolder = this.form.getRawValue();\n        const lastIndex = this.getLastFolderIndex(newFolder.folder);\n        newFolder = {\n            'key'       : newFolder.key,\n            'code'      : newFolder.folder !== this.noMasterFolder ? newFolder.folder + '.' + lastIndex : '0.' + lastIndex,\n            'label'     : newFolder.label,\n            'is_default': false,\n            'type'      : 'folder',\n            'form_id'   : this.selectedFormId\n        };\n        this.loading = true;\n        this.http.post(environment['url'] + '/ws/doctypes/add', newFolder, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.folder_added'));\n                this.form.reset();\n                this.form.controls['folder'].setValue(this.noMasterFolder);\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [settings]=\"{'canFolderBeSelected': false}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_folder' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"form.valid && addFolder()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                        <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                        <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'DOCTYPE.add' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-doc-type',\n  templateUrl: './create-doctype.component.html',\n  styleUrls: ['./create-doctype.component.scss']\n})\nexport class CreateDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    forms           : any[]   = [];\n    fields          : any     = [\n        {\n            id      : 'key',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.id'),\n            required: true\n        },\n        {\n            id      : 'label',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.label'),\n            required: true\n        },\n        {\n            id      : 'isDefault',\n            type    : 'slide',\n            value   : false,\n            label   : this.translate.instant('DOCTYPE.default_doctype'),\n            required: false\n        }\n    ];\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean; value: any}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value: field.value, disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl({value:\"\", disabled: false}, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n            if (docType.code.startsWith(codeSelected)\n                && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                const currentIdx = Number(docType.code.split('.').pop());\n                lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n            }\n        });\n        return lastIndex + 1;\n    }\n\n    addDocType() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        newDocType = {\n            'key'           : newDocType.key,\n            'code'          : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'         : newDocType.label,\n            'is_default'    : newDocType['isDefault'],\n            'type'          : 'document',\n            'form_id'       : this.selectedFormId\n        };\n        this.http.post(environment['url'] + '/ws/doctypes/add', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_added'));\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [settings]=\"{'canFolderBeSelected': false}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\"></app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n            <form (ngSubmit)=\"form.valid && addDocType()\" [formGroup]=\"form\">\n                <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                    <mat-form-field>\n                        <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                        <mat-select id='folder' [formControlName]=\"'folder'\" [required]=\"true\">\n                            <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                                <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                            [value]=\"folder.code\">\n                                    {{ folder.label }}\n                                </mat-option>\n                            </div>\n                        </mat-select>\n                        <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <ng-container *ngFor=\"let field of fields\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                                   [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                            <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                            <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                        </mat-form-field>\n                        <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                            <mat-slide-toggle [formControlName]=\"field.id\">\n                                {{ field.label | translate }}\n                            </mat-slide-toggle>\n                        </div>\n                    </ng-container>\n                    <button type=\"submit\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" mat-button>\n                        {{ 'DOCTYPE.add' | translate }}\n                    </button>\n                </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-list-doc-type',\n    templateUrl: './list-doctype.component.html',\n    styleUrls: ['./list-doctype.component.scss']\n})\nexport class ListDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    noMasterFolder  : string  = '_NO_MASTER';\n    fields          : any     = [\n        {\n            id        : 'key',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.id'),\n            required  : true,\n            disabled  : true\n        },\n        {\n            id        : 'label',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.label'),\n            required  : true,\n            disabled  : false\n        },\n        {\n            id       : 'isDefault',\n            type     : 'slide',\n            label    : this.translate.instant('DOCTYPE.default_doctype'),\n            required : false,\n            disabled : false\n        }\n    ];\n    selectedDoctype : any     = {\n        label   : '',\n        key     : '',\n        code    : ''\n    };\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    update() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        if (newDocType.folder === '_NO_MASTER') {\n            newDocType.folder = \"0\";\n        }\n        newDocType = {\n            'key'       : newDocType.key,\n            'code'      : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'     : newDocType.label,\n            'is_default': newDocType.isDefault,\n            'form_id'   : this.selectedFormId,\n            'status'    : 'OK'\n        };\n        this.updateDoctype(newDocType);\n    }\n\n    getOutPut($event: any) {\n        this.selectedDoctype = $event;\n        const code = this.selectedDoctype.code.split('.');\n        code.pop();\n        this.form.controls['folder'].setValue(code.join('.'));\n        this.form.controls['key'].setValue(this.selectedDoctype.key);\n        this.form.controls['label'].setValue(this.selectedDoctype.label);\n        this.form.controls['isDefault'].setValue(this.selectedDoctype.isDefault);\n        this.selectedDoctype.type === 'document' ? this.form.controls['isDefault'].enable() : this.form.controls['isDefault'].disable();\n    }\n\n    deleteDoctype() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('DOCTYPE.confirm_delete', {\"doctypeLabel\": this.selectedDoctype.label}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                const updateValue = {\n                    'key'       : this.form.controls['key'].value,\n                    'code'      : this.form.controls['folder'].value,\n                    'label'     : this.form.controls['label'].value,\n                    'is_default': this.form.controls['isDefault'].value,\n                    'form_id'   : this.selectedFormId,\n                    'status'    : 'DEL'\n                };\n                this.updateDoctype(updateValue);\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n            }\n        });\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    updateDoctype(newDocType: any) {\n        this.http.post(environment['url'] + '/ws/doctypes/update', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_edited'));\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                this.selectedDoctype.code = newDocType.code;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory\n            [settings]=\"{'canFolderBeSelected': true}\"\n            (selectedFormOutput)=\"getSelectedForm($event)\"\n            (selectedDoctypeOutput)=\"getOutPut($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.edit_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"update()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of this.documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                        [disabled]=\"!this.selectedDoctype.key || folder.code.startsWith(this.selectedDoctype.code + '.')\n                                                        || folder.key === this.selectedDoctype.key\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of this.fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\" [readonly]=\"!this.selectedDoctype.key\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button [disabled]=\"!this.selectedDoctype.key\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'GLOBAL.edit' | translate }}\n                </button>\n                <button [disabled]=\"!this.selectedDoctype.key\" (click)=\"deleteDoctype()\" class=\"m-auto w-7/12 border-solid border-red-400 border bg-red-400 text-white\" type='button' mat-button>\n                    {{ 'GLOBAL.delete' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\ns\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html'\n})\nexport class SplitterFormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    outputs                 : any[]     = [];\n    metadataMethods         : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'default_form': {\n            'control': new FormControl()\n        }\n    };\n    formSettings            : any       = {\n        'metadata_method': {\n            'control': new FormControl()\n        },\n        'export_zip_file': {\n            'control': new FormControl()\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    formId                  : any;\n    creationMode            : boolean   = true;\n    labelType               : any []    = [\n        marker('FORMATS.text'),\n        marker('TYPES.text'),\n        marker('TYPES.regex'),\n        marker('TYPES.textarea'),\n        marker('TYPES.date'),\n        marker('TYPES.select'),\n        marker('VERIFIER.field_settings'),\n        marker('FORMS.delete_field'),\n        marker('FORMS.update_label')\n    ];\n    fieldCategories         : any []    = [\n        {\n            'id'    : 'batch_metadata',\n            'label' : marker('SPLITTER.batch_metadata')\n        },\n        {\n            'id'    : 'document_metadata',\n            'label' : marker('SPLITTER.document_metadata')\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id'    : 'custom_fields',\n            'label' : marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    fields                  : any       = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n    classList               : any []    = [\n        {\n            'id'    : 'w-full',\n            'label' : '1'\n        },\n        {\n            'id'    : 'w-1/2',\n            'label' : '1/2'\n        },\n        {\n            'id'    : 'w-30',\n            'label' : '1/3'\n        },\n        {\n            'id'    : 'w-1/3',\n            'label' : '1/33'\n        },\n        {\n            'id'    : 'w-1/4',\n            'label' : '1/4'\n        },\n        {\n            'id'    : 'w-1/5',\n            'label' : '1/5'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id'    : 'simple',\n            'label' : marker('DISPLAY.simple'),\n            'icon'  : 'fa-solid fa-file-alt'\n        },\n        {\n            'id'    : 'multi',\n            'label' : marker('DISPLAY.multi'),\n            'icon'  : 'fa-solid fa-layer-group'\n        }\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('MANDATORY.required'),\n            'icon'  : 'fa-solid fa-star'\n        },\n        {\n            'id'    : false,\n            'label' : marker('MANDATORY.not_required'),\n            'icon'  : 'far fa-star'\n        }\n    ];\n    disabledList            : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('DISABLED.disabled'),\n            'icon'  : 'fa-solid fa-ban'\n        },\n        {\n            'id'    : false,\n            'label' : marker('DISABLED.not_disabled'),\n            'icon'  : ''\n        }\n    ];\n    fieldMetadata           : any []    = [\n        {\n            'id'            : 'searchMask',\n            'placeholder'   : marker('FIELD_METADATA.search_mask'),\n            'control'       : new FormControl()\n        },\n        {\n            'id'            : 'resultMask',\n            'placeholder'   : marker('FIELD_METADATA.result_mask'),\n            'control'       : new FormControl()\n        },\n        {\n            'id'            : 'defaultValue',\n            'placeholder'   : marker('FIELD_METADATA.default_value'),\n            'control'       : new FormControl()\n        },\n        {\n            'id'            : 'validationMask',\n            'placeholder'   : marker('FIELD_METADATA.validation_mask'),\n            'control'       : new FormControl()\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputs = data.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/splitter/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) this.form[field].control.setValue(data[field]);\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) this.outputForm[0].control.setValue(data.outputs[0]);\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) this.addOutput();\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }), catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/metadataMethods', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadataMethods.forEach((option: any) => {\n                    this.metadataMethods.push({\n                        id      : option.id,\n                        label   : option.label\n                    });\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if (data.customFields[field].module === 'splitter' && data.customFields[field].enabled) {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id           : 'custom_' + data.customFields[field].id,\n                                                metadata_key : data.customFields[field].metadata_key,\n                                                label_short  : data.customFields[field].label_short,\n                                                settings     : data.customFields[field].settings,\n                                                required     : data.customFields[field].required,\n                                                label        : data.customFields[field].label,\n                                                type         : data.customFields[field].type,\n                                                format       : data.customFields[field].type,\n                                                unit         : 'custom',\n                                                class        : \"w-1/3\",\n                                                class_label  : \"1/33\",\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.fields) {\n                        if (data.fields.batch_metadata)\n                            this.fields.batch_metadata = data.fields.batch_metadata;\n                        if (data.fields.document_metadata)\n                            this.fields.document_metadata = data.fields.document_metadata;\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(event: any, previousIndex: any, category:any, unit: any) {\n        if (unit === 'addresses')\n            unit = 'supplier';\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        const outputs: any[]    = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/splitter/updateFields/' + this.formId, this.fields,\n                        {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n        }\n    }\n\n    createForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        if (label) {\n            this.http.post(environment['url'] + '/ws/forms/splitter/create',\n                {\n                    'args': {\n                        'label'         : label,\n                        'default_form'  : isDefault,\n                        'module'        : \"splitter\",\n                        'settings'      : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/splitter/updateFields/' + data.id, this.fields,\n                        {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/splitter/forms').then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-auto h-full-overflow\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field>\n                    <mat-label>{{ \"HEADER.choose_metadata_method\" | translate }}</mat-label>\n                    <mat-select [formControl]=\"this.formSettings['metadata_method'].control\">\n                        <mat-option *ngFor=\"let option of this.metadataMethods\" value=\"{{ option.id }}\">\n                            {{ option.label }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-gray-900 z-50\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.export_zip_file\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.formSettings['export_zip_file'].control\">\n                    <mat-hint class=\"text-gray-600\">{{ \"FORMS.export_zip_file_hint\" | translate }}</mat-hint>\n                </mat-form-field>\n            </div>\n            <ng-container *ngFor=\"let category of fieldCategories; let i = index\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem;\" [style]=\"'width:calc(3% + ' + this.translate.instant(category['label']).length + '%)'\">\n                    {{ category['label'] | translate }}\n                </div>\n                <div class=\"border-green-400 border rounded-lg mx-6 m-7\">\n                    <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" id=\"{{ category['id'] }}\"\n                         class=\"flex flex-wrap cursor-pointer w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.fields[category['id']]; let index = index\" class=\"flex items-center px-3 overflow-hidden\" [class]=\"field.class\"\n                             ngSortGridGroup=\"{{ category['id'] }}\" ngSortgridItem [ngSortGridItems]=\"fields[category['id']]\" (sorted)=\"storeNewOrder($event, category['id'])\">\n                            <mat-form-field class=\"right-0 w-full form-builder\">\n                                <i cdkDrag class=\"fa-solid fa-trash z-10\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\">\n                                    <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                    <strong>{{ field.label | translate }}</strong>\n                                    <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                    <span *ngIf=\"field.type === 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                    <span *ngIf=\"field.type === 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                </span>\n                                <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                <div class=\"absolute top-0 -right-4\">\n                                    <button mat-button [matMenuTriggerFor]=\"menu\"\n                                            [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\"\n                                            matTooltipPosition=\"above\">\n                                        <mat-icon class=\"field_settings text-md\">more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                            {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">{{ field.class_label }}</small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type === 'select'\">\n                                            {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.display_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                            {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"disabled\">\n                                            {{ \"FORMS.disable\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"autoCompleteMasksMenu\">\n                                            {{ \"FORMS.input_metadata\" | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #size=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _class of classList\"\n                                                (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                            <span [class.text-green-400]=\"_class.id === field.class\">\n                                                {{ _class.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_class.id === field.class\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #display=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _display of displayList\"\n                                                (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"_display.id === field.display\">\n                                                {{ _display.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_display.id === field.display\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #required=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let required of mandatoryList\"\n                                                (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"required.id === field.required\">\n                                                {{ required.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"required.id === field.required\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #disabled=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let disabled of disabledList\"\n                                                (click)=\"changeRequired(field.id, disabled.id, disabled.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"disabled.id === field.required\">\n                                                {{ disabled.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"disabled.id === field.required\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #autoCompleteMasksMenu=\"matMenu\">\n                                        <div *ngFor=\"let fieldMetadataItem of fieldMetadata\">\n                                            <mat-form-field class=\"w-64 mx-2 text-base\" (click)=\"$event.stopPropagation()\">\n                                                <mat-label>{{ fieldMetadataItem.placeholder | translate }}</mat-label>\n                                                <input matInput [(ngModel)]=\"field[fieldMetadataItem['id']]\" type=\"text\">\n                                            </mat-form-field>\n                                        </div>\n                                    </mat-menu>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <div class=\"flex justify-center items-center\">\n                <button *ngIf=\"creationMode\" (click)=\"createForm()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"FORMS.create\" | translate }}</span>\n                </button>\n                <button *ngIf=\"!creationMode\" (click)=\"updateForm()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"FORMS.modify\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!this.loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\">\n                                <div>\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-checkbox formControlName=\"test\">{{ 'TYPES.' + field.type | translate }}</mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class SplitterFormListComponent implements OnInit {\n    loading: boolean            = true;\n    columnsToDisplay: string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/splitter/forms') || lastUrl === '/') {\n            if (this.localStorageService.get('formsPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('formsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('formsPageIndex');\n        }\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) this.total = data.forms[0].total;\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteForm(formId);\n            }\n        });\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/splitter/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/splitter/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default_form\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/splitter/forms/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"this.pageSize\"\n                       [pageIndex]=\"this.pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-create-output',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class SplitterCreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/getOutputsTypes', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data.outputs_types;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') ||\n                (element.required && element.control.value == null)) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/splitter/create',\n                {\n                    'args': {\n                        'output_type_id': outputTypeId,\n                        'output_label'  : outputLabel,\n                        'compress_type' : compressType,\n                        'module'        : 'splitter',\n                        'ocrise'        : ocrise\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.router.navigate(['/settings/splitter/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/splitter/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of outputForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') &&\n                     (this.selectedOutputType === 'export_pdf' || this.selectedOutputType === 'export_cmis' || this.selectedOutputType === 'export_openads')\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                {{ option.label | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button (click)=\"createOutput()\" mat-button class=\"valid_button\">\n                <span class=\"block\">{{ \"OUTPUT.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n  selector: 'app-splitter-output-list',\n  templateUrl: './output-list.component.html',\n  styleUrls: ['./output-list.component.scss']\n})\nexport class SplitterOutputListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('outputs/') || lastUrl === '/') {\n            if (this.localStorageService.get('outputsPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('outputsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('outputsPageIndex');\n        }\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) this.total = data.outputs[0].total;\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/splitter/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/splitter/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_type_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/splitter/outputs/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class SplitterUpdateOutputComponent implements OnInit {\n    headers               : HttpHeaders   = this.authService.headers;\n    loading               : boolean       = true;\n    loadingCustomFields   : boolean       = true;\n    connection            : boolean       = false;\n    outputsTypes          : any[]         = [];\n    outputsTypesForm      : any[]         = [];\n    output                : any;\n    outputId              : any;\n    selectedOutputType    : any;\n    originalOutputType    : any;\n    toHighlight           : string        = '';\n    allowedPath           : string        = '';\n    outputForm            : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false\n        }\n    ];\n    availableFields       : any           = [\n        {\n            \"labelShort\"    : 'HEADER.id',\n            'label'         : marker('HEADER.label')\n        },\n        {\n            \"labelShort\"    : 'date',\n            'label'         : marker('TYPES.date')\n        },\n        {\n            \"labelShort\"    : 'id',\n            'label'         : marker('SPLITTER.batch_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_identifier',\n            'label'         : marker('SPLITTER.document_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_index',\n            'label'         : marker('SPLITTER.document_index')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_lastname')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_firstname')\n        },\n        {\n            \"labelShort\"    : 'doctype',\n            'label'         : marker('SETTINGS.document_type')\n        },\n        {\n            \"labelShort\"    : 'random',\n            'label'         : marker('OUTPUT.random')\n        },\n        {\n            \"labelShort\"    : 'filename',\n            'label'         : marker('OUTPUT.filename')\n        },\n        {\n            \"labelShort\"    : 'documents_count',\n            'label'         : marker('OUTPUT.documents_count')\n        },\n        {\n            \"labelShort\"    : 'fileIndex',\n            'label'         : marker('OUTPUT.file_index')\n        },\n        {\n            \"labelShort\"    : 'format',\n            'label'         : marker('OUTPUT.format')\n        },\n        {\n            \"labelShort\"    : 'zip_filename',\n            'label'         : marker('OUTPUT.compressed_filename')\n        }\n    ];\n    testConnectionMapping : any           = {\n        'export_openads'   : \"testOpenadsConnection()\",\n        'export_mem' : \"testMEMConnection()\",\n        'export_cmis'   : \"testCmisConnection()\"\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/splitter/allowedPath', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.allowedPath = data.allowedPath;\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/outputs/splitter/getOutputsTypes', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.outputsTypes = data.outputs_types;\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'parameters' : [],\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        if (option.id === 'folder_out' && this.allowedPath) {\n                                            option.placeholder = (this.allowedPath + '/output').replace(/\\/\\//g, '/');\n                                            option.hint = this.translate.instant('GLOBAL.allowed_path', {allowedPath: this.allowedPath});\n                                        }\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice,\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                this.output.data.options[category].forEach((outputElement: any) => {\n                                    if (element.id === outputElement.id) {\n                                        if (outputElement.value) {\n                                            if (outputElement.webservice) element.values = [outputElement.value];\n                                            element.control.setValue(outputElement.value);\n                                        }\n                                    }\n                                });\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => {this.loading = false;}),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/splitter/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        /**\n         * Get custom fields\n         **/\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newField;\n                data.customFields.forEach((field: {\n                        id: any\n                        label_short: string\n                        module: string\n                        label: string\n                        type: string\n                        enabled: boolean\n                    }) => {\n                        newField = {\n                            'id': field.id,\n                            'labelShort': field.label_short,\n                            'label': field.label,\n                            'enabled': field.enabled\n                        };\n                        if (field.enabled) {\n                            this.availableFields.push(newField);\n                        }\n                    }\n                );\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any) {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType]['parameters']) {\n            const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** CMIS Webservices call ****/\n    testCmisConnection() {\n        const args = this.getCmisConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/cmis/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.cmis_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.cmis_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCmisConnectionInfo() {\n        return {\n            'cmis_ws': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'cmis_ws'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n            'folder': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'folder')\n        };\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.mem_connection_ko') + ' : ' + status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getOpenadsConnectionInfo() {\n        return {\n            'openads_api': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'openads_api'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    /**** OpenADS Webservices call ****/\n    testOpenadsConnection() {\n        const args = this.getOpenadsConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/openads/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.openads_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.openads_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.users) {\n                    const data = _return.users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt].serialId,\n                            'value': data[cpt].entity_label,\n                            'extra': data[cpt].entity_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt].type_id,\n                            'value': data[cpt].description,\n                            'extra': data[cpt].type_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.priorities) {\n                    const data = _return.priorities;\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.statuses) {\n                    const data = _return.statuses;\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label_status,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.indexingModels) {\n                    const data = _return.indexingModels;\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                if (field.isJson) {\n                    try {\n                        JSON.parse(field.control.value);\n                    } catch (error) {\n                        field.control.setErrors({'json_error': true});\n                        this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                        return;\n                    }\n                }\n\n                _array['data']['options'][category].push({\n                    id: field.id,\n                    type: field.type,\n                    webservice: field.webservice,\n                    value: field.value === undefined ? field.control.value : field.value\n                });\n            }\n        }\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/splitter/update/' + this.outputId, {'args': _array}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any) {\n        this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') &&\n                            (this.selectedOutputType === 'export_pdf' || this.selectedOutputType === 'export_cmis' || this.selectedOutputType === 'export_openads')\">                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"selectedOutputType && outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_auth_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number' || field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\"\n                                    mat-button class=\"valid_button\">\n                                <span (click)=\"testConnection()\">{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field.webservice\" class=\"col-span-4\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field['required']\"  rows=\"16\" spellcheck=\"false\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain h-full-overflow\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.labelShort | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { OnInit, Component } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../services/settings.service\";\n\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-separator',\n    templateUrl: './separator.component.html',\n    styleUrls: ['./separator.component.scss']\n})\nexport class SeparatorComponent implements OnInit {\n    private selectedDoctype: any;\n    public separator: any      = {\n        'total'      : 0,\n        'current'    : 0,\n        'fileUrl'    : '',\n        'thumbnails' : []\n    };\n    loading           : boolean = false;\n    loadingSeparator  : boolean = false;\n    selectedSeparator : string  = \"bundleSeparator\";\n    separators        : any[]   = [\n        {\n            id          : 'bundleSeparator',\n            name        : this.translate.instant(\"SPLITTER.bundle_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'documentSeparator',\n            name        : this.translate.instant(\"SPLITTER.document_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'docTypeSeparator',\n            name        : this.translate.instant(\"SPLITTER.doc_type_separator\"),\n            disabled    : true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.generateSeparator( {\n            'id'    : undefined,\n            'type'  : 'bundleSeparator'\n        });\n    }\n\n    onChangeType() {\n        let args;\n        if (this.selectedSeparator === \"bundleSeparator\") {\n            args = {\n                'id'   : undefined,\n                'type' : 'bundleSeparator'\n            };\n        }\n        else if (this.selectedSeparator === \"documentSeparator\") {\n            args = {\n                'id'   : undefined,\n                'type' : 'documentSeparator'\n            };\n        }\n        else {\n            args = {\n                'id'   : this.selectedDoctype.id ? this.selectedDoctype.id : null,\n                'type' : 'docTypeSeparator'\n            };\n        }\n        this.generateSeparator(args);\n    }\n\n    getOutPut($event: any) {\n        this.selectedSeparator  = 'docTypeSeparator';\n        this.selectedDoctype    = $event;\n        this.generateSeparator({\n            'type' : 'docTypeSeparator',\n            'id'   : this.selectedDoctype.id\n        });\n    }\n\n    generateSeparator(args: any) {\n        this.loadingSeparator = true;\n        this.http.post(environment['url'] + '/ws/doctypes/generateSeparator', args, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.separator.total      = data.total;\n                this.separator.fileUrl    = data.encoded_file;\n                this.separator.thumbnails = data.encoded_thumbnails;\n                this.separator.current    = 1;\n                this.loadingSeparator     = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loadingSeparator = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    downloadSeparator() {\n        const fileName = this.selectedSeparator + (this.selectedDoctype ? '_' + this.selectedDoctype.key : '');\n        this.downloadPdf(this.separator.fileUrl, fileName);\n    }\n\n    downloadPdf(base64String: any, fileName:any) {\n        const link = document.createElement(\"a\");\n        link.href = base64String;\n        link.download = `${fileName}.pdf`;\n        link.click();\n    }\n\n    moveCurrentThumbnail(step: number) {\n        if (this.separator.current + step <= this.separator.total && this.separator.current + step > 0) {\n            this.separator.current += step;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [ngClass]=\"{'pointer-events-none opacity-50': loadingSeparator}\"\n                                   [settings]=\"{'canFolderBeSelected': false, 'showFoldersSeparatorBtn': true}\"\n                                   (selectedDoctypeOutput)=\"getOutPut($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"overflow-hidden w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.download_separator' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full grid grid-cols-2 m-2 mt-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>{{ 'DOCTYPE.separator_choice '| translate }}</mat-label>\n                <mat-select [disabled]=\"loadingSeparator\" [(ngModel)]=\"selectedSeparator\" (ngModelChange)=\"onChangeType()\">\n                    <mat-option *ngFor=\"let separator of separators\" [id]=\"separator.id\" [value]=\"separator.id \" [disabled]=\"separator.disabled\">\n                        {{ separator.name| translate }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"text-right\">\n                <button mat-button [matTooltip]=\"'DOCTYPE.download_separator' | translate\" [disabled]=\"loadingSeparator\" (click)=\"downloadSeparator()\" class=\"w-10 h-12\">\n                    <i class=\"fa-solid fa-file-arrow-down fa-2x\"></i>\n                </button>\n            </div>\n        </div>\n        <div *ngIf=\"loadingSeparator\" class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 230px)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-qrcode fa-4x fa-beat-fade w-full mb-1\"></i>\n                <span class=\"w-full\">\n                    {{ 'DOCTYPE.generating_separator' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!loadingSeparator\" class=\"text-center text-gray-400 object-contain\">\n            <img class=\"m-auto w-11/12\" [src]=\"separator.thumbnails[separator.current - 1]\" alt=\"Separator thumbnail\">\n            <button mat-button [matTooltip]=\"'DOCTYPE.previous_page' | translate\" [disabled]=\"loadingSeparator\"\n                    (click)=\"moveCurrentThumbnail(-1)\" class=\"hover:text-green-400\">\n                <i class=\"fa-solid fa-arrow-left fa-lg\"></i>\n            </button>\n            {{separator.current}} / {{separator.total}}\n            <button mat-button [matTooltip]=\"'DOCTYPE.next_page' | translate\" [disabled]=\"loadingSeparator\"\n                    (click)=\"moveCurrentThumbnail(1)\" class=\"hover:text-green-400\">\n                <i class=\"fa-solid fa-arrow-right fa-lg\"></i>\n            </button>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { of } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"../../../env\";\nimport { FormControl } from \"@angular/forms\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n  selector: 'app-status-update-splitter',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.scss']\n})\nexport class SplitterUpdateStatusComponent implements OnInit {\n  loading           : boolean     = false;\n  identifierControl : FormControl = new FormControl<any>('');\n  statusControl     : FormControl = new FormControl<any>('');\n  identifiers       : number[]    = [];\n  status            : any[]       = [];\n\n  constructor(\n      public router: Router,\n      private http: HttpClient,\n      public userService: UserService,\n      private authService: AuthService,\n      private notify:NotificationService,\n      public translate: TranslateService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n  ) { }\n\n  ngOnInit(): void {\n    this.serviceSettings.init();\n    this.http.get(environment['url'] + '/ws/status/splitter/list',\n        {headers: this.authService.headers}).pipe(\n        tap((data: any) => {\n          this.status = data.status;\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.handleErrors(err);\n          return of(false);\n        })\n    ).subscribe();\n  }\n\n  addIdentifier() {\n    if (this.identifierControl.value && this.identifiers.indexOf(this.identifierControl.value) === -1) {\n      this.identifiers.push(this.identifierControl.value);\n    }\n    this.identifierControl.setValue('');\n  }\n\n  removeIdentifier(identifier: number) {\n    this.identifiers = this.identifiers.filter((id) => id !== identifier);\n  }\n\n  updateStatus() {\n    const data = {'ids': this.identifiers, 'status': this.statusControl.value};\n    this.http.put(environment['url'] + '/ws/splitter/status', data,\n        {headers: this.authService.headers}).pipe(\n        tap(() => {\n            this.identifiers = [];\n            this.notify.success(this.translate.instant('STATUS.UPDATE_SUCCESS'));\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.error(err.error.message);\n          return of(false);\n        })\n    ).subscribe();\n  }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <mat-card class=\"w-5/6 mt-6 mx-auto\">\n            <mat-card-header>\n                <mat-card-title class=\"text-base\">{{ 'SPLITTER.change_by_identifier' | translate }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"h-56 mx-6\">\n                <div class=\"flex justify-center gap-4\">\n                    <mat-form-field class=\"mt-4 w-3/12\" appearance=\"outline\">\n                        <mat-label>{{ 'STATUS.update_status_to' | translate }}</mat-label>\n                        <mat-select [formControl]=\"statusControl\" [disabled]=\"this.loading\">\n                            <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                {{ option['label'] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"w-3/12 mt-4\" appearance=\"outline\">\n                        <mat-label>{{ 'SPLITTER.batch_identifier' | translate }}</mat-label>\n                        <input type=\"number\" matInput [formControl]=\"identifierControl\">\n                    </mat-form-field>\n                    <button mat-button class=\"rounded border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 mt-4\"\n                            (click)=\"addIdentifier()\" [matTooltip]=\"'STATUS.add_identifier' | translate\" style=\"padding: 1.65rem !important\">\n                        <i class=\"fa-solid fa-plus text-lg\"></i>\n                    </button>\n                </div>\n                <div class=\"h-12 w-full border-solid border-2 border-gray-100 rounded bg-slate-50\">\n                <span *ngIf=\"identifiers.length === 0\" class=\"mt-4 block text-center text-gray-400\">\n                    {{ 'STATUS.no_identifier_added' | translate }}\n                </span>\n                <span *ngFor=\"let identifier of identifiers\">\n                    <mat-chip class=\"m-1\" color=\"primary\" selected=\"true\">\n                        <span class=\"font-medium\">{{ identifier }}</span>\n                        <i class=\"ml-2 fa-solid fa-xmark fa-lg cursor-pointer text-white hover:text-green-400\" (click)=\"removeIdentifier(identifier)\"></i>\n                    </mat-chip>\n                </span>\n                </div>\n                <div class=\"flex justify-center items-center mt-4\">\n                    <button (click)=\"updateStatus()\" mat-button\n                            class=\"p-6 border-solid border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [ngClass]=\"(identifiers.length === 0 || !statusControl.value) ? 'border-gray-400 bg-gray-400' : 'bg-green-400 border-green-400'\"\n                            [disabled]=\"(identifiers.length === 0 || !statusControl.value)\">\n                        <span class=\"block\">{{ \"STATUS.update\" | translate }}</span>\n                    </button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\n\n@Component({\n    selector: 'app-workflow-builder-splitter',\n    templateUrl: './workflow-builder.component.html',\n    styleUrls: ['./workflow-builder.component.scss'],\n    providers: [\n        {\n            provide: STEPPER_GLOBAL_OPTIONS,\n            useValue: {displayDefaultIndicatorType: false}\n        }\n    ]\n})\nexport class WorkflowBuilderSplitterComponent implements OnInit {\n    loading         : boolean       = true;\n    creationMode    : boolean       = true;\n    useInterface    : boolean       = false;\n    separationMode  : string        = 'no_sep';\n    workflowId      : any;\n    stepValid       : any           = {\n        input: false,\n        process: false,\n        separation: false,\n        output: false\n    };\n    oldFolder       : string        = '';\n    idControl       : FormControl   = new FormControl('', Validators.required);\n    nameControl     : FormControl   = new FormControl('', Validators.required);\n\n    form_outputs     : any          = [];\n    workflow_outputs : any          = [];\n\n    fields          : any           = {\n        input : [\n            {\n                id: 'input_folder',\n                label: this.translate.instant('WORKFLOW.input_folder'),\n                type: 'text',\n                control: new FormControl(),\n                placeholder: \"/var/share/\" + environment['customId'] + \"/input\",\n                required: true\n            },\n            {\n                id: 'customer_id',\n                label: this.translate.instant('WORKFLOW.associated_customer'),\n                type: 'select',\n                control: new FormControl(),\n                required: false\n            },\n            {\n                id: 'ai_model_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.ai_model_id'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                hint: this.translate.instant('WORKFLOW.ai_model_id_hint')\n            },\n            {\n                id: 'apply_process',\n                label: this.translate.instant('WORKFLOW.apply_process'),\n                type: 'boolean',\n                control: new FormControl(true)\n            },\n            {\n                id: 'splitter_method_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.splitter_method'),\n                type: 'select',\n                control: new FormControl(),\n                required: true,\n                values: []\n            },\n            {\n                id: 'separate_by_document_number_value',\n                show: true,\n                label: this.translate.instant('WORKFLOW.separate_by_document_number_value'),\n                type: 'number',\n                control: new FormControl(2),\n                required: false\n            },\n            {\n                id: 'remove_blank_pages',\n                label: this.translate.instant('WORKFLOW.remove_blank_pages'),\n                type: 'boolean',\n                control: new FormControl()\n            }\n        ],\n        process: [\n            {\n                id: 'use_interface',\n                show: true,\n                label: this.translate.instant('WORKFLOW.use_interface'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                id: 'allow_automatic_validation',\n                label: this.translate.instant('WORKFLOW.allow_automatic_validation'),\n                hint: this.translate.instant('WORKFLOW.allow_automatic_validation_hint'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'delete_documents',\n                label: this.translate.instant('WORKFLOW.delete_documents'),\n                hint: this.translate.instant('WORKFLOW.delete_documents_hint'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'form_id',\n                multiple: false,\n                label: this.translate.instant('POSITIONS-MASKS.form_associated'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: false,\n                values: []\n            },\n            {\n                id: 'rotation',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.rotation'),\n                type: 'select',\n                control: new FormControl(),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'no_rotation',\n                        'label': this.translate.instant('WORKFLOW.no_rotation')\n                    },\n                    {\n                        'id': 90,\n                        'label': this.translate.instant('WORKFLOW.rotate_90')\n                    },\n                    {\n                        'id': 180,\n                        'label': this.translate.instant('WORKFLOW.rotate_180')\n                    },\n                    {\n                        'id': 270,\n                        'label': this.translate.instant('WORKFLOW.rotate_270')\n                    }\n                ]\n            }\n        ],\n        output: [\n            {\n                id: 'outputs_id',\n                label: this.translate.instant('WORKFLOW.choose_output'),\n                type: 'select',\n                multiple: true,\n                control: new FormControl(['']),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.workflowId = this.route.snapshot.params['id'];\n        if (this.workflowId) {\n            this.creationMode = false;\n            this.http.get(environment['url'] + '/ws/workflows/splitter/getById/' + this.workflowId, {headers: this.authService.headers}).pipe(\n                tap((workflow: any) => {\n                    this.idControl.setValue(workflow.workflow_id);\n                    this.nameControl.setValue(workflow.label);\n                    Object.keys(this.fields).forEach((parent: any) => {\n                        this.fields[parent].forEach((field: any) => {\n                            let value = workflow[parent][field.id];\n                            if (parseInt(value) && !Array.isArray(value)) {\n                                value = parseInt(value);\n                            }\n                            if (value === 'true' || value === 'false' ) {\n                                value = value === 'true';\n                            }\n                            if (field.id === 'splitter_method_id') {\n                                this.setSeparationMode(value);\n                            }\n                            if (field.id === 'use_interface') {\n                                this.setUseInterface(value);\n                            }\n                            if (field.id === 'input_folder') {\n                                this.oldFolder = value;\n                            }\n                            if (field.id === 'outputs_id') {\n                                this.workflow_outputs = value;\n                            }\n                            field.control.setValue(value);\n                        });\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/splitter', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.name;\n                        });\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/ai/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((aiModel: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'ai_model_id') {\n                        element.values = aiModel.models;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.model_label;\n                        });\n                        element.values = [{'id': 0, 'label': this.translate.instant('WORKFLOW.no_ai_model_associated')}].concat(element.values);\n                        if (aiModel.models.length === 1) {\n                            element.control.setValue(aiModel.models[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['process'].forEach((element: any) => {\n                    data.forms.forEach((form: any) => {\n                        if (this.form_outputs.filter((f: any) => f.form_id === form.id).length === 0) {\n                            this.form_outputs.push({\n                                'form_id': form.id,\n                                'outputs': form.outputs.map(Number)\n                            });\n                        }\n                    });\n                    if (element.id === 'form_id') {\n                        element.values = data.forms;\n                        if (data.forms.length === 1) {\n                            element.control.setValue(data.forms[0].id);\n                        }\n                    }\n                });\n                if (this.useInterface) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'form_id' && element.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === element.control.value) {\n                                    this.fields['output'].forEach((_element: any) => {\n                                        if (_element.id === 'outputs_id') {\n                                            _element.control.setValue(form.outputs.map(Number));\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/splitMethods', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.splitMethods.forEach((method: any) => {\n                    this.fields['input'].forEach((element: any) => {\n                        if (element.id === 'splitter_method_id') {\n                            element.values.push(method);\n                        }\n                    });\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['output'].forEach((element: any) => {\n                    if (element.id === 'outputs_id') {\n                        element.values = data.outputs;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.output_label;\n                        });\n                        if (data.outputs.length === 1) {\n                            element.control.setValue(data.outputs[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setSeparationMode(value: any) {\n        this.separationMode = value;\n    }\n\n    setUsedOutputs() {\n        if (this.useInterface) {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'form_id' && elem.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === elem.control.value) {\n                                    element.control.setValue(form.outputs);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        else {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    element.control.setValue(this.workflow_outputs);\n                }\n            });\n        }\n    }\n\n    setUseInterface(value: any) {\n        this.useInterface = value;\n        this.fields['process'].forEach((element: any) => {\n            if (element.id === 'form_id' || element.id === 'allow_automatic_validation') {\n                element.show = this.useInterface;\n                if (element.id !== 'allow_automatic_validation') {\n                    element.required = this.useInterface;\n                }\n            }\n        });\n        this.setUsedOutputs();\n    }\n\n    checkFolder(field: any) {\n        if (field && field.control.value && field.control.value !== this.oldFolder) {\n            this.http.post(environment['url'] + '/ws/workflows/splitter/verifyInputFolder',\n                {'input_folder': field.control.value}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    field.control.setErrors();\n                    this.notify.success(this.translate.instant('WORKFLOW.input_folder_ok'));\n                    this.oldFolder = field.control.value;\n                }),\n                catchError((err: any) => {\n                    field.control.setErrors({'folder_not_found': true});\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    isStepValid(step: any) {\n        let valid = true;\n        this.fields[step].forEach((element: any) => {\n            if ((element.required && !element.control.value) || element.control.errors) {\n                valid = false;\n            }\n        });\n        this.stepValid[step] = valid;\n        return valid;\n    }\n\n    updateWorkflow(step: any) {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n\n        Object.keys(this.fields).forEach((parent: any) => {\n            this.fields[parent].forEach((field: any) => {\n                workflow[parent][field.id] = field.control.value;\n            });\n        });\n\n        if (step === 'input') {\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/splitter/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/workflows/splitter/update/' + this.workflowId, {'args': workflow}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('WORKFLOW.workflow_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createWorkflow() {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n        if (this.idControl.value && this.nameControl.value) {\n            Object.keys(this.fields).forEach((parent: any) => {\n                this.fields[parent].forEach((field: any) => {\n                    workflow[parent][field.id] = field.control.value;\n                });\n            });\n\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/splitter/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/workflows/splitter/create', {'args': workflow}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.router.navigate(['/settings/splitter/workflows']).then();\n                            this.notify.success(this.translate.instant('WORKFLOW.workflow_created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('WORKFLOW.workflow_id_and_name_required'));\n        }\n    }\n\n    updateOutputs(value: any) {\n        if (value) {\n            this.form_outputs.forEach((form: any) => {\n                if (form.form_id === value) {\n                    this.fields['output'].forEach((element: any) => {\n                        if (element.id === 'outputs_id') {\n                            element.control.setValue(form.outputs);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div>\n                <i *ngIf=\"!this.creationMode\" class=\"fa-solid fa-2x fa-save mr-4 cursor-pointer\"\n                   (click)=\"updateWorkflow('input')\" [matTooltip]=\"'WORKFLOW.update' | translate \"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"my-4 w-full p-2\">\n            <span class=\"inline-block p-2 w-4/12\" [class.cursor-not-allowed]=\"!this.creationMode\">\n                <mat-form-field class=\"w-full\" [class.pointer-events-none]=\"!this.creationMode\">\n                    <mat-label>{{ 'WORKFLOW.id' | translate }}</mat-label>\n                    <input [class.text-gray-400]=\"!this.creationMode\" matInput [formControl]=\"this.idControl\" type=\"text\" [readonly]=\"!this.creationMode\">\n                </mat-form-field>\n            </span>\n            <mat-form-field class=\"p-2 w-8/12\">\n                <mat-label>{{ 'WORKFLOW.label' | translate }}</mat-label>\n                <input matInput [formControl]=\"this.nameControl\" type=\"text\">\n            </mat-form-field>\n        </div>\n        <mat-stepper orientation=\"horizontal\" class=\"text-center\">\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.input' | translate\">\n                <div class=\"mt-2 grid grid-cols-2 gap-6\">\n                    <ng-container *ngFor=\"let field of this.fields['input']\">\n                        <div *ngIf=\"field.type === 'boolean'\">\n                            <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\">\n                                <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-6 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-slide-toggle>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"mt-4 grid grid-cols-3 gap-6\">\n                    <ng-container *ngFor=\"let field of this.fields['input']\">\n                        <mat-form-field *ngIf=\"field.type === 'text' && field.show\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                   [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                            <button mat-icon-button matSuffix *ngIf=\"field.id === 'input_folder'\"\n                                    (click)=\"checkFolder(field)\" [matTooltip]=\"'WORKFLOW.test_input_folder' | translate\">\n                                <i class=\"fa-solid fa-check text-green-400\"></i>\n                            </button>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                        (selectionChange)=\"field.id === 'splitter_method_id' ? setSeparationMode($event.value) : ''\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div [class.cursor-not-allowed]=\"!this.isStepValid('input')\">\n                    <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [disabled]=\"!this.stepValid['input']\"\n                            [class.bg-gray-400]=\"!this.stepValid['input']\"\n                            [class.bg-green-400]=\"this.stepValid['input']\"\n                            (click)=\"!this.creationMode ? this.updateWorkflow('input') : ''\">\n                        {{ 'WORKFLOW.next' | translate }}\n                    </button>\n                </div>\n            </mat-step>\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.process' | translate\">\n                <app-hint [specificClass]=\"'w-3/5'\" [message]=\"'WORKFLOW.process_hint' | translate\"></app-hint>\n\n                <div class=\"mt-6 grid grid-cols-2 gap-6\" [class.grid-cols-3]=\"this.useInterface\">\n                    <ng-container *ngFor=\"let field of this.fields['process']\">\n                        <div *ngIf=\"field.type === 'boolean' && field.show\">\n                            <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\"\n                                              (change)=\"field.id === 'use_interface' ? setUseInterface($event.checked) : field.id === 'form_id' ? setUsedOutputs(): ''\">\n                                <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-6 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-slide-toggle>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"mt-6 grid grid-cols-3 gap-6\">\n                    <ng-container *ngFor=\"let field of this.fields['process']\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                   [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                        (selectionChange)=\"field.id === 'form_id' ? updateOutputs($event.value) : ''\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n\n                <button matStepperPrevious mat-button class=\"gray_button\">\n                    {{ \"WORKFLOW.back\" | translate }}\n                </button>\n                <span [class.cursor-not-allowed]=\"!this.isStepValid('process')\">\n                    <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [disabled]=\"!this.stepValid['process']\"\n                            [class.bg-gray-400]=\"!this.stepValid['process']\"\n                            [class.bg-green-400]=\"this.stepValid['process']\"\n                            (click)=\"!this.creationMode ? this.updateWorkflow('process') : ''\">\n                        {{ 'WORKFLOW.next' | translate }}\n                    </button>\n                </span>\n            </mat-step>\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.output' | translate\">\n                <div class=\"mt-2 w-full\">\n                    <ng-container *ngFor=\"let field of this.fields['output']\">\n                        <mat-form-field *ngIf=\"field.type === 'select'\" class=\"w-full\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [disabled]=\"this.useInterface\" [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n\n                <button matStepperPrevious mat-button class=\"gray_button\">\n                    {{ \"WORKFLOW.back\" | translate }}\n                </button>\n                <button mat-button class=\"valid_button\" (click)=\"!this.creationMode ? this.updateWorkflow('output') : this.createWorkflow()\">\n                    <span *ngIf=\"this.creationMode\">\n                        {{ 'WORKFLOW.create' | translate }}\n                    </span>\n                    <span *ngIf=\"!this.creationMode\">\n                        {{ 'WORKFLOW.update' | translate }}\n                    </span>\n                </button>\n            </mat-step>\n        </mat-stepper>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-workflow-list-splitter',\n    templateUrl: './workflow-list.component.html',\n    styleUrls: ['./workflow-list.component.scss']\n})\nexport class WorkflowListSplitterComponent implements OnInit {\n    headers          : HttpHeaders   = this.authService.headers;\n    columnsToDisplay : string[]      = ['id', 'workflow_id', 'label', 'input_folder', 'actions'];\n    loading          : boolean       = false;\n    pageSize         : number        = 10;\n    pageIndex        : number        = 0;\n    total            : number        = 0;\n    offset           : number        = 0;\n    workflows        : any           = [];\n    allWorkflows     : any           = [];\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/splitter/workflows') || lastUrl === '/') {\n            if (this.localStorageService.get('workflowsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('workflowsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('workflowsPageIndex');\n\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allWorkflows = data.workflows;\n                this.loadWorkflows();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadWorkflows() {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.workflows[0]) this.total = data.workflows[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadWorkflows();\n                }\n                this.workflows = data.workflows;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('workflowsPageIndex', event.pageIndex);\n        this.loadWorkflows();\n    }\n\n    deleteConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('WORKFLOW.confirm_delete', {\"workflow\": workflow}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteWorkflow(workflowId);\n            }\n        });\n    }\n\n    deleteWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/workflows/splitter/delete/' + workflowId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('WORKFLOW.confirm_duplicate', {\"workflow\": workflow}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateWorkflow(workflowId);\n            }\n        });\n    }\n\n    duplicateWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.post(environment['url'] + '/ws/workflows/splitter/duplicate/' + workflowId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allWorkflows.slice();\n        if (!sort.active || sort.direction === '') {\n            this.workflows = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.workflows = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n        this.workflows = this.workflows.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"workflows\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"workflow_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element['workflow_id'] }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"input_folder\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'WORKFLOW.input_folder_header' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element?.input['input_folder'] }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'WORKFLOW.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/splitter/workflows/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport {DocumentTypeComponent} from \"../../../../splitter/document-type/document-type.component\";\n\n@Component({\n  selector: 'app-create-model',\n  templateUrl: './create-ai-model.component.html',\n  styleUrls: ['./create-ai-model.component.scss']\n})\n\nexport class CreateVerifierAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    docs                : any       = [];\n    doctypes            : any       = [];\n    docStatus           : any       = [];\n    controls            : any       = [];\n    formControl         : FormControl = new FormControl('');\n    listModels          : any       = [];\n    forms               : any       = [];\n    chosenForm          : any       = [];\n    chosenDocs          : any       = [];\n    totalChecked        : number    = 0;\n    modelForm           : any[]     = [\n        {\n            id: 'model_label',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            placeholder: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name_placeholder\"),\n            type: 'text',\n            control: new FormControl(''),\n            required: true\n        },\n        {\n            id: 'min_proba',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveModels();\n        this.retrieveDoctypes();\n        this.retrieveOCDoctypes();\n        this.retrieveForms();\n    }\n\n    retrieveDoctypes() {\n        this.http.get(environment['url'] + '/ws/ai/verifier/getTrainDocuments', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.docs = data;\n                this.docStatus.splice(0);\n                for (const element of this.docs) {\n                    this.docStatus.push({\n                        doc: element,\n                        isSelected: false,\n                        linked_doctype: \"\",\n                        linked_form: \"\"\n                    });\n                    this.controls.push(new FormControl(''));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkSelectedBatch(cpt: number, current_doc: any) {\n        this.totalChecked = this.docStatus.filter((a: { isSelected: boolean; }) => a.isSelected).length;\n        this.onFormSelect({value: this.forms[0].id}, cpt, current_doc);\n    }\n\n    retrieveOCDoctypes() {\n        this.doctypes = [];\n        this.http.get(environment['url'] + '/ws/ai/list/' + 'document', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: any) => {\n                    newDoctype = {\n                        'id': doctype.id,\n                        'key': doctype.key,\n                        'type': doctype.type,\n                        'code': doctype.code,\n                        'label': doctype.label,\n                        'status': doctype.status,\n                        'formId': doctype.form_id,\n                        'isDefault': doctype.is_default\n                    };\n                    this.doctypes.push(newDoctype);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any, doc: string) {\n        const val = event.value;\n        const match = this.docStatus.find((a: { doc: string; }) => a.doc === doc);\n        match.linked_doctype = val;\n        return true;\n    }\n\n    onFormSelect(event: any, index: number, doc: string) {\n        const val = event.value;\n        for (const element of this.forms) {\n            if (element.id === val) {\n                this.chosenForm[index] = element.id;\n                this.chosenDocs[index] = this.doctypes.filter((a: { formId: number; }) => a.formId === this.chosenForm[index]);\n            }\n        }\n        const match = this.docStatus.find((a: { doc: string; }) => a.doc === doc);\n        match.linked_form = this.chosenForm[index];\n    }\n\n    createModel() {\n        let start_training = true;\n        if (this.isValidForm(this.modelForm) && this.totalChecked > 1 && this.isValidForm2(this.controls)) {\n            const doctypes = [];\n            const minProba = this.getValueFromForm(this.modelForm, 'min_proba');\n            const label = this.getValueFromForm(this.modelForm, 'model_label');\n            const modelName = label.toLowerCase().replace(/ /g, \"_\") + '.sav';\n            const matches = this.docStatus.filter((a: { isSelected: boolean; }) => a.isSelected);\n            for (let i = 0; i < this.totalChecked; i = i + 1) {\n                const fold = matches[i].doc;\n                const formid = matches[i].linked_form;\n                doctypes.push({\n                    form: formid,\n                    folder: fold\n                });\n            }\n\n            for (const element of this.listModels) {\n                const exists = Object.values(element).includes(modelName);\n                if (exists) {\n                    this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.already_existing_model'));\n                    start_training = false;\n                    break;\n                }\n            }\n            if (start_training) {\n                this.http.post(environment['url'] + '/ws/ai/verifier/trainModel/' + modelName,\n                    {label: label, docs: doctypes, min_proba: minProba},\n                    {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.created'));\n                this.router.navigate(['/settings/verifier/ai']).then();\n            }\n        } else {\n            if (this.totalChecked < 2) {\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.not_enough_checked'));\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    isValidForm2(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.status !== 'DISABLED' && element.status !== 'VALID') || element.value == null) {\n                state = false;\n            }\n            element.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveModels() {\n        this.http.get(environment['url'] + '/ws/ai/verifier/list?limit=', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.listModels = data.models;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    retrieveForms() {\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n               this.forms = forms.forms;\n               if (this.forms.length === 1) {\n                   this.formControl.setValue(this.forms[0].id);\n               }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayDoctypes(form: any) {\n        return !!form.value;\n    }\n\n    openDoctypeTree(document: any, formId: number): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: document.doctypeKey  ? document.doctypeKey  : \"\",\n                    label: document.doctypeLabel  ? document.doctypeLabel  : \"\"\n                },\n                formId: formId\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                document.doctypeLabel = result.label;\n                document.doctypeKey   = result.key;\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"mx-10 mt-10 mb-5 grid grid-cols-2 gap-4 place-items-stretch\">\n                <ng-container *ngFor=\"let field of modelForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_label'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                               placeholder=\"{{ field.placeholder | translate }}\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}, format : \"model_name.sav\"\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'doc_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of doctypes\" [value]=\"option.key\">\n                                {{ option.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, modelForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'min_proba'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                               [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h2 class=\"text-center m-4\">\n                {{ 'ARTIFICIAL-INTELLIGENCE.choose_documents' | translate }}\n            </h2>\n            <mat-list class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let item of this.docStatus, let i=index\">\n                    <mat-checkbox [(ngModel)]=\"item.isSelected\" (change)=\"checkSelectedBatch(i, item.doc);\"\n                                  [ngModelOptions]=\"{standalone: true}\"\n                                  class=\"w-lg h-lg accent-green-400 checkBox_list cursor-pointer pr-4 pb-2\">\n                        {{ item.doc }}\n                    </mat-checkbox>\n                    <div>\n                        <mat-form-field *ngIf=\"item.isSelected\">\n                            <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                            <mat-select [formControl]=\"formControl\"\n                                        (selectionChange)=\"onFormSelect($event, i, item.doc)\">\n                                <mat-option *ngFor=\"let option of forms\" [value]=\"option.id\">\n                                    {{ option.label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formControl.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </mat-list>\n        </div>\n        <div class=\"flex justify-center items-center mb-2 py-4\">\n            <button mat-button (click)=\"createModel()\" class=\"valid_button\">\n                <span class=\"block\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.train_a_model' | translate }}\n                </span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\n\n@Component({\n  selector: 'app-list-ai',\n  templateUrl: './list-ai-model.component.html',\n  styleUrls: ['./list-ai-model.component.scss']\n})\n\nexport class ListVerifierAiModelComponent implements OnInit {\n    loading             : boolean     = true;\n    showResponse        : boolean     = false;\n    isPredicting        : boolean     = false;\n    modelsList          : any         = [];\n    displayedColumns    : string[]    = ['id', 'model_label', 'train_time', 'accuracy_score', 'documents', 'min_proba', 'status', 'actions'];\n    offset              : number      = 0;\n    pageIndex           : number      = 0;\n    total               : number      = 0;\n    pageSize            : number      = 10;\n    clickedRow          : object      = {};\n    prediction          : any         = [];\n    splitterOrVerifier  : any         = 'verifier';\n    fileControl         : FormControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension([\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        if (this.router.url.includes('/verifier/')) {\n            this.splitterOrVerifier = 'verifier';\n        } else if (this.router.url.includes('/splitter/')) {\n            this.splitterOrVerifier = 'splitter';\n        }\n        this.serviceSettings.init();\n        this.retrieveModels();\n    }\n\n    retrieveModels(offset?: number, size?: number) {\n        this.http.get(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.modelsList = data.models;\n                for (let i = 0; i < this.modelsList.length; i++) {\n                    let tmp_doc = \"\";\n                    for (let j = 0; j < this.modelsList[i].documents.length; j++) {\n                        tmp_doc += this.modelsList[i].documents[j].folder + \", \";\n                        if (j === this.modelsList[i].documents.length - 1) {\n                            tmp_doc = tmp_doc.slice(0, -2);\n                        }\n                    }\n                    this.modelsList[i].documents = [tmp_doc];\n                }\n                this.total = this.modelsList.length;\n                if (offset !== undefined && size !== undefined) {\n                    this.modelsList = this.modelsList.slice(offset, offset + size);\n                } else {\n                    this.modelsList = this.modelsList.slice(0, 10);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.modelsList.slice();\n        if (!sort.active || sort.direction === '') {\n            this.modelsList = data;\n            return;\n        }\n\n        this.modelsList = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'model_path': return this.compare(a.path, b.path, isAsc);\n                case 'train_time': return this.compare(a.train_time, b.train_time, isAsc);\n                case 'type': return this.compare(a.type, b.type, isAsc);\n                case 'accuracy_score': return this.compare(a.accuracy, b.accuracy, isAsc);\n                case 'doc_types': return this.compare(a.doctypes, b.doctypes, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                case 'min_proba': return this.compare(a.min_proba, b.min_proba, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    selectRow(row : object) {\n        this.clickedRow = row;\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (![\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"].includes(fileExtension.toLowerCase())) {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    displaySelectedRowId() {\n        const disp = Object.values(this.clickedRow)[2];\n        if (disp) {\n            return (disp);\n        }\n        else return 0;\n    }\n\n    deleteConfirmDialog(modelId: number, model: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ARTIFICIAL-INTELLIGENCE.confirm_delete', {\"model\": model}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteModel(modelId);\n            }\n        });\n    }\n\n    deleteModel(modelId: number) {\n        if (modelId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/delete/' + modelId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.retrieveModels();\n                    this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.retrieveModels(this.offset, this.pageSize);\n    }\n\n    onSubmit() {\n        this.showResponse = false;\n        const formData = new FormData();\n        const disp = Object.values(this.clickedRow)[2];\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        this.isPredicting = true;\n        this.http.post(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/testModel/' + disp, formData, {headers: this.authService.headers}).pipe(\n            tap((res) => this.onResponse(res)),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_not_found'));\n                this.isPredicting = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onResponse(res: any) {\n        this.prediction = res;\n        this.showResponse = true;\n        this.isPredicting = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button *ngIf=\"displaySelectedRowId()\" (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\">\n            <mat-table [dataSource]=\"modelsList\" matSort (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"model_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.model_label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.model_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"train_time\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.train_time' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.train_time }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"accuracy_score\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.accuracy' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.accuracy_score }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"documents\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.doctypes' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.documents }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"min_proba\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.min_proba' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.min_proba }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span class=\"col-span-1 text-right\">\n                            <i *ngIf=\"element.status === 'training'\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training' | translate }}\"></i>\n                            <i *ngIf=\"element.status === 'error'\" class=\"fas fa-triangle-exclamation fa-lg my-4 text-amber-500 cursor-pointer\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.error' | translate }}\"></i>\n                            <i *ngIf=\"element.status === 'OK'\" class=\"fa-solid fa-check fa-lg my-4\"\n                               matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training_done' | translate }}\"></i>\n                        </span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button [disabled]=\"element.status !== 'OK'\" (click)=\"$event.stopPropagation(); sidenav2.open(); this.selectRow(element)\"\n                                matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-vial\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.model_label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/settings/verifier/ai/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\">\n                </mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n            <mat-card class=\"w-full border-solid border-green-400 border rounded-lg transition duration-300\">\n                <mat-card-title class=\"p-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.model_selected'| translate }}\n                    {{ displaySelectedRowId() }}\n                </mat-card-title>\n                <mat-card-actions class=\"block\">\n                    <div class=\"w-full\">\n                        <ngx-file-drag-drop\n                            [displayFileSize]=\"true\"\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            (valueChanged)=\"checkFile($event)\"\n                            [class.disabled]=\"this.isPredicting\"\n                            [class.pointer-events-none]=\"this.isPredicting\"\n                            [emptyPlaceholder]=\"'ARTIFICIAL-INTELLIGENCE.choose_file' | translate\">\n                        </ngx-file-drag-drop>\n                    </div>\n                    <div class=\"text-center\" [class.cursor-not-allowed]=\"this.isPredicting || this.fileControl.value!.length === 0\">\n                        <button mat-button (click)=\"onSubmit()\"\n                                [disabled]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                [class.bg-gray-400]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                class=\"w-3/5 valid_button\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.predict' | translate }}\n                        </button>\n                    </div>\n                </mat-card-actions>\n                <div *ngIf=\"showResponse === true\">\n                    <mat-divider></mat-divider>\n                    <mat-card-content class=\"pt-2\">\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.file' | translate }} : {{ prediction[0] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.prediction' | translate }} : {{ prediction[1] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.probability' | translate }} : {{ prediction[2]}} %</p>\n                    </mat-card-content>\n                </div>\n                <mat-card-footer>\n                    <mat-progress-bar *ngIf=\"isPredicting\" mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { lastValueFrom, of } from \"rxjs\";\n\n@Component({\n  selector: 'app-update-model',\n  templateUrl: './update-ai-model.component.html',\n  styleUrls: ['./update-ai-model.component.scss']\n})\n\nexport class UpdateVerifierAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    modelId             : number    = 0;\n    doc_types           : any       = [];\n    forms               : any       = [];\n    formById            : any       = [];\n    doctypesFormControl : any       = [];\n    formsFormControl    : any       = [];\n    tableData           : any       = [];\n    chosenForm          : any       = [];\n    chosenDocs          : any       = [];\n    documents           : any       = [];\n    len                 : number    = 0;\n    splitterOrVerifier  : any       = 'verifier';\n    modelForm           : any[]     = [\n        {\n            id: 'model_path',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n            required: true\n        },\n        {\n            id: 'min_proba',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit() {\n        if (this.router.url.includes('/verifier/')) {\n            this.splitterOrVerifier = 'verifier';\n        } else if (this.router.url.includes('/splitter/')) {\n            this.splitterOrVerifier = 'splitter';\n        }\n        this.serviceSettings.init();\n        this.modelId = this.route.snapshot.params['id'];\n        this.retrieveOCDoctypes();\n        await this.retrieveForms();\n        this.http.get(environment['url'] + '/ws/ai/getById/' + this.modelId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.documents = data.documents;\n                const selectedFormId : any = [];\n                this.len = this.documents.length;\n                for (let i = 0; i < this.len; i++) {\n                    if (this.splitterOrVerifier === 'splitter') {\n                        for (const element of this.doc_types) {\n                            if (element.id === this.documents[i].doctype) {\n                                selectedFormId.push(element.formId);\n                                break;\n                            }\n                        }\n                        this.formById.push((this.forms.find((a: { id: number; }) => a.id === selectedFormId[i])).id);\n                        this.chosenDocs[i] = this.doc_types.filter((a: { formId: number; }) => a.formId === selectedFormId[i]);\n                    } else if (this.splitterOrVerifier === 'verifier') {\n                        for (const doc of this.documents) {\n                            if (doc.form) {\n                                this.formById.push(doc.form);\n                            }\n                        }\n                    }\n                    this.doctypesFormControl.push(new FormControl(this.documents[i].doctype, [Validators.required]));\n                    this.formsFormControl.push(new FormControl(this.formById[i], [Validators.required]));\n                    this.tableData.push({Documents: this.documents[i].folder, Doctypes: this.documents[i].doctype, Formulaires: this.formById[i], id: i});\n                }\n\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.modelForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/' + this.splitterOrVerifier + '/ai']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateModel() {\n        if (this.isValidForm(this.modelForm)) {\n            const modelName = this.getValueFromForm(this.modelForm, 'model_path');\n            const minProba = this.getValueFromForm(this.modelForm, 'min_proba');\n            const doctypes = [];\n            for (let i = 0; i < this.len; i++) {\n                const fold = this.documents[i].folder;\n                const formid = this.formsFormControl[i].value;\n                const oc_targets = this.doctypesFormControl[i].value;\n                doctypes.push({\n                    folder: fold,\n                    doctype: oc_targets,\n                    form: formid\n                });\n            }\n            if (this.modelId !== undefined) {\n                this.http.post(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/update/' + this.modelId, {\n                    model_name: modelName, min_proba: minProba, doctypes: doctypes }, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_updated'));\n                        this.router.navigate(['/settings/' + this.splitterOrVerifier + '/ai']).then();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveOCDoctypes() {\n        this.doc_types = [];\n        this.http.get(environment['url'] + '/ws/ai/list/document', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: any) => {\n                    newDoctype = {\n                        'id': doctype.id,\n                        'key': doctype.key,\n                        'code': doctype.code,\n                        'label': doctype.label,\n                        'type': doctype.type,\n                        'status': doctype.status,\n                        'isDefault': doctype.is_default,\n                        'formId': doctype.form_id\n                    };\n                    this.doc_types.push(newDoctype);\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveForms() {\n        const retrieve = this.http.get(environment['url'] + '/ws/forms/' + this.splitterOrVerifier + '/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        );\n        return await lastValueFrom(retrieve).then();\n    }\n\n    onFormSelect(event: any, index: number) {\n        const val = event.value;\n        for (const element of this.forms) {\n            if (element.id === val) {\n                this.chosenForm[index] = element.id;\n                this.chosenDocs[index] = this.doc_types.filter((a: { formId: number; }) => a.formId === this.chosenForm[index]);\n            }\n        }\n        this.doctypesFormControl[index].value = this.chosenDocs[index][0].id;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"grid grid-cols-3 gap-6 m-10 w-full\">\n                <ng-container *ngFor=\"let field of modelForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_path'\">\n                        <mat-label>\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'min_proba'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">{{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}</mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <div class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let item of this.tableData, let i=index\" class=\"text-center\">\n                    {{ item.Documents }}\n                    <div class=\"mt-4\">\n                        <mat-form-field>\n                            <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                            <mat-select [formControl]=\"formsFormControl[item.id]\"\n                                        (selectionChange)=\"onFormSelect($event, item.id)\">\n                                <mat-option *ngFor=\"let option of forms\" [value]=\"option.id\">\n                                    {{ option.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button (click)=\"updateModel()\" mat-button class=\"valid_button m-5\">\n                <span class=\"block\">{{ \"ARTIFICIAL-INTELLIGENCE.update_model\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {environment} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html'\n})\nexport class FormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    updateFormLoading       : boolean   = false;\n    creationMode            : boolean   = true;\n    modalOpen               : boolean   = false;\n    selectedFields          : any       = [];\n    formLabels              : any       = {};\n    formId                  : any;\n    formSettingId           : any;\n    outputs                 : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'default_form': {\n            'control': new FormControl()\n        }\n    };\n    formSettings            : any       = {\n        'supplier_verif': {\n            'control': new FormControl()\n        },\n        'allow_learning': {\n            'control': new FormControl(true)\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    fields                  : any       = {\n        'supplier': [],\n        'lines': [],\n        'facturation': [],\n        'other': []\n    };\n    fieldCategories         : any []    = [\n        {\n            'id': 'supplier',\n            'label': marker('FORMS.supplier'),\n            'edit': false\n        },\n        {\n            'id': 'lines',\n            'label': marker('FACTURATION.lines'),\n            'edit': false\n        },\n        {\n            'id': 'facturation',\n            'label': marker('FACTURATION.facturation'),\n            'edit': false\n        },\n        {\n            'id': 'other',\n            'label': marker('FORMS.other'),\n            'edit': false\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'accounts_fields',\n            'label': marker('ACCOUNTS.supplier'),\n            'values': [\n                {\n                    id: 'name',\n                    label: marker('ACCOUNTS.supplier_name'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'white',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'siret',\n                    label: marker('ACCOUNTS.siret'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'siren',\n                    label: marker('ACCOUNTS.siren'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'lime',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'vat_number',\n                    label: marker('ACCOUNTS.vat_number'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'olive',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'iban',\n                    label: marker('ACCOUNTS.iban'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'duns',\n                    label: marker('ACCOUNTS.duns'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'bic',\n                    label: marker('ACCOUNTS.bic'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'email',\n                    label: marker('FORMATS.email'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'email',\n                    format_icon:'fa-solid fa-at',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'address1',\n                    label: marker('ADDRESSES.address_1'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'address2',\n                    label: marker('ADDRESSES.address_2'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'postal_code',\n                    label: marker('ADDRESSES.postal_code'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'city',\n                    label: marker('ADDRESSES.city'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'country',\n                    label: marker('ADDRESSES.country'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'lines_fields',\n            'label': this.translate.instant('FACTURATION.lines'),\n            'values': [\n                {\n                    id: 'description',\n                    label: marker('FACTURATION.description'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'quantity',\n                    label: marker('FACTURATION.quantity'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'unit_price',\n                    label: marker('FACTURATION.unit_price'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'line_ht',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'line_vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'silver',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'red',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'orange',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'yellow',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'blue',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'pink',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'fuschia',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'purple',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'accounting_plan',\n                    label: marker('FACTURATION.accounting_plan'),\n                    unit: 'facturation',\n                    type: 'select',\n                    required: false,\n                    format: 'select',\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: '',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    classList               : any []    = [\n        {\n            'id': 'w-full',\n            'label': '1'\n        },\n        {\n            'id': 'w-1/2',\n            'label': '1/2'\n        },\n        {\n            'id': 'w-30',\n            'label': '1/3'\n        },\n        {\n            'id': 'w-1/3',\n            'label': '1/33'\n        },\n        {\n            'id': 'w-1/4',\n            'label': '1/4'\n        },\n        {\n            'id': 'w-1/5',\n            'label': '1/5'\n        },\n        {\n            'id': 'w-1/6',\n            'label': '1/6'\n        }\n    ];\n    colorsList              : any []    = [\n        {\n            'id': 'yellow',\n            'label': marker('COLORS.yellow')\n        },\n        {\n            'id': 'pink',\n            'label': marker('COLORS.pink')\n        },\n        {\n            'id': 'red',\n            'label': marker('COLORS.red')\n        },\n        {\n            'id': 'blue',\n            'label': marker('COLORS.blue')\n        },\n        {\n            'id': 'orange',\n            'label': marker('COLORS.orange')\n        },\n        {\n            'id': 'purple',\n            'label': marker('COLORS.purple')\n        },\n        {\n            'id': 'black',\n            'label': marker('COLORS.black')\n        },\n        {\n            'id': 'white',\n            'label': marker('COLORS.white')\n        },\n        {\n            'id': 'aqua',\n            'label': marker('COLORS.aqua')\n        },\n        {\n            'id': 'maroon',\n            'label': marker('COLORS.maroon')\n        },\n        {\n            'id': 'teal',\n            'label': marker('COLORS.teal')\n        },\n        {\n            'id': 'navy',\n            'label': marker('COLORS.navy')\n        },\n        {\n            'id': 'fuchsia',\n            'label': marker('COLORS.fuchsia')\n        },\n        {\n            'id': 'silver',\n            'label': marker('COLORS.silver')\n        },\n        {\n            'id': 'gray',\n            'label': marker('COLORS.gray')\n        },\n        {\n            'id': 'lime',\n            'label': marker('COLORS.lime')\n        },\n        {\n            'id': 'green',\n            'label': marker('COLORS.green')\n        }\n    ];\n    formatList              : any []    = [\n        {\n            'id': 'date',\n            'label': marker('FORMATS.date'),\n            'icon': 'fa-solid fa-calendar-day'\n        },\n        {\n            'id': 'number_float',\n            'label': marker('FORMATS.number_float'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'number_int',\n            'label': marker('FORMATS.number_int'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'char',\n            'label': marker('FORMATS.char'),\n            'icon': 'fa-solid fa-font'\n        },\n        {\n            'id': 'alphanum',\n            'label': marker('FORMATS.alphanum'),\n            'icon': 'fa-solid fa-hashtag'\n        },\n        {\n            'id': 'alphanum_extended',\n            'label': marker('FORMATS.alphanum_extended'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'alphanum_extended_with_accent',\n            'label': marker('FORMATS.alphanum_extended_with_accent'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'email',\n            'label': marker('FORMATS.email'),\n            'icon': 'fa-solid fa-alt'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id': 'simple',\n            'label': marker('DISPLAY.simple'),\n            'icon': 'fa-solid fa-file-alt'\n        },\n        {\n            'id': 'multi',\n            'label': marker('DISPLAY.multi'),\n            'icon': 'fa-solid fa-layer-group'\n        }\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id': true,\n            'label': marker('MANDATORY.required'),\n            'icon': 'fa-solid fa-star'\n        },\n        {\n            'id': false,\n            'label': marker('MANDATORY.not_required'),\n            'icon': 'far fa-star'\n        }\n    ];\n    availableFields         : any       = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'only_ocr',\n            'label': marker('FORMS.only_ocr')\n        },\n        {\n            \"id\": 'supplier',\n            'label': 'ACCOUNTS.supplier'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date',\n            'label': marker('FACTURATION.document_date')\n        },\n        {\n            \"id\": 'footer',\n            'label': marker('FACTURATION.footer')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((res_outputs: any) => {\n                this.outputs = res_outputs.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/verifier/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.formLabels = data.labels;\n                            this.formSettingId = data.module_settings_id;\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) this.form[field].control.setValue(data[field]);\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) this.outputForm[0].control.setValue(data.outputs[0]);\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) this.addOutput();\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }), catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['customFields']) {\n                    for (const field in data['customFields']) {\n                        this.availableFields.push({\n                            'id': 'custom_' + data['customFields'][field].id,\n                            'label': data['customFields'][field].label\n                        });\n                        for (const parent in this.availableFieldsParent) {\n                                if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                    this.availableFieldsParent[parent].values.push({\n                                        id: 'custom_' + data['customFields'][field].id,\n                                        label: data['customFields'][field].label,\n                                        unit: 'custom',\n                                        type: data['customFields'][field].type,\n                                        required: data['customFields'][field].required,\n                                        autocomplete: data['customFields'][field].autocomplete,\n                                        class: \"w-1/3\",\n                                        class_label: \"1/33\"\n                                    });\n\n                                    let format = '';\n                                    if (data['customFields'][field].type === 'regex') {\n                                        format = data['customFields'][field].settings['regex']['format'];\n                                    } else if (data['customFields'][field].type === 'text') {\n                                        format = 'char';\n                                    } else if (data['customFields'][field].type === 'select') {\n                                        format = 'select';\n                                    } else if (data['customFields'][field].type === 'textarea') {\n                                        format = 'char';\n                                    } else {\n                                        format = data['customFields'][field].type;\n                                    }\n                                    this.availableFieldsParent[parent].values[this.availableFieldsParent[parent].values.length - 1]['format'] = format;\n                                }\n                            }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.fields) {\n                        Object.keys(data.fields).forEach((category: any) => {\n                            if (data.fields[category]) {\n                                this.fields[category] = data.fields[category];\n                            }\n                        });\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    updateLabel(category: any, label:any) {\n        category.edit = !category.edit;\n        if (label) {\n            category.label = label;\n            this.formLabels[category.id] = label;\n            if (!this.creationMode) {\n                this.http.put(environment['url'] + '/ws/forms/updateLabel/' + this.formId + '/' + category.id,\n                    {label: category.label}, {headers: this.authService.headers}).pipe(\n                    tap(()=> {\n                        this.notify.success(this.translate.instant('FORMS.label_updated_successfully'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    focusInput(category_id: any) {\n        setTimeout(() => {\n            document.getElementById(category_id)!.focus();\n        }, 200);\n    }\n\n    getCategoryLabel(category: any) {\n        return this.formLabels[category.id] ? this.formLabels[category.id] : this.translate.instant(category.label);\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeFormat(fieldId: any, newFormat: any, formatIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.format = newFormat;\n                element.format_icon = formatIcon;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    changeColor(fieldId: any, newColor: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.color = newColor;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            if (event.container.data) moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(previousIndex: any, category: any, unit: any) {\n        if (unit === 'addresses' || unit === 'supplier') {\n            unit = 'accounts';\n        }\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    updateValue(event: any, field: any) {\n        const value = event.target ? event.target.value : event.value;\n        if (value) {\n            field.label = value;\n        }\n        field['edit_name'] = false;\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        this.updateFormLoading = true;\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n\n        const settings: any = {};\n        Object.keys(this.formSettings).forEach((element: any) => {\n            settings[element] = this.formSettings[element].control.value;\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : settings\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/verifier/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.updateFormLoading = false;\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                finalize(() => this.updateFormLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.updateFormLoading = false;\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n            this.updateFormLoading = false;\n        }\n    }\n\n    selectForLine(event: any, field: any) {\n        if (event.ctrlKey) {\n            field.lineSelected = !field.lineSelected;\n            if (field.lineSelected) {\n                this.selectedFields.push({'id': field.id, 'class': field.class});\n            } else {\n                this.selectedFields.forEach((element: any, index: number) => {\n                    if (element.id === field.id) {\n                        this.selectedFields.splice(index, 1);\n                        field.fullSize = false;\n                    }\n                });\n            }\n            let size = 0;\n            this.selectedFields.forEach((element: any) => {\n                const currentNumber = element.class.replace('w-', '');\n                if (currentNumber !== 'full') {\n                    const currentSize = new Function(\"return \" + element.class.replace('w-', ''))();\n                    size += currentSize;\n                } else {\n                    size = 1;\n                }\n            });\n            if (Math.round((size * 10)) / 10 % 1 === 0 && field.lineSelected) {\n                field.fullSize = true;\n            }\n        }\n    }\n\n    createForm() {\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        let supplierVerif = this.formSettings.supplier_verif.control.value;\n        let allowLearning = this.formSettings.allow_learning.control.value;\n        if (!supplierVerif) supplierVerif = false;\n        if (!allowLearning) allowLearning = false;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n        if (label !== '' && outputs.length >= 1) {\n            this.http.post(environment['url'] + '/ws/forms/verifier/create', {\n                    'args': {\n                        'module'       : 'verifier',\n                        'label'        : label,\n                        'outputs'      : outputs,\n                        'default_form' : isDefault,\n                        'settings'     : {\n                            \"supplier_verif\" : supplierVerif,\n                            \"allow_learning\" : allowLearning\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/verifier/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/verifier/forms').then();\n                    Object.keys(this.formLabels).forEach((category: any) => {\n                        this.http.put(environment['url'] + '/ws/forms/updateLabel/' + data.id + '/' + category,\n                            {label: this.formLabels[category]}, {headers: this.authService.headers}).pipe(\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n            this.updateFormLoading = false;\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field class=\"\">\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label']['control']\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form']['control']\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['supplier_verif']['control']\">\n                        {{ \"FORMS.supplier_verif\" | translate }}\n                        <span class=\"text-gray-600 cursor-help relative\" [matTooltip]=\"'FORMS.supplier_verif_hint' | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['allow_learning']['control']\">\n                        {{ \"FORMS.allow_learning\" | translate }}\n                        <span class=\"text-gray-600 cursor-help relative\" [matTooltip]=\"'FORMS.allow_learning_hint' | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-gray-900 z-40\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n            </div>\n            <div class=\"form-container\">\n                <ng-container *ngFor=\"let category of this.fieldCategories; let i = index\">\n                    <span class=\"relative text-xl tracking-wider px-1.5 bg-white left-10\" style=\"top: 1.125rem\">\n                        <span *ngIf=\"!category['edit']\">\n                            {{ getCategoryLabel(category) }}\n                            <span (click)=\"category.edit = !category['edit']; focusInput('label_' + category['id'])\"\n                                  *ngIf=\"category['id'] !== 'lines'\">\n                                <i class=\"fa-solid fa-edit cursor-pointer mx-1 text-green-400\"></i>\n                            </span>\n                        </span>\n                        <span *ngIf=\"category['edit']\">\n                            <input class=\"border border-gray-900 rounded px-1.5\" #labelInput\n                                   [id]=\"'label_' + category.id\" matInput [value]=\"getCategoryLabel(category) | translate\"\n                                   (focusout)=\"updateLabel(category, labelInput.value)\">\n                            <span (click)=\"updateLabel(category, labelInput.value);\">\n                                <i class=\"fa-solid fa-check cursor-pointer mx-1 text-green-400\"></i>\n                            </span>\n                        </span>\n                    </span>\n                    <div class=\"border-green-400 border rounded-lg pt-4 mx-6 my-1\">\n                        <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" [id]=\"category['id']\"\n                             class=\"flex flex-wrap cursor-pointer w-full my-3 px-1\" style=\"min-height: 50px;\">\n                            <div *ngFor=\"let field of this.fields[category['id']]; let index = index\"\n                                 class=\"flex items-center overflow-hidden\" [class]=\"field['class']\"\n                                 [ngSortGridItems]=\"fields[category['id']]\" ngSortgridItem\n                                 [ngSortGridGroup]=\"category['id']\" (sorted)=\"storeNewOrder($event, category['id'])\"\n                                 [class.-mt-4]=\"field['field.lineSelected']\">\n                                <mat-form-field class=\"right-0 form-builder mt-1 rounded-md\"\n                                                [class.bg-opacity-30]=\"field['field.lineSelected']\"\n                                                [class.px-3]=\"!field['field.lineSelected']\" [class.px-6]=\"field['field.lineSelected']\"\n                                                [class.pb-0]=\"field['field.lineSelected']\" [class.pt-5]=\"field['field.lineSelected']\"\n                                                [ngClass]=\"{'w-full': !field['field.lineSelected'], 'w-11/12': field['field.lineSelected']}\"\n                                                [class.bg-gray-900]=\"field['field.lineSelected']\"\n                                                (click)=\"selectForLine($event, this.fields[category['id']][index])\">\n                                    <i cdkDrag class=\"fa-solid fa-trash z-10 text-red-500\"\n                                       *ngIf=\"!field['edit_name']\" (click)=\"deleteField(index, category['id'], field.unit)\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <i cdkDrag class=\"fa-solid fa-edit z-10 ml-6 text-green-400\"\n                                       *ngIf=\"!field['edit_name']\" (click)=\"field['edit_name'] = true\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.update_label')\"></i>\n                                    <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block\n                                                overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\"\n                                          *ngIf=\"!field['edit_name']\">\n                                        <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                        <strong>{{ field.label | translate }}</strong>\n                                        <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                        <span *ngIf=\"field.type === 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                        <span *ngIf=\"field.type === 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                    </span>\n                                    <span class=\"flex w-full\" *ngIf=\"field['edit_name']\">\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\" style=\"margin-top: -8px\">\n                                            <input matInput [value]=\"field.label | translate\" class=\"relative top-1\"\n                                                   (keyup.enter)=\"updateValue($event, field)\"\n                                                   (focusout)=\"updateValue($event, field)\">\n                                        </mat-form-field>\n                                        <button matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button class=\"top-1.5\">\n                                            <i class=\"fa-solid fa-check visible opacity-100 text-lg\"></i>\n                                        </button>\n                                    </span>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                    <div class=\"absolute top-0 -right-4 z-10\" *ngIf=\"!field['edit_name']\">\n                                        <button mat-button [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                                [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\">\n                                            <i class=\"fa-solid fa-ellipsis-vertical text-lg\"></i>\n                                        </button>\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item [matMenuTriggerFor]=\"colors\"\n                                                    *ngIf=\"field.type !== 'select'\"\n                                                    [style]=\"'background-color:' + field.color\"\n                                                    [class.text-white]=\"field.color === 'black' || field.color === 'navy'\">\n                                                {{ \"VERIFIER.colors\" | translate }}\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                                {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">\n                                                    {{ field['class_label'] }}\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"format\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.format\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['format_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['display_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                                {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['required_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #size=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\" *ngFor=\"let _class of classList\"\n                                                    (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                                <span [class.text-green-400]=\"_class.id === field['class']\">\n                                                    {{ _class.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_class.id === field['class']\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #colors=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _color of colorsList\"\n                                                    (click)=\"changeColor(field.id, _color.id, category['id'])\"\n                                                    [style]=\"'background-color:' + _color.id\"\n                                                    [class.text-white]=\"_color.id === 'black' || _color.id === 'navy'\">\n                                                {{ _color.label | translate }}\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #format=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _format of formatList\"\n                                                    (click)=\"changeFormat(field.id, _format.id, _format.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_format.id === field.format\">\n                                                    {{ _format.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_format.id === field.format\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #display=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _display of displayList\"\n                                                    (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_display.id === field.display\">\n                                                    {{ _display.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_display.id === field.display\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #required=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let required of mandatoryList\"\n                                                    (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"required.id === field.required\">\n                                                    {{ required.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"required.id === field.required\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </mat-form-field>\n                                <div *ngIf=\"field.fullSize\">\n                                    <i class=\"fa-solid fa-layer-group -m-2 -right-4 relative\"\n                                       [class.text-green-400]=\"field.fullSizeSelected\" matTooltipPosition=\"above\"\n                                       [matTooltip]=\"field.fullSizeSelected ? ('VERIFIER.full_line' | translate) :\n                                                                              ('VERIFIER.make_line' | translate)\"\n                                       (click)=\"field.fullSizeSelected = !field.fullSizeSelected\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"flex justify-center items-center mb-2 mt-4\">\n                <button mat-button class=\"w-56 valid_button\"\n                        (click)=\"createForm()\" *ngIf=\"this.creationMode\">\n                        {{ \"FORMS.create\" | translate }}\n                </button>\n                <button mat-button class=\"min-w-56 valid_button\" (click)=\"updateForm()\" *ngIf=\"!this.creationMode\">\n                    <span *ngIf=\"!this.updateFormLoading\">{{ \"FORMS.modify\" | translate }}</span>\n                    <i *ngIf=\"this.updateFormLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n            </div>\n            <div class=\"absolute overflow-y-auto overflow-x-hidden z-40 w-full md:inset-0 grid\n                 place-items-center h-screen\" *ngIf=\"this.modalOpen\">\n                <div class=\"relative w-full max-w-2xl h-full md:h-auto border border-green-400\">\n                    <div class=\"relative bg-white shadow\">\n                        <div class=\"flex justify-between items-start p-4 border-b bg-green-400\">\n                            <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n                                {{ \"FORMS.available_fields\" | translate }}\n                            </h3>\n                            <button type=\"button\" class=\"text-gray-900 bg-transparent ml-auto inline-flex items-center\"\n                                    style=\"padding-top: 0.9rem\" (click)=\"this.modalOpen = false\">\n                                <i class=\"fa-solid fa-xmark fa-2x\"></i>\n                            </button>\n                        </div>\n                        <div class=\"p-6 space-y-6\">\n                            <div class=\"overflow-x-hidden overflow-y-auto h-96\">\n                                <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                                    <span>\n                                        {{ field.label | translate }}\n                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                                        <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngIf=\"availableFields['id'] === 'lines_fields'\">\n                        <app-hint [specificClass]=\"'w-11/12'\" [message]=\"'FACTURATION.only_facturx' | translate\"></app-hint>\n                    </div>\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text' || field.type === 'regex'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }} </mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" disabled>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class FormListComponent implements OnInit {\n    columnsToDisplay    : string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    loading             : boolean   = true;\n    pageSize            : number    = 10;\n    pageIndex           : number    = 0;\n    total               : number    = 0;\n    offset              : number    = 0;\n    forms               : any       = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/forms') || lastUrl === '/') {\n            if (this.localStorageService.get('formsPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('formsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('formsPageIndex');\n        }\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) this.total = data.forms[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadForms();\n                }\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async getWorkflows(formId: any) {\n        return await this.http.get(environment['url'] + '/ws/workflows/verifier/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async deleteConfirmDialog(formId: number, form: string) {\n        const workflows: any = await this.getWorkflows(formId);\n        if (workflows.length !== 0) {\n            const forms = this.forms;\n            forms.forEach((form: any, cpt: number) => {\n                if (form.id === formId) {\n                    forms.splice(cpt, 1);\n                }\n            });\n            const workflowList: any = [];\n            const workflowListLabel: any = [];\n            workflows.forEach((workflow: any) => {\n                workflowList.push({'id': workflow.id, 'label': workflow.label, process: workflow.process, input: workflow.input, output: workflow.output});\n                workflowListLabel.push(workflow.label);\n            });\n\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.new_workflow_link'),\n                    confirmText         : this.translate.instant('FORMS.workflows_list_already_linked', {\"workflowsList\": workflowListLabel.join('<br>')}),\n                    selectValues        : forms,\n                    selectLabel         : this.translate.instant('FORMS.choose_form'),\n                    confirmButton       : this.translate.instant('GLOBAL.delete_form_and_reassign_workflow'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.updateWorkflowsDefaultForm(result, workflowList);\n                    this.deleteForm(formId);\n                }\n            });\n        } else {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                    confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                    confirmButton       : this.translate.instant('GLOBAL.delete'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.deleteForm(formId);\n                }\n            });\n        }\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/verifier/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    updateWorkflowsDefaultForm(newFormId: number, workflows: any) {\n        if (newFormId !== undefined) {\n            for (const cpt in workflows) {\n                workflows[cpt]['process'].form_id = newFormId;\n                this.http.put(environment['url'] + '/ws/workflows/verifier/update/' + workflows[cpt].id, {'args': workflows[cpt]}, {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/verifier/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default_form\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            *ngIf=\"this.forms.length > 1\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/forms/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'create-output',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class CreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/getOutputsTypes', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data.outputs_types;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') ||\n                (element.required && element.control.value == null)) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/verifier/create',\n                {'args': {\n                    'output_type_id': outputTypeId,\n                    'output_label'  : outputLabel,\n                    'compress_type' : compressType,\n                    'ocrise'        : ocrise,\n                    'module'        : 'verifier'\n                }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.router.navigate(['/settings/verifier/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of this.outputForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [id]=\"field.id\" [name]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of this.outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                {{ option.label | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button (click)=\"createOutput()\" mat-button class=\"valid_button\">\n                <span class=\"block\">{{ \"OUTPUT.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-output-list',\n    templateUrl: './outputs-list.component.html',\n    styleUrls: ['./outputs-list.component.scss']\n})\nexport class OutputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/outputs') || lastUrl === '/') {\n            if (this.localStorageService.get('outputsPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('outputsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('outputsPageIndex');\n        }\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) this.total = data.outputs[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadOutputs();\n                }\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/verifier/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/verifier/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_type_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/outputs/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { PipeTransform, Pipe } from '@angular/core';\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search:any): string {\n        const pattern = search\n            .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n            .split(' ')\n            .filter((t:any) => t.length > 0)\n            .join('|');\n        const regex = new RegExp(pattern, 'gi');\n        return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n}\n\n@Component({\n    selector: 'update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class UpdateOutputComponent implements OnInit {\n    headers                 : HttpHeaders   = this.authService.headers;\n    loading                 : boolean       = true;\n    loadingCustomFields     : boolean       = true;\n    connection              : boolean       = false;\n    outputId                : any;\n    output                  : any;\n    selectedOutputType      : any;\n    originalOutputType      : any;\n    outputsTypes            : any[]         = [];\n    outputsTypesForm        : any[]         = [];\n    toHighlight             : string        = '';\n    allowedPath             : string        = '';\n    outputForm              : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false\n        }\n    ];\n    availableFields         : any           = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'name',\n            'label': 'ACCOUNTS.supplier_name'\n        },\n        {\n            \"id\": 'vat_number',\n            'label': 'ACCOUNTS.vat_number'\n        },\n        {\n            \"id\": 'siret',\n            'label': 'ACCOUNTS.siret'\n        },\n        {\n            \"id\": 'siren',\n            'label': 'ACCOUNTS.siren'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date_year',\n            'label': marker('FACTURATION.document_date_year')\n        },\n        {\n            \"id\": 'total_ht',\n            'label': marker('FACTURATION.total_ht')\n        },\n        {\n            \"id\": 'total_ttc',\n            'label': marker('FACTURATION.total_ttc')\n        },\n        {\n            \"id\": 'total_vat',\n            'label': marker('FACTURATION.total_vat')\n        },\n        {\n            \"id\": 'document_date_month',\n            'label': marker('FACTURATION.document_date_month')\n        },\n        {\n            \"id\": 'document_date_day',\n            'label': marker('FACTURATION.document_date_day')\n        },\n        {\n            \"id\": 'register_date_year',\n            'label': marker('FACTURATION.register_date_year')\n        },\n        {\n            \"id\": 'register_date_month',\n            'label': marker('FACTURATION.register_date_month')\n        },\n        {\n            \"id\": 'register_date_day',\n            'label': marker('FACTURATION.register_date_day')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        }\n    ];\n    testConnectionMapping   : any           = {\n        'export_mem' : \"testMEMConnection()\"\n    };\n\n    /**\n     * Pour ajouter une nouvelle chaine sortante (e.g : Alfresco)\n     * Rajouter une nouvelle ligne dans le tableau testConnectionMapping() contenant l'id de la nouvelle chaine et le nom de la fonction permettant de verifier la connection\n     * Dans le JSON présent dans la table output_types, en se basant sur celui existant (export_mem), créer vos champs par défaut\n     * Attention à bien garder les clé \"auth\" et \"parameters\" présentes\n     * Si un champs \"parameters\" à besoin de récupérer des données depuis un WS de la solution cible (e.g récupération des utilisateurs MEM Courrier)\n     * Rajouter une ligne dans le JSON 'webservice' avec un nom de fonction (sans mettre les parenthèses)\n     * Créer cette fonction et faites le process permettant de récupérer les données\n     * Les données doivent être formatés comme suit : {'id': XX, 'value': XX} et être mise dans la clé \"values\" du champ\n     * Regarder la fonction getUsersMEM() pour voir le fonctionnement\n     * Du côté des webservices permettant l'execution des chaînes sortantes, il faut créer un WS dans le fichier rest/verifier.py\n     * La route doit être : verifier/documents/<int:document_id>/output_type_id (e.g : verifier/documents/<int:document_id>/export_mem)\n    **/\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/verifier/allowedPath', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.allowedPath = data.allowedPath;\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/outputs/verifier/getOutputsTypes', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                data.customFields.forEach((field: any) => {\n                                    this.availableFields.push({\n                                        'id': 'custom_' + field.id,\n                                        'label': field.label\n                                    });\n                                });\n                            }),\n                            finalize(() => this.loadingCustomFields = false),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.outputsTypes = data.outputs_types;\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'links' : [],\n                                'parameters' : [],\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        if (option.id === 'folder_out' && this.allowedPath) {\n                                            option.placeholder = (this.allowedPath + '/output').replace(/\\/\\//g, '/');\n                                            option.hint = this.translate.instant('GLOBAL.allowed_path', {allowedPath: this.allowedPath});\n                                        }\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice,\n                                        });\n                                    }\n                                } else {\n                                    if (category === 'links') {\n                                        delete this.outputsTypesForm[_output.output_type_id].links;\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                if (this.output.data.options[category]) {\n                                    this.output.data.options[category].forEach((outputElement: any) => {\n                                        if (element.id === outputElement.id) {\n                                            if (outputElement.value) {\n                                                if (outputElement.webservice) element.values = [outputElement.value];\n                                                element.control.setValue(outputElement.value);\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/verifier/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any, category: string = 'parameters') {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n            const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status[0];\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error('<strong>' + this.translate.instant('OUTPUT.mem_connection_ko') + '</strong> : ' + data.status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return[0].users) {\n                    const data = _return[0].users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt].serialId,\n                            'value': data[cpt].entity_label,\n                            'extra': data[cpt].entity_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.customFields) {\n                    const data = _return.customFields;\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getContactsCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getContactsCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.customFields) {\n                    const data = _return.customFields;\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt].type_id,\n                            'value': data[cpt].description,\n                            'extra': data[cpt].type_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.priorities) {\n                    const data = _return.priorities;\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.statuses) {\n                    const data = _return.statuses;\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label_status,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.indexingModels) {\n                    const data = _return.indexingModels;\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"links\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            if (this.outputsTypesForm[this.selectedOutputType][category]) {\n                for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                    const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                    if (field.isJson) {\n                        try {\n                            JSON.parse(field.control.value);\n                        } catch (error) {\n                            field.control.setErrors({'json_error': true});\n                            this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                            return;\n                        }\n                    }\n\n                    _array.data.options[category].push({\n                        id: field.id,\n                        type: field.type,\n                        webservice: field.webservice,\n                        value: field.value === undefined ? field.control.value : field.value\n                    });\n                }\n            }\n        }\n        if (_array.data.options['links'].length === 0) delete _array.data.options.links;\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/verifier/update/' + this.outputId, {'args': _array}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any, category: string = 'parameters') {\n        this.outputsTypesForm[this.selectedOutputType][category][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"this.selectedOutputType && this.outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\" [selectedIndex]=\"this.outputsTypesForm[selectedOutputType]['auth'].length === 0 ? 1 : 0 \">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                            <span *ngIf=\"this.outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_auth_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of this.outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number' || field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\"\n                                    (click)=\"testConnection()\" mat-button\n                                    class=\"valid_button\">\n                                <span>{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\" style=\"height: 50vh;\">\n                            <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-0.5 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-xs\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field['required']\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">\n                                            {{ 'OUTPUT.check_connection_before' | translate }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.links' | translate\" *ngIf=\"outputsTypesForm[selectedOutputType]['links']\">\n                            <app-hint [message]=\"'OUTPUT.links_hint' | translate\" [specificClass]=\"'w-3/4'\"></app-hint>\n                            <div class=\"flex justify-center m-10\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-slide-toggle *ngIf=\"field.type === 'boolean'\" [formControl]=\"field['control']\">\n                                        {{ field.label | translate }}\n                                    </mat-slide-toggle>\n                                </ng-container>\n                            </div>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-8\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                               [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['links']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id, 'links')\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\n\n@Component({\n    selector: 'create-positions-mask',\n    templateUrl: './create-positions-mask.component.html',\n    styleUrls: ['./create-positions-mask.component.scss']\n})\nexport class CreatePositionsMaskComponent implements OnInit {\n    loading             : boolean   = true;\n    suppliers           : any       = [];\n    filteredOptions     : Observable<any> | undefined;\n    forms               : any       = [];\n    form                : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'supplier_id': {\n            'control': new FormControl()\n        },\n        'form_id': {\n            'control': new FormControl()\n        }\n    };\n    toHighlight         : string = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = this.sortArrayAlphab(data.suppliers);\n                this.filteredOptions = this.form['supplier_id'].control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option) : this.suppliers.slice())\n                    );\n                this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms = data.forms;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        for (const key in form) {\n            if ((form[key].control.status !== 'DISABLED' && form[key].control.status !== 'VALID') || form[key].control.value == null) {\n                state = false;\n            }\n            form[key].control.markAsTouched();\n        }\n        return state;\n    }\n\n    createPositionsMask() {\n        if (this.isValidForm(this.form)) {\n            const label = this.form['label'].control.value;\n            const supplierName = this.form['supplier_id'].control.value;\n            const formId = this.form['form_id'].control.value;\n            let supplierId = '';\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    supplierId = element.id;\n                }\n            });\n            this.http.post(environment['url'] + '/ws/positions_masks/add',\n                {'args': {\n                        'label': label,\n                        'supplier_id': supplierId,\n                        'form_id': formId\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.created'));\n                    this.router.navigate(['/settings/verifier/positions-mask/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/positions-mask');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error : any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.name.toUpperCase(),\n                y = b.name.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return this.suppliers;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-auto\">\n            <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of this.filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>\n                        {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                    </mat-label>\n                    <mat-select [formControl]=\"this.form['form_id'].control\" [required]=\"true\">\n                        <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button (click)=\"createPositionsMask()\" mat-button class=\"valid_button\">\n                <span class=\"block\">{{ \"POSITIONS-MASKS.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'positions-mask-list',\n    templateUrl: './positions-mask-list.component.html',\n    styleUrls: ['./positions-mask-list.component.scss']\n})\nexport class PositionsMaskListComponent implements OnInit {\n    columnsToDisplay: string[]      = ['id', 'label', 'supplier_name', 'form_label', 'enabled', 'actions'];\n    loading         : boolean       = true;\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n    positionsMasks  : any           = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/positions-mask') || lastUrl === '/') {\n            if (this.localStorageService.get('positionMaskPageIndex')) {\n                this.pageIndex = parseInt(this.localStorageService.get('positionMaskPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('positionMaskPageIndex');\n        }\n        this.loadPositionMask().then();\n    }\n\n    async loadPositionMask() {\n        this.loading = true;\n        const suppliers = await this.retrieveSuppliers();\n        this.http.get(environment['url'] + '/ws/positions_masks/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.positions_masks[0]['total']) this.total = data.positions_masks[0]['total'];\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadPositionMask();\n                }\n                this.positionsMasks = data.positions_masks;\n                suppliers.suppliers.forEach((element: any) => {\n                    this.positionsMasks.forEach((mask: any) => {\n                        if (element.id === mask.supplier_id) {\n                            mask.supplier_name = element.name;\n                        }\n                    });\n                });\n\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('positionMaskPageIndex', event.pageIndex);\n        this.loadPositionMask().then();\n    }\n\n    deleteConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_delete', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletePositionMask(positionMaskId);\n            }\n        });\n    }\n\n    duplicateConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_duplicate', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicatePositionMask(positionMaskId);\n            }\n        });\n    }\n\n    disableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_disable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    enableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_enable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    deletePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/positions_masks/delete/' + positionsMaskId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.positions_mask_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicatePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.post(environment['url'] + '/ws/positions_masks/duplicate/' + positionsMaskId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/disable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/enable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.positionsMasks.slice();\n        if (!sort.active || sort.direction === '') {\n            this.positionsMasks = data;\n            return;\n        }\n\n        this.positionsMasks = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"positionsMasks\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"form_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.form' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.form_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"supplier_name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.supplier_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.supplier_name }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/positions-mask/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ConfigService } from \"../../../../../services/config.service\";\nimport { environment } from  \"../../../../env\";\n\ndeclare const $: any;\n\n@Component({\n    selector: 'update-positions-mask',\n    templateUrl: './update-positions-mask.component.html',\n    styleUrls: ['./update-positions-mask.component.scss']\n})\nexport class UpdatePositionsMaskComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingFields           : boolean   = true;\n    ocrFromUser             : boolean   = false;\n    launchOnInit            : boolean   = false;\n    ratio                   : any;\n    positionMaskId          : any;\n    positionsMask           : any;\n    documentImageWidth      : any;\n    documentImageNbPages     : any;\n    currentPage             : number    = 1;\n    suppliers               : any       = [];\n    filteredOptions         : Observable<any> | undefined;\n    forms                   : any       = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'supplier_id': {\n            'control': new FormControl()\n        },\n        'form_id': {\n            'control': new FormControl()\n        }\n    };\n    toHighlight             : string    = '';\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'silver',\n                    regex: ''\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'red',\n                    regex: ''\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'orange',\n                    regex: ''\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'yellow',\n                    regex: ''\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'blue',\n                    regex: ''\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'pink',\n                    regex: ''\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'fuschia',\n                    regex: ''\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'purple',\n                    regex: ''\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'white',\n                    regex: ''\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'green',\n                    regex: ''\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'lime',\n                    regex: ''\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    imageDocument           : any;\n    documentImageSrc        : any;\n    documentImageName       : any;\n    lastId                  : any;\n    lastColor               : string    = '';\n    lastLabel               : string    = '';\n    config                  : any;\n    fileControl             = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.serviceSettings.init();\n        this.launchOnInit = true;\n        this.positionMaskId = this.route.snapshot.params['id'];\n        this.config = this.configService.getConfig();\n        this.positionsMask = await this.getPositionMask();\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                for (const key in this.positionsMask.regex) {\n                    if (key === element.id) {\n                        element.regex = this.positionsMask.regex[key];\n                    }\n                }\n            });\n        }\n        if (this.positionsMask.filename) {\n            this.documentImageName = this.positionsMask.filename;\n            this.documentImageNbPages = this.positionsMask.nb_pages;\n            this.documentImageWidth = this.positionsMask.width;\n            this.imageDocument = $('#document_image_src');\n            const thumbB64 : any = await this.getThumb(this.positionsMask.filename);\n            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n        }\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n        if (this.imageDocument) {\n            this.ratio = this.documentImageWidth / this.imageDocument.width();\n            this.ocr({\n                'target' : {\n                    'id': ''\n                }\n            }, true, '', false);\n        }\n        this.form['label'].control.setValue(this.positionsMask.label);\n        this.form['form_id'].control.setValue(this.positionsMask.form_id);\n        this.filteredOptions = this.form['supplier_id'].control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n        this.suppliers.forEach((element: any ) => {\n            if (element.id === this.positionsMask.supplier_id) {\n                this.form['supplier_id'].control.setValue(element.name);\n            }\n        });\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if (data.customFields[field].module === 'verifier') {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id: 'custom_' + data.customFields[field].id,\n                                                label: data.customFields[field].label,\n                                                type: data.customFields[field].type,\n                                                color: data.customFields[field].color,\n                                                regex: ''\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.drawPositions();\n            this.loading = false;\n            this.launchOnInit = false;\n        }, 500);\n\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return this.suppliers;\n        }\n    }\n\n    async getPositionMask(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/positions_masks/getById/' + this.positionMaskId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    drawPositions() {\n        if (this.positionsMask) {\n            for (const field in this.positionsMask.positions) {\n                const position = this.positionsMask.positions[field];\n                const page = this.getPage(field);\n                if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                    this.lastId = field;\n                    for (const cpt in this.availableFieldsParent) {\n                        this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                            if (field === element.id) {\n                                this.lastLabel = this.translate.instant(element.label);\n                                this.lastColor = element.color;\n                            }\n                        });\n                    }\n                    $('#' + field).focus();\n\n                    if (this.ratio === Infinity) {\n                        this.ratio = this.documentImageWidth / this.imageDocument.width();\n                    }\n\n                    const newArea = {\n                        x: position.x / this.ratio,\n                        y: position.y / this.ratio,\n                        width: position.width / this.ratio,\n                        height: position.height / this.ratio\n                    };\n\n                    const triggerEvent = $('.trigger');\n                    triggerEvent.hide();\n                    triggerEvent.trigger('mousedown');\n                    triggerEvent.trigger('mouseup', [newArea]);\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any) {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        this.lastColor = field.color;\n        $('#' + field.id).focus();\n        const newArea = {\n            x: position.x / this.ratio,\n            y: position.y / this.ratio,\n            width: position.width / this.ratio,\n            height: position.height / this.ratio\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    updatePositionsMask() {\n        const _array = {\n            'label': this.form['label'].control.value,\n            'form_id': this.form['form_id'].control.value,\n            'regex': {}\n        };\n        if (_array['label'] && _array['form_id']) {\n            const supplierName = this.form['supplier_id'].control.value;\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    Object.assign(_array, {'supplier_id': element.id});\n                }\n            });\n\n            for (const cpt in this.availableFieldsParent) {\n                this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                    if (element.regex) {\n                        Object.assign(_array['regex'], {[element.id]: element.regex});\n                    }\n                });\n            }\n\n            if (_array['regex']) {\n                _array['regex'] = JSON.stringify(_array['regex']);\n            }\n\n            this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId, {'args': _array}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    this.router.navigate(['/settings/verifier/positions-mask']).then();\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            this.loading = true;\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    this.loading = false;\n                    return;\n                } else {\n                    const formData: FormData = new FormData();\n                    if (data) formData.append(data[0].name, data[0]);\n\n                    this.http.post(environment['url'] + '/ws/positions_masks/getImageFromPdf/' + this.positionMaskId, formData, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n                            this.documentImageName = data.filename;\n                            this.documentImageWidth = data.width;\n                            this.imageDocument = $('#document_image_src');\n                            setTimeout(() => {\n                                this.ratio = this.documentImageWidth / this.imageDocument.width();\n                            }, 500);\n                            this.documentImageNbPages = data.nb_pages;\n                            this.fileControl.setValue([]);\n                            this.ocr({\n                                'target' : {\n                                    'id': ''\n                                }\n                            }, true, '', false);\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }\n        }\n    }\n\n    deleteImage() {\n        this.documentImageSrc = '';\n        this.imageDocument = undefined;\n        this.positionsMask.positions = {};\n        this.positionsMask.pages = {};\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                element.value = '';\n                const input = $('.input_' + element.id);\n                const background = $('.background_' + element.id);\n                const outline = $('.outline_' + element.id);\n                input.remove();\n                background.remove();\n                outline.remove();\n            });\n        }\n        const imageContainer = $('.image-container');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId,\n            {'args': {'filename': '', 'positions': '{}', 'pages': '{}'}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    ocr(event: any, enable: boolean, color = 'green', removeClass = true) {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        const lastLabel = $('#label_' + this.lastId);\n        this.lastLabel = lastLabel.length !== 0 ? lastLabel[0].innerText : '';\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        deleteArea.addClass('pointer-events-auto');\n        backgroundArea.addClass('pointer-events-auto');\n        resizeArea.addClass('pointer-events-auto');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable && this.imageDocument) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            if (removeClass) {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageDocument.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageDocument.width(), this.imageDocument.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        _this.ocr_process(img, cpt, selection);\n                    }\n                },\n                onDeleted(img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    _this.deletePosition(inputId);\n                    _this.deletePage(inputId);\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (page === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n            }\n\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n\n            if (this.imageDocument && !this.launchOnInit) {\n                const _selection = this.getSelectionByCpt(selection, cpt);\n                this.savePosition(_selection);\n                this.savePage(this.currentPage);\n            }\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    getPage(fieldId: any) {\n        let page: number = this.currentPage;\n        if (this.positionsMask.pages) {\n            Object.keys(this.positionsMask.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.positionsMask.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    checkIfObjectIsEqual(object1: any, object2: any) {\n        if (!object1)\n            return false;\n        if (!object2)\n            return false;\n\n        const aProps = Object.getOwnPropertyNames(object1);\n        const bProps = Object.getOwnPropertyNames(object2);\n\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (let i = 0; i < aProps.length; i++) {\n            const propName = aProps[i];\n            if (object1[propName] !== object2[propName]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    savePosition(position: any) {\n        position = {\n            height: position.height * this.ratio,\n            width: position.width * this.ratio,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio\n        };\n        if (!this.checkIfObjectIsEqual(position, this.positionsMask.positions[this.lastId])) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePositions/' + this.positionMaskId,\n                {'args': {[this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.positions[this.lastId] = position;\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    savePage(page: any) {\n        if (page !== this.positionsMask.pages[this.lastId]) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePages/' + this.positionMaskId,\n                {'args': {[this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.pages[this.lastId] = page;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePosition(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePosition',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.positions[this.lastId] = '';\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePage(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePage',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.pages[this.lastId] = '';\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async nextPage() {\n        if (this.currentPage < this.documentImageNbPages) {\n            this.currentPage = this.currentPage + 1;\n            await this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            await this.changeImage(1, this.documentImageNbPages);\n        }\n    }\n\n    async previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            await this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            await this.changeImage(this.documentImageNbPages, this.currentPage);\n        }\n    }\n\n    async changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.documentImageName.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n\n            const newFilename = this.documentImageName.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.documentImageName = newFilename;\n            const thumbB64: any = await this.getThumb(newFilename);\n            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n            this.currentPage = pageToShow;\n            for (const parentCpt in this.availableFieldsParent) {\n                for (const cpt in this.availableFieldsParent[parentCpt]['values']) {\n                    const field = this.availableFieldsParent[parentCpt]['values'][cpt];\n                    const position = this.positionsMask.positions[field.id];\n                    const page = this.positionsMask.pages[field.id];\n                    if (position) {\n                        const input = $('.input_' + field.id);\n                        const background = $('.background_' + field.id);\n                        const outline = $('.outline_' + field.id);\n                        input.remove();\n                        background.remove();\n                        outline.remove();\n                        if (page === this.currentPage) this.drawPositionByField(field, position);\n                    }\n                }\n            }\n        }\n    }\n\n    async getThumb(filename:string) {\n        return await this.http.post(environment['url'] + '/ws/verifier/getThumb', {\n            'args': {\n                'type': 'positions_masks',\n                'filename': filename\n            }\n        }, {headers: this.authService.headers}).toPromise();\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-auto h-full-overflow\">\n            <div class=\"flex justify-center items-center mt-5\">\n                <button (click)=\"updatePositionsMask()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"POSITIONS-MASKS.modify\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>\n                        {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                    </mat-label>\n                    <mat-select [formControl]=\"this.form['form_id'].control\" [required]=\"true\">\n                        <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <span class=\"cursor-pointer text-sm col-span-3 flex justify-center m-auto w-1/6 -mt-8\"\n                      *ngIf=\"documentImageSrc\" (click)=\"deleteImage()\">\n                    {{ 'POSITIONS-MASKS.reset_image' | translate }}\n                </span>\n            </div>\n            <div id=\"document_image\">\n                <div class=\"relative ml-4 z-50 text-xl text-left py-2\">\n                    <ng-container *ngIf=\"!this.loading && this.documentImageSrc && this.documentImageNbPages > 1\">\n                        <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n                        {{ 'VERIFIER.page' | translate }}\n                        {{ this.currentPage }}\n                        {{ 'VERIFIER.on' | translate }}\n                        {{ this.documentImageNbPages }}\n                        <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n                    </ng-container>\n                </div>\n                <div *ngIf=\"!documentImageSrc\">\n                    <ngx-file-drag-drop\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            [multiple]=\"false\"\n                            [accept]=\"'pdf'\"\n                            [displayFileSize]=\"true\"\n                            [emptyPlaceholder]=\"'POSITIONS-MASKS.placeholder' | translate\"\n                            [class]=\"'max-w-3xl h-56 mt-10 mb-10'\"\n                            (valueChanged)=\"checkFile($event)\">\n                    </ngx-file-drag-drop>\n                </div>\n                <div class=\"image-container px-4\" [class.hidden]=\"!this.imageDocument\">\n                    <img id=\"document_image_src\" [src]=\"documentImageSrc\" alt=\"Open-Capture Verifier image\">\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!loadingFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div class=\"min-w-full overflow-x-hidden\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div class=\"flex flex-row items-center justify-between m-5\">\n                            <ng-container>\n                                <div class=\"relative -top-3\" [id]=\"'label_' + field.id\">\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-6/12\">\n                                    <mat-label>{{ 'POSITIONS-MASKS.regex_associated' | translate }}</mat-label>\n                                    <input [id]='field.id' (focusin)=\"ocr($event, true, field.color)\"\n                                           (click)=\"this.ocrFromUser = true;\" [(ngModel)]=\"field.regex\"\n                                           (focusout)=\"ocr($event, false)\" matInput type=\"text\">\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n  selector: 'app-status-update',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.scss']\n})\nexport class VerifierStatusUpdateComponent implements OnInit {\n  loading           : boolean     = false;\n  identifierControl : FormControl = new FormControl<any>('');\n  statusControl     : FormControl = new FormControl<any>('');\n  identifiers       : number[]    = [];\n  status            : any[]       = [];\n\n  constructor(\n      public router: Router,\n      public userService: UserService,\n      public translate: TranslateService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService,\n      private http: HttpClient,\n      private authService: AuthService,\n      private notify:NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.serviceSettings.init();\n    this.http.get(environment['url'] + '/ws/status/verifier/list', {headers: this.authService.headers}).pipe(\n        tap((data: any) => {\n          this.status = data.status;\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.handleErrors(err);\n          return of(false);\n        })\n    ).subscribe();\n  }\n\n  addIdentifier() {\n    if (this.identifierControl.value && this.identifiers.indexOf(this.identifierControl.value) === -1) {\n      this.identifiers.push(this.identifierControl.value);\n    }\n    this.identifierControl.setValue('');\n  }\n\n  removeIdentifier(identifier: number) {\n    this.identifiers = this.identifiers.filter((id) => id !== identifier);\n  }\n\n  updateStatus() {\n    const data = {'ids': this.identifiers, 'status': this.statusControl.value};\n    this.http.put(environment['url'] + '/ws/verifier/status', data,\n        {headers: this.authService.headers}).pipe(\n        tap(() => {\n          this.identifiers = [];\n          this.notify.success(this.translate.instant('STATUS.UPDATE_SUCCESS'));\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.error(err.error.message);\n          return of(false);\n        })\n    ).subscribe();\n  }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <mat-card class=\"w-5/6 mt-6 mx-auto\">\n            <mat-card-header>\n                <mat-card-title class=\"text-base\">{{ 'SPLITTER.change_by_identifier' | translate }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"h-56 mx-6\">\n                <div class=\"flex justify-center gap-4\">\n                    <mat-form-field class=\"mt-4 w-3/12\" appearance=\"outline\">\n                        <mat-label>{{ 'STATUS.update_status_to' | translate }}</mat-label>\n                        <mat-select [formControl]=\"statusControl\" [disabled]=\"this.loading\">\n                            <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                {{ option['label'] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"w-3/12 mt-4\" appearance=\"outline\">\n                        <mat-label>{{ 'SPLITTER.batch_identifier' | translate }}</mat-label>\n                        <input type=\"number\" matInput [formControl]=\"identifierControl\">\n                    </mat-form-field>\n                    <button mat-button class=\"rounded border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 mt-4\"\n                            (click)=\"addIdentifier()\" [matTooltip]=\"'STATUS.add_identifier' | translate\" style=\"padding: 1.65rem !important\">\n                        <i class=\"fa-solid fa-plus text-lg\"></i>\n                    </button>\n                </div>\n                <div class=\"h-12 w-full border-solid border-2 border-gray-100 rounded bg-slate-50\">\n                <span *ngIf=\"identifiers.length === 0\" class=\"mt-4 block text-center text-gray-400\">\n                    {{ 'STATUS.no_identifier_added' | translate }}\n                </span>\n                <span *ngFor=\"let identifier of identifiers\">\n                    <mat-chip class=\"m-1\" color=\"primary\" selected=\"true\">\n                        <span class=\"font-medium\">{{ identifier }}</span>\n                        <i class=\"ml-2 fa-solid fa-xmark fa-lg cursor-pointer text-white hover:text-green-400\" (click)=\"removeIdentifier(identifier)\"></i>\n                    </mat-chip>\n                </span>\n                </div>\n                <div class=\"flex justify-center items-center mt-4\">\n                    <button (click)=\"updateStatus()\" mat-button\n                            class=\"p-6 border-solid border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [ngClass]=\"(identifiers.length === 0 || !statusControl.value) ? 'border-gray-400 bg-gray-400' : 'bg-green-400 border-green-400'\"\n                            [disabled]=\"(identifiers.length === 0 || !statusControl.value)\">\n                        <span class=\"block\">{{ \"STATUS.update\" | translate }}</span>\n                    </button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-various-settings-list',\n    templateUrl: './various-settings.component.html',\n    styleUrls: ['./various-settings.component.scss'],\n})\nexport class VariousSettingsVerifierComponent implements OnInit {\n    loading                     : boolean       = true;\n    loadingCustomFields         : boolean       = true;\n    formLoaded                  : boolean       = false;\n    formLoadedUnique            : boolean       = false;\n    forms                       : any           = [];\n    availableFieldsTmp          : any           = [];\n    currentForm                 : any           = {};\n    formInput                   : any           = {\n        control: new FormControl(),\n        values:[]\n    };\n    changeFormControl           : FormControl   = new FormControl(true);\n    createSupplierControl       : FormControl   = new FormControl(true);\n    updateSupplierControl       : FormControl   = new FormControl(true);\n    validateDocumentControl     : FormControl   = new FormControl(true);\n    refuseDocumentControl       : FormControl   = new FormControl(true);\n    uniqueURlExpirationControl  : FormControl   = new FormControl(7);\n    allowSupplierAutoControl    : FormControl   = new FormControl(true);\n    availableFields             : any           = [\n        {\n            \"id\": 'document_id',\n            'label': marker('VERIFIER.document_id')\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date',\n            'label': marker('FACTURATION.document_date')\n        },\n        {\n            \"id\": 'date',\n            'label': marker('VERIFIER.register_date')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        },\n        {\n            \"id\": 'form_label',\n            'label': marker('VERIFIER.form')\n        },\n        {\n            \"id\": 'original_filename',\n            'label': marker('VERIFIER.original_file')\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: any) => {\n                    this.availableFields.push({\n                        'id': 'custom_' + field.id,\n                        'label': field.label\n                    });\n                });\n                this.availableFields.forEach((element: any) => {\n                    this.availableFieldsTmp.push(element);\n                });\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.formInput.values = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadUniqueUrl(event: any) {\n        this.loading = true;\n        const form_id = event.value;\n        this.forms.forEach((element: any) => {\n            if (element.id === form_id) {\n                this.formLoadedUnique = true;\n                this.currentForm = element;\n\n                if (this.currentForm.settings.unique_url) {\n                    this.uniqueURlExpirationControl.setValue(this.currentForm.settings.unique_url.expiration);\n                    this.changeFormControl.setValue(this.currentForm.settings.unique_url.change_form);\n                    this.refuseDocumentControl.setValue(this.currentForm.settings.unique_url.refuse_document);\n                    this.validateDocumentControl.setValue(this.currentForm.settings.unique_url.validate_document);\n                    this.createSupplierControl.setValue(this.currentForm.settings.unique_url.create_supplier);\n                    this.updateSupplierControl.setValue(this.currentForm.settings.unique_url.update_supplier);\n                    this.allowSupplierAutoControl.setValue(this.currentForm.settings.unique_url.allow_supplier_autocomplete);\n                } else {\n                    this.uniqueURlExpirationControl.setValue(7);\n                    this.changeFormControl.setValue(true);\n                    this.refuseDocumentControl.setValue(true);\n                    this.validateDocumentControl.setValue(true);\n                    this.createSupplierControl.setValue(true);\n                    this.updateSupplierControl.setValue(true);\n                    this.allowSupplierAutoControl.setValue(true);\n                }\n            }\n        });\n        this.loading = false;\n    }\n\n    resetSelectedForm() {\n        this.currentForm = {};\n        this.formLoaded = false;\n        this.formLoadedUnique = false;\n        this.formInput.control.setValue('');\n    }\n\n    loadDisplay(event: any) {\n        this.loading = true;\n        this.availableFieldsTmp = [];\n        this.availableFields.forEach((element: any) => {\n            this.availableFieldsTmp.push(element);\n        });\n        const form_id = event.value;\n        this.forms.forEach((element: any) => {\n            if (element.id === form_id) {\n                this.formLoaded = true;\n                this.currentForm = element;\n                if (this.currentForm.settings.display) {\n                   this.currentForm.settings.display.subtitles.forEach((subtitle: any) => {\n                        this.availableFieldsTmp.forEach((item: any, index: number, object: any) => {\n                            if (subtitle.id === item.id) {\n                                object.splice(index, 1);\n                            }\n                        });\n                    });\n                }\n            }\n        });\n        this.loading = false;\n    }\n\n    updateLabel(event: any, subtitle: any) {\n        subtitle['label'] = event.target.value;\n        subtitle['updateMode'] = false;\n    }\n\n    updateUniqueUrl() {\n        this.loading = true;\n        this.currentForm.settings.unique_url  = {\n            change_form: this.changeFormControl.value,\n            refuse_document: this.refuseDocumentControl.value,\n            create_supplier: this.createSupplierControl.value,\n            update_supplier: this.updateSupplierControl.value,\n            expiration: this.uniqueURlExpirationControl.value,\n            validate_document: this.validateDocumentControl.value,\n            allow_supplier_autocomplete: this.allowSupplierAutoControl.value\n        };\n\n        this.http.put(environment['url'] + '/ws/forms/updateUniqueUrl/' + this.currentForm.id, {\n                'args': this.currentForm.settings.unique_url\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('FORMS.unique_url_updated_success'));\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDisplay() {\n        this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            delete element['updateMode'];\n        });\n\n        this.http.put(environment['url'] + '/ws/forms/updateDisplay/' + this.currentForm.id, {\n                'args': this.currentForm.settings.display\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('FORMS.display_updated_success'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLine(id: any, cpt: number) {\n       this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            if (id === element.id) {\n               this.currentForm.settings.display.subtitles.splice(cpt, 1);\n                this.loadDisplay({value: this.currentForm.id});\n            }\n        });\n    }\n\n    drop_card(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex,\n            );\n        }\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex,\n            );\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <mat-tab-group (selectedTabChange)=\"sidenav2.toggle(); resetSelectedForm()\">\n                <mat-tab [label]=\"'FORMS.batch_display' | translate\">\n                    <app-hint [message]=\"'FORMS.display_hint' | translate\"></app-hint>\n                    <div class=\"w-1/3 m-auto mt-4\">\n                        <mat-form-field class=\"block\">\n                            <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n                            <mat-select [formControl]=\"this.formInput.control\" (selectionChange)=\"loadDisplay($event)\">\n                                <mat-option *ngFor=\"let option of this.formInput.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"this.formLoaded\" class=\"m-auto w-1/2 xl:w-1/3\">\n                        <mat-card class=\"p-0 mb-0\">\n                            <label class=\"p-5 absolute\">\n                                <input [disabled]=\"true\" class=\"w-5 h-5 checkBox_list\" type=\"checkbox\">\n                            </label>\n                            <div class=\"absolute right-0 pt-4 pr-5\">\n                                <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                            </div>\n                            <div class=\"h-60 bg-gradient-to-br from-green-400 to-gray-600\"></div>\n                            <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-4 pr-4\">\n                                <mat-card-title class=\"break-all\">\n                                    <span class=\"leading-5 text-lg\">\n                                        {{ 'ACCOUNTS.supplier_name' | translate }}\n                                    </span>\n                                    <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\">\n                                        0 <i class=\"far fa-file-alt ml-1\"></i>\n                                    </span>\n                                </mat-card-title>\n                                <mat-card-subtitle class=\"subtitles mt-2 mb-2\">\n                                    <div cdkDropList (cdkDropListDropped)=\"drop_card($event)\"\n                                         [cdkDropListData]=\"this.currentForm.settings.display['subtitles']\">\n                                        <div cdkDrag class=\"cursor-move mt-1 flex align-center items-center\"\n                                             *ngFor=\"let subtitle of this.currentForm.settings.display['subtitles']; let cpt = index\">\n                                            <strong *ngIf=\"!subtitle['updateMode']\">{{ subtitle['label'] | translate }}</strong>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"subtitle['updateMode']\">\n                                                <input matInput [value]=\"subtitle['label'] | translate\" class=\"relative -top-2.5\"\n                                                       (focusout)=\"updateLabel($event, subtitle)\">\n                                            </mat-form-field>\n                                            &nbsp;:\n                                            <span class=\"ml-2 w-4/12 h-3 bg-gradient-to-br from-green-400 to-gray-600\"></span>\n                                            <i class=\"fa-solid fa-edit text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                               (click)=\"subtitle['updateMode'] = true\" *ngIf=\"!subtitle['updateMode']\"></i>\n                                            <i class=\"fa-solid fa-check text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                               *ngIf=\"subtitle['updateMode']\"></i>\n                                            <i class=\"fa-solid fa-trash text-red-500 cursor-pointer absolute right-2 mt-1\"\n                                               (click)=\"removeLine(subtitle['id'], cpt)\"></i>\n                                        </div>\n                                    </div>\n                                </mat-card-subtitle>\n                            </mat-card-header>\n                        </mat-card>\n                    </div>\n                    <div class=\"flex justify-center items-center mt-4\" *ngIf=\"this.formLoaded\">\n                        <button mat-button class=\"valid_button\" (click)=\"this.updateDisplay()\">\n                            <span class=\"block\">{{ \"FORMS.modify_display\" | translate }}</span>\n                        </button>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'FORMS.unique_url' | translate\">\n                    <app-hint [message]=\"'FORMS.unique_url_hint' | translate\"></app-hint>\n                    <div class=\"w-1/3 m-auto mt-4\">\n                        <mat-form-field class=\"block\">\n                            <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n                            <mat-select [formControl]=\"this.formInput.control\" (selectionChange)=\"loadUniqueUrl($event)\">\n                                <mat-option *ngFor=\"let option of this.formInput.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"this.formLoadedUnique\" class=\"m-auto text-center mt-8 w-1/2 xl:w-1/3 grid grid-rows-1 gap-8\">\n                        <mat-form-field class=\"m-auto w-1/2 -mb-4\">\n                            <mat-label>{{ 'FORMS.link_expiration_in_days' | translate }}</mat-label>\n                            <input matInput type=\"number\" [formControl]=\"this.uniqueURlExpirationControl\">\n                        </mat-form-field>\n                        <mat-slide-toggle [formControl]=\"this.createSupplierControl\">\n                            {{ 'FORMS.create_supplier_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.updateSupplierControl\">\n                            {{ 'FORMS.update_supplier_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.refuseDocumentControl\">\n                            {{ 'FORMS.refuse_document_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.allowSupplierAutoControl\">\n                            {{ 'FORMS.supplier_autocomplete_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.validateDocumentControl\">\n                            {{ 'FORMS.validate_document_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.changeFormControl\">\n                            {{ 'FORMS.change_form_enabled' | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                    <div class=\"flex justify-center items-center mt-8\" *ngIf=\"this.formLoadedUnique\" (click)=\"this.updateUniqueUrl()\">\n                        <button mat-button class=\"valid_button\">\n                            <span class=\"block\">{{ \"FORMS.modify_unique_url\" | translate }}</span>\n                        </button>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\"\n             cdkDropList [cdkDropListData]=\"this.availableFieldsTmp\" (cdkDropListDropped)=\"drop($event)\"\n             [cdkDropListDisabled]=\"!this.formLoaded\">\n            <div *ngFor=\"let field of this.availableFieldsTmp; let cpt = index\"\n                 class=\"my-8 ml-2 text-base\" cdkDrag>\n                <span class=\"cursor-move\">\n                    {{ field.label | translate }}\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../../../../env\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { CodeEditorComponent } from \"../../../../../services/code-editor/code-editor.component\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-workflow-builder',\n    templateUrl: './workflow-builder.component.html',\n    styleUrls: ['./workflow-builder.component.scss'],\n    providers: [{\n        provide: STEPPER_GLOBAL_OPTIONS,\n        useValue: {\n            displayDefaultIndicatorType: false\n        }\n    }]\n})\nexport class WorkflowBuilderComponent implements OnInit {\n    loading          : boolean       = true;\n    creationMode     : boolean       = true;\n    outputAllowed    : boolean       = true;\n    processAllowed   : boolean       = true;\n    useInterface     : boolean       = false;\n    separationMode   : string        = 'no_sep';\n    form_outputs     : any           = [];\n    workflow_outputs : any           = [];\n    workflowId       : any;\n    stepValid        : any           = {\n        input: false,\n        process: false,\n        output: false\n    };\n    oldFolder        : string        = '';\n    idControl        : FormControl   = new FormControl('', Validators.required);\n    nameControl      : FormControl   = new FormControl('', Validators.required);\n    fields           : any           = {\n        input : [\n            {\n                id: 'input_folder',\n                show: true,\n                label: this.translate.instant('WORKFLOW.input_folder'),\n                type: 'text',\n                control: new FormControl(),\n                placeholder: \"/var/share/\" + environment['customId'] + \"/input\",\n                required: true\n            },\n            {\n                id: 'customer_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.associated_customer'),\n                type: 'select',\n                control: new FormControl(),\n                required: false\n            },\n            {\n                id: 'ai_model_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.ai_model_id'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                hint: this.translate.instant('WORKFLOW.ai_model_id_hint')\n            },\n            {\n                id: 'apply_process',\n                show: true,\n                label: this.translate.instant('WORKFLOW.apply_process'),\n                type: 'boolean',\n                control: new FormControl(true)\n            },\n            {\n                id: 'facturx_only',\n                show: true,\n                label: this.translate.instant('WORKFLOW.facturx_only'),\n                hint: this.translate.instant('WORKFLOW.facturx_only_hint'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                id: 'splitter_method_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.splitter_method'),\n                type: 'select',\n                control: new FormControl(),\n                required: true,\n                values: [\n                    {\n                        'id': 'no_sep',\n                        'label': this.translate.instant('WORKFLOW.no_separation')\n                    },\n                    {\n                        'id': 'qr_code_OC',\n                        'label': this.translate.instant('WORKFLOW.qr_code_separation')\n                    },\n                    {\n                        'id': 'c128_OC',\n                        'label': this.translate.instant('WORKFLOW.c128_separation')\n                    },\n                    {\n                        'id': 'separate_by_document_number',\n                        'label': this.translate.instant('WORKFLOW.separate_by_document_number')\n                    }\n                ]\n            },\n            {\n                id: 'separate_by_document_number_value',\n                show: false,\n                label: this.translate.instant('WORKFLOW.separate_by_document_number_value'),\n                type: 'number',\n                control: new FormControl(2),\n                required: false\n            },\n            {\n                id: 'remove_blank_pages',\n                label: this.translate.instant('WORKFLOW.remove_blank_pages'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ],\n        process: [\n            {\n                id: 'use_interface',\n                label: this.translate.instant('WORKFLOW.use_interface'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'allow_automatic_validation',\n                label: this.translate.instant('WORKFLOW.allow_automatic_validation'),\n                hint: this.translate.instant('WORKFLOW.allow_automatic_validation_hint'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'override_supplier_form',\n                label: this.translate.instant('WORKFLOW.override_supplier_form'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'delete_documents',\n                label: this.translate.instant('WORKFLOW.delete_documents'),\n                hint: this.translate.instant('WORKFLOW.delete_documents_hint'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'form_id',\n                multiple: false,\n                label: this.translate.instant('POSITIONS-MASKS.form_associated'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: false,\n                values: []\n            },\n            {\n                id: 'system_fields',\n                multiple: true,\n                label: this.translate.instant('WORKFLOW.system_fields_to_search'),\n                type: 'select',\n                control: new FormControl(['name', 'invoice_number', 'quotation_number', 'document_date', 'document_due_date', 'footer']),\n                required: false,\n                show: true,\n                values: [\n                    {\n                        'id': 'name',\n                        'label': this.translate.instant('FORMS.supplier')\n                    },\n                    {\n                        'id': 'invoice_number',\n                        'label': this.translate.instant('FACTURATION.invoice_number')\n                    },\n                    {\n                        'id': 'quotation_number',\n                        'label': this.translate.instant('FACTURATION.quotation_number')\n                    },\n                    {\n                        'id': 'delivery_number',\n                        'label': this.translate.instant('FACTURATION.delivery_number')\n                    },\n                    {\n                        'id': 'document_date',\n                        'label': this.translate.instant('FACTURATION.document_date')\n                    },\n                    {\n                        'id': 'document_due_date',\n                        'label': this.translate.instant('FACTURATION.document_due_date')\n                    },\n                    {\n                        'id': 'footer',\n                        'label': this.translate.instant('WORKFLOW.footer')\n                    }\n                ]\n            },\n            {\n                id: 'custom_fields',\n                multiple: true,\n                label: this.translate.instant('WORKFLOW.custom_fields_to_search'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: true\n            },\n            {\n                id: 'rotation',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.rotation'),\n                type: 'select',\n                control: new FormControl('no_rotation'),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'no_rotation',\n                        'label': this.translate.instant('WORKFLOW.no_rotation')\n                    },\n                    {\n                        'id': 90,\n                        'label': this.translate.instant('WORKFLOW.rotate_90')\n                    },\n                    {\n                        'id': 180,\n                        'label': this.translate.instant('WORKFLOW.rotate_180')\n                    },\n                    {\n                        'id': 270,\n                        'label': this.translate.instant('WORKFLOW.rotate_270')\n                    }\n                ]\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ],\n        output: [\n            {\n                id: 'outputs_id',\n                label: this.translate.instant('WORKFLOW.choose_output'),\n                type: 'select',\n                multiple: true,\n                control: new FormControl(['']),\n                required: true\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ]\n    };\n    stepDefaultCode  : any           = {\n        'input' : marker(\"WORKFLOW.step_input_verifier\"),\n        'process' : marker(\"WORKFLOW.step_process_verifier\"),\n        'output' : marker(\"WORKFLOW.step_output_verifier\")\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.workflowId = this.route.snapshot.params['id'];\n        if (this.workflowId) {\n            this.creationMode = false;\n            this.http.get(environment['url'] + '/ws/workflows/verifier/getById/' + this.workflowId, {headers: this.authService.headers}).pipe(\n                tap((workflow: any) => {\n                    this.idControl.setValue(workflow.workflow_id);\n                    this.nameControl.setValue(workflow.label);\n                    Object.keys(this.fields).forEach((parent: any) => {\n                        this.fields[parent].forEach((field: any) => {\n                            let value = workflow[parent][field.id];\n                            if (parseInt(value) && !Array.isArray(value)) {\n                                value = parseInt(value);\n                            }\n                            if (value === 'true' || value === 'false' ) {\n                                value = value === 'true';\n                            }\n                            if (field.id === 'splitter_method_id') {\n                                this.setSeparationMode(value);\n                            }\n                            if (field.id === 'use_interface') {\n                                this.setUseInterface(value);\n                            }\n                            if (field.id === 'input_folder') {\n                                this.oldFolder = value;\n                            }\n                            if (field.id === 'outputs_id') {\n                                this.workflow_outputs = value;\n                            }\n                            field.control.setValue(value);\n                        });\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.name;\n                        });\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/ai/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((aiModel: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'ai_model_id') {\n                        element.values = aiModel.models;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.model_label;\n                        });\n                        element.values = [{'id': 0, 'label': this.translate.instant('WORKFLOW.no_ai_model_associated')}].concat(element.values);\n                        if (element.values.length === 1) {\n                            element.control.setValue(element.values[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['process'].forEach((element: any) => {\n                    data.forms.forEach((form: any) => {\n                        if (this.form_outputs.filter((f: any) => f.form_id === form.id).length === 0) {\n                            this.form_outputs.push({\n                                'form_id': form.id,\n                                'outputs': form.outputs.map(Number)\n                            });\n                        }\n                    });\n                    if (element.id === 'form_id') {\n                        element.values = data.forms;\n                        if (data.forms.length === 1) {\n                            element.control.setValue(data.forms[0].id);\n                        }\n                    }\n                });\n                if (this.useInterface) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'form_id' && element.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === element.control.value) {\n                                    this.fields['output'].forEach((_element: any) => {\n                                        if (_element.id === 'outputs_id') {\n                                            _element.control.setValue(form.outputs.map(Number));\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['output'].forEach((element: any) => {\n                    if (element.id === 'outputs_id') {\n                        element.values = data.outputs;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.output_label;\n                        });\n                        if (data.outputs.length === 1) {\n                            element.control.setValue(data.outputs[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'custom_fields') {\n                            element.values = data.customFields;\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.fields['input'].forEach((element: any) => {\n            if (element.id === 'apply_process') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.processAllowed = value;\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'use_interface') {\n                            if (value === false) {\n                                this.outputAllowed = true;\n                            }\n                            if (value && elem.control.value) {\n                                this.outputAllowed = false;\n                            }\n                        }\n\n                        if (!this.processAllowed) {\n                            elem.control.disable();\n                        } else {\n                            elem.control.enable();\n                        }\n                    });\n                });\n            }\n            if (element.id === 'facturx_only') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.fields['input'].forEach((elem: any) => {\n                        if (elem.id === 'ai_model_id') {\n                            elem.show = !value;\n                        }\n                    });\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'system_fields') {\n                            if (value) {\n                                elem.values.push({'id': 'facturx', 'label': 'Lignes de détails Factur-X'});\n                                elem.control.value.push('facturx');\n                            } else {\n                                elem.values = elem.values.filter((elem: any) => elem.id !== 'facturx');\n                                elem.control.value = elem.control.value.filter((elem: any) => elem !== 'facturx');\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    openCodeEditor(step: string) {\n        let codeContent = this.translate.instant(this.stepDefaultCode[step]);\n        let defaultCode = true;\n        this.fields[step].forEach((element: any) => {\n            if (element.id === 'script' && element.control.value) {\n                codeContent = element.control.value;\n                defaultCode = false;\n            }\n        });\n\n        if (defaultCode) {\n            this.notify.success(this.translate.instant('WORKFLOW.load_default_code'));\n        }\n\n        const dialogRef = this.dialog.open(CodeEditorComponent, {\n            data: {\n                testScriptButton    : this.translate.instant('WORKFLOW.test_script'),\n                confirmButton       : this.translate.instant('WORKFLOW.save_script'),\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                step                : step,\n                input_folder        : this.fields['input'].find((element: any) => element.id === 'input_folder').control.value,\n                codeContent         : codeContent\n            },\n            width: \"80vw\",\n            height: \"calc(100vh - 5rem)\",\n            disableClose: true\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== false) {\n                this.fields[step].push({\n                    'show': false,\n                    'id': 'script',\n                    'required': false,\n                    'control': new FormControl(result, Validators.required)\n                });\n\n                if (!this.creationMode) {\n                    this.updateWorkflow(step);\n                }\n            }\n        });\n    }\n\n    setSeparationMode(value: any) {\n        this.separationMode = value;\n        this.fields['input'].forEach((element: any) => {\n            if (element.id === 'separate_by_document_number_value') {\n                element.show = value === 'separate_by_document_number';\n            }\n        });\n    }\n\n    setUsedOutputs() {\n        if (this.useInterface) {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'form_id' && elem.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === elem.control.value) {\n                                    element.control.setValue(form.outputs);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        else {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    element.control.setValue(this.workflow_outputs);\n                }\n            });\n        }\n    }\n\n    setUseInterface(value: any) {\n        this.useInterface = value;\n        if (this.processAllowed) {\n            this.outputAllowed = !value;\n        }\n\n        this.fields['process'].forEach((element: any) => {\n            if (element.id === 'form_id' || element.id === 'allow_automatic_validation' || element.id === 'override_supplier_form') {\n                element.show = this.useInterface;\n                if (element.type !== 'boolean') {\n                    element.required = this.useInterface;\n                }\n            }\n            if (this.processAllowed) {\n                element.control.enable();\n            } else {\n                element.control.disable();\n            }\n        });\n        this.setUsedOutputs();\n    }\n\n    checkFolder(field: any, fromUser = false) {\n        if (fromUser || (field && field.control.value && field.control.value !== this.oldFolder)) {\n            this.http.post(environment['url'] + '/ws/workflows/verifier/verifyInputFolder',\n                {'input_folder': field.control.value}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    field.control.setErrors();\n                    this.notify.success(this.translate.instant('WORKFLOW.input_folder_ok'));\n                    this.oldFolder = field.control.value;\n                }),\n                catchError((err: any) => {\n                    field.control.setErrors({'folder_not_found': true});\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    isStepValid(step: any) {\n        let valid = true;\n        this.fields[step].forEach((element: any) => {\n            if ((element.required && !element.control.value) || (element.control.errors && element.id !== 'script')) {\n                valid = false;\n            }\n        });\n        this.stepValid[step] = valid;\n        return valid;\n    }\n\n    updateWorkflow(step: any) {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n\n        Object.keys(this.fields).forEach((parent: any) => {\n            this.fields[parent].forEach((field: any) => {\n                workflow[parent][field.id] = field.control.value;\n            });\n        });\n\n        if (step === 'input') {\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/verifier/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/workflows/verifier/update/' + this.workflowId, {'args': workflow}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('WORKFLOW.workflow_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createWorkflow() {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n        if (this.idControl.value && this.nameControl.value) {\n            Object.keys(this.fields).forEach((parent: any) => {\n                this.fields[parent].forEach((field: any) => {\n                    workflow[parent][field.id] = field.control.value;\n                });\n            });\n\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/verifier/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    delete data['workflow_id'];\n                    delete data['workflow_label'];\n                    this.http.post(environment['url'] + '/ws/workflows/verifier/create', {'args': workflow}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.router.navigate(['/settings/verifier/workflows']).then();\n                            this.notify.success(this.translate.instant('WORKFLOW.workflow_created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('WORKFLOW.workflow_id_and_name_required'));\n        }\n    }\n\n    updateOutputs(value: any) {\n        if (value) {\n            this.form_outputs.forEach((form: any) => {\n                if (form.form_id === value) {\n                    this.fields['output'].forEach((element: any) => {\n                        if (element.id === 'outputs_id') {\n                            element.control.setValue(form.outputs);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div>\n                <i *ngIf=\"!this.creationMode\" class=\"fa-solid fa-2x fa-save mr-4 cursor-pointer\"\n                   (click)=\"updateWorkflow('input')\" [matTooltip]=\"'WORKFLOW.update' | translate \"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"my-4 w-full p-2\">\n            <span class=\"inline-block p-2 w-4/12\" [class.cursor-not-allowed]=\"!this.creationMode\">\n                <mat-form-field class=\"w-full\" [class.pointer-events-none]=\"!this.creationMode\">\n                    <mat-label>{{ 'WORKFLOW.id' | translate }}</mat-label>\n                    <input [class.text-gray-400]=\"!this.creationMode\" matInput [formControl]=\"this.idControl\" type=\"text\" [readonly]=\"!this.creationMode\">\n                </mat-form-field>\n            </span>\n            <mat-form-field class=\"p-2 w-8/12\">\n                <mat-label>{{ 'WORKFLOW.label' | translate }}</mat-label>\n                <input matInput [formControl]=\"this.nameControl\" type=\"text\">\n            </mat-form-field>\n        </div>\n        <mat-stepper orientation=\"horizontal\" class=\"text-center\">\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.input' | translate\">\n                <div>\n                    <div class=\"mt-2 grid grid-cols-3 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['input']\">\n                            <div *ngIf=\"field.type === 'boolean'\">\n                                <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\">\n                                    <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"mt-2 grid grid-cols-3 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['input']\">\n                            <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                                <button mat-icon-button matSuffix *ngIf=\"field.id === 'input_folder'\"\n                                        (click)=\"checkFolder(field, true)\" [matTooltip]=\"'WORKFLOW.test_input_folder' | translate\">\n                                    <i class=\"fa-solid fa-check text-green-400\"></i>\n                                </button>\n                            </mat-form-field>\n                            <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                            (selectionChange)=\"field.id === 'splitter_method_id' ? setSeparationMode($event.value) : ''\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n                </div>\n                <div [class.cursor-not-allowed]=\"!this.isStepValid('input')\">\n                    <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [disabled]=\"!this.stepValid['input']\"\n                            [class.bg-gray-400]=\"!this.stepValid['input']\"\n                            [class.bg-green-400]=\"this.stepValid['input']\"\n                            (click)=\"!this.creationMode ? this.updateWorkflow('input') : ''\">\n                        {{ 'WORKFLOW.next' | translate }}\n                    </button>\n                    <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\"\n                       [matTooltip]=\"'WORKFLOW.input_scripting' | translate\" (click)=\"openCodeEditor('input')\"></i>\n                </div>\n            </mat-step>\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.process' | translate\">\n                <div>\n                    <app-hint [specificClass]=\"'w-3/5'\" [message]=\"'WORKFLOW.process_hint' | translate\"></app-hint>\n                    <div class=\"mt-6 grid grid-cols-2 gap-6\" [class.grid-cols-4]=\"this.useInterface\">\n                        <ng-container *ngFor=\"let field of this.fields['process']\">\n                            <div *ngIf=\"field.type === 'boolean' && field.show\">\n                                <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\" (change)=\"field.id === 'use_interface' ? setUseInterface($event.checked) : field.id === 'form_id' ? setUsedOutputs(): ''\">\n                                    <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"mt-6 grid grid-cols-4 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['process']\">\n                            <mat-form-field *ngIf=\"field.type === 'text'\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                       [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                            <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [disabled]=\"!this.processAllowed\" [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                            (selectionChange)=\"field.id === 'form_id' ? updateOutputs($event.value) : ''\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n                </div>\n                <div>\n                    <button matStepperPrevious mat-button class=\"gray_button\">\n                        {{ \"WORKFLOW.back\" | translate }}\n                    </button>\n                    <span [class.cursor-not-allowed]=\"!this.isStepValid('process')\">\n                    <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [disabled]=\"!this.stepValid['process']\"\n                            [class.bg-gray-400]=\"!this.stepValid['process']\"\n                            [class.bg-green-400]=\"this.stepValid['process']\"\n                            (click)=\"!this.creationMode ? this.updateWorkflow('process') : ''\">\n                        {{ 'WORKFLOW.next' | translate }}\n                    </button>\n                    <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\"\n                       *ngIf=\"this.processAllowed\" [matTooltip]=\"'WORKFLOW.process_scripting' | translate\" (click)=\"openCodeEditor('process')\"></i>\n                </span>\n                </div>\n            </mat-step>\n            <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.output' | translate\">\n                <div class=\"mt-2 w-full\">\n                    <ng-container *ngFor=\"let field of this.fields['output']\">\n                        <mat-form-field *ngIf=\"field.type === 'select'\" class=\"w-full\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [(value)]=\"field.control.value\" [disabled]=\"this.useInterface\" [required]=\"field['required']\" [multiple]=\"field.multiple\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                <i class=\"fa-solid fa-circle-question text-md\"></i>\n                            </span>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div>\n                    <button matStepperPrevious mat-button class=\"gray_button\">\n                        {{ \"WORKFLOW.back\" | translate }}\n                    </button>\n                    <button mat-button class=\"valid_button\" (click)=\"!this.creationMode ? this.updateWorkflow('output') : this.createWorkflow()\">\n                        <span *ngIf=\"this.creationMode\">\n                            {{ 'WORKFLOW.create' | translate }}\n                        </span>\n                        <span *ngIf=\"!this.creationMode\">\n                            {{ 'WORKFLOW.update' | translate }}\n                        </span>\n                    </button>\n                    <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\"\n                       [matTooltip]=\"'WORKFLOW.output_scripting' | translate\" (click)=\"openCodeEditor('output')\"></i>\n                </div>\n            </mat-step>\n        </mat-stepper>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-workflow-list',\n    templateUrl: './workflow-list.component.html',\n    styleUrls: ['./workflow-list.component.scss']\n})\nexport class WorkflowListComponent implements OnInit {\n    headers          : HttpHeaders   = this.authService.headers;\n    columnsToDisplay : string[]      = ['id', 'workflow_id', 'label', 'input_folder', 'actions'];\n    loading          : boolean       = false;\n    pageSize         : number        = 10;\n    pageIndex        : number        = 0;\n    total            : number        = 0;\n    offset           : number        = 0;\n    workflows        : any           = [];\n    allWorkflows     : any           = [];\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/workflows') || lastUrl === '/') {\n            if (this.localStorageService.get('workflowsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('workflowsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('workflowsPageIndex');\n\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allWorkflows = data.workflows;\n                this.loadWorkflows();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadWorkflows() {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.workflows[0]) this.total = data.workflows[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadWorkflows();\n                }\n                this.workflows = data.workflows;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('workflowsPageIndex', event.pageIndex);\n        this.loadWorkflows();\n    }\n\n    deleteConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('WORKFLOW.confirm_delete', {\"workflow\": workflow}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteWorkflow(workflowId);\n            }\n        });\n    }\n\n    deleteWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/workflows/verifier/delete/' + workflowId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('WORKFLOW.confirm_duplicate', {\"workflow\": workflow}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateWorkflow(workflowId);\n            }\n        });\n    }\n\n    duplicateWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.post(environment['url'] + '/ws/workflows/verifier/duplicate/' + workflowId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allWorkflows.slice();\n        if (!sort.active || sort.direction === '') {\n            this.workflows = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.workflows = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n        this.workflows = this.workflows.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"workflows\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"workflow_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element['workflow_id'] }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"input_folder\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'WORKFLOW.input_folder_header' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element?.input['input_folder'] }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'WORKFLOW.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/workflows/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, EventEmitter, Injectable, Input, OnInit, Output } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject, of } from \"rxjs\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Injectable()\nexport class ChecklistDatabase {\n    doctypeData : any[]     = [];\n    loading     : boolean   = true;\n    dataChange              = new BehaviorSubject<TreeItemNode[]>([]);\n\n    get data(): TreeItemNode[] { return this.dataChange.value; }\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    loadTree(formId: number) {\n        if (formId) {\n            this.retrieveDocTypes(formId);\n            this.initialize();\n        }\n    }\n\n    retrieveDocTypes(formId: number) {\n        this.loading      = true;\n        this.doctypeData = [];\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: {\n                        id          : number\n                        key         : string\n                        code        : string\n                        label       : string\n                        type        : string\n                        status      : string\n                        is_default  : boolean\n                        form_id     : boolean\n                    }) => {\n                        newDoctype = {\n                            'id'        : doctype.id,\n                            'key'       : doctype.key,\n                            'code'      : doctype.code,\n                            'label'     : doctype.label,\n                            'type'      : doctype.type,\n                            'status'    : doctype.status,\n                            'isDefault' : doctype.is_default,\n                            'formId'    : doctype.form_id\n                        };\n                        this.doctypeData.push(newDoctype);\n                    }\n                );\n            }),\n            finalize(() => {\n                this.initialize();\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initialize() {\n        /** Build the tree nodes from Database. The result is a list of `DocumentItemNode` with nested\n         * file node as children.\n         */\n        this.loading = true;\n        const data    = this.buildFileTree(this.doctypeData, '0');\n        // Notify the change.\n        this.dataChange.next(data);\n        const lastSearchValue = this.localStorageService.get('doctype_last_search_value') || '';\n        if (lastSearchValue) {\n            this.filter(lastSearchValue);\n        }\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `DocumentItemNode`.\n     */\n\n    buildFileTree(obj: any[], level: string): TreeItemNode[] {\n        return obj.filter(o =>\n            (o.code as string).startsWith(level + '.')\n            && (o.code.match(/\\./g) || []).length === (level.match(/\\./g) || []).length + 1\n        )\n            .map(o => {\n                const node      = new TreeItemNode();\n                node.id         = o.id;\n                node.key        = o.key;\n                node.label      = o.label;\n                node.code       = o.code;\n                node.type       = o.type;\n                node.isDefault  = o.isDefault;\n                const children  = obj.filter(so => (so.code as string).startsWith(level + '.'));\n                if (children && children.length > 0) {\n                    node.children = this.buildFileTree(children, o.code);\n                }\n                return node;\n            });\n    }\n\n    public _normalizeValue(value: string): string {\n        return value.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    }\n\n    public filter(filterText: string) {\n        let filteredTreeData: any[];\n        if (filterText) {\n            filteredTreeData = this.doctypeData.filter(d =>\n                this._normalizeValue(d.label).indexOf(this._normalizeValue(filterText))\n                > -1 && d.code.lastIndexOf('.') === 1\n            );\n            Object.assign([], filteredTreeData).forEach(ftd => {\n                // @ts-ignore\n                const code = (ftd.code as string);\n                filteredTreeData = filteredTreeData.concat(this.doctypeData.filter(d =>\n                    d.code.startsWith(code + \".\") && d.code !== code\n                ));\n            });\n\n        } else {\n            filteredTreeData = this.doctypeData;\n        }\n        const data = this.buildFileTree(filteredTreeData, '0');\n        this.dataChange.next(data);\n    }\n}\n\nexport class TreeItemNode {\n    id!         : number;\n    key!        : string;\n    label!      : string;\n    children!   : TreeItemNode[];\n    code!       : string;\n    type!       : string;\n    isDefault!  : boolean;\n}\n\n/** Flat item node with expandable and level information */\nexport class TreeItemFlatNode {\n    id!         : number;\n    label!      : string;\n    key!        : string;\n    level!      : number;\n    type!       : string;\n    isDefault!  : boolean;\n    expandable! : boolean;\n    code!       : string;\n}\n\n@Component({\n    selector: 'app-document-type-factory',\n    templateUrl: './document-type-factory.component.html',\n    styleUrls: ['./document-type-factory.component.scss'],\n    providers: [ChecklistDatabase]\n})\nexport class DocumentTypeFactoryComponent implements OnInit {\n    loading: boolean                     = false;\n    searchText: string                   = this.localStorageService.get('doctype_last_search_value') || '';\n\n    @Input() selectedDoctypeInput: any   = {\n        'key': undefined,\n        'id': undefined\n    };\n    @Input() settings: any               = {\n        'canFolderBeSelected': false,\n        'formId': undefined\n    };\n\n    @Output() selectedDoctypeOutput: any = new EventEmitter < string > ();\n    @Output() selectedFormOutput: any    = new EventEmitter < string > ();\n\n    selectFormControl: FormControl       = new FormControl();\n    forms: any[]                         = [];\n\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n    flatNodeMap    = new Map<TreeItemFlatNode, TreeItemNode>();\n\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n    nestedNodeMap  = new Map<TreeItemNode, TreeItemFlatNode>();\n    treeControl!   : FlatTreeControl<TreeItemFlatNode>;\n    treeFlattener! : MatTreeFlattener<TreeItemNode, TreeItemFlatNode>;\n    dataSource!    : MatTreeFlatDataSource<TreeItemNode, TreeItemFlatNode>;\n\n    constructor(\n        public router: Router,\n        public dialog: MatDialog,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings  : SettingsService,\n        public treeDataObj : ChecklistDatabase,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    getLevel      = (node: TreeItemFlatNode)                  => node.level;\n    isExpandable  = (node: TreeItemFlatNode)                  => node.expandable;\n    getChildren   = (node: TreeItemNode): TreeItemNode[]      => node.children;\n    hasChild      = (_: number, _nodeData: TreeItemFlatNode)  => _nodeData.type === 'folder';\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.treeFlattener  = new MatTreeFlattener(this.transformer, this.getLevel,\n            this.isExpandable, this.getChildren);\n        this.treeControl    = new FlatTreeControl<TreeItemFlatNode>(this.getLevel, this.isExpandable);\n        this.dataSource     = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.treeDataObj.dataChange.subscribe(data => {\n            this.dataSource.data = data;\n            this.treeControl.expandAll();\n        });\n        this.selectFormControl.valueChanges.subscribe(formId => {\n            this.localStorageService.save('doctypeFormId', formId);\n            this.treeDataObj.loadTree(formId);\n            this.selectedFormOutput.emit({'formId': formId});\n        });\n        this.settings.hasOwnProperty('formId') ? this.treeDataObj.loadTree(this.settings.formId) : this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                if (this.forms.length > 0) {\n                    const defaultFormId = this.localStorageService.get('doctypeFormId') ?\n                        this.localStorageService.get('doctypeFormId') : this.forms[0].id;\n                    this.selectFormControl.setValue(Number(defaultFormId));\n                }\n                else {\n                    this.notify.handleErrors(this.translate.instant('FORMS.no_form_available'));\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.loading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /**\n     * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n     */\n    transformer = (node: TreeItemNode, level: number) => {\n        const existingNode = this.nestedNodeMap.get(node);\n        const flatNode = existingNode && existingNode.label === node.label\n            ? existingNode\n            : new TreeItemFlatNode();\n        flatNode.id         = node.id;\n        flatNode.label      = node.label;\n        flatNode.level      = level;\n        flatNode.type       = node.type;\n        flatNode.code       = node.code;\n        flatNode.key        = node.key;\n        flatNode.isDefault  = node.isDefault;\n        flatNode.expandable = (node.type === 'folder');\n        this.flatNodeMap.set(flatNode, node);\n        this.nestedNodeMap.set(node, flatNode);\n        return flatNode;\n    };\n\n    filterChanged() {\n        this.localStorageService.save('doctype_last_search_value', this.searchText);\n        this.treeDataObj.filter(this.searchText);\n        if (this.searchText)\n        {\n            this.treeControl.expandAll();\n        } else {\n            this.treeControl.collapseAll();\n        }\n        this.treeControl.expandAll();\n    }\n\n    selectNode(node: any, isDblClick:boolean) {\n        this.selectedDoctypeInput = node;\n        this.selectedDoctypeInput.isDblClick = isDblClick;\n        this.selectedDoctypeOutput.emit(this.selectedDoctypeInput);\n    }\n\n    selectFolder(node: any) {\n        if (this.settings.canFolderBeSelected) {\n            this.selectedDoctypeInput = node;\n            this.selectedDoctypeOutput.emit(this.selectedDoctypeInput);\n        }\n    }\n\n    cloneFormDoctypes(sourceFormId: number, destFormId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('DOCTYPE.confirm_doctypes_clone'),\n                confirmButton       : this.translate.instant('DOCTYPE.clone_doctypes'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                this.treeDataObj.loading = true;\n                this.http.get(environment['url'] + '/ws/doctypes/clone/' + sourceFormId + '/' + destFormId,\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.treeDataObj.retrieveDocTypes(this.selectFormControl.value);\n                        this.notify.success(this.translate.instant('DOCTYPE.doctypes_clone_success'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.treeDataObj.loading = false;\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    highlight(text: string) {\n        return text.replace(this.searchText, `<span class=\"p-1 rounded font-bold bg-green-400\">${this.searchText}</span>`);\n    }\n\n    cleanSearchText() {\n        this.searchText = '';\n        this.filterChanged();\n    }\n}\n","<div class=\"search-input w-full mx-4 mt-4\">\n    <mat-form-field class=\"w-60\">\n        <mat-label>{{ 'SPLITTER.search_folder' | translate }}</mat-label>\n        <input matInput [(ngModel)]=\"searchText\" (input)=\"filterChanged()\">\n    </mat-form-field>\n    <button class=\"text-gray-400 ml-4 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"cleanSearchText()\"\n            [matTooltip]=\"'DOCTYPE.clean_search_text' | translate\">\n        <i class=\"fa-solid fa-eraser text-lg\"></i>\n    </button>\n    <button class=\"text-gray-400 ml-4 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"treeControl.collapseAll()\"\n            [matTooltip]=\"'DOCTYPE.minimize_tree' | translate\">\n        <i class=\"fa-solid fa-minimize text-lg\"></i>\n    </button>\n    <button class=\"text-gray-400 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"treeControl.expandAll()\"\n            [matTooltip]=\"'DOCTYPE.maximize_tree' | translate\">\n        <i class=\"fa-solid fa-maximize text-lg\"></i>\n    </button>\n    <mat-form-field *ngIf=\"!settings.hasOwnProperty('formId')\" class=\"absolute right-4 w-60\">\n        <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n        <mat-select id='folder' [formControl]=\"selectFormControl\">\n            <div *ngFor=\"let form of forms\">\n                <mat-option [value]=\"form.id\">\n                    <span>{{ form.label | translate }}</span>\n                    <button *ngIf=\"form.id !== selectFormControl.value\" [matTooltip]=\"'DOCTYPE.clone_doctypes' | translate\"\n                        (click)=\"$event.stopPropagation(); cloneFormDoctypes(form.id, selectFormControl.value)\"\n                        class=\"hover:text-green-400 fa fa-clone absolute right-0 mr-2\"></button>\n                </mat-option>\n            </div>\n        </mat-select>\n    </mat-form-field>\n</div>\n<mat-card class=\"overflow-auto mx-4\" style=\"height: calc(100% - 11rem) !important\">\n    <div *ngIf=\"this.treeDataObj.loading\">\n        <app-loader></app-loader>\n    </div>\n    <div *ngIf=\"treeDataObj.doctypeData.length === 0 || dataSource.data.length === 0\" class=\"text-gray-400 p-4\">\n        {{ 'DOCTYPE.no_doctype_to_show' | translate }}\n    </div>\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"m-2\">\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding=\"1\">\n            <button class=\"whitespace-nowrap p-1 rounded hover:text-slate-100 hover:bg-green-400 font-normal\"\n                    (click)=\"selectNode(node, false)\"\n                    (dblclick)=\"selectNode(node, true)\"\n                    [ngClass]=\"selectedDoctypeInput.key === node.key ? 'bg-green-400 text-slate-100' : ''\">\n                    <i *ngIf=\"!node.isDefault\" class=\"fa-solid fa-file pr-1\"></i>\n                    <i *ngIf=\"node.isDefault\" class=\"fa-solid fa-file-circle-check pr-1\"></i>\n                    <span>{{ node.label }}</span>\n            </button>\n        </mat-tree-node>\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\">\n            <button matTreeNodeToggle class=\"p-1 rounded font-normal hover:bg-green-400 hover:text-slate-100\"\n                    [ngClass]=\"selectedDoctypeInput.key === node.key ? 'bg-green-400 text-slate-100' : ''\"\n                    [attr.aria-label]=\"'Toggle ' + node.label\"\n                    (click)=\"selectFolder(node)\">\n                    <i [ngClass]=\"treeControl.isExpanded(node) ? 'fa fa-minus-square' : 'fa fa-plus-square'\"></i>\n                    <span class=\"p-1\" *ngIf=\"!searchText\"> {{ node.label }}</span>\n                    <span class=\"p-1\" *ngIf=\"searchText\" [innerHTML]=\"highlight(node.label)\"></span>\n            </button>\n            <button mat-button *ngIf=\"settings.showFoldersSeparatorBtn\"  class=\"p-1 hover:text-green-400\"\n                    (click)=\"selectNode(node, false)\"\n                    [matTooltip]=\"'DOCTYPE.generate_folder_separators' | translate\">\n                <i class=\"fa-solid fa-folder-closed fa-lg\"></i>\n            </button>\n        </mat-tree-node>\n    </mat-tree>\n</mat-card>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, Inject } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-document-type',\n    templateUrl: './document-type.component.html',\n    styleUrls: ['./document-type.component.scss']\n})\nexport class DocumentTypeComponent {\n    constructor(\n        public router: Router,\n        private dialogRef: MatDialogRef<DocumentTypeComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    getOutPut($event: any) {\n        this.data.selectedDoctype = $event;\n        this.data.selectedDoctype.isDblClick ? this.dialogRef.close(this.data.selectedDoctype) : '';\n    }\n}\n","<div class=\"overflow-hidden\" style=\"height: 830px;\">\n    <button class=\"float-right\" [mat-dialog-close]=\"\">\n        <i class=\"fa fa-times fa-2x hover:text-green-400 m-4\"></i>\n    </button>\n    <app-document-type-factory\n        class=\"h-80\"\n        [selectedDoctypeInput]=\"data.selectedDoctype\"\n        (selectedDoctypeOutput)=\"getOutPut($event)\"\n        [settings]=\"{canFolderBeSelected: false, formId: data.formId}\">\n    </app-document-type-factory>\n    <div class=\"text-gray-400 mt-1 mx-4\">\n        <i class=\"fa-solid fa-circle-info\"></i>\n        {{ 'SPLITTER.doubleClickToSelectDoctype' | translate }}\n    </div>\n    <div class=\"w-max mt-2 mx-auto\">\n        <button mat-button class=\"mx-auto h-12 w-48\"\n                [disabled]=\"!data.selectedDoctype.key\"\n                [mat-dialog-close]=\"data.selectedDoctype\"\n                [class]=\"data.selectedDoctype.key ? 'bg-green-400 text-white': 'bg-gray-200 text-gray-500'\">\n            {{ 'SPLITTER.select' | translate }}\n        </button>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './splitter-list.component.html',\n    styleUrls: ['./splitter-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class SplitterListComponent implements OnInit {\n    batches          : any     = [];\n    isLoading        : boolean = true;\n    status           : any[]   = [];\n    page             : number  = 1;\n    selectedTab      : number  = 0;\n    searchText       : string  = \"\";\n    pageSize         : number  = 15;\n    pageIndex        : number  = 1;\n    offset           : number  = 0;\n    pageSizeOptions  : any []  = [5, 10, 15, 20, 30, 60];\n    total            : number  = 0;\n    totals           : any     = {};\n    batchList        : any[]   = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today')\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday')\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older')\n        }\n    ];\n    totalChecked        : number  = 0;\n    batchesSelected     : boolean = false;\n    currentStatus       : string  = 'NEW';\n    currentTime         : string  = 'today';\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private _sanitizer: DomSanitizer,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.localStorageService.save('splitter_or_verifier', 'splitter');\n        this.removeLockByUserId(this.userService.user.username);\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('splitter/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.localStorageService.get('splitterPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('splitterPageIndex') as string);\n            if (this.localStorageService.get('splitterTimeIndex')) {\n                this.selectedTab = parseInt(this.localStorageService.get('splitterTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('splitterPageIndex');\n            this.localStorageService.remove('splitterTimeIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/status/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadBatches();\n    }\n\n    removeLockByUserId(userId: any) {\n        this.http.put(environment['url'] + '/ws/splitter/removeLockByUserId/' + userId, {}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadBatches(): void {\n        this.isLoading = true;\n        this.batches   = [];\n        this.http.get(environment['url'] + '/ws/splitter/batches/user/' + this.userService.user.id + '/totals/'\n            + this.currentStatus, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n            'size'   : this.pageSize,\n            'search' : this.searchText,\n            'time'   : this.currentTime,\n            'page'   : this.pageIndex - 1,\n            'status' : this.currentStatus,\n            'userId' : this.userService.user.id\n        }, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        locked         : batch['locked'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        lockedBy       : batch['locked_by'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail'])\n                    })\n                );\n                this.total = data.count;\n            }),\n            finalize(() => this.isLoading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayBatchLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('SPLITTER.batch_locked'),\n                confirmText         : this.translate.instant('SPLITTER.batch_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\"\n        });\n    }\n\n    sanitize(url: string) {\n        return this._sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + url);\n    }\n\n    checkSelectedBatch() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.batchesSelected = this.totalChecked !== 0;\n    }\n\n    mergeAllConfirmDialog(parentId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_merge_all_checked_batches'),\n                confirmButton       : this.translate.instant('SPLITTER.merge'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.mergeAllBatches(parentId);\n            }\n        });\n    }\n\n    isCheckboxChecked(batchId: number) {\n        let checked = false;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            const checkboxId = element.id.split('_')[0];\n            if (parseInt(checkboxId) === batchId) {\n                checked = true;\n            }\n        });\n        return checked;\n    }\n\n    mergeAllBatches(parentId: number) {\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        const listOfBatchToMerge: any[] = [];\n        const listOfBatchFormId: any[] = [];\n        Array.from(checkboxList).forEach((element: any) => {\n            if (element.checked) {\n                const batchId = element.id.split('_')[0];\n                if (batchId !== parentId.toString())\n                    listOfBatchToMerge.push(batchId);\n            }\n        });\n\n        this.batches.forEach((batch: any) => {\n            listOfBatchToMerge.forEach((batchId: any) => {\n                if (parseInt(batch.id) === parseInt(batchId)) {\n                    listOfBatchFormId.push(batch.form_id);\n                }\n            });\n            if (parentId === batch.id) listOfBatchFormId.push(batch.form_id);\n        });\n        const uniqueFormId = listOfBatchFormId.filter((item, i, ar) => ar.indexOf(item) === i);\n\n        if (uniqueFormId.length === 1) {\n            this.isLoading = true;\n            this.http.post(environment['url'] + '/ws/splitter/merge/' + parentId, {'batches': listOfBatchToMerge}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.loadBatches();\n                    this.notify.success(this.translate.instant('SPLITTER.merge_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('SPLITTER.merge_error_form_not_match'));\n        }\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_delete_all_batches'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllBatches();\n            }\n        });\n    }\n\n    onPageChange($event: PageEvent) {\n        this.batches = [];\n        this.pageIndex = $event.pageIndex + 1;\n        this.pageSize = $event.pageSize;\n        this.localStorageService.save('splitterPageIndex', $event.pageIndex);\n        this.loadBatches();\n    }\n\n    openConfirmDialog(id: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('SPLITTER.confirm_batch_delete'),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"400px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteBatches([id]);\n            }\n        });\n    }\n\n    selectOrUnselectAllBatches(event: any) {\n        const label = event.srcElement.textContent;\n        this.batchesSelected = !this.batchesSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllBatches() {\n        this.isLoading = true;\n        const deleteIds : number[] = [];\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any, cpt: number) => {\n            const batchId = element.id.split('_')[0];\n            deleteIds.push(Number(batchId));\n        });\n        this.deleteBatches(deleteIds);\n    }\n\n    deleteBatches(ids: number[]): void {\n        this.http.put(environment['url'] + '/ws/splitter/deleteBatches', {'ids': ids}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (ids.length === 1) {\n                    this.notify.success(this.translate.instant('SPLITTER.batch_deleted'));\n                } else {\n                    this.notify.success(this.translate.instant('SPLITTER.all_batches_checked_deleted'));\n                }\n                this.isLoading = false;\n                this.loadBatches();\n\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 1;\n        this.localStorageService.save('splitterPageIndex', this.pageIndex);\n    }\n\n    onTabChange(event: any) {\n        this.selectedTab = event.index;\n        this.localStorageService.save('splitterTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\" class=\"splitter_batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of this.batchList\" [id]=\"batch.id\" [disabled]=\"this.isLoading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"splitter-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <div class=\"ml-4\">\n                            <mat-form-field class=\"w-1/2\" appearance=\"outline\">\n                                <mat-label>{{ 'SPLITTER.search_by_identifier' | translate }}</mat-label>\n                                <input matInput type=\"text\" [(ngModel)]=\"this.searchText\">\n                            </mat-form-field>\n                            <button mat-button class=\"rounded ml-2 mb-1 border-solid border-green-400 border bg-green-400\n                                            text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    (click)=\"loadBatches()\" [matTooltip]=\"'SPLITTER.search' | translate\"\n                                    style=\"padding: 1.65rem !important\">\n                                <i class=\"fa-solid fa-magnifying-glass text-lg\"></i>\n                            </button>\n                        </div>\n                        <div class=\"w-full flex justify-center m-auto\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\" [disabled]=\"this.isLoading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <i class=\"fa-solid fa-sync-alt m-4 cursor-pointer text-xl hover:text-green-400\" (click)=\"loadBatches()\"\n                               [matTooltip]=\"'SPLITTER.reload_batches' | translate\"></i>\n                        </div>\n                        <span [class.hidden]=\"this.isLoading || this.total === 0\" class=\"relative right-0\">\n                            <mat-paginator [length] = \"this.total\"\n                                           [pageSize]=\"this.pageSize\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\"\n                                           (page)=\"onPageChange($event)\">\n                            </mat-paginator>\n                        </span>\n                    </div>\n                    <div class=\"z-40 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.batches.length > 1 && !this.isLoading\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllBatches($event)\"\n                              [innerHTML]=\"batchesSelected ? translate.instant('VERIFIER.unselect_all') : translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.batchesSelected\">\n                            <i class=\"fa-solid fa-trash ml-5 text-red-500 cursor-pointer\"\n                               (click)=\"$event.stopPropagation(); deleteAllConfirmDialog()\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n                    <div *ngIf=\"this.isLoading\">\n                        <app-loader></app-loader>\n                    </div>\n                    <div class=\"content mx-10 mt-3\" *ngIf=\"!this.isLoading\">\n                        <div class=\"list grid 2xl:grid-cols-5 md:grid-cols-3 sm:grid-cols-2 grid-flow-row gap-6\">\n                            <span *ngIf=\"this.batches.length === 0 && !this.isLoading\" class=\"text-gray-900\">{{ 'SPLITTER.no_batch_found' | translate }}</span>\n                            <mat-card class=\"batch-card cursor-pointer p-0 mb-0\" *ngFor=\"let batch of this.batches\">\n                                <label class=\"p-5 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ batch.id }}_checkbox\" type=\"checkbox\" (click)=\"checkSelectedBatch()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\">\n                                </label>\n                                <img [routerLink]=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? '/splitter/list' : '/splitter/viewer/' + currentTime + '/' + batch['id']\"\n                                     (click)=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? displayBatchLocked(batch['lockedBy']) : ''\"\n                                     class=\"m-auto p-4\" mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter image\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                                 [routerLink]=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? '/splitter/list' : '/splitter/viewer/' + currentTime + '/' + batch['id']\"\n                                                 (click)=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? displayBatchLocked(batch['lockedBy']) : ''\">\n                                    <mat-card-title class=\"break-all\">\n                                        <span class=\"w-1/3\">\n                                            {{ batch['fileName'] }}\n                                            <i [matTooltip]=\"'SPLITTER.batch_locked' | translate\"\n                                               class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"\n                                               *ngIf=\"batch.locked\"></i>\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              matTooltip=\"{{ 'OUTPUT.documents_count' | translate }} : {{ batch['documentsCount'] }}\">\n                                            {{ batch['documentsCount'] }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                                        <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                                        <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                                        <strong>{{ 'SPLITTER.form_label' | translate }}</strong> : {{ batch['formLabel'] }}<br>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4\">\n                                    <i class=\"fa-solid fa-trash cursor-pointer text-red-500 pl-2\"\n                                       (click)=\"$event.stopPropagation();openConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography\">{{ 'GLOBAL.delete' | translate }}</span>\n                                    </i>\n                                    <i class=\"fa-solid fa-circle-info text-gray-400 absolute right-4\"\n                                       matTooltip=\"{{ 'ACCOUNTS.customer_name' | translate }} : {{ batch['customerName'] }}\">\n                                    </i>\n                                    <i *ngIf=\"this.totalChecked >= 2 && isCheckboxChecked(batch['id'])\"\n                                       class=\"fa-solid fa-object-group cursor-pointer text-green-400 relative float-right\"\n                                       (click)=\"$event.stopPropagation();mergeAllConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography float-left mr-3 relative bottom-1\">\n                                            {{ 'SPLITTER.merge' | translate }} {{ this.totalChecked }} {{ 'SPLITTER.batches' | translate }}\n                                        </span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, HostListener, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { environment } from  \"../../env\";\nimport { catchError, debounceTime, delay, filter, finalize, map, takeUntil, tap } from \"rxjs/operators\";\nimport { of, ReplaySubject, Subject } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DocumentTypeComponent } from \"../document-type/document-type.component\";\nimport { remove } from 'remove-accents';\nimport { HistoryService } from \"../../../services/history.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LocaleService } from \"../../../services/locale.service\";\nimport * as moment from \"moment\";\n\nexport interface Field {\n    id              : number\n    type            : string\n    label           : string\n    class           : string\n    required        : string\n    resultMask      : string\n    searchMask      : string\n    label_short     : string\n    metadata_key    : string\n    validationMask  : string\n    settings        : any\n}\n\n@Component({\n    selector: 'app-viewer',\n    templateUrl: './splitter-viewer.component.html',\n    styleUrls: ['./splitter-viewer.component.scss']\n})\nexport class SplitterViewerComponent implements OnInit, OnDestroy {\n    @HostListener('window:beforeunload', ['$event'])\n    beforeunloadHandler($event: any) {\n        if (this.hasUnsavedChanges) {\n            $event.returnValue = true;\n        }\n    }\n    @ViewChild(`cdkStepper`) cdkDropList: CdkDragDrop<any> | undefined;\n\n    loading                     : boolean       = true;\n    showZoomPage                : boolean       = false;\n    isBatchOnDrag               : boolean       = false;\n    batchesLoading              : boolean       = false;\n    validateLoading             : boolean       = false;\n    downloadLoading             : boolean       = false;\n    saveInfosLoading            : boolean       = false;\n    documentsLoading            : boolean       = false;\n    hasUnsavedChanges           : boolean       = false;\n    addDocumentLoading          : boolean       = false;\n    isMouseInDocumentList       : boolean       = false;\n    batchMetadataOpenState      : boolean       = true;\n    documentMetadataOpenState   : boolean       = false;\n    batchForm                   : FormGroup     = new FormGroup({});\n    batches                     : any[]         = [];\n    forms                       : any[]         = [];\n    status                      : any[]         = [];\n    metadata                    : any[]         = [];\n    documents                   : any[]         = [];\n    movedPages                  : any[]         = [];\n    deletedPagesIds             : number[]      = [];\n    deletedDocumentsIds         : number[]      = [];\n    DropListDocumentsIds        : string[]      = [];\n    batchMetadataValues         : any           = {};\n    inputMode                   : string        = \"Manual\";\n    currentTime                 : string        = \"\";\n    toolSelectedOption          : string        = \"\";\n    timeLabels                  : any           = {\n        'today'     : marker('BATCH.today'),\n        'yesterday' : marker('BATCH.yesterday'),\n        'older'     : marker('BATCH.older')\n    };\n    defaultDoctype              : any           = {\n        label       : null,\n        key         : null\n    };\n    zoomPage                    : any           = {\n        thumbnail   : \"\",\n        rotation    : 0\n    };\n    currentBatch                : any           = {\n        id                  : -1,\n        formId              : -1,\n        inputId             : -1,\n        pageIdInLoad        : -1,\n        previousFormId      : -1,\n        outputs             : [],\n        status              : '',\n        maxSplitIndex       : 0,\n        selectedPagesCount  : 0,\n        selectedDocument    : {\n            id              : '',\n            displayOrder    : -1\n        }\n    };\n    fieldsCategories            : any           = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n\n    /** indicate search operation is in progress */\n    public searching        : boolean   = false;\n\n    /** list of banks filtered after simulating server side search */\n    public filteredServerSideMetadata: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\n\n    /** Subject that emits when the component has been destroyed. */\n    protected _onDestroy = new Subject<void>();\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private _sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public localeService: LocaleService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.localStorageService.save('splitter_or_verifier', 'splitter');\n        this.userService.user   = this.userService.getUserFromLocal();\n        this.currentBatch.id    = this.route.snapshot.params['id'];\n        this.currentTime        = this.route.snapshot.params['currentTime'];\n        this.loadSelectedBatch();\n        this.updateBatchLock();\n        this.translate.get('HISTORY-DESC.viewer_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n            this.historyService.addHistory('splitter', 'viewer', translated);\n        });\n    }\n\n    onScreenClick(event: MouseEvent) {\n        const clickedElement = event.target as HTMLElement;\n        const zoomPageElement = document.getElementById('zoom-image');\n\n        if (zoomPageElement && !zoomPageElement.contains(clickedElement)) {\n            this.showZoomPage = false;\n        }\n    }\n\n    setValuesFromSavedMetadata(autocompletionValue: any): void {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field['label_short'])) {\n                const savedValue = this.currentBatch.customFieldsValues[field['label_short']];\n                if (autocompletionValue.hasOwnProperty(field['label_short'])\n                    && autocompletionValue[field['label_short']] !== savedValue) {\n                    this.batchMetadataValues[field['label_short']] = savedValue;\n                    this.batchForm.controls[field['label_short']].setValue(savedValue);\n                }\n            }\n        }\n    }\n\n    updateBatchLock() {\n        this.http.post(environment['url'] + '/ws/splitter/lockBatch', {\n                'batchId' : this.currentBatch.id,\n                'lockedBy': this.userService.user.username\n            }, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadSelectedBatch(): void {\n        this.defaultDoctype = {};\n        this.documents      = [];\n        this.loadBatchById();\n    }\n\n    loadBatchById(): void {\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n                'batchId': this.currentBatch.id,\n                'userId': this.userService.user.id\n            },\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.currentBatch = {\n                    id                  : data.batches[0]['id'],\n                    status              : data.batches[0]['status'],\n                    formId              : data.batches[0]['form_id'],\n                    previousFormId      : data.batches[0]['form_id'],\n                    customFieldsValues  : data.batches[0]['data'].hasOwnProperty('custom_fields') ? data.batches[0]['data']['custom_fields'] : {},\n                    selectedPagesCount  : 0,\n                    outputs             : [],\n                    maxSplitIndex       : 0,\n                    selectedPageId      : 0,\n                    selectedDocument    : {\n                        id           : '',\n                        displayOrder : -1\n                    }\n                };\n                this.loadForms();\n                this.loadBatches();\n                this.loadStatus();\n                this.loadFormFields();\n                this.loadDocuments();\n                this.loadDefaultDocType();\n                this.loadOutputsData();\n                this.loadReferentialOnView();\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getStatusLabel(statusId: string) {\n        const statusFound = this.status.find(status => status.id === statusId);\n        return statusFound ? statusFound.label : undefined;\n    }\n\n    loadStatus(): void {\n        this.http.get(environment['url'] + '/ws/status/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadOutputsData(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/splitter/batch/' + this.currentBatch.id + '/outputs', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.currentBatch.outputs = data.outputs;\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadBatches(): void {\n        this.batchesLoading = true;\n        this.batches        = [];\n        this.loading        = true;\n\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n            'page': 0,\n            'size': 10,\n            'time': this.currentTime,\n            'userId': this.userService.user.id,\n            'status': this.currentBatch.status\n        }, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail'])\n                    })\n                );\n\n                // Move current batch to the top of the list\n                const currentBatchIndex = this.batches.findIndex((batch: any) => batch.id === this.currentBatch.id);\n                if (currentBatchIndex > -1) {\n                    this.batches.unshift(this.batches.splice(currentBatchIndex, 1)[0]);\n                } else {\n                    this.batches.unshift({\n                        id             : this.currentBatch.id,\n                        inputId        : this.currentBatch.inputId,\n                        fileName       : this.currentBatch.fileName,\n                        formLabel      : this.currentBatch.formLabel,\n                        date           : this.currentBatch.date,\n                        customerName   : this.currentBatch.customerName,\n                        documentsCount : this.currentBatch.documentsCount,\n                        thumbnail      : this.sanitize(this.currentBatch.thumbnail)\n                    });\n                }\n\n                this.batchesLoading = false;\n            }),\n            catchError((err: any) => {\n                this.batchesLoading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadDocuments(): void {\n        this.documentsLoading = true;\n        this.http.get(environment['url'] + '/ws/splitter/documents/' + this.currentBatch.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (let documentIndex = 0; documentIndex < data['documents'].length; documentIndex++) {\n                    // -- Add documents metadata --\n                    this.documents[documentIndex] = {\n                        id                 : \"document-\" + data['documents'][documentIndex]['id'],\n                        doctypeLabel       : data['documents'][documentIndex]['doctype_label'] ? data['documents'][documentIndex]['doctype_label'] : (this.defaultDoctype.label || \"\"),\n                        doctypeKey         : data['documents'][documentIndex]['doctype_key'] ? data['documents'][documentIndex]['doctype_key'] : (this.defaultDoctype.label || \"\"),\n                        displayOrder       : data['documents'][documentIndex]['display_order'],\n                        splitIndex         : data['documents'][documentIndex]['split_index'],\n                        status             : data['documents'][documentIndex]['status'],\n                        pages              : [],\n                        class              : \"\",\n                        customFieldsValues : {}\n                    };\n\n                    // -- Get max split index, used when adding a new document --\n                    if (this.documents[documentIndex].splitIndex > this.currentBatch.maxSplitIndex) {\n                        this.currentBatch.maxSplitIndex = this.documents[documentIndex].splitIndex;\n                    }\n                    if (data['documents'][documentIndex]['data'].hasOwnProperty('custom_fields')) {\n                        this.documents[documentIndex].customFieldsValues = data['documents'][documentIndex]['data']['custom_fields'];\n                    }\n\n                    // -- Add document forms --\n                    this.documents[documentIndex].form = this.getFormForDocument(documentIndex);\n\n                    // -- Add documents pages --\n                    for (const page of data['documents'][documentIndex]['pages']) {\n                        this.documents[documentIndex].pages.push({\n                            id             : page['id'],\n                            showZoomButton : false,\n                            checkBox       : false,\n                            rotation       : page['rotation'],\n                            sourcePage     : page['source_page'],\n                            thumbnail      : this.sanitize(page['thumbnail'])\n                        });\n                    }\n                }\n\n                // -- Select first document --\n                this.selectDocument(this.documents[0]);\n                this.documentsLoading = false;\n            }),\n            catchError((err: any) => {\n                this.notify.handleErrors(err);\n                console.debug(err);\n                this.documentsLoading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDocumentDisplayOrder() {\n        const updatedDocuments = [];\n        for (const document of this.documents) {\n            const currentDisplayOrder   = document.displayOrder;\n            const newDisplayOrder       = currentDisplayOrder + 1;\n            if (currentDisplayOrder > this.currentBatch.selectedDocument.displayOrder) {\n                document.displayOrder = newDisplayOrder;\n                updatedDocuments.push({\n                    'id': Number(document.id.split('-').pop()),\n                    'displayOrder': newDisplayOrder\n                });\n            }\n        }\n        return updatedDocuments;\n    }\n\n    sortDocumentsByDisplayOrder() {\n        this.documents.sort((a:any, b:any) => (a.displayOrder > b.displayOrder) ? 1 : -1);\n    }\n\n    createDocument() {\n        if (this.addDocumentLoading) { return; }\n        this.hasUnsavedChanges = true;\n        const documentDisplayOrder  = this.updateDocumentDisplayOrder();\n        this.addDocumentLoading = true;\n        this.http.post(environment['url'] + '/ws/splitter/addDocument',\n            {\n                'batchId'           : this.currentBatch.id,\n                'splitIndex'        : this.currentBatch.maxSplitIndex + 1,\n                'displayOrder'      : this.currentBatch.selectedDocument.displayOrder + 1,\n                'updatedDocuments'  : documentDisplayOrder\n            },\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const newId = `document-${data.newDocumentId}`;\n                this.documents.push({\n                    id                 : newId,\n                    doctypeLabel       : \"\",\n                    doctypeKey         : \"\",\n                    class              : \"\",\n                    pages              : [],\n                    customFieldsValues : {},\n                    status             : \"NEW\",\n                    splitIndex         : this.currentBatch.maxSplitIndex + 1,\n                    displayOrder       : this.currentBatch.selectedDocument.displayOrder + 1\n                });\n                this.documents[this.documents.length - 1].form = this.getFormForDocument(this.documents.length - 1);\n                this.sortDocumentsByDisplayOrder();\n                this.currentBatch.maxSplitIndex++;\n                this.addDocumentLoading = false;\n                this.notify.success(this.translate.instant('SPLITTER.document_added_with_success'));\n            }),\n            catchError((err: any) => {\n                this.addDocumentLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormForDocument(documentIndex: number) {\n        const newForm = new FormGroup({});\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const control = field.required ? new FormControl('', Validators.required) : new FormControl('');\n            const labelShort = field.label_short;\n            if (this.documents[documentIndex]['customFieldsValues'].hasOwnProperty(labelShort))\n                control.setValue(this.documents[documentIndex]['customFieldsValues'][labelShort]);\n            control.valueChanges.subscribe(value => {\n                this.documents[documentIndex]['customFieldsValues'][labelShort] = value;\n            });\n            newForm.addControl(labelShort, control);\n            if (field.metadata_key) { // used to control autocomplete search fields\n                const controlSearch = new FormControl('');\n                newForm.addControl(\"search_\" + labelShort, controlSearch);\n            }\n        }\n        return newForm;\n    }\n\n    getZoomPage(page: any) {\n        this.currentBatch.pageIdInLoad = page.id;\n        this.http.get(environment['url'] + '/ws/splitter/pages/' + (page.id).toString() + '/fullThumbnail', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.showZoomPage = true;\n                this.zoomPage = {\n                    pageId    : page.id,\n                    rotation  : page.rotation,\n                    thumbnail : this.sanitize(data['fullThumbnail'])\n                };\n                this.currentBatch.pageIdInLoad = -1;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.currentBatch.pageIdInLoad = -1;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /* -- Metadata -- */\n    loadDefaultDocType() {\n        this.loading      = true;\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (this.currentBatch.formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.doctypes.forEach((doctype: {\n                        id         : any\n                        key        : string\n                        type       : string\n                        label      : string\n                        is_default : boolean\n                    }) => {\n                        if (doctype.is_default && doctype.type === 'document') {\n                            this.defaultDoctype = {\n                                'id'        : doctype.id,\n                                'key'       : doctype.key,\n                                'label'     : doctype.label,\n                                'type'      : doctype.type,\n                                'isDefault' : doctype.is_default\n                            };\n                        }\n                    }\n                );\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getPlaceholderFromResultMask(mask: string, metadata: any) {\n        const maskVariables = mask ? mask.split('#') : [];\n        const result        = [];\n        for (const maskVariable of maskVariables!) {\n            result.push(metadata.hasOwnProperty(maskVariable) ? metadata[maskVariable] : maskVariable);\n        }\n        return result.join(' ');\n    }\n\n    getPlaceholderFromSearchMask(mask: string, label: string) {\n        return mask ? mask.replace('#label', label) : '';\n    }\n\n    changeInputMode($event: any) {\n        this.inputMode = $event.checked ? \"Auto\" : \"Manual\";\n        this.batchMetadataValues = {};\n        this.fillDataValues({});\n    }\n\n    fillDataValues(data: any): void {\n        this.hasUnsavedChanges = true;\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            if (key && this.batchForm.get(key)) {\n                this.batchForm.get(key)?.setValue(newValue);\n            }\n        }\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            for (const document of this.documents) {\n                if (key && document.form.get(key)) {\n                    document.form.get(key)?.setValue(newValue);\n                }\n            }\n        }\n    }\n\n    loadReferentialOnView(): void {\n        this.http.get(environment['url'] + `/ws/splitter/metadataMethods/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.metadataMethods[0].callOnSplitterView) {\n                    this.loadReferential(false);\n                }\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadReferentialWithConfirmation(refreshAfterLoad: boolean): void {\n        this.metadata = [];\n        this.http.get(environment['url'] + `/ws/splitter/loadReferential/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadata.forEach((metadataItem: any) => {\n                    metadataItem.data['metadataId'] = metadataItem.id;\n                    this.metadata.push(metadataItem.data);\n                });\n                if (this.currentBatch.customFieldsValues.hasOwnProperty('metadataId')) {\n                    const autocompletionValue = this.metadata.filter(item => item.metadataId === this.currentBatch.customFieldsValues.metadataId);\n                    if (autocompletionValue.length > 0) {\n                        this.filteredServerSideMetadata.next(autocompletionValue);\n                        this.fillData((autocompletionValue[0]));\n                        this.setValuesFromSavedMetadata(autocompletionValue[0]);\n                    }\n                }\n                if (refreshAfterLoad) {\n                    this.loadSelectedBatch();\n                }\n                this.notify.success(this.translate.instant('SPLITTER.referential_updated'));\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadReferential(refreshAfterLoad: boolean): void {\n        if (this.hasUnsavedChanges) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data:{\n                    confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                    confirmText        : this.translate.instant('SPLITTER.refresh_without_saving_modifications'),\n                    confirmButton      : this.translate.instant('SPLITTER.refresh_without_saving'),\n                    confirmButtonColor : \"warn\",\n                    cancelButton       : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.loadReferentialWithConfirmation(refreshAfterLoad);\n                }\n            });\n        } else {\n            this.loadReferentialWithConfirmation(refreshAfterLoad);\n        }\n    }\n\n    setValueChange(key: string, value: string) {\n        this.hasUnsavedChanges = true;\n        this.batchMetadataValues[key] = value;\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    fillData(selectedMetadata: any) {\n        this.batchMetadataValues = selectedMetadata;\n        const optionId = this.batchMetadataValues['metadataId'];\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field['metadata_key']) {\n                if (field.type === 'select' && selectedMetadata[field['metadata_key']]) {\n                    this.batchForm.get(field['metadata_key'])?.setValue(selectedMetadata[field['metadata_key']]);\n                }\n                else {\n                    this.batchForm.get(field['metadata_key'])?.setValue(optionId);\n                }\n            }\n        }\n    }\n\n    loadForms() {\n        this.forms = [];\n        this.http.get(environment['url'] + '/ws/forms/splitter/list?user_id=' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onFormChange(newFormId: number): void {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('GLOBAL.confirm_form_change'),\n                confirmButton      : this.translate.instant('GLOBAL.confirm_modification'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.http.post(environment['url'] + '/ws/splitter/changeForm',\n                    {\n                        'batchId' : this.currentBatch.id,\n                        'formId'  : newFormId\n                    },\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('SPLITTER.barch_form_change_success'));\n                        this.translate.get('HISTORY-DESC.change_batch_form',\n                            {\n                                batch_id : this.currentBatch.id,\n                                form_id  : newFormId\n                            })\n                            .subscribe((translated: string) => {\n                            this.historyService.addHistory('splitter', 'viewer', translated);\n                        });\n                        this.loadSelectedBatch();\n                    }),\n                    catchError((err: any) => {\n                        this.loading = false;\n                        this.notify.handleErrors(err);\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.currentBatch.formId = this.currentBatch.previousFormId;\n            }\n        });\n    }\n\n    loadFormFields(): void {\n        this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.currentBatch.formId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (const fieldCategory in this.fieldsCategories) {\n                    this.fieldsCategories[fieldCategory] = [];\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            this.fieldsCategories[fieldCategory].push({\n                                'id'             : field.id,\n                                'type'           : field.type,\n                                'label'          : field.label,\n                                'class'          : field.class,\n                                'settings'       : field.settings,\n                                'required'       : field.required,\n                                'searchMask'     : field.searchMask,\n                                'resultMask'     : field.resultMask,\n                                'label_short'    : field.label_short,\n                                'metadata_key'   : field.metadata_key,\n                                'validationMask' : field.validationMask\n                            });\n                            if (field.metadata_key && fieldCategory === 'batch_metadata') {\n                                this.inputMode = 'Auto';\n                            }\n                        });\n                    }\n                }\n                this.batchForm = this.toBatchFormGroup();\n\n                // listen for search field value changes\n                for (const fieldCategory in this.fieldsCategories) {\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            if (field.metadata_key && this.batchForm.get('search_' + field.label_short)) {\n                                this.batchForm.get('search_' + field.label_short)?.valueChanges\n                                    .pipe(\n                                        filter((search: string) => !!search),\n                                        takeUntil(this._onDestroy),\n                                        debounceTime(200),\n                                        map(search => {\n                                            if (!this.metadata || search.length < 3) {\n                                                return [];\n                                            }\n                                            this.searching = true;\n                                            return this.metadata.filter(\n                                                metadataItem => remove(metadataItem[field.label_short].toString())\n                                                    .toLowerCase()\n                                                    .indexOf(remove(search.toString().toLowerCase())) > -1\n                                            );\n                                        }),\n                                        delay(500)\n                                    )\n                                    .subscribe(filteredMetadata => {\n                                        this.filteredServerSideMetadata.next(filteredMetadata);\n                                        this.searching = false;\n                                    }, () => {\n                                        this.searching = false;\n                                    });\n                            }\n                        });\n                    }\n                }\n            }), finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormFieldsValues() {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (this.batchForm.get(field.label_short)) {\n                this.batchMetadataValues[field.label_short] = this.batchForm.get(field.label_short)?.value;\n                if (field.type === 'date') {\n                    this.batchMetadataValues[field.label_short] = moment(this.batchMetadataValues[field.label_short]).format('L');\n                }\n            }\n        }\n    }\n\n    toBatchFormGroup():FormGroup {\n        const group: any = {};\n        const format = moment().localeData().longDateFormat('L');\n        this.fieldsCategories['batch_metadata'].forEach((field: Field) => {\n            group[field.label_short] = field.required ?\n                new FormControl('', Validators.required) :\n                new FormControl('');\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field.label_short)) {\n                const value = field.type !== 'date' ? this.currentBatch.customFieldsValues[field.label_short] :\n                    moment(this.currentBatch.customFieldsValues[field.label_short], format);\n                group[field.label_short].setValue(value);\n            }\n            if (field.metadata_key)\n                group['search_' + field.label_short] = new FormControl('');\n        });\n        return new FormGroup(group);\n    }\n\n    downloadOriginalFile(): void {\n        this.downloadLoading = true;\n        this.http.get(environment['url'] + '/ws/splitter/batch/' + this.currentBatch.id + '/file',\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const src = `data:application/pdf;base64,${data['encodedFile']}`;\n                const newWindow = window.open();\n                newWindow!.document.write(`<iframe style=\"width: 100%;height: 100%;margin: 0;padding: 0;\" src=\"${src}\" allowfullscreen></iframe>`);\n                newWindow!.document.title = data['filename'];\n            }),\n            finalize(() => this.downloadLoading = false),\n            catchError((err: any) => {\n                this.downloadLoading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n    /* -- End Metadata -- */\n\n    /* -- Begin documents control -- */\n    addDocumentIdToDropList(id: string): string {\n        if (!this.DropListDocumentsIds.includes(id))\n            this.DropListDocumentsIds.push(id);\n        return id;\n    }\n\n    sanitize(url: string): any {\n        return this._sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + url);\n    }\n\n    dropPage(event: CdkDragDrop<any[]>, document: any): void {\n        this.hasUnsavedChanges = true;\n        let pageId = undefined;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n            pageId = event.container.data[event.currentIndex].id;\n        } else {\n            transferArrayItem(event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n            pageId = event.container.data[event.currentIndex].id;\n            this.movedPages.push({\n                'pageId'        : pageId,\n                'newDocumentId' : Number(document['id'].split('-')[1]),\n                'isAddInNewDoc' : (document.status === 'USERADD')\n            });\n        }\n        this.setPageSelection(pageId, false);\n    }\n\n    dropDocument(event: CdkDragDrop<string[]>): void {\n        this.hasUnsavedChanges = true;\n        moveItemInArray(this.documents, event.previousIndex, event.currentIndex);\n        this.OrderDisplayDocumentValues();\n    }\n\n    OrderDisplayDocumentValues(): void {\n        let cpt = 1;\n        for (const document of this.documents) {\n            document.displayOrder = cpt;\n            cpt++;\n        }\n    }\n\n    openDoctypeTree(document: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: document.doctypeKey  ? document.doctypeKey  : \"\",\n                    label: document.doctypeLabel  ? document.doctypeLabel  : \"\"\n                },\n                formId: this.currentBatch.formId\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                document.doctypeLabel = result.label;\n                document.doctypeKey   = result.key;\n                this.hasUnsavedChanges = true;\n            }\n        });\n    }\n\n    selectDocument(document: any): void {\n        this.currentBatch.selectedDocument = {'id': document.id, 'displayOrder': document.displayOrder};\n    }\n\n    deleteDocument(documentIndex: number): void {\n        const pagesCount = this.documents[documentIndex].pages.length;\n        const confirmMessage = pagesCount > 0 ?\n            this.translate.instant('SPLITTER.confirm_delete_document_not_empty', {\"pagesCount\": pagesCount}) :\n            this.translate.instant('SPLITTER.confirm_delete_document_empty');\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : confirmMessage,\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletedDocumentsIds.push(this.documents[documentIndex].id);\n                this.documents = this.deleteItemFromList(this.documents, documentIndex);\n                this.hasUnsavedChanges = true;\n                this.saveModifications();\n            }\n        });\n    }\n\n    onBatchDrop(batchIdToMerge: number) {\n        this.isBatchOnDrag = false;\n        if (!this.isMouseInDocumentList) {\n            return;\n        }\n        if (this.isMouseInDocumentList && this.currentBatch.id === batchIdToMerge) {\n            this.notify.error(this.translate.instant('SPLITTER.can_not_merge_same_batch'));\n            return;\n        }\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmButton       : this.translate.instant('SPLITTER.merge'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_merge_batches')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.mergeBatches(batchIdToMerge);\n            }\n        });\n    }\n\n    mergeBatches(batchIdToMerge: number) {\n        this.http.post(environment['url'] + '/ws/splitter/merge/' + this.currentBatch.id, {'batches': [batchIdToMerge]}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.loadSelectedBatch();\n                this.notify.success(this.translate.instant('SPLITTER.merge_success'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    dropBatch(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.batches, event.previousIndex, event.currentIndex);\n    }\n    /* -- End documents control -- */\n\n    /* -- Begin toolbar -- */\n    deleteItemFromList(list: any[], index: number): any[] {\n        delete list[index];\n        list = list.filter((x: any): x is any => x !== null);\n        return list;\n    }\n\n    selectPage(page: any) {\n        page['checkBox'] = !page['checkBox'];\n        this.countSelectedPages();\n    }\n\n    countSelectedPages(): void {\n        let selectedPageCount = 0;\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                page.checkBox ? selectedPageCount++ : '';\n            }\n        }\n        this.currentBatch.selectedPagesCount = selectedPageCount;\n    }\n\n    deleteSelectedPages(): void {\n        if (this.currentBatch.selectedPagesCount === 0)\n            return;\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_delete_pages', {\"pagesCount\": this.currentBatch.selectedPagesCount}),\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                for (const document of this.documents) {\n                    for (let pageIndex = 0; pageIndex < document.pages.length; pageIndex++) {\n                        if (document.pages[pageIndex].checkBox) {\n                            this.deletedPagesIds.push(document.pages[pageIndex].id);\n                            document.pages = this.deleteItemFromList(document.pages, pageIndex);\n                            pageIndex--;\n                        }\n                    }\n                }\n                this.hasUnsavedChanges = true;\n            }\n        });\n    }\n\n    setPageSelection(pageId: number, check: boolean): void {\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                page.id === pageId ? page.checkBox = check : '';\n            }\n        }\n        this.countSelectedPages();\n    }\n\n    setAllPagesTo(check: boolean): void {\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                this.setPageSelection(page.id, check);\n            }\n        }\n    }\n\n    rotatePage(documentIndex: number, pageIndex: number): void {\n        const currentDegree = this.documents[documentIndex].pages[pageIndex].rotation;\n        this.hasUnsavedChanges = true;\n        switch (currentDegree) {\n            case -90: {\n                this.documents[documentIndex].pages[pageIndex].rotation = 0;\n                break;\n            }\n            case 180: {\n                this.documents[documentIndex].pages[pageIndex].rotation = -90;\n                break;\n            }\n            default: {\n                this.documents[documentIndex].pages[pageIndex].rotation += 90;\n                break;\n            }\n        }\n\n        if (this.zoomPage.pageId === this.documents[documentIndex].pages[pageIndex].id) {\n            this.zoomPage.rotation = this.documents[documentIndex].pages[pageIndex].rotation;\n        }\n    }\n\n    rotateSelectedPages(): void {\n        for (let documentIndex = 0; documentIndex < this.documents.length; documentIndex++) {\n            for (let pageIndex = 0; pageIndex < this.documents[documentIndex].pages.length; pageIndex++) {\n                if (this.documents[documentIndex].pages[pageIndex].checkBox) {\n                    this.rotatePage(documentIndex, pageIndex);\n                }\n            }\n        }\n    }\n\n    sendSelectedPages(): void {\n        const selectedDoc = this.documents.filter((doc: any) => doc.id === this.toolSelectedOption);\n        if (!selectedDoc) {\n            return;\n        }\n        const selectedDocIndex = this.documents.indexOf(selectedDoc[0]);\n        for (const document of this.documents) {\n            for (let i = document.pages.length - 1; i >= 0; i--) {\n                if (document.pages[i].checkBox) {\n                    const newPosition = this.documents[selectedDocIndex].pages.length;\n                    transferArrayItem(document.pages,\n                        this.documents[selectedDocIndex].pages, i,\n                        newPosition);\n                    const pageId = this.documents[selectedDocIndex].pages[newPosition].id;\n                    this.movedPages.push({\n                        'pageId'        : pageId,\n                        'newDocumentId' : Number(this.documents[selectedDocIndex].id.split('-')[1]),\n                        'isAddInNewDoc' : (this.documents[selectedDocIndex].status === 'USERADD')\n                    });\n                    this.setPageSelection(pageId, false);\n                }\n            }\n        }\n        this.hasUnsavedChanges = true;\n    }\n\n    changeBatch(id: number): void {\n        this.loading                            = true;\n        this.fieldsCategories['batch_metadata'] = [];\n        this.batchMetadataValues                = {};\n        this.fillDataValues({});\n        this.router.navigate(['splitter/viewer/' + this.currentTime + '/' + id]).then();\n        this.currentBatch.id = id;\n        this.loadSelectedBatch();\n        this.hasUnsavedChanges = false;\n    }\n\n    cancelBatchModification(): void {\n        if (this.hasUnsavedChanges) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data:{\n                    confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                    confirmText        : this.translate.instant('SPLITTER.quit_without_saving_modifications'),\n                    confirmButton      : this.translate.instant('SPLITTER.quit_without_saving'),\n                    confirmButtonColor : \"warn\",\n                    cancelButton       : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.router.navigate([\"/splitter/list\"]).then();\n                }\n            });\n        }\n        else {\n            this.router.navigate([\"/splitter/list\"]).then();\n        }\n    }\n\n    validateWithConfirmation(): void {\n        if (!this.batchForm.valid && this.inputMode === \"Manual\") {\n            this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n            this.loading = false;\n            return;\n        }\n        if (this.inputMode === 'Auto' && !this.batchMetadataValues.metadataId && this.fieldsCategories['batch_metadata'].length !== 0) {\n            this.notify.error(this.translate.instant('SPLITTER.error_autocomplete_value'));\n            return;\n        }\n        for (const document of this.documents) {\n            if (!document.form.valid) {\n                this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n                this.loading = false;\n                return;\n            }\n            if (!document.doctypeKey) {\n                document.class = \"text-red-500\";\n                this.notify.error(this.translate.instant('SPLITTER.error_no_doc_type'));\n                this.loading = false;\n                return;\n            } else {\n                document.class = \"\";\n            }\n        }\n        this.getFormFieldsValues();\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field.validationMask) {\n                if (!this.batchMetadataValues[field.label_short].match(field.validationMask)) {\n                    this.notify.error(this.translate.instant('SPLITTER.field_form_not_respected', {'field': field.label}));\n                    this.loading = false;\n                    return;\n                }\n            }\n        }\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_validate'),\n                confirmButton      : this.translate.instant('SPLITTER.validate_batch'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.validate();\n            }\n        });\n    }\n\n    validate(): void {\n        this.validateLoading = true;\n        const batchMetadata             = this.batchMetadataValues;\n        batchMetadata['id']             = this.currentBatch.id;\n        batchMetadata['userName']       = this.userService.user['username'];\n        batchMetadata['userLastName']   = this.userService.user['lastname'];\n        batchMetadata['userFirstName']  = this.userService.user['firstname'];\n\n        // Build documents metadata arguments\n        const _documents: any[] = [];\n        for (const document of this.documents) {\n            const _document: any = {\n                id            : document['id'],\n                displayOrder  : document['displayOrder'],\n                doctypeKey    : document['doctypeKey'],\n                doctypeLabel  : document['doctypeLabel'],\n                metadata      : document.form.getRawValue(),\n                pages         : []\n            };\n            for (const page of document.pages) {\n                _document.pages.push({\n                    id         : page['id'],\n                    rotation   : page['rotation'],\n                    sourcePage : page['sourcePage']\n                });\n            }\n            _documents.push(_document);\n        }\n        this.http.post(environment['url'] + '/ws/splitter/export',\n            {\n                'documents'           : _documents,\n                'batchMetadata'       : batchMetadata,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n                'formId'              : this.currentBatch.formId\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.translate.get('HISTORY-DESC.validate_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n                    this.historyService.addHistory('splitter', 'viewer', translated);\n                });\n                this.notify.success(this.translate.instant('SPLITTER.validate_batch_success'));\n                this.router.navigate(['splitter/list']).then();\n            }),\n            catchError((err: any) => {\n                this.validateLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveModifications(): void {\n        this.saveInfosLoading   = true;\n        this.getFormFieldsValues();\n\n        const _documents        = [];\n        for (const document of this.documents) {\n            const _document         = Object.assign({}, document);\n            _document['metadata']   = document.form.getRawValue();\n            delete _document.class;\n            delete _document.form;\n            _documents.push(_document);\n        }\n\n        this.http.post(environment['url'] + '/ws/splitter/saveModifications',\n            {\n                'documents'           : _documents,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n                'batchMetadata'       : this.batchMetadataValues\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.saveInfosLoading   = false;\n                this.hasUnsavedChanges       = false;\n                this.notify.success(this.translate.instant('SPLITTER.batch_modification_saved'));\n            }),\n            catchError((err: any) => {\n                this.saveInfosLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getOutputsLabels(): string {\n        const outputsLabels = [];\n        for (const output of this.currentBatch.outputs) {\n            outputsLabels.push(output.label);\n        }\n        return outputsLabels.join(', ');\n    }\n    /* -- End toolbar -- */\n}\n","<div *ngIf=\"this.loading || this.documentsLoading || this.batchesLoading\">\n    <app-loader></app-loader>\n</div>\n<mat-drawer-container\n        hasBackdrop=\"false\"\n        *ngIf=\"!this.loading\"\n        (click)=\"onScreenClick($event)\"\n        [class.pointer-events-none]=\"validateLoading\"\n        class=\"w-full absolute top-16 bottom-0\">\n    <mat-drawer #drawer mode=\"side\" opened class=\"w-1/5\">\n        <div class=\"mt-1\">\n            <div [ngSwitch]=\"currentTime\" class=\"mt-2 w-full h-10 grid place-content-center\">\n                <div class=\"text-base text-slate-400\">\n                    {{ timeLabels[currentTime] | translate }}, {{ getStatusLabel(currentBatch.status) }}\n                </div>\n            </div>\n            <span *ngIf=\"batches.length === 0\" class=\"text-slate-400 w-full grid place-content-center\">\n                {{ 'SPLITTER.no_batch_found' | translate }}\n            </span>\n            <div cdkDropList  (cdkDropListDropped)=\"dropBatch($event)\">\n                <div class=\"cursor-move\" (cdkDragStarted)=\"this.isBatchOnDrag = true\" (cdkDragEnded)=\"onBatchDrop(batch.id)\"\n                     *ngFor=\"let batch of this.batches\" cdkDrag>\n                    <div *cdkDragPlaceholder class=\"drop-shadow-xl w-full h-40 text-center text-gray-500 bg-slate-50 grid place-content-center\">\n                        <i class=\"fa-solid fa-object-group fa-3x\"></i>\n                        {{ 'SPLITTER.selected_batch_for_merge' | translate }}\n                    </div>\n                    <mat-card class=\"mat-elevation-z4 my-2 cursor-move\" [ngClass]=\"{'border-4 border-green-400': this.currentBatch.id === batch.id}\">\n                        <a class=\"image-link\" (click)=\"changeBatch(batch['id'])\">\n                            <mat-card-header>\n                                <img mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter image\">\n                            </mat-card-header>\n                        </a>\n                        <mat-card-content>\n                            <span matTooltip=\"{{ 'SPLITTER.document_number' | translate }} : {{ batch['documentsCount'] }}\"\n                                  class=\"float-right text-green-400\">\n                                {{ batch['documentsCount'] }}\n                                <i class=\"far fa-file-alt\"></i>\n                            </span>\n                            <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                                <span class=\"leading-7 flex\">\n                                    {{ batch['fileName'] }}\n                                </span>\n                                <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                                <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                            </mat-card-subtitle>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </mat-drawer>\n    <mat-drawer-content class=\"flex flex-col items-start bg-white\">\n        <button class=\"btn-show-batches left-0 sticky min-h-full mt-0 top-0 left-0 w-2.5 min-w-0\"\n                mat-raised-button (click)=\"drawer.toggle()\">\n            <span>\n                <i *ngIf=\"drawer.opened\" class=\"fa-solid fa-angle-left\"></i>\n                <i *ngIf=\"!drawer.opened\" class=\"fa-solid fa-angle-right\"></i>\n            </span>\n        </button>\n        <div *ngIf=\"showZoomPage\" class=\"fixed z-20 w-4/12 h-5/6 grid justify-items-stretch right-0 top-20\">\n            <img id=\"zoom-image\" class=\"justify-self-end border-2\"\n                 mat-card-image\n                 [src]=\"zoomPage.thumbnail\"\n                 [ngClass]=\"\n                    (zoomPage['rotation'] === 0)   ? 'rotate-0 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === 90)  ? 'rotate-90 h-full w-4/5 mr-36':\n                    (zoomPage['rotation'] === 180) ? 'rotate-180 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === -90) ? '-rotate-90 h-full w-4/5 mr-36':\n                    ''\"\n                 alt=\"Zoom Image\"/>\n        </div>\n        <div class=\"w-10/12 absolute top-0 mx-32\" (mouseenter)=\"isMouseInDocumentList = true\" (mouseleave)=\"isMouseInDocumentList = false\">\n            <div *ngIf=\"isBatchOnDrag\" class=\"absolute h-full w-full bg-green-400 z-40 opacity-50 rounded\"\n                 [matTooltip]=\"'SPLITTER.drop_batch_to_merge' | translate\">\n                <div class=\"text-center m-auto sticky top-96\">\n                    <i class=\"fa-solid fa-object-group fa-4x w-full mb-1\"></i>\n                    <span class=\"text-2xl\"> {{ 'SPLITTER.drop_here' | translate }} </span>\n                </div>\n            </div>\n            <mat-accordion class=\"w-full\">\n                <mat-expansion-panel class=\"my-6\" [expanded]=\"true\" (opened)=\"batchMetadataOpenState = true\"\n                                     (closed)=\"batchMetadataOpenState = false\" #batchMetadata>\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"grid grid-cols-3 gap-3\">\n                            <div class=\"grid grid-cols-2 gap-2\">\n                                <span>\n                                    {{ 'SPLITTER.batch_metadata' | translate }}\n                                </span>\n                                <div (click)=\"batchMetadata.toggle()\" class=\"mx-1\" *ngIf=\"fieldsCategories['batch_metadata'].length !== 0\">\n                                    <mat-slide-toggle [checked]=\"inputMode === 'Auto'\" (change)=\"changeInputMode($event);\">\n                                        {{ 'SPLITTER.auto_complete' | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                            </div>\n                            <div>\n                                <mat-form-field id=\"form-select-field\" class=\"w-full\" (click)=\"$event.stopPropagation()\" matTooltip=\"{{ 'SPLITTER.edit_used_form' | translate }}\">\n                                    <i matPrefix class=\"fa-sharp fa-solid fa-caret-down text-green-400 fa-lg\"></i>\n                                    <mat-select (selectionChange)=\"onFormChange($event.value)\" [(ngModel)]=\"currentBatch.formId\">\n                                        <mat-option [value]=\"form.id\" *ngFor=\"let form of this.forms;\">\n                                            {{ form.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"text-right text-gray-400\">\n                                <span class=\"mx-2\" matTooltip=\"{{ 'HEADER.status' | translate }}\">\n                                    <i class=\"fa-solid fa-flag\"></i>\n                                    {{ getStatusLabel(currentBatch.status) }}\n                                </span>\n                                <span>\n                                    <i class=\"fa-solid fa-pipe\"></i>\n                                    {{ 'SPLITTER.identifier' | translate }} : {{ currentBatch.id }}\n                                </span>\n                            </div>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"text-gray-400 text-center w-full\" *ngIf=\"fieldsCategories['batch_metadata'].length === 0\">\n                        <i class=\"block fa-solid fa-check fa-3x\"></i>\n                        <span class=\"block\">{{ 'SPLITTER.no_metadata_required' | translate }}</span>\n                    </div>\n                    <form [formGroup]=\"batchForm\"  class=\"flex flex-wrap mx-8\">\n                        <div *ngFor=\"let field of fieldsCategories['batch_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                            <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>\n                                        <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                    </mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\">\n                                        <mat-option *ngIf=\"field.metadata_key\">\n                                            <ngx-mat-select-search\n                                                    [formControlName]=\"'search_' + field.label_short\"\n                                                    placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                    [searching]=\"searching\"\n                                                    noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                            </ngx-mat-select-search>\n                                        </mat-option>\n                                        <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                    [value]=\"metadata.metadataId\"\n                                                    (click)=\"fillData(metadata)\">\n                                            <span *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                  [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                            </span>\n                                            <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                {{ metadata[field.label_short] }}\n                                            </span>\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label><mat-label>{{ field.label }}</mat-label>\n                                    <textarea matInput formControlName=\"{{ field.label_short }}\"\n                                              (ngModelChange)=\"setValueChange(field.label_short, $event)\"></textarea>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'text' && (!field.metadata_key || inputMode === 'Manual')\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <input matInput formControlName=\"{{ field.label_short }}\">\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\"\n                                                (selectionChange)=\"setValueChange(field.label_short, $event.value)\">\n                                        <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                            {{ option.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"w-full\" >\n                                    <input matInput [id]=\"field.id\" [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #datePicker></mat-datepicker>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\" class=\"flex justify-center inline-block my-4\">\n                                <mat-checkbox formControlName=\"{{ field.label_short }}\">{{ field.label }}</mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </form>\n                    <button mat-button (click)=\"downloadOriginalFile(); $event.stopPropagation();\"\n                            class=\"float-left mb-2\"\n                            matTooltip=\"{{ 'SPLITTER.show_original_file' | translate }}\">\n                        <i class=\"fa-solid fa-file-arrow-down fa-2x\" *ngIf=\"!downloadLoading\"></i>\n                        <i class=\"fas fa-circle-notch fa-spin fa-2x\" *ngIf=\"downloadLoading\"></i>\n                    </button>\n                    <button mat-button (click)=\"loadReferential(true); $event.stopPropagation();\"\n                            class=\"float-right mb-2\"\n                            matTooltip=\"{{ 'SPLITTER.load_referential' | translate }}\">\n                        <i class=\"fa-solid fa-sync fa-2x\"></i>\n                    </button>\n                </mat-expansion-panel>\n            </mat-accordion>\n            <span *ngIf=\"documents.length === 0\" class=\"block align-text-top text-center text-red-600\">{{ 'SPLITTER.no_document_to_show' | translate }}</span>\n            <div cdkDropList (cdkDropListDropped)=\"dropDocument($event)\">\n                <mat-card class=\"document w-full shadow-lg mb-4 border-2 border-slate-200\"\n                          *ngFor=\"let document of documents; let documentIndex = index;\" (click)=\"selectDocument(document)\" cdkDrag>\n                    <div class=\"w-full h-40 border-dashed border-2 border-gray-400 bg-gray-200\" *cdkDragPlaceholder></div>\n                    <div class=\"drag-document absolute w-6 h-6 -left-2 -top-2 z-10 rounded-full text-gray-400 text-center\n                      align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                      \" matTooltip=\"{{ 'SPLITTER.change_document_position' | translate }}\" cdkDragHandle>\n                        <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                    </div>\n                    <div *cdkDragPreview class=\"mt-4 drop-shadow-xl w-4/6 h-40 text-center text-gray-500 bg-slate-50 grid place-content-center\">\n                        <div class=\"absolute w-8 h-8 -left-2 -top-2 z-10 rounded-full text-center\n                              align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                              grid place-content-center\" cdkDragHandle>\n                            <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                        </div>\n                        <i class=\"fa-solid fa-copy fa-3x\"></i>\n                        <span>{{ 'SPLITTER.drop_document_in_position' | translate }}</span>\n                    </div>\n                    <mat-card-title>\n                        <mat-accordion class=\"block mx-auto my-4\" style=\"width:98%;\">\n                            <mat-expansion-panel class=\"bg-gray-20\" [expanded]=\"fieldsCategories['document_metadata'].length !== 0\" (opened)=\"documentMetadataOpenState = true\"\n                                                 (closed)=\"documentMetadataOpenState = false\" #documentMetadata>\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title class=\"max-w-11/12\">\n                                        <button class=\"max-w-full text-lg text-left hover:text-green-400 {{ document['class'] }}\"\n                                                [ngClass]=\"!document['doctypeLabel'] ? 'text-red-500':''\"\n                                                (click)=\"documentMetadata.toggle(); openDoctypeTree(document);\"\n                                                matTooltip=\"{{ 'GLOBAL.edit' | translate }}\">\n                                            <div class=\"font-medium truncate\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                                {{ document['doctypeLabel'] }}\n                                                <span *ngIf=\"!document['doctypeLabel']\" class=\"mx-2\">{{ 'SPLITTER.no_selected_doctype' | translate }}</span>\n                                            </div>\n                                        </button>\n                                    </mat-panel-title>\n                                    <button mat-button class=\"absolute right-7\" (click)=\"deleteDocument(documentIndex); $event.stopPropagation();\"\n                                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\">\n                                        <i class=\"fa-solid fa-trash-alt text-lg\"></i>\n                                    </button>\n                                </mat-expansion-panel-header>\n                                <div class=\"text-gray-400 w-full\">\n                                    <span class=\"m-6 w-11/12\">{{ 'SPLITTER.document_metadata' | translate }}</span>\n                                    <mat-divider class=\"mx-6\" style=\"width: 96%;\"></mat-divider>\n                                    <div *ngIf=\"fieldsCategories['document_metadata'].length === 0\">\n                                        <i class=\"text-center block fa-solid fa-check fa-3x\"></i>\n                                        <span class=\"block text-center\" >\n                                            {{ 'SPLITTER.no_metadata_required' | translate }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <form [formGroup]=\"document.form\" class=\"flex flex-wrap mx-6 mt-4\">\n                                    <div *ngFor=\"let field of fieldsCategories['document_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                                        <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>\n                                                    <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                                </mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\">\n                                                    <mat-option *ngIf=\"field.metadata_key\">\n                                                        <ngx-mat-select-search\n                                                                [formControlName]=\"'search_' + field.label_short\"\n                                                                placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                                [searching]=\"searching\"\n                                                                noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                                        </ngx-mat-select-search>\n                                                    </mat-option>\n                                                    <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                                [value]=\"metadata.metadataId\"\n                                                                (click)=\"fillData(metadata)\">\n                                                        <span *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                              [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                                        </span>\n                                                        <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                            {{ metadata[field.label_short] }}\n                                                        </span>\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'textarea'\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <textarea matInput formControlName=\"{{ field.label_short }}\"\n                                                          (ngModelChange)=\"setValueChange(field.label_short, $event)\"></textarea>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'text' && (!field.metadata_key || inputMode === 'Manual')\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <input matInput formControlName=\"{{ field.label_short }}\">\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'select'\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\"\n                                                            (selectionChange)=\"setValueChange(field.label_short, $event.value)\">\n                                                    <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                                        {{ option.label }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'date'\">\n                                            <mat-form-field class=\"w-full\" >\n                                                <input matInput [id]=\"field.id\" [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                                <mat-datepicker #datePicker></mat-datepicker>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'checkbox'\" class=\"flex justify-center inline-block my-4\">\n                                            <mat-checkbox formControlName=\"{{ field.label_short }}\">{{ field.label }}</mat-checkbox>\n                                        </ng-container>\n                                    </div>\n                                </form>\n                            </mat-expansion-panel>\n                        </mat-accordion>\n                    </mat-card-title>\n                    <mat-card-content class=\"document-content w-full h-104\">\n                        <div cdkDropListOrientation=\"horizontal\" (click)=\"selectDocument(document)\"\n                             class=\"drop-list bg-white flex flex-row rounded w-full overflow-auto min-h-full\"\n                             style=\"background-image: url('assets/imgs/dots.jpg');\"\n                             [ngClass]=\"currentBatch.selectedDocument.id === document.id ? 'border-2 border-green-400':\n                             'border-2 border-gray-200 hover:cursor-pointer'\"\n                             (cdkDropListDropped)=\"dropPage($event, document)\" cdkDropList\n                             id=\"{{ addDocumentIdToDropList(document['id']) }}\" [cdkDropListData]=\"document['pages']\"\n                             [cdkDropListConnectedTo]=\"DropListDocumentsIds\">\n                            <div class=\"page m-1.5 bg-gray-200 rounded-md cursor-move w-60 p-1.5\"\n                                 *ngFor=\"let page of document['pages']; let pageIndex = index;\"\n                                 (click)=\"selectPage(page)\" cdkDrag>\n                                <div class=\"bg-gray-200 m-1.5 border-dashed border-2 border-gray-400 p-3\" *cdkDragPlaceholder></div>\n                                <div class=\"flex justify-between w-60 h-12\">\n                                    <mat-checkbox [(ngModel)]=\"page['checkBox']\"\n                                                  (click)=\"$event.stopPropagation();\"\n                                                  (change)=\"countSelectedPages();\"\n                                                  matTooltip=\"{{ 'SPLITTER.select' | translate }}\"\n                                                  class=\"page-check-box float-left mt-4\" id=\"page-check-box-{{ page['id'] }}\">\n                                    </mat-checkbox>\n                                    <button mat-button class=\"page-header-btn text-gray-400 mt-0\"\n                                            (click)=\"rotatePage(documentIndex, pageIndex); $event.stopPropagation()\"\n                                            matTooltip=\"{{ 'SPLITTER.pageRotated' | translate }} {{ ' ' + page['rotation'] + ' ' + ('SPLITTER.degrees' | translate)}}\">\n                                        <span *ngIf=\"page['rotation'] !== 0\">\n                                            {{ page['rotation'] }}\n                                        </span>\n                                        <i class=\"fa-solid fa-rotate-right\"></i>\n                                    </button>\n                                    <button mat-button class=\"page-header-btn float-right bg-gray-100 mr-4 mt-0\"\n                                            matTooltip=\"{{ 'SPLITTER.zoom' | translate }}\"\n                                            (click)=\"getZoomPage(page); $event.stopPropagation();\">\n                                        <i *ngIf=\"page.id !== this.currentBatch.pageIdInLoad\" class=\"fa-solid fa-search-plus\"></i>\n                                        <i *ngIf=\"page.id === this.currentBatch.pageIdInLoad\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"></i>\n                                    </button>\n                                </div>\n                                <img class=\"z-10\" [ngClass]=\"\n                                         (page['rotation'] === 0)   ? 'rotate-0 m-auto':\n                                         (page['rotation'] === 90)  ? 'rotate-90 m-auto scale-75 px-2':\n                                         (page['rotation'] === 180) ? 'rotate-180 m-auto':\n                                         (page['rotation'] === -90) ? '-rotate-90 m-auto scale-75 px-2':\n                                     ''\"\n                                     [src]=\"page['thumbnail']\"\n                                     title=\"{{ 'SPLITTER.moveToAnotherDoc' | translate }}\"\n                                     alt=\"Open-Capture Splitter image\"/>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <mat-card class=\"splitter-tools divide-x divide-green-500 border-gray-300 py-0 mb-8 z-10 sticky bottom-2.5\">\n                <mat-card-content style=\"overflow: auto;\" class=\"grid grid-rows-1 grid-cols-3\">\n                    <div class=\"absolute top-5 left-8 text-gray-500 px-2 border border-gray-600 rounded-lg bg-slate-50\"\n                         matTooltip=\"{{ currentBatch.selectedPagesCount }} {{ 'SPLITTER.selected_pages' | translate }}\">\n                        <span class=\"font-medium mx-1\">{{ currentBatch.selectedPagesCount }}</span>\n                        <i class=\"fa-solid fa-file\"></i>\n                    </div>\n                    <div class=\"bg-slate-50 border border-gray-600 rounded-lg flex col-span-2 my-4 overflow-x-auto overflow-y-hidden\">\n                        <div class=\"flex items-center\">\n                            <button mat-button (click)=\"deleteSelectedPages()\"\n                                    class=\"btn-icon w-8 ml-4 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.delete_selected_pages' | translate }}\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\">\n                                <i class=\"fas fa-trash-alt text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(true)\" class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.select_all' | translate }}\">\n                                <i class=\"fas fa-check-circle text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(false)\"\n                                    class=\"btn-icon border-r-2 border-black w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.unselect_all' | translate }}\">\n                                <i class=\"fas fa-ban text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"rotateSelectedPages()\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\"\n                                    class=\"btn-icon btn-rotate w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.rotatePage' | translate }}\">\n                                <i class=\"fas fa-rotate-right text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"createDocument()\"\n                                    matTooltip=\"{{ 'SPLITTER.add_document' | translate }}\">\n                                <i class=\"fas fa-plus-circle fa-lg\" *ngIf=\"!addDocumentLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"addDocumentLoading\"></i>\n                            </button>\n                            <mat-form-field class=\"w-64 pt-2\">\n                                <mat-label>{{ 'SPLITTER.move_selected_to' | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"toolSelectedOption\">\n                                    <mat-option *ngFor=\"let document of this.documents;\" [value]=\"document['id']\" class=\"w-full document_type_options\">\n                                        {{ document['doctypeLabel'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <button (click)=\"sendSelectedPages()\" mat-button class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'GLOBAL.move' | translate }}\">\n                                <i class=\"fa fa-paper-plane text-lg\"></i>\n                            </button>\n                            <button (click)=\"saveModifications()\" mat-button class=\"w-8\"\n                                    matTooltip=\"{{ 'SPLITTER.save_changes' | translate }}\" [ngClass]=\"{'text-green-400': hasUnsavedChanges}\">\n                                <i class=\"fa fa-save fa-lg\" *ngIf=\"!saveInfosLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"saveInfosLoading\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"grid grid-cols-2 gap-4 text-gray-900 relative mt-6\">\n                        <button mat-button (click)=\"cancelBatchModification()\" type=\"submit\"\n                                class=\"ml-4 p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                            {{ 'GLOBAL.quit' | translate }}\n                        </button>\n                        <button mat-button (click)=\"validateWithConfirmation()\" type=\"submit\"\n                                [disabled]=\"this.currentBatch.outputs.length === 0 || this.currentBatch.status !== 'NEW' || documents.length === 0\"\n                                [ngClass]=\"this.currentBatch.outputs.length === 0 || this.currentBatch.status !== 'NEW' || documents.length === 0 ?\n                                'bg-gray-400 border-gray-400' : 'bg-green-400 border-green-400 hover:bg-transparent hover:text-gray-900 transition duration-300'\"\n                                class=\"p-6 border border-solid text-white\">\n                            <span *ngIf=\"!validateLoading\">{{ 'FORMS.validate' | translate }}</span>\n                            <span *ngIf=\"validateLoading\">\n                                <i class=\"fas fa-circle-notch fa-spin fa-xl\"></i>\n                            </span>\n                        </button>\n                        <div class=\"text-gray-400 -mt-2 col-start-2\">\n                            <span >{{ getOutputsLabels() }}</span>\n                            <span class=\"text-red-500\" *ngIf=\"this.currentBatch.outputs.length === 0\">{{ 'OUTPUT.no_output_configured' | translate }}</span>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-drawer-content>\n</mat-drawer-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan CHEVAL <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../env\";\nimport * as moment from \"moment/moment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\n\nexport class StatisticsComponent implements OnInit {\n    currentData         : any = [];\n    loading             : boolean = false;\n    options             : any = [\n        {\n            'id': 'verifier_documents_validated_per_user',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_user'),\n            'function': 'this.getUsersProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_validated_per_form',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_form'),\n            'function': 'this.getFormsProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded',\n            'label': this.translate.instant('STATISTICS.verifier_documents_uploaded'),\n            'function': 'this.getDocumentsUploadedVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded',\n            'label': this.translate.instant('STATISTICS.splitter_documents_uploaded'),\n            'function': 'this.getDocumentsUploadedSplitter',\n            'module': 'splitter',\n            'data': []\n        }\n    ];\n    diagramTypes        : any = [\n        {\n            'id': 'vertical-bar',\n            'label': marker('STATISTICS.diagram_vertical_bar'),\n            'logo': 'fa-chart-column'\n        },\n        {\n            'id': 'pie-chart',\n            'label': marker('STATISTICS.diagram_pie_chart'),\n            'logo': 'fa-chart-pie'\n        },\n        {\n            'id': 'pie-grid',\n            'label': marker('STATISTICS.diagram_pie_grid'),\n            'logo': 'fa-grip'\n        },\n\n    ];\n    selectedStatistic   : any;\n    selectedDiagramType : string = 'vertical-bar';\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n    }\n\n    getDocumentsUploadedVerifier(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=verifier&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getDocumentsUploadedSplitter(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=splitter&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormsProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.forms.forEach((form: any) => {\n                    this.http.post(environment['url'] + '/ws/verifier/documents/list',\n                        {'status': 'END', 'form_id': form.id}, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.options[cpt].data.push({\n                                'name': form.label + ' (' + form.module + ')',\n                                'value': data.total\n                            });\n                            this.currentData = this.options[cpt].data;\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getUsersProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=document_validated', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.users.forEach((user: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (user.id === _submodule.user_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': user.lastname + ' ' + user.firstname,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    changeStatistic(event: any) {\n        if (event.value) {\n            this.options.forEach((option: any, cpt: number) => {\n                if (option.id === event.value) {\n                    this.selectedStatistic = option;\n                    if (option.data.length === 0) {\n                        this.currentData = [];\n                        this.loading = true;\n                        eval(option['function'] + '(' + cpt + ')');\n                    }\n                    else {\n                        this.currentData = option.data;\n                    }\n                }\n            });\n        }\n    }\n\n    changeDiagramType(event: any) {\n        if (event.value) {\n            this.diagramTypes.forEach((option: any) => {\n                if (option.id === event.value) {\n                    this.selectedDiagramType = option.id;\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center h-full-overflow\">\n            <div class=\"w-full h-1 absolute text-center mt-2 z-50\">\n                <mat-form-field class=\"w-1/4\">\n                    <mat-select (selectionChange)=\"changeStatistic($event)\"\n                                [disabled]=\"this.loading\"\n                                [placeholder]=\"'STATISTICS.choose_statistic_report' | translate\">\n                        <mat-option *ngFor=\"let option of options\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }}\n                            <span style=\"font-size: 12px;\" class=\"text-green-400 ml-1 mt-2\">\n                               {{ option['module'] }}\n                            </span>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"ml-4 w-1/4\">\n                    <mat-select [disabled]=\"!this.selectedStatistic || this.loading\"\n                                [ngModel]=\"this.selectedDiagramType\" (selectionChange)=\"changeDiagramType($event)\"\n                                [placeholder]=\"'STATISTICS.choose_diagram' | translate\">\n                        <mat-option *ngFor=\"let option of diagramTypes\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }} <i class=\"fa-solid {{ option['logo'] }} ml-2\"></i>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"relative mt-20 w-full\" *ngIf=\"!loading && this.selectedStatistic\">\n                <ngx-charts-bar-vertical *ngIf=\"this.selectedDiagramType === 'vertical-bar'\"\n                        [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"true\" [showYAxisLabel]=\"true\"\n                        [showXAxisLabel]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-bar-vertical>\n                <ngx-charts-pie-chart *ngIf=\"this.selectedDiagramType === 'pie-chart'\" [results]=\"currentData\"\n                                      [labels]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-pie-chart>\n                <ngx-charts-pie-grid *ngIf=\"this.selectedDiagramType === 'pie-grid'\" [results]=\"currentData\"></ngx-charts-pie-grid>\n                <ngx-charts-line-chart *ngIf=\"this.selectedDiagramType === 'line-charts'\" [showXAxisLabel]=\"true\"\n                        [showYAxisLabel]=\"true\" [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"false\">\n                </ngx-charts-line-chart>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class UploadComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    selectedWorkflow            : any           = '';\n    selectedWorkflowTechnicalId : any           = '';\n    workflows                   : any[]         = [];\n    loading                     : boolean       = true;\n    sending                     : boolean       = false;\n    error                       : boolean       = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public localStorageService: LocalStorageService\n    ) {}\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        this.http.get(environment['url'] + '/ws/workflows/' + splitterOrVerifier + '/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.workflows = data.workflows;\n                if (this.workflows.length === 1) {\n                    this.selectedWorkflow = data.workflows[0].id;\n                    this.selectedWorkflowTechnicalId = data.workflows[0].workflow_id;\n                }\n             }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkFile(data: any): void {\n        this.error = false;\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.error = true;\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    setWorkflow(workflowId: any) {\n        this.workflows.forEach((element: any) => {\n            if (element.id === workflowId) {\n                this.selectedWorkflowTechnicalId = element.workflow_id;\n            }\n        });\n        this.selectedWorkflow = workflowId;\n    }\n\n    uploadFile(): void {\n        this.sending = true;\n        const formData: FormData = new FormData();\n        let numberOFFiles = 0;\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            numberOFFiles++;\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n        formData.set('workflowId', this.selectedWorkflowTechnicalId);\n        formData.set('userId', this.userService.user.id);\n\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier !== undefined || splitterOrVerifier !== '') {\n            this.http.post(\n                environment['url'] + '/ws/verifier/checkFileBeforeUpload', formData, {headers: new HttpHeaders({ timeout: `${2000}` })},\n            ).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/' + splitterOrVerifier + '/upload', formData, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.sending = false;\n                            this.fileControl.setValue([]);\n                            this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                        }),\n                        catchError((err: any) => {\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError(() => {\n                    this.sending = false;\n                    this.fileControl.setValue([]);\n                    this.notify.handleErrors(this.translate.instant('ERROR.permission_problem'));\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n            return;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"2xl:w-96 xl:w-80 md:w-72 sm:w-64 w-32 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\">\n            {{ \"ACCOUNTS.choose_workflow_upload\" | translate }}\n        </h3>\n        <mat-divider></mat-divider>\n        <mat-list class=\"h-full-overflow overflow-auto\">\n            <mat-list-item *ngFor=\"let workflow of workflows\" class=\"cursor-pointer m-2 w-auto\" (click)=\"setWorkflow(workflow.id)\">\n                <span [class.text-green-400]=\"this.selectedWorkflow === workflow.id\" class=\"hover:text-green-400\"\n                      [matTooltip]=\"workflow.label\" [matTooltipDisabled]=\"workflow.label.replace(' ', '').length <= 20\">\n                    {{ workflow.label }}\n                </span>\n                <span *ngIf=\"this.selectedWorkflow === workflow.id\">\n                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\" class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <ngx-file-drag-drop\n                [class.pointer-events-none]=\"this.sending\"\n                [class.disabled]=\"this.sending\"\n                [formControl]=\"fileControl\"\n                [activeBorderColor]=\"'#97BF3D'\"\n                [multiple]=\"true\"\n                [accept]=\"'pdf'\"\n                [displayFileSize]=\"true\"\n                [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n                [class]=\"'max-w-3xl h-56 mt-24 mb-5'\"\n                (valueChanged)=\"checkFile($event)\">\n        </ngx-file-drag-drop>\n        <div class=\"text-center\" [class.cursor-not-allowed]=\"this.error || !(!this.sending && this.fileControl.value!.length !== 0)\">\n            <button mat-button\n                    [disabled]=\"this.error || this.sending || (this.selectedWorkflow === '') || this.fileControl.value!.length === 0\" (click)=\"uploadFile()\"\n                    [class.bg-opacity-100]=\"!this.error && !this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0\"\n                    [class.bg-green-400]=\"!this.error && !this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0\"\n                    [class.bg-gray-400]=\"this.error || !(!this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0)\"\n                    class=\"p-6 mr-4 border min-w-56 text-white transition border-solid duration-300 border-green-400 hover:text-gray-900 hover:bg-transparent\">\n                {{ 'UPLOAD.upload_file' | translate }}\n            </button>\n        </div>\n        <span *ngIf=\"this.selectedWorkflow === ''\" class=\"flex justify-center mt-4 text-red-500\">\n            {{ 'UPLOAD.please_select_workflow' | translate }}\n        </span>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { FlatTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeFlatDataSource, MatTreeFlattener } from \"@angular/material/tree\";\nimport { UserService } from \"../../../services/user.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ConfigService } from \"../../../services/config.service\";\nimport { FormControl } from \"@angular/forms\";\n\ninterface AccountsNode {\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    purchase_or_sale: any\n    count: number\n    display: boolean\n    children: any\n}\n\ninterface FlatNode {\n    expandable: boolean\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    purchase_or_sale: any\n    display: boolean\n    count: number\n    level: number\n    children: any\n}\n\n@Component({\n    selector: 'app-verifier-list',\n    templateUrl: './verifier-list.component.html',\n    styleUrls: ['./verifier-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class VerifierListComponent implements OnInit {\n    loading                 : boolean           = true;\n    loadingCustomers        : boolean           = true;\n    status                  : any[]             = [];\n    forms                   : any[]             = [\n        {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n        {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n    ];\n    filteredForms           : any[]             = [];\n    config                  : any;\n    currentForm             : any               = '';\n    currentStatus           : string            = 'NEW';\n    currentTime             : string            = 'today';\n    batchList               : any[]             = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today')\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday')\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older')\n        }\n    ];\n    pageSize                : number            = 16;\n    pageIndex               : number            = 0;\n    pageSizeOptions         : any []            = [4, 8, 12, 16, 24, 48];\n    total                   : number            = 0;\n    totals                  : any               = {};\n    offset                  : number            = 0;\n    selectedTab             : number            = 0;\n    documents               : any []            = [];\n    allowedCustomers        : any []            = [];\n    allowedSuppliers        : any []            = [];\n    purchaseOrSale          : string            = '';\n    search                  : string            = '';\n    TREE_DATA               : AccountsNode[]    = [];\n    expanded                : boolean           = false;\n    documentToDeleteSelected : boolean           = false;\n    totalChecked            : number            = 0;\n    customerFilterEmpty     : boolean           = false;\n    customerFilter        = new FormControl('');\n    customerFilterEnabled   : boolean           = false;\n\n    private _transformer = (node: AccountsNode, level: number) => ({\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        supplier_id: node.supplier_id,\n        id: node.id,\n        parent_id: node.parent_id,\n        purchase_or_sale: node.purchase_or_sale,\n        display: node.display,\n        count: node.count,\n        level: level,\n        children: node.children\n    });\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n    isLevelOne = (_: number, node: FlatNode) => node.level === 1;\n    isLevelTwo = (_: number, node: FlatNode) => node.level === 2;\n    isNotLevelOne = (_: number, node: FlatNode) => node.level !== 1;\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        marker('VERIFIER.nb_pages'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.expand_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.collapse_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.select_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.unselect_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.documents_settings'); // Needed to get the translation in the JSON file\n        this.localStorageService.save('splitter_or_verifier', 'verifier');\n        this.removeLockByUserId(this.userService.user.username);\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('verifier/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.localStorageService.get('documentsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('documentsPageIndex') as string);\n            if (this.localStorageService.get('documentsTimeIndex')) {\n                this.selectedTab = parseInt(this.localStorageService.get('documentsTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('documentsPageIndex');\n            this.localStorageService.remove('documentsTimeIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/status/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        setTimeout(() => {\n            this.loadForms();\n            this.loadCustomers();\n        }, 100);\n    }\n\n    loadForms() {\n        this.http.get(environment['url'] + '/ws/forms/verifier/list?totals=true&status=' + this.currentStatus + '&user_id=' + this.userService.user.id + '&time=' + this.currentTime, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.filteredForms = [];\n                this.forms = [\n                    {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n                    {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n                ];\n                data.forms.forEach((form: any) => {\n                    this.forms.push(form);\n                    this.filteredForms.push(form);\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLockByUserId(userId: any) {\n        this.http.put(environment['url'] + '/ws/verifier/documents/removeLockByUserId/' + userId, {}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.TREE_DATA = [];\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const customers = data.customers;\n                this.TREE_DATA.push({\n                    name: this.translate.instant('ACCOUNTS.customer_not_specified'),\n                    id: 0,\n                    parent_id: '',\n                    supplier_id: '',\n                    purchase_or_sale: '',\n                    display: true,\n                    count: 0,\n                    children: []\n                });\n                this.allowedCustomers.push(0); // 0 is used if for some reasons no customer was recover by OC process\n                this.http.get(environment['url'] + '/ws/users/getCustomersByUserId/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n                    tap((data_customers_by_id: any) => {\n                        customers.forEach((customer: any) => {\n                            data_customers_by_id.forEach((customer_id: any) => {\n                                if (customer_id === customer.id) {\n                                    this.allowedCustomers.push(customer.id);\n                                    this.TREE_DATA.push({\n                                        name: customer.name,\n                                        id: customer.id,\n                                        parent_id: '',\n                                        supplier_id: '',\n                                        purchase_or_sale: '',\n                                        display: true,\n                                        count: 0,\n                                        children: [],\n                                    });\n                                }\n                            });\n                        });\n                        this.loadDocuments().then();\n                    }),\n                    finalize(() => this.loadingCustomers = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async loadDocuments(loading = true) {\n        this.documentToDeleteSelected = false;\n        this.totalChecked = 0;\n        if (loading) {\n            this.documents = [];\n            this.loading = true;\n        }\n        this.loadingCustomers = true;\n        this.loadForms();\n        let url = environment['url'] + '/ws/verifier/documents/totals/' + this.currentStatus + '/' + this.userService.user.id;\n        if (this.currentForm !== '') {\n            url = environment['url'] + '/ws/verifier/documents/totals/' + this.currentStatus + '/' + this.userService.user.id + '/' + this.currentForm;\n        }\n        this.http.get(url, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.post(environment['url'] + '/ws/verifier/documents/list',\n            {\n                'allowedCustomers': this.allowedCustomers, 'status': this.currentStatus, 'limit': this.pageSize,\n                'allowedSuppliers': this.allowedSuppliers, 'form_id': this.currentForm, 'time': this.currentTime,\n                'offset': this.offset, 'search': this.search, 'purchaseOrSale': this.purchaseOrSale\n            },\n            {headers: this.authService.headers}\n        ).pipe(\n            tap((data: any) => {\n                if (data) {\n                    if (data.documents.length !== 0) this.total = data.total;\n                    else if (this.pageIndex !== 0) {\n                        this.pageIndex = this.pageIndex - 1;\n                        this.offset = this.pageSize * (this.pageIndex);\n                        this.loadDocuments();\n                    }\n                    this.documents = data.documents;\n                    this.documents.forEach((document: any) => {\n                        if (document.document_id) {\n                            document.datas.document_id = document.document_id;\n                        }\n                        if (!document.thumb.includes('data:image/jpeg;base64')) {\n                            document.thumb = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + document.thumb);\n                        }\n                        if (document.form_label === null || document.form_label === '' || document.form_label === undefined) {\n                            document.form_label = this.translate.instant('VERIFIER.no_form');\n                        }\n                        if (!document.form_id) {\n                            document.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"ACCOUNTS.form\"}\n                                ]\n                            };\n                        } else {\n                            this.forms.forEach((form: any) =>  {\n                                if (form.id === document.form_id) {\n                                    if (form.settings.display) {\n                                        document.display = form.settings.display;\n                                    }\n                                }\n                            });\n                        }\n\n                        if (!document.display) {\n                            document.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"VERIFIER.form\"}\n                                ]\n                            };\n                        }\n\n                        const document_display_tmp = document.display.subtitles;\n                        document.display = {'subtitles': []};\n                        document_display_tmp.forEach((subtitle: any) => {\n                            let subtitle_data = '';\n                            if (document.datas.hasOwnProperty(subtitle.id)) {\n                                subtitle_data = document.datas[subtitle.id];\n                            } else if (document.hasOwnProperty(subtitle.id)) {\n                                subtitle_data = document[subtitle.id];\n                            }\n\n                            document.display.subtitles.push({\n                                'id': subtitle.id,\n                                'label': subtitle.label,\n                                'data': subtitle_data\n                            });\n                        });\n                    });\n                }\n\n                /*\n                * Starting from here, we fill the customers tree\n                */\n                const customersPurchaseToKeep : any = [];\n                const customersSaleToKeep : any = [];\n                this.allowedCustomers.forEach((customer: any) => {\n                    this.documents.forEach((document:any) => {\n                        if (document.purchase_or_sale === 'purchase' && !customersPurchaseToKeep.includes(customer)) {\n                            customersPurchaseToKeep.push(customer);\n                        }\n                        if (document.purchase_or_sale === 'sale' && !customersSaleToKeep.includes(customer)) {\n                            customersSaleToKeep.push(customer);\n                        }\n                    });\n                });\n\n                /*\n                * RESET the TREE DATA before re populate it\n                */\n                this.TREE_DATA.forEach((_data: any, index: number) => {\n                    this.TREE_DATA[index].display = true;\n                    this.TREE_DATA[index].count = 0;\n                    this.TREE_DATA[index].children = [];\n                });\n\n                this.TREE_DATA.forEach((_data: any, index: number) => {\n                    customersSaleToKeep.forEach((customer1: any) => {\n                        if (_data.id === customer1) {\n                            let childExists = false;\n                            this.TREE_DATA[index].children.forEach((child: any) => {\n                                if (child.id === 0) {\n                                    childExists = true;\n                                }\n                            });\n                            if (!childExists) {\n                                this.TREE_DATA[index].children.push(\n                                    {name: this.translate.instant('UPLOAD.sale_invoice'), id: 0, display: true, count: 0, children: []},\n                                );\n                                this.createChildren('sale', 0, index);\n                            }\n                        }\n                    });\n                    customersPurchaseToKeep.forEach((customer2: any) => {\n                        if (_data.id === customer2) {\n                            if (this.TREE_DATA[index]) {\n                                let childExists = false;\n                                this.TREE_DATA[index].children.forEach((child: any) => {\n                                    if (child.id === 1) {\n                                        childExists = true;\n                                    }\n                                });\n                                if (!childExists) {\n                                    this.TREE_DATA[index].children.push(\n                                        {name: this.translate.instant('UPLOAD.purchase_invoice'), id: 1, display: true, count: 0, children: []},\n                                    );\n                                    this.createChildren('purchase', 1, index);\n                                }\n                            }\n                        }\n                    });\n                });\n                this.dataSource.data = this.TREE_DATA;\n                this.filterCustomers();\n            }),\n            finalize(() => {\n                this.loading = false;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    fillChildren(parentId: any, parent: any, childName: any, supplierName: any, supplierId: any, id: any, purchaseOrSale: any) {\n        let childNameExists = false;\n        parent.forEach((child: any) => {\n            if (child.name === supplierName ) {\n                childNameExists = true;\n                child.count = child.count + 1;\n            }\n        });\n\n        if (!childNameExists) {\n            parent.push({\n                name: supplierName,\n                supplier_id: supplierId,\n                id: id,\n                parent_id: parentId,\n                purchase_or_sale: purchaseOrSale,\n                count: 1,\n                display: true\n            });\n        }\n    }\n\n    resetSearchCustomer() {\n        this.customerFilter.setValue('');\n        this.filterCustomers();\n    }\n\n    filterCustomers() {\n        const tmpData = this.dataSource.data;\n        this.customerFilterEmpty = false;\n        let customerMatch = false;\n        tmpData.forEach((element: any) => {\n            if (element.name.toLowerCase().includes(this.customerFilter.value!.toLowerCase())) {\n                element.display = true;\n                customerMatch = true;\n            } else {\n                element.display = false;\n            }\n        });\n        if (!customerMatch) this.customerFilterEmpty = true;\n        this.dataSource.data = tmpData;\n    }\n\n    changeCustomer(customerId: number, documentId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + documentId + '/update',\n            {'args': {\"customer_id\": customerId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetDocuments();\n                    this.notify.success(this.translate.instant('VERIFIER.customer_changed_successfully'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    changeDocumentForm(formId: number, documentId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + documentId + '/update',\n            {'args': {\"form_id\": formId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetDocuments();\n                    this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    createChildren(purchaseOrSale: any, id: any, index: any) {\n        this.TREE_DATA[index].children.forEach((child: any) => {\n            if (child.id === id) {\n                this.documents.forEach((document: any) => {\n                    if (this.TREE_DATA[index].id === document.customer_id && document.purchase_or_sale === purchaseOrSale) {\n                        if (document.supplier_id) {\n                            this.fillChildren(this.TREE_DATA[index].id, child.children, document.supplier_name, document.supplier_name, document.supplier_id, document.document_id, purchaseOrSale);\n                        } else {\n                            this.fillChildren(this.TREE_DATA[index].id, child.children, document.supplier_name, this.translate.instant('ACCOUNTS.supplier_unknow'), document.supplier_id, document.document_id, purchaseOrSale);\n                        }\n                        child.count = child.count + 1;\n                        this.TREE_DATA[index].count = this.TREE_DATA[index].count + 1;\n                    }\n                });\n            }\n        });\n    }\n\n    loadDocumentPerCustomer(node: any) {\n        const parentId = node.parent_id;\n        const supplierId = node.supplier_id;\n        const purchaseOrSale = node.purchase_or_sale;\n        this.TREE_DATA.forEach((element: any) => {\n            if (element.id === parentId) {\n                const customerId = element.id;\n                this.customerFilterEnabled = true;\n                this.allowedCustomers = [customerId];\n                this.allowedSuppliers = [supplierId];\n                this.purchaseOrSale = purchaseOrSale;\n                this.resetPaginator();\n                this.loadDocuments().then();\n            }\n        });\n    }\n\n    resetDocuments() {\n        this.search = '';\n        this.loading = true;\n        this.currentForm = '';\n        this.purchaseOrSale = '';\n        this.loadingCustomers = true;\n        this.allowedCustomers = [];\n        this.allowedSuppliers = [];\n        this.customerFilterEnabled = false;\n        this.loadCustomers();\n        this.resetPaginator();\n        this.resetSearchCustomer();\n    }\n\n    selectOrUnselectAllDocuments(event: any) {\n        const label = event.srcElement.textContent;\n        this.documentToDeleteSelected = !this.documentToDeleteSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllDocuments() {\n        this.loading = true;\n        this.loadingCustomers = true;\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any) => {\n            const documentId = element.id.split('_')[0];\n            this.deleteDocument(documentId, true);\n        });\n        this.notify.success(this.translate.instant('VERIFIER.all_documents_checked_deleted'));\n        this.loadCustomers();\n    }\n\n    deleteDocument(documentId: number, batchDelete = false) {\n        this.http.delete(environment['url'] + '/ws/verifier/documents/delete/' + documentId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (!batchDelete) {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('VERIFIER.documents_deleted'));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkCheckedDocuments() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.documentToDeleteSelected = this.totalChecked !== 0;\n    }\n\n    deleteConfirmDialog(documentId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_document'),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.loadingCustomers = true;\n                this.deleteDocument(documentId);\n            }\n        });\n    }\n\n    displayDocumentLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('VERIFIER.document_locked'),\n                confirmText         : this.translate.instant('VERIFIER.document_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\"\n        });\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_all_documents'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllDocuments();\n            }\n        });\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadDocuments().then();\n    }\n\n    changeForm(event: any) {\n        this.currentForm = event.value;\n        this.resetPaginator();\n        this.loadDocuments().then();\n    }\n\n    onTabChange(event: any) {\n        this.search = '';\n        this.selectedTab = event.index;\n        this.localStorageService.save('documentsTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.resetPaginator();\n        this.loadDocuments().then();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('documentsPageIndex', event.pageIndex);\n        this.loadDocuments().then();\n    }\n\n    searchDocument(event: any) {\n        this.search = event.target.value;\n        this.loadDocuments(false).then();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n        this.localStorageService.save('documentsPageIndex', this.pageIndex);\n    }\n\n    expandAll() {\n        if (!this.expanded) this.treeControl.expandAll();\n        else this.treeControl.collapseAll();\n        this.expanded = !this.expanded;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" autosize>\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"2xl:w-80 xl:w-72 sm:w-64 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\" [class.pointer-events-none]=\"this.loading\">\n            <i class=\"fa-solid text-gray-900 fa-sync-alt mr-4 cursor-pointer transition-all duration-300\"\n               [ngClass]=\"{'text-green-400': this.customerFilter.value || this.customerFilterEnabled, 'fa-beat': this.customerFilter.value || this.customerFilterEnabled}\"\n               [matTooltip]=\"'VERIFIER.reset_document_list' | translate\" (click)=\"resetDocuments()\"></i>\n            {{ \"VERIFIER.suppliers_by_customer\" | translate }}\n            <i [class.fa-compress-arrows-alt]=\"this.expanded\" [class.fa-expand-arrows-alt]=\"!this.expanded\"\n               class=\"fa-solid ml-4 cursor-pointer\" (click)=\"expandAll()\"\n               [matTooltip]=\"!this.expanded ? this.translate.instant('VERIFIER.expand_all') : this.translate.instant('VERIFIER.collapse_all')\"></i>\n        </h3>\n        <mat-divider></mat-divider>\n        <div class=\"pb-6\">\n            <mat-form-field class=\"px-4 pt-4 -mb-6 w-full\" appearance=\"outline\" [class.pointer-events-none]=\"this.loadingCustomers || this.dataSource.data.length === 0\">\n                <mat-label>\n                    {{ 'VERIFIER.search_customer' | translate }}\n                </mat-label>\n                <input matInput type=\"text\" [formControl]=\"this.customerFilter\" (keyup)=\"filterCustomers()\" autocomplete=\"off\"\n                       [readonly]=\"this.loadingCustomers || this.dataSource.data.length === 0\">\n                <button matSuffix class=\"text-gray-900 cursor-pointer\" (click)=\"resetSearchCustomer()\" *ngIf=\"this.customerFilter.value\">\n                    <i class=\"fa-solid fa-sync-alt text-xl relative mr-4\"\n                       [matTooltip]=\"'VERIFIER.reset_customers_search' | translate\"></i>\n                </button>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"this.loadingCustomers || this.dataSource.data.length === 0\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 10rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-users fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'VERIFIER.loading_customers' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"this.customerFilter.value && !this.loadingCustomers && this.customerFilterEmpty\"\n             class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 10rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-ban fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'VERIFIER.no_customers_filter' | translate }}\n                </span>\n            </div>\n        </div>\n        <mat-tree *ngIf=\"!this.loadingCustomers && this.dataSource.data.length !== 0\" [dataSource]=\"this.dataSource\"\n                  [treeControl]=\"this.treeControl\">\n            <mat-tree-node style=\"min-height: 24px\" class=\"pl-12 cursor-pointer hover:bg-black hover:bg-opacity-20\"\n                           *matTreeNodeDef=\"let node; when:isLevelTwo;\" (click)=\"loadDocumentPerCustomer(node)\">\n                <button mat-icon-button disabled>\n                    <i class=\"text-green-400 ml-4 text-base fa-solid fa-user pb-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                <span class=\"float-right ml-auto select-none mr-6 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node style=\"min-height: 24px\" class=\"parent cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                           *matTreeNodeDef=\"let node; when: hasChild; when:isNotLevelOne\" matTreeNodeToggle\n                           [class.hidden]=\"!node.display || (node.count === 0 && node.id === 0)\">\n                <button mat-icon-button [class.hidden]=\"node.count === 0 && node.id === 0\">\n                    <mat-icon class=\"mat-icon-rtl-mirror text-gray-900\">\n                        {{ this.treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n                    </mat-icon>\n                </button>\n                <span class=\"select-none\" [class.pointer-events-none]=\"node.count === 0\"\n                      [class.hidden]=\"node.count === 0 && node.id === 0\">\n                    {{ node.name }}\n                </span>\n                <span *ngIf=\"!this.treeControl.isExpanded(node)\" [class.hidden]=\"node.count === 0 && node.id === 0\"\n                      class=\"float-right ml-auto select-none mr-4 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node [class.hidden]=\"node.count === 0\" style=\"min-height: 24px\"\n                           class=\"child pl-6 cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                           *matTreeNodeDef=\"let node;when: isLevelOne;\" matTreeNodeToggle>\n                <button mat-icon-button>\n                    <i [class.fa-folder-open]=\"this.treeControl.isExpanded(node)\"\n                       class=\"text-gray-600 fa-solid fa-folder text-lg relative -top-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                <span *ngIf=\"!this.treeControl.isExpanded(node)\" class=\"float-right ml-auto select-none mr-12 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n        </mat-tree>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\"\n                class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\"\n               class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\"\n                       class=\"batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of batchList\"  [id]=\"batch.id\" [disabled]=\"this.loading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"verifier-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <mat-form-field class=\"mb-3 relative left-4 w-3/4\" appearance=\"outline\">\n                            <mat-label>{{ 'VERIFIER.search' | translate }}</mat-label>\n                            <input matInput type=\"text\" [(ngModel)]=\"search\" [disabled]=\"this.total === 0\" (keyup)=\"searchDocument($event)\">\n                        </mat-form-field>\n                        <div class=\"w-full m-auto grid grid-cols-2 gap-2\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\"\n                                            [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'SETTINGS.list_forms' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentForm\" (selectionChange)=\"changeForm($event)\" [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">\n                                        {{ option['label'] | translate }}\n                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 font-bold\">{{ option['total'] }}</span>\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <span [class.hidden]=\"this.loading || this.total === 0\" class=\"relative right-0\">\n                            <mat-paginator [length]=\"this.total\" [pageSize]=\"this.pageSize\" [pageIndex]=\"this.pageIndex\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\" (page)=\"onPageChange($event)\">\n                            </mat-paginator>\n                        </span>\n                    </div>\n\n                    <div class=\"z-30 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.documents.length > 1\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllDocuments($event)\"\n                              [innerHTML]=\"this.documentToDeleteSelected ? this.translate.instant('VERIFIER.unselect_all') : this.translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.documentToDeleteSelected\"\n                              (click)=\"$event.stopPropagation();deleteAllConfirmDialog()\">\n                            <i class=\"fa-solid fa-trash ml-2 text-red-500 cursor-pointer\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n\n                    <div *ngIf=\"this.documents.length === 0\" class=\"m-4\">\n                        {{ 'SPLITTER.no_batch_found' | translate }}\n                    </div>\n\n                    <div *ngIf=\"this.loading\">\n                        <app-loader></app-loader>\n                    </div>\n\n                    <div class=\"content mx-5 mt-6\" *ngIf=\"!this.loading\">\n                        <div class=\"cards-list list grid md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 grid-flow-row gap-4\">\n                            <mat-card *ngFor=\"let document of this.documents;\" class=\"cursor-pointer p-0 mb-0\">\n                                <label class=\"p-4 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ document.document_id }}_checkbox\" (click)=\"checkCheckedDocuments()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\" type=\"checkbox\">\n                                </label>\n                                <div *ngIf=\"document.facturx\" class=\"text-center text-gray-400 mt-2\" [matTooltip]=\"'VERIFIER.facturx_level' | translate : {level : document.facturx_level}\">\n                                    {{ \"VERIFIER.facturx\" | translate }}\n                                </div>\n                                <div class=\"absolute right-0 pt-4 pr-5 z-40\">\n                                    <div [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                         [matTooltip]=\"this.translate.instant('VERIFIER.documents_settings')\">\n                                        <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                                    </div>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"customers\">\n                                            {{ \"WORKFLOW.associated_customer\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"formMenu\">\n                                            {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #customers=\"matMenu\">\n                                        <button mat-menu-item *ngFor=\"let customer of this.dataSource.data\"\n                                                (click)=\"changeCustomer(customer.id, document.document_id)\">\n                                            <span [class.text-green-400]=\"customer.id === document.customer_id\">\n                                                {{ customer.name | translate }}\n                                            </span>\n                                            <span *ngIf=\"customer.id === document.customer_id\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #formMenu=\"matMenu\">\n                                        <button mat-menu-item (click)=\"changeDocumentForm(form.id, document.document_id)\"\n                                                *ngFor=\"let form of this.filteredForms\">\n                                            <span [class.text-green-400]=\"form.id === document.form_id\">\n                                                {{ form.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"form.id === document.form_id\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <img [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document.document_id\"\n                                     mat-card-image class=\"m-auto p-4\" [src]=\"document.thumb\" alt=\"Open-Capture image\"\n                                     (click)=\"document.locked ? displayDocumentLocked(document.locked_by) : ''\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                        [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document.document_id\"\n                                        (click)=\"document.locked ? displayDocumentLocked(document.locked_by) : ''\">\n                                    <mat-card-title class=\"break-all\">\n                                        <span class=\"leading-7\">\n                                            <i [matTooltip]=\"'VERIFIER.document_locked' | translate\"\n                                               class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"\n                                               *ngIf=\"document.locked\"></i>\n                                            {{ document.supplier_name ? document.supplier_name : 'ACCOUNTS.supplier_unknow' | translate }}\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              [matTooltip]=\"this.translate.instant('VERIFIER.nb_pages') + ' : ' + document.nb_pages\">\n                                            {{ document.nb_pages }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1\">\n                                        <div class=\"-mb-1 text-base text-ellipsis overflow-hidden w-full inline-block\"\n                                             *ngFor=\"let subtitles of document.display['subtitles']\">\n                                            <strong>{{ subtitles['label'] | translate }}</strong>&nbsp;:&nbsp;{{ subtitles['data'] }}\n                                        </div>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4 pl-4\">\n                                    <i class=\"fa-solid fa-trash cursor-pointer text-red-500\"\n                                       (click)=\"$event.stopPropagation();deleteConfirmDialog(document.document_id)\">\n                                       <span class=\"font-medium mat-typography\">{{ 'VERIFIER.delete_document' | translate }}</span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from  \"../../env\";\nimport { catchError, map, startWith, tap } from \"rxjs/operators\";\nimport { interval, Observable, of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { DatePipe } from '@angular/common';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport * as moment from 'moment';\nimport { UserService } from \"../../../services/user.service\";\nimport { HistoryService } from \"../../../services/history.service\";\nimport { LocaleService } from \"../../../services/locale.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\ndeclare const $: any;\n\n@Component({\n    selector: 'verifier-viewer',\n    templateUrl: './verifier-viewer.component.html',\n    styleUrls: ['./verifier-viewer.component.scss'],\n    providers: [DatePipe]\n})\n\nexport class VerifierViewerComponent implements OnInit, OnDestroy {\n    imageDocument           : any;\n    documentId              : any;\n    document                : any;\n    fields                  : any;\n    fromTokenFormId         : any;\n    saveInfo                : boolean     = true;\n    loading                 : boolean     = true;\n    supplierExists          : boolean     = true;\n    deleteDataOnChangeForm  : boolean     = true;\n    processMultiDocument    : boolean     = false;\n    isOCRRunning            : boolean     = false;\n    processDone             : boolean     = false;\n    fromToken               : boolean     = false;\n    settingsOpen            : boolean     = false;\n    ocrFromUser             : boolean     = false;\n    accountingPlanEmpty     : boolean     = false;\n    getOnlyRawFooter        : boolean     = false;\n    disableOCR              : boolean     = false;\n    tokenINSEEError         : boolean     = false;\n    visualIsHide            : boolean     = false;\n    loadingSubmit           : boolean     = false;\n    formEmpty               : boolean     = false;\n    processInError          : boolean     = false;\n    processErrorMessage     : string      = '';\n    processErrorIcon        : string      = '';\n    token                   : string      = '';\n    oldVAT                  : string      = '';\n    oldSIRET                : string      = '';\n    oldSIREN                : string      = '';\n    currentFilename         : string      = '';\n    lastLabel               : string      = '';\n    lastId                  : string      = '';\n    lastColor               : string      = '';\n    toHighlight             : string      = '';\n    toHighlightAccounting   : string      = '';\n    tokenINSEE              : string      = '';\n    imgSrc                  : SafeUrl     = '';\n    ratio                   : number      = 0;\n    currentPage             : number      = 1;\n    accountingPlan          : any         = {};\n    formSettings            : any         = {};\n    workflowSettings        : any         = {};\n    formList                : any         = {};\n    currentFormFields       : any         = {};\n    imgArray                : any         = {};\n    currentSupplier         : any         = {};\n    suppliers               : any         = [];\n    outputsLabel            : any         = [];\n    outputs                 : any         = [];\n    multiDocumentsData      : any         = [];\n    fieldCategories         : any[]       = [\n        {\n            id: 'supplier',\n            label: this.translate.instant('FORMS.supplier')\n        },\n        {\n            id: 'lines',\n            label: this.translate.instant('FACTURATION.lines')\n        },\n        {\n            id: 'facturation',\n            label: this.translate.instant('FACTURATION.facturation')\n        },\n        {\n            id: 'other',\n            label: this.translate.instant('FORMS.other')\n        }\n    ];\n    form                    : any         = {\n        supplier      : [],\n        lines         : [],\n        facturation   : [],\n        other         : []\n    };\n    pattern                 : any         = {\n        alphanum                        : '^[(\\\\-)?0-9a-zA-Z\\\\s\\']*$',\n        alphanum_extended               : '^[(\\\\-)?0-9a-zA-Z-/#,\\\\.\\'\\\\s]*$',\n        alphanum_extended_with_accent   : '^[(\\\\-)?0-9a-zA-Z\\\\u00C0-\\\\u017F-/#,\\'\\\\.\\\\s]*$',\n        number_int                      : '^[(\\\\-)?0-9]*$',\n        number_float                    : '^[(\\\\-)?0-9]*([.][0-9]*)*$',\n        char                            : '^[A-Za-z\\\\s]*$',\n        email                           : '^([A-Za-z0-9]+[\\\\.\\\\-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\\\.[A-Z|a-z]{2,})+$'\n    };\n    supplierNamecontrol     : FormControl =  new FormControl();\n    filteredOptions         : Observable<any> | any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    async ngOnInit(document_id_from_multi = false): Promise<void> {\n        this.localStorageService.save('splitter_or_verifier', 'verifier');\n        this.ocrFromUser = false;\n        this.saveInfo = true;\n\n        if (this.route.snapshot.params['token']) {\n            const token = this.route.snapshot.params['token'];\n            const res: any = await this.retrieveDocumentIdAndStatusFromToken(token);\n            this.fromToken = true;\n            this.token = res['token'];\n            if (res['status'] === 'wait') {\n                this.loading = false;\n                this.processErrorIcon = 'fa-clock fa-fade text-gray-400';\n                this.processErrorMessage = marker('VERIFIER.waiting');\n                await this.reloadPageWaitingFinish(token);\n                return;\n            } else if (res['status'] === 'running') {\n                this.loading = false;\n                this.processErrorIcon = 'fa-circle-notch fa-spin text-green-400';\n                this.processErrorMessage = marker('VERIFIER.processing');\n                await this.reloadPageWaitingFinish(token);\n                return;\n            } else if (res['status'] === 'error' || res['error']) {\n                this.loading = false;\n                this.processInError = true;\n                this.processErrorIcon = 'fa-xmark text-red-400';\n                this.processErrorMessage = this.translate.instant('VERIFIER.error', {reference: res['token']});\n                return;\n            } else {\n                this.processDone = true;\n                this.authService.headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n                if (res['document_ids'] && res['document_ids'].length  === 1) {\n                    this.documentId = res['document_ids'][0];\n                } else {\n                    if (!document_id_from_multi) {\n                        this.loading = false;\n                        this.processMultiDocument = true;\n                        for (const cpt in res['document_ids']) {\n                            if (res['document_ids'].hasOwnProperty(cpt)) {\n                                const id = res['document_ids'][cpt];\n                                const tmp_thumb: any = await this.getThumbByDocumentId(id);\n                                const thumb: SafeUrl = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + tmp_thumb['file']);\n                                const document: any = await this.getDocumentById(id);\n                                if (document['status'] === 'NEW') {\n                                    this.multiDocumentsData.push({\n                                        id: id,\n                                        thumb: thumb\n                                    });\n                                }\n                            }\n\n                            if (this.multiDocumentsData.length === 1) {\n                                this.loadDocument(this.multiDocumentsData[0].id);\n                            }\n                        }\n                        return;\n                    } else {\n                        this.documentId = document_id_from_multi;\n                    }\n                }\n            }\n        } else {\n            this.documentId = this.route.snapshot.params['id'];\n            if (!this.authService.headersExists) {\n                this.authService.generateHeaders();\n            }\n        }\n\n        this.translate.get('HISTORY-DESC.viewer', {document_id: this.documentId}).subscribe((translated: string) => {\n            this.translate.get('HISTORY.user').subscribe((firstname: string) => {\n                this.historyService.addHistory('verifier', 'viewer', translated, {\n                    'username': 'token_user',\n                    'lastname': 'Token',\n                    'firstname': firstname\n                });\n            });\n        });\n\n        this.updateDocument({\n            'locked': true,\n            'locked_by': this.userService.user.username\n        });\n        this.document = await this.getDocument();\n        if (this.document.workflow_id) {\n            this.getWorkflow();\n        }\n        if (this.fromToken && (this.document.status === 'END' || this.document.status === 'ERR')) {\n            this.loading = false;\n            this.processDone = false;\n            this.processErrorIcon = 'fa-check text-green-400';\n            this.processErrorMessage = marker('VERIFIER.document_already_processed');\n            return;\n        }\n\n        this.currentFilename = this.document.full_jpg_filename;\n        await this.getThumb(this.document.full_jpg_filename);\n\n        if (this.fromTokenFormId) {\n            this.document.form_id = this.fromTokenFormId;\n        }\n\n        if (this.document.form_id) {\n            await this.generateOutputs(this.document.form_id);\n        }\n\n        this.formList = await this.getAllForm();\n        this.formList = this.formList.forms;\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n\n        let supplierFormFound = false;\n        if (this.document.supplier_id) {\n            for (const element of this.suppliers) {\n                if (element.id === this.document.supplier_id) {\n                    this.currentSupplier = element;\n                    if (element.form_id) {\n                        supplierFormFound = element.form_id;\n                    }\n                }\n            }\n        }\n\n        if (Object.keys(this.currentFormFields).length === 0) {\n            let defaultFormFound = false;\n            if (supplierFormFound) {\n                await this.generateOutputs(supplierFormFound);\n            } else {\n                for (const element of this.formList) {\n                    if (element.default_form) {\n                        defaultFormFound = element.id;\n                    }\n                }\n                if (defaultFormFound) {\n                    await this.generateOutputs(defaultFormFound);\n                }\n            }\n            if (defaultFormFound || supplierFormFound) {\n                this.currentFormFields = await this.getForm();\n            } else {\n                this.notify.error(this.translate.instant('FORMS.no_form_available'));\n                await this.router.navigate(['/verifier/list']);\n            }\n        }\n        /*\n        * Enable library to draw rectangle on load (OCR ON FLY)\n        */\n        this.imageDocument = $('#document_image');\n        this.ratio = this.document.img_width / this.imageDocument.width();\n        this.ocr({\n            'target' : {\n                'id': '',\n                'labels': [\n                    {'textContent': ''}\n                ]\n            }\n        }, true);\n        await this.fillForm(this.currentFormFields);\n        if (this.document.supplier_id) {\n            this.getSupplierInfo(this.document.supplier_id, false, true);\n        }\n        setTimeout(() => {\n            this.drawPositions();\n            this.convertAutocomplete();\n            document.getElementById('image')!.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            document.getElementById('form')!.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            this.loading = false;\n        }, 500);\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n\n        if (this.formSettings.settings.unique_url && this.formSettings.settings.unique_url.allow_supplier_autocomplete) {\n            this.filteredOptions = this.supplierNamecontrol.valueChanges.pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n        }\n    }\n\n    timeout(ms: number) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async reloadPageWaitingFinish(token: any) {\n        interval(5000).subscribe(() => {\n            this.http.post(environment['url'] + '/ws/verifier/documents/getDocumentIdAndStatusByToken', {'token': token}).pipe(\n                tap((data: any) => {\n                    if (data['status'] === 'done') {\n                        window.location.reload();\n                    }\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    @HostListener('window:beforeunload')\n    ngOnDestroy() {\n        this.updateDocument({\n            'locked': false,\n            'locked_by': null\n        }, false);\n    }\n\n    loadDocument(documentId: any) {\n        this.loading = true;\n        this.processMultiDocument = false;\n        this.ngOnInit(documentId).then();\n    }\n\n    copyToken() {\n        navigator.clipboard.writeText(this.token).then(() => {\n            this.notify.success(this.translate.instant('CONFIGURATIONS.token_copied'));\n        });\n    }\n\n    async retrieveDocumentIdAndStatusFromToken(token: any) {\n        return await this.http.post(environment['url'] + '/ws/verifier/documents/getDocumentIdAndStatusByToken', {'token': token}).toPromise().catch((err: any) => {\n            this.notify.handleErrors(err);\n            this.authService.logout();\n        });\n    }\n\n    convertAutocomplete() {\n        this.outputs.forEach((output: any) => {\n            if (output.data.options.links && output.output_type_id === 'export_mem') {\n                const data = {\n                    \"host\": output.data.options.auth[0].value,\n                    \"login\": output.data.options.auth[1].value,\n                    \"password\": output.data.options.auth[2].value,\n                    \"autocompleteField\": '',\n                    \"memCustomField\": '',\n                    \"memClause\": '',\n                    \"vatNumberContactCustom\": '',\n                    \"enabled\": false,\n                    \"supplierCustomId\": ''\n                };\n\n                output.data.options.links.forEach((element: any) => {\n                    if (element.id === 'enabled' && element.value) {\n                        data['enabled'] = true;\n                    }\n                    if (element.id === 'openCaptureField' && element.value) {\n                        data['autocompleteField'] = element.value;\n                    } else if (element.id === 'memCustomField' && element.value) {\n                        data['memCustomField'] = element.value;\n                    } else if (element.id === 'memClause' && element.value) {\n                        data['memClause'] = element.value;\n                    } else if (element.id === 'vatNumberContactCustom' && element.value) {\n                        data['vatNumberContactCustom'] = element.value;\n                    }\n                });\n                if (data['enabled']) {\n                    this.form.supplier.forEach((supplier_element: any) => {\n                        if (supplier_element.id === 'vat_number' || supplier_element.id === 'siret') {\n                            data['supplierCustomId'] += supplier_element.control.value;\n                        }\n                    });\n\n                    this.form.facturation.forEach((element: any) => {\n                       if (element.id === data['autocompleteField']) {\n                           this.http.post(environment['url'] + 'getDocumentsWithContact/ws/mem/', data, {headers: this.authService.headers},\n                           ).pipe(\n                               tap((_return: any) => {\n                                   element.type = 'autocomplete';\n                                   if (_return && _return.count > 0) {\n                                       element.autocomplete_values = element.control.valueChanges.pipe(\n                                           startWith(''),\n                                           map(option => option ? this._filter_data(option, _return.resources) : _return.resources.slice())\n                                       );\n                                   }\n                               }),\n                               catchError((err: any) => {\n                                   console.debug(err);\n                                   this.notify.handleErrors(err);\n                                   return of(false);\n                               })\n                           ).subscribe();\n                       }\n                    });\n                }\n            }\n        });\n    }\n\n    async generateOutputs(formId: any) {\n        this.currentFormFields = await this.getFormFieldsById(formId);\n        this.formSettings = await this.getFormById(formId);\n        if (this.formSettings.outputs.length !== 0) {\n            for (const outputId in this.formSettings.outputs) {\n                const output = await this.getOutputs(this.formSettings.outputs[outputId]);\n                this.outputs.push(output);\n                this.outputsLabel.push(output.output_label);\n            }\n        }\n\n        if (!this.fromToken && !this.formSettings.settings.unique_url) {\n            this.formSettings.settings.unique_url = {\n                \"expiration\": 7,\n                \"change_form\": true,\n                \"create_supplier\": true,\n                \"enable_supplier\": true,\n                \"refuse_document\": true,\n                \"validate_document\": true\n            };\n        }\n\n        if (this.formSettings.settings.supplier_verif && !this.tokenINSEE) {\n            const token: any = await this.generateTokenInsee();\n            if (token['token']) {\n                if (token['token'].includes('ERROR')) {\n                    this.tokenINSEEError = true;\n                    this.tokenINSEE = token['token'].replace('ERROR : ', '');\n                } else {\n                    this.tokenINSEEError = false;\n                    this.tokenINSEE = token['token'];\n                }\n            }\n        }\n    }\n\n    async generateTokenInsee() {\n        return await this.http.get(environment['url'] + '/ws/verifier/getTokenINSEE', {headers: this.authService.headers}).toPromise();\n    }\n\n    getCategoryLabel(category: any) {\n        return this.formSettings.labels[category.id] ? this.formSettings.labels[category.id] : this.translate.instant(category.label);\n    }\n\n    async getThumbByDocumentId(documentId: any) {\n        return this.http.post(environment['url'] + '/ws/verifier/getThumbByDocumentId', {'documentId': documentId}, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getThumb(filename:string) {\n        const cpt = filename.split('-')[filename.split('-').length - 1].split('.')[0];\n        if (this.imgArray[cpt]) {\n            this.imgSrc = this.imgArray[cpt];\n        } else {\n            this.http.post(environment['url'] + '/ws/verifier/getThumb',\n                {'args': {'type': 'full', 'filename': filename, 'registerDate': this.document.register_date}},\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.imgSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n                    this.imgArray[cpt] = this.imgSrc;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n        return this.imgSrc;\n    }\n\n    private _filter(value: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        const _return = this.suppliers.filter((supplier: any) => supplier.name.toLowerCase().indexOf(filterValue) !== -1);\n        this.supplierExists = _return.length !== 0;\n        if (!this.supplierExists) {\n            this.form['supplier'].forEach((element: any) => {\n                if (element.id !== 'name') {\n                    element.control.setValue('');\n                    element.control.setErrors(null);\n                }\n            });\n        }\n        return _return;\n    }\n\n    private _filter_data(value: any, data: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        return data.filter((element: any) => element.data.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    updateFilteredOption(event: any, control: any) {\n        let value = '';\n        if (event.target.value) value = event.target.value;\n        else if (control.value) value = control.value;\n        control.patchValue(value);\n    }\n\n    getFieldInfo(fieldId: any) {\n        for (const parent in this.fields) {\n            for (const cpt in this.form[parent]) {\n                const field = this.form[parent][cpt];\n                if (field.id === fieldId) {\n                    return field;\n                }\n            }\n        }\n    }\n\n    async drawPositions(): Promise<any> {\n        for (const fieldId in this.document.datas) {\n            const page = this.getPage(fieldId);\n            const position = this.document.positions[fieldId];\n            if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                const splittedFieldId = fieldId.split('_');\n                const field = this.getFieldInfo(fieldId);\n                let cpt = '0';\n                if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                    cpt = splittedFieldId[splittedFieldId.length - 1];\n                }\n                if (field) {\n                    this.drawPositionByField(field, position, cpt);\n                    $('#' + field.id).blur();\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any, cpt = '0') {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        if (cpt !== '0') this.lastLabel += ' ' + parseInt(cpt);\n        this.lastColor = field.color;\n        this.disableOCR = true;\n        const newArea = {\n            x: position.ocr_from_user ? position.x / this.ratio : position.x / this.ratio - ((position.x / this.ratio) * 0.005),\n            y: position.ocr_from_user ? position.y / this.ratio : position.y / this.ratio - ((position.y / this.ratio) * 0.003),\n            width: position.ocr_from_user ? position.width / this.ratio : position.width / this.ratio + ((position.width / this.ratio) * 0.05),\n            height: position.ocr_from_user ? position.height / this.ratio : position.height / this.ratio + ((position.height / this.ratio) * 0.6)\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    getPage(fieldId: any) {\n        let page: number = 1;\n        if (this.document.pages) {\n            Object.keys(this.document.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.document.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getDocument(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/verifier/documents/' + this.documentId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getDocumentById(id: any): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/verifier/documents/' + id, {headers: this.authService.headers}).toPromise();\n    }\n\n    getWorkflow() {\n        this.http.get(environment['url'] + '/ws/workflows/verifier/getById/' + this.document.workflow_id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.workflowSettings = data;\n            })\n        ).subscribe();\n    }\n\n    async getForm(): Promise<any> {\n        if (this.document.form_id) {\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.document.form_id, {headers: this.authService.headers}).toPromise();\n        }\n        if (this.document.supplier_id) {\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getBySupplierId/' + this.document.supplier_id, {headers: this.authService.headers}).toPromise();\n        }\n        else {\n            return await this.http.get(environment['url'] + '/ws/forms/getDefault/verifier', {headers: this.authService.headers}).toPromise();\n        }\n    }\n\n    async getAllForm(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormFieldsById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/verifier/getById/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async fillForm(data: any): Promise<any> {\n        this.form = {\n            'supplier': [],\n            'lines': [],\n            'facturation': [],\n            'other': []\n        };\n        this.fields = data.fields;\n        for (const category in this.fields) {\n            for (const cpt in this.fields[category]) {\n                const field = this.fields[category][cpt];\n                this.form[category].push({\n                    id: field.id,\n                    label: field.label,\n                    required: field.required,\n                    control: new FormControl(),\n                    type: field.type,\n                    pattern: this.getPattern(field.format),\n                    color: field.color,\n                    unit: field.unit,\n                    class: field.class,\n                    format: field.format,\n                    display: field.display,\n                    format_icon: field.format_icon,\n                    display_icon: field.display_icon,\n                    class_label: field.class_label,\n                    cpt: 0,\n                    values: '',\n                    lineSelected: field.lineSelected,\n                    fullSizeSelected: field.fullSizeSelected\n                });\n\n                const _field = this.form[category][this.form[category].length - 1];\n                if (field.id === 'accounting_plan') {\n                    let array : any = {};\n                    if (this.document.customer_id && this.document.customer_id !== 0) {\n                        array = await this.retrieveAccountingPlan();\n                    }\n                    this.accountingPlanEmpty = Object.keys(array).length === 0;\n                    if (this.accountingPlanEmpty) {\n                        array = await this.retrieveDefaultAccountingPlan();\n                    }\n                    this.accountingPlan = this.sortArray(array);\n                    _field.values = this.form[category][cpt].control.valueChanges\n                        .pipe(\n                            startWith(''),\n                            map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                        );\n                }\n\n                if (this.document.datas[field.id] !== undefined && this.document.datas[field.id] !== null && this.document.datas[field.id] !== '') {\n                    let value = this.document.datas[field.id];\n                    if (field.format === 'date' && field.id !== '' && field.id !== undefined && value && typeof value === 'string') {\n                        value = value.replaceAll('.', '/');\n                        value = value.replaceAll(',', '/');\n                        value = value.replaceAll(' ', '/');\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    _field.control.setValue(value);\n                    _field.control.markAsTouched();\n\n                    if (field.id === 'siret' || field.id === 'siren') this.checkSirenOrSiret(field.id, value);\n                    if (field.id === 'vat_number') this.checkVAT(field.id, value);\n                }\n\n                if (field.id === 'name' && category === 'supplier') {\n                    this.supplierNamecontrol = this.form[category][cpt].control;\n                }\n\n                if (!field.lineSelected && !field.fullSizeSelected) {\n                    this.findChildren(field.id, _field, category);\n                } else if (field.fullSizeSelected) {\n                    for (const field_data in this.document.datas) {\n                        if (field_data.includes(field.id + '_')) {\n                            this.duplicateLine(field.id, category, true);\n                        }\n                    }\n                }\n            }\n        }\n        if (this.form.facturation.length === 0 && this.form.supplier.length === 0 && this.form.other.length === 0) {\n            this.formEmpty = true;\n        }\n    }\n\n    async getOutputs(outputId: any): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + outputId, {headers: this.authService.headers}).toPromise();\n    }\n\n    private _filter_accounting(array: any, value: any): string[] {\n        this.toHighlightAccounting = value;\n        const filterValue = value.toLowerCase();\n        return array.filter((option: any) => option.compte_lib.toLowerCase().indexOf(filterValue) !== -1 || option.compte_num.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    sortArray(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.compte_num, y = b.compte_num;\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    async retrieveAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getAccountingPlan/' + this.document.customer_id, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveDefaultAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getDefaultAccountingPlan', {headers: this.authService.headers}).toPromise();\n    }\n\n    hideVisuals() {\n        this.visualIsHide = !this.visualIsHide;\n        const visuals = document.getElementsByClassName('select-areas-background-area');\n        Array.from(visuals).forEach((element: any) => {\n            const cpt = element.id.match(/(\\d+)/)[0];\n            if (this.visualIsHide) {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'none';\n            } else {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'block';\n            }\n        });\n    }\n\n    findChildren(parentId: any, parent: any, categoryId: any) {\n        for (const field in this.document.datas) {\n            if (field.includes(parentId + '_')) {\n                parent.cpt += 1;\n                const splitted = field.split('_');\n                const cpt = parseInt(splitted[splitted.length - 1]) + 1;\n                this.form[categoryId].push({\n                    id: field,\n                    label: parent.label,\n                    required: parent.required,\n                    control: new FormControl(),\n                    type: parent.type,\n                    pattern: this.getPattern(parent.format),\n                    color: parent.color,\n                    unit: parent.unit,\n                    class: parent.class,\n                    format: parent.format,\n                    display: 'simple',\n                    format_icon: parent.format_icon,\n                    display_icon: parent.display_icon,\n                    class_label: parent.class_label,\n                    cpt: cpt\n                });\n                const value = this.document.datas[field];\n                const _field = this.form[categoryId][this.form[categoryId].length - 1];\n                _field.control.setValue(value);\n            }\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    ocr(event: any, enable: boolean, color = 'green') {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        this.lastLabel = event.target.labels[0].textContent.replace('*', '').trim();\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        if (this.document.status !== 'END') {\n            deleteArea.addClass('pointer-events-auto');\n            backgroundArea.addClass('pointer-events-auto');\n            resizeArea.addClass('pointer-events-auto');\n        }\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            this.scrollToElement();\n            if (this.document.status !== 'END') {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageDocument.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageDocument.width(), this.imageDocument.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        if (_this.lastId) {\n                            if ($('#select-area-label_' + cpt).length > 0) {\n                                const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                                if (inputId.trim() !== _this.lastId.trim()) {\n                                    _this.lastId = inputId;\n                                    _this.lastLabel = $('#select-area-label_' + cpt).text();\n                                }\n                            }\n                            _this.ocr_process(img, cpt, selection);\n                        }\n                    }\n                },\n                onDeleted(_img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    if (inputId) {\n                        _this.updateFormValue(inputId, '');\n                        delete _this.document.positions[inputId.trim()];\n                        if (_this.deleteDataOnChangeForm) {\n                            _this.deleteData(inputId);\n                            _this.deletePosition(inputId);\n                            _this.deletePage(inputId);\n                        }\n                    }\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    scrollToElement() {\n        if (this.document.pages[this.lastId]) {\n            this.changeImage(this.document.pages[this.lastId], this.currentPage);\n        }\n        if (this.document.positions[this.lastId]) {\n            const currentHeight = window.innerHeight;\n            if (document.getElementsByClassName('input_' + this.lastId).length > 0) {\n                const position = document.getElementsByClassName('input_' + this.lastId)![0]!.getBoundingClientRect().top;\n                if (position >= currentHeight || position <= currentHeight) {\n                    document.getElementById('image')!.scrollTo({\n                        top: position - 200,\n                        behavior: 'smooth'\n                    });\n                }\n            }\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        // Write the label of the input above the selection rectangle\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (parseInt(String(page)) === this.currentPage || page === 0)) {\n            if (document.getElementById('select-area-label_' + cpt) === null) {\n                const outline = document.getElementById('select-areas-outline_' + cpt);\n                const backgroundArea = document.getElementById(\"select-areas-background-area_\" + cpt);\n                const deleteContainer = document.getElementById('select-areas-delete_' + cpt);\n                const resizeHandler = document.getElementsByClassName('select-areas-resize-handler_' + cpt)[0];\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n\n                backgroundArea!.style.backgroundColor = this.lastColor;\n                outline!.classList.add('outline_' + this.lastId);\n                backgroundArea!.classList.add('background_' + this.lastId);\n                resizeHandler.classList.add('resize_' + this.lastId);\n                deleteContainer!.classList.add('delete_' + this.lastId);\n                if (this.document.status === 'END') {\n                    outline!.classList.add('pointer-events-none');\n                    backgroundArea!.classList.add(\"pointer-events-none\");\n                    resizeHandler!.classList.add('pointer-events-none');\n                    deleteContainer!.classList.add('pointer-events-none');\n                }\n            }\n            // End write\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n            if (!this.isOCRRunning && !this.loading && this.saveInfo) {\n                this.isOCRRunning = true;\n                let lang = this.localeService.currentLang;\n                if (Object.keys(this.currentSupplier).length !== 0) {\n                    lang = this.currentSupplier.document_lang;\n                }\n                this.http.post(environment['url'] + '/ws/verifier/ocrOnFly',\n                    {\n                        selection: this.getSelectionByCpt(selection, cpt),\n                        fileName: this.currentFilename, lang: lang,\n                        thumbSize: {width: img.currentTarget.width, height: img.currentTarget.height},\n                        registerDate: this.document.register_date\n                    }, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.isOCRRunning = false;\n                            let oldPosition = {\n                                x: 0,\n                                y: 0,\n                                width: 0,\n                                height: 0\n                            };\n                            if (this.document.positions[inputId.trim()]) {\n                                oldPosition = {\n                                    x: this.document.positions[inputId.trim()].x / this.ratio - ((this.document.positions[inputId.trim()].x / this.ratio) * 0.005),\n                                    y: this.document.positions[inputId.trim()].y / this.ratio - ((this.document.positions[inputId.trim()].y / this.ratio) * 0.003),\n                                    width: this.document.positions[inputId.trim()].width / this.ratio + ((this.document.positions[inputId.trim()].width / this.ratio) * 0.05),\n                                    height: this.document.positions[inputId.trim()].height / this.ratio + ((this.document.positions[inputId.trim()].height / this.ratio) * 0.6)\n                                };\n                            }\n\n                            const newPosition = this.getSelectionByCpt(selection, cpt);\n                            if (newPosition.x !== oldPosition.x && newPosition.y !== oldPosition.y &&\n                                newPosition.width !== oldPosition.width && newPosition.height !== oldPosition.height) {\n                                this.updateFormValue(inputId, data.result);\n                                const res = this.saveData(data.result, this.lastId, true);\n                                if (res) {\n                                    const allowLearning = this.formSettings.settings.allow_learning;\n                                    if (allowLearning == true || allowLearning == undefined) {\n                                        this.savePosition(newPosition);\n                                        this.savePages(this.currentPage).then();\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n            }\n            this.saveInfo = true;\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    updateFormValue(inputId: string, value: any) {\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.id.trim() === inputId.trim()) {\n                    if (value && (input.format === 'number_int' || input.format === 'number_float')) {\n                        value = value.replace(/[A-Za-z€%$]/g, '');\n                    }\n                    if (input.type === 'date' && value) {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    input.control.setValue(value);\n                    input.control.markAsTouched();\n                }\n            });\n        }\n    }\n\n    savePosition(position: any) {\n        position = {\n            ocr_from_user: true,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio,\n            height: position.height * this.ratio,\n            width: position.width * this.ratio\n        };\n\n        if (this.document.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.document.supplier_id + '/updatePosition',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updatePosition',\n            {'args': {[this.lastId]: position}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.positions[this.lastId] = position;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async savePages(page: any) {\n        if (this.document.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.document.supplier_id + '/updatePage',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updatePage',\n            {'args': {[this.lastId]: page}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.pages[this.lastId] = page;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveData(data: any, fieldId: any = false, showNotif: boolean = false) {\n        if (this.document.status !== 'END') {\n            const oldData = data;\n            if (fieldId) {\n                const field = this.getField(fieldId);\n                if (Object.keys(field).length !== 0) {\n                    if (field.unit === 'addresses' || field.unit === 'supplier') showNotif = false;\n                    if (field.control.errors || this.document.datas[fieldId] === data) return false;\n                    data = {[fieldId]: data};\n                    this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                        {'args': data},\n                        {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.document.datas[fieldId] = oldData;\n                            if (showNotif) {\n                                this.notify.success(this.translate.instant('DOCUMENTS.position_and_data_updated', {\"input\": this.lastLabel}));\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    createSupplier() {\n        const addressData: any = {};\n        const supplierData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n            if (element.unit === 'supplier') supplierData[element.id] = field.control.value;\n            if (element.unit === 'addresses') addressData[element.id] = field.control.value;\n            this.saveData(field.control.value, element.id);\n        });\n\n        this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                supplierData['address_id'] = data.id;\n                this.http.post(environment['url'] + '/ws/accounts/suppliers/create', {'args': supplierData}, {headers: this.authService.headers},\n                ).pipe(\n                    tap(async (supplier_data: any) => {\n                        this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                        this.updateDocument({'supplier_id': supplier_data['id']});\n                        this.document.supplier_id = supplier_data['id'];\n                        this.suppliers = await this.retrieveSuppliers();\n                        this.suppliers = this.suppliers.suppliers;\n                        this.supplierExists = true;\n                        for (const element of this.suppliers) {\n                            if (element.id === this.document.supplier_id) {\n                                this.currentSupplier = element;\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    editSupplier() {\n        const supplierData: any = {};\n        const addressData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n            if (element.unit === 'supplier') supplierData[element.id] = field.control.value;\n            if (element.unit === 'addresses') addressData[element.id] = field.control.value;\n            this.saveData(field.control.value, element.id);\n        });\n\n        this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.document.supplier_id, {'args': supplierData}, {headers: this.authService.headers},\n        ).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.put(environment['url'] + '/ws/accounts/addresses/updateBySupplierId/' + this.document.supplier_id, {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDocument(data: any, showError: boolean = true) {\n        if (this.documentId) {\n            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.documentId + '/update',\n                {'args': data},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    if (showError) {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                    }\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getField(fieldId: any) {\n        let _field : any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((field: any) => {\n                if (field.id.trim() === fieldId.trim()) {\n                    _field = field;\n                }\n            });\n        }\n        return _field;\n    }\n\n    deleteData(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deleteData',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCUMENTS.data_deleted', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePosition(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deletePosition',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.document.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.document.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.document.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.document.supplier_id + '/deletePosition',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePage(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deletePage',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.document.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.document.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.document.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.document.supplier_id + '/deletePage',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getPattern(format: any) {\n        let pattern = '';\n        for (const cpt in this.pattern) {\n            if (cpt === format) {\n                pattern = this.pattern[cpt];\n            }\n        }\n        return pattern;\n    }\n\n    duplicateLine(fieldId: any, categoryId: any, neededValue: boolean = false) {\n        const listOfNewField: any = {};\n        const listOfNewFieldData: any = {};\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const newField = Object.assign({}, this.form[categoryId][i]);\n                        this.form[categoryId][i].cpt += 1;\n                        newField.id = newField.id + '_' + this.form[categoryId][i].cpt;\n                        newField.cpt = this.form[categoryId][i].cpt;\n                        newField.display = 'simple';\n                        newField.deleteLine = this.form[categoryId][i].fullSizeSelected;\n                        newField.lineSelected = true;\n                        newField.fullSizeSelected = false;\n                        newField.control = new FormControl();\n                        if (this.document.datas[newField.id]) {\n                            let value = this.document.datas[newField.id];\n                            if (newField.format === 'date' && newField.id !== '' && newField.id !== undefined && value && typeof value === 'string') {\n                                value = value.replaceAll('.', '/');\n                                value = value.replaceAll(',', '/');\n                                value = value.replaceAll(' ', '/');\n                                const format = moment().localeData().longDateFormat('L');\n                                value = moment(value, format);\n                                value = new Date(value._d);\n                            }\n                            newField.control.setValue(value);\n                            newField.control.markAsTouched();\n                            listOfNewFieldData[newField.id] = value;\n                        } else {\n                            listOfNewField[newField.id] = '';\n                            listOfNewFieldData[newField.id] = '';\n                        }\n\n                        if (this.form[categoryId][i].cpt > 1 ) {\n                            this.form[categoryId].splice(i + (parseInt(numberOfField) * parseInt(this.form[categoryId][i].cpt)), 0, newField);\n                        } else {\n                            this.form[categoryId].splice(i + parseInt(numberOfField), 0, newField);\n                        }\n\n                        if (newField.id === 'accounting_plan') {\n                            this.form[categoryId][cpt + field.cpt].values = this.form[categoryId][cpt].control.valueChanges.pipe(\n                                startWith(''),\n                                map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                            );\n                        }\n                    }\n                }\n            }\n        });\n\n        if (!neededValue) {\n            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                {'args': listOfNewField}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            let lineEmpty = true;\n            Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                if (listOfNewFieldData[newFieldId]) {\n                    lineEmpty = false;\n                }\n            });\n\n            if (lineEmpty) {\n                Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                    this.form[categoryId].forEach((element: any, cpt: number) => {\n                        if (newFieldId === element.id) {\n                            const parentId = element.id.split('_').slice(0, -1).join('_');\n                            this.form[categoryId].splice(cpt, 1);\n                            this.form[categoryId].forEach((parent_field: any) => {\n                                if (parent_field.id.trim() === parentId.trim()) {\n                                    parent_field.cpt = parent_field.cpt - 1;\n                                }\n                            });\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    duplicateField(fieldId: any, categoryId: any) {\n        for (const category in this.form) {\n            if (category === categoryId) {\n                this.form[category].forEach((field: any, cpt: number) => {\n                    if (field.id.trim() === fieldId.trim()) {\n                        const newField = Object.assign({}, field);\n                        newField.id = newField.id + '_' + field.cpt;\n                        field.cpt += 1;\n                        newField.cpt = field.cpt;\n                        newField.display = 'simple';\n                        newField.control = new FormControl();\n                        this.form[category].splice(cpt + field.cpt, 0, newField);\n                        this.saveData('', newField.id);\n                        this.notify.success(this.translate.instant('DOCUMENTS.field_duplicated', {\"input\": this.translate.instant(field.label)}));\n                    }\n                });\n            }\n        }\n    }\n\n    removeDuplicateLine(fieldId: any, categoryId: any) {\n        const listOfFieldToDelete: any[] = [];\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const parentId = this.form[categoryId][i].id.split('_').slice(0, -1).join('_');\n                        listOfFieldToDelete.push(this.form[categoryId][i].id);\n                        this.form[categoryId].forEach((parent_field: any) => {\n                            if (parent_field.id.trim() === parentId.trim()) {\n                                parent_field.cpt = parent_field.cpt - 1;\n                            }\n                        });\n                    }\n                    this.form[categoryId].splice((cpt + 1) - numberOfField, numberOfField);\n                }\n            }\n        });\n        this.deleteData(listOfFieldToDelete, true);\n        this.deletePosition(listOfFieldToDelete, true);\n        this.deletePage(listOfFieldToDelete, true);\n    }\n\n    removeDuplicateField(fieldId: any, categoryId: any) {\n        const parentId = fieldId.split('_').slice(0, -1).join('_');\n        this.form[categoryId].forEach((field: any, cpt:number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                this.deleteData(field.id);\n                this.deletePosition(field.id);\n                this.deletePage(field.id);\n                this.form[categoryId].splice(cpt, 1);\n            } else if (field.id.trim() === parentId.trim()) {\n                field.cpt = field.cpt - 1;\n            }\n        });\n    }\n\n    isChildField(fieldId: any) {\n        const splittedId = fieldId.split('_');\n        return Number.isInteger(parseInt(splittedId[splittedId.length - 1])) && !fieldId.includes('custom_');\n    }\n\n    getSupplierInfo(supplierId: any, showNotif = false, launchOnInit = false) {\n        this.suppliers.forEach((supplier: any) => {\n            if (supplier.id === supplierId) {\n                if (!supplier.address_id) supplier.address_id = 0;\n                this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + supplier.address_id, {headers: this.authService.headers}).pipe(\n                    tap((address: any) => {\n                        const supplierData : any = {\n                            'name': supplier.name,\n                            'address1': address.address1,\n                            'address2': address.address2,\n                            'city': address.city,\n                            'country': address.country,\n                            'postal_code': address.postal_code,\n                            'siret': supplier.siret,\n                            'siren': supplier.siren,\n                            'iban': supplier.iban,\n                            'email': supplier.email,\n                            'vat_number': supplier.vat_number\n                        };\n                        this.getOnlyRawFooter = supplier.get_only_raw_footer;\n                        for (const column in supplierData) {\n                            this.updateFormValue(column, supplierData[column]);\n                        }\n\n                        if (!launchOnInit) {\n                            this.updateDocument({'supplier_id': supplierId});\n                            this.saveData(supplierData);\n                            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                                {'args': supplierData},\n                                {headers: this.authService.headers}).pipe(\n                                tap(() => {\n                                    this.document.supplier_id = supplierId;\n                                    for (const element of this.suppliers) {\n                                        if (element.id === this.document.supplier_id) {\n                                            this.currentSupplier = element;\n                                        }\n                                    }\n                                    if (showNotif) {\n                                        this.notify.success(this.translate.instant('DOCUMENTS.supplier_infos_updated'));\n                                    }\n                                }),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    // Function used to verify SIRET or SIREN using the Luhn algorithm\n    verify(value: any, size: any, isVAT = false) {\n        if (isVAT) {\n            return value.length === size;\n        }\n\n        if (isNaN(value) || value.length !== size) {\n            return false;\n        }\n        let bal     = 0;\n        let total   = 0;\n        for (let i = size - 1; i >= 0; i--) {\n            const step = (value.charCodeAt(i) - 48) * (bal + 1);\n            total += (step > 9) ? step - 9 : step;\n            bal = 1 - bal;\n        }\n        return total % 10 === 0;\n    }\n\n    getErrorMessage(field: any, category: any) {\n        let error: any;\n        this.form[category].forEach((element: any) => {\n            if (element.id === field) {\n                if (element.control.errors) {\n                    const required = element.control.errors.required;\n                    const pattern = element.control.errors.pattern;\n                    const datePickerPattern = element.control.errors.matDatepickerParse;\n                    const siret_error = element.control.errors.siret_error;\n                    const siren_error = element.control.errors.siren_error;\n                    const vat_error = element.control.errors.vat_error;\n                    if (pattern) {\n                        if (pattern.requiredPattern === this.getPattern('alphanum')) {\n                            error = this.translate.instant('ERROR.alphanum_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('alphanum_extended')) {\n                            error = this.translate.instant('ERROR.alphanum_extended_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_int')) {\n                            error = this.translate.instant('ERROR.number_int_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_float')) {\n                            error = this.translate.instant('ERROR.number_float_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('char')) {\n                            error = this.translate.instant('ERROR.char_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('email')) {\n                            error = this.translate.instant('ERROR.email_pattern');\n                        }\n                    } else if (datePickerPattern) {\n                        error = this.translate.instant('ERROR.date_pattern');\n                    } else if (required) {\n                        error = this.translate.instant('ERROR.field_required');\n                    } else if (siret_error) {\n                        error = siret_error;\n                    } else if (siren_error) {\n                        error = siren_error;\n                    } else if (vat_error) {\n                        error = vat_error;\n                    } else if (this.tokenINSEEError) {\n                        error = this.tokenINSEE;\n                    } else {\n                        error = this.translate.instant('ERROR.unknow_error');\n                    }\n                }\n            }\n        });\n        return error;\n    }\n\n    setAutocompleteDefaultValue(event: any) {\n        if (event.isUserInput) {\n            this.form.facturation.forEach((element: any) => {\n                if (element.autocomplete_values) {\n                    element.autocomplete_id = event.source.id;\n                }\n            });\n        }\n    }\n\n    validateForm() {\n        this.loadingSubmit = true;\n        let valid = true;\n        const arrayData: any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.control.value) {\n                    let value = input.control.value;\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = value.format(format);\n                    }\n                    Object.assign(arrayData, {[input.id] : value});\n                }\n                if (input.control.errors) {\n                    valid = false;\n                    input.control.markAsTouched();\n                    this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n                }\n            });\n        }\n\n        if (!valid) {\n            this.loadingSubmit = false;\n            return;\n        }\n\n        const countLines = {\n            ['lines_count']: 0,\n            ['taxes_count']: 0\n        };\n        this.form['lines'].forEach((element: any) => {\n            const cpt = element.id.match(/\\d+/g) + 1;\n            if (cpt && cpt[0] > (countLines['lines_count'])) {\n                countLines['lines_count']++;\n            }\n        });\n        this.form['facturation'].forEach((element: any) => {\n            if (element.id.includes('vat_amount') || element.id.includes('vat_rate') || element.id.includes('no_rate_amount')) {\n                const cpt = element.id.match(/\\d+/g) + 1;\n                if (cpt && cpt[0] > (countLines['taxes_count'])) {\n                    countLines['taxes_count']++;\n                }\n            }\n        });\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n            {'args': countLines},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.datas['lines_count'] = countLines['lines_count'];\n                this.document.datas['taxes_count'] = countLines['taxes_count'];\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        /*\n            Executer les actions paramétrées dans les réglages du formulaires\n         */\n        if (this.formSettings.outputs.length !== 0) {\n            this.formSettings.outputs.forEach((outputId: any, cpt: number) => {\n                this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + outputId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        if (data.data.options.links) {\n                            this.form.facturation.forEach((element: any) => {\n                                if (element.autocomplete_values) {\n                                    if (data.output_type_id === 'export_mem') {\n                                        data.data['res_id'] = element.autocomplete_id;\n                                    }\n                                }\n                            });\n                        }\n\n                        this.http.post(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/' + data.output_type_id, {'args': data}, {headers: this.authService.headers}).pipe(\n                            tap((filename) => {\n                                this.outputs.forEach((output: any) => {\n                                    if (output.output_type_id === data.output_type_id) {\n                                        output.file_path = filename;\n                                    }\n                                });\n                                /* Actions à effectuer après le traitement des chaînes sortantes */\n                                if (cpt + 1 === this.formSettings.outputs.length) {\n                                    this.historyService.addHistory('verifier', 'document_validated', this.translate.instant('HISTORY-DESC.document_validated', {document_id: this.documentId, outputs: this.outputsLabel.join(', ')}));\n                                    this.updateDocument({'status': 'END', 'locked': false, 'locked_by': null});\n                                    this.router.navigate(['/verifier']).then();\n                                    this.loadingSubmit = false;\n                                    if (this.workflowSettings && this.workflowSettings.process) {\n                                        if (this.workflowSettings.process['delete_documents']) {\n                                            this.http.get(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deleteDocuments', {headers: this.authService.headers}).pipe(\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n                                    this.http.get(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deleteDocuments', {headers: this.authService.headers}).pipe(\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n\n                                    this.http.post(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/outputScript', {'workflow': this.workflowSettings, 'outputs': this.outputs}, {headers: this.authService.headers}).pipe(\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                    this.notify.success(this.translate.instant('VERIFIER.form_validated_and_output_done', {outputs: this.outputsLabel.join('<br>')}));\n                                }\n                            }),\n                            catchError((err: any) => {\n                                this.loadingSubmit = false;\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            });\n        } else {\n            this.notify.error(this.translate.instant('VERIFIER.no_outputs_for_this_form', {'form': this.formSettings.label}));\n            this.loadingSubmit = false;\n        }\n    }\n\n    refuseForm() {\n        this.historyService.addHistory('verifier', 'document_refused', this.translate.instant('HISTORY-DESC.document_refused', {document_id: this.documentId}));\n        this.updateDocument({'status': 'ERR', 'locked': false, 'locked_by': null});\n        this.notify.error(this.translate.instant('VERIFIER.document_refused'));\n        this.router.navigate(['/verifier/list']).then();\n    }\n\n    async changeForm(event: any) {\n        this.outputs = [];\n        this.outputsLabel = [];\n        this.loading = true;\n        this.formEmpty = false;\n        const newFormId = event.value;\n        for (const cpt in this.formList) {\n            if (this.formList[cpt].id === newFormId) {\n                if (!this.fromToken) {\n                    this.updateDocument({'form_id': newFormId});\n                } else {\n                    this.fromTokenFormId = newFormId;\n                }\n                this.currentFormFields = await this.getFormFieldsById(newFormId);\n                this.deleteDataOnChangeForm = false;\n                this.imageDocument.selectAreas('destroy');\n                this.settingsOpen = false;\n                this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                await this.ngOnInit();\n                this.deleteDataOnChangeForm = true;\n            }\n        }\n    }\n\n    nextPage() {\n        if (this.currentPage < this.document.nb_pages) {\n            this.currentPage = this.currentPage + 1;\n            this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            this.changeImage(1, this.document.nb_pages);\n        }\n    }\n\n    previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            this.changeImage(this.document.nb_pages, this.currentPage);\n        }\n    }\n\n    changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow !== oldPage) {\n            const extension = this.currentFilename.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n            const newFilename = this.currentFilename.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.currentFilename = newFilename;\n            this.getThumb(newFilename).then();\n            this.currentPage = pageToShow;\n            for (const fieldId in this.document.datas) {\n                const page = this.getPage(fieldId);\n                const position = this.document.positions[fieldId];\n                if (position) {\n                    const input = $('.input_' + fieldId);\n                    const background = $('.background_' + fieldId);\n                    const outline = $('.outline_' + fieldId);\n                    const resizeHandler = $('.resize_' + fieldId);\n                    const deleteContainer = $('.delete_' + fieldId);\n                    input.remove();\n                    background.remove();\n                    outline.remove();\n                    resizeHandler.remove();\n                    deleteContainer.remove();\n                    if (parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                        this.lastId = fieldId;\n                        const splittedFieldId = fieldId.split('_');\n                        let field = this.getFieldInfo(fieldId);\n                        if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                            const cpt = splittedFieldId[splittedFieldId.length - 1];\n                            const tmpFieldId = splittedFieldId.join('_').replace('_' + cpt, '');\n                            field = this.getFieldInfo(tmpFieldId);\n                            field.label = this.translate.instant(field.label) + ' ' + (parseInt(cpt) + 1);\n                        }\n                        this.saveInfo = false;\n                        if (field) {\n                            if (parseInt(String(page)) === this.currentPage) {\n                                this.drawPositionByField(field, position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    checkSirenOrSiret(siretOrSiren: any, value: any) {\n        if (this.formSettings.settings.supplier_verif && this.document.status !== 'END') {\n            const sizeSIREN = 9;\n            const sizeSIRET = 14;\n            if (siretOrSiren === 'siren' && this.oldSIREN !== value) {\n                if (this.verify(value, sizeSIREN) && this.tokenINSEE) {\n                    this.oldSIREN = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIREN', {'token': this.tokenINSEE, 'siren': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siren') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siren_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siren') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.wrong_siren_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            } else if (siretOrSiren === 'siret'  && this.oldSIRET !== value) {\n                if (this.verify(value, sizeSIRET) && this.tokenINSEE) {\n                    this.oldSIRET = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIRET', {'token': this.tokenINSEE, 'siret': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siret') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siret_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siret') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.wrong_siret_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    checkVAT(id: any, value: any) {\n        if (id === 'vat_number' && this.formSettings.settings.supplier_verif && this.document.status !== 'END') {\n            if (this.oldVAT !== value) {\n                const sizeVAT = 13;\n                if (this.verify(value, sizeVAT, true)) {\n                    this.oldVAT = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifyVATNumber', {'vat_number': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'vat_number') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'vat_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'vat_number') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.ecu_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.wrong_vat_number_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    showAutoLogo(field: any) {\n        return !!(this.document.positions[field.id] && !this.document.positions[field.id].ocr_from_user);\n    }\n}\n","<div *ngIf=\"this.loading\">\n    <app-loader></app-loader>\n</div>\n<div *ngIf=\"!this.processDone && this.fromToken\">\n    <div class=\"flex justify-center items-center h-screen overflow-y-auto\">\n        <div class=\"flex flex-col justify-center max-w-full\">\n            <div class=\"flex justify-center\">\n                <i class=\"fa-solid text-6xl\" [class]=\"this.processErrorIcon\"></i>\n            </div>\n            <div class=\"flex justify-center text-center mt-4 text-gray-900 p-4\">\n                <span class=\"text-xl max-w-full break-words\" [innerHTML]=\"this.processErrorMessage | translate\"></span>\n                <i class=\"ml-4 fa-solid fa-copy text-2xl cursor-pointer\" *ngIf=\"this.processInError\"\n                   [matTooltip]=\"'CONFIGURATIONS.copy_token' | translate\" (click)=\"copyToken()\"></i>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"this.processMultiDocument && this.processDone && this.fromToken\">\n    <div class=\"flex justify-center items-center\">\n        <div class=\"flex flex-col justify-start h-screen\">\n            <div class=\"flex justify-center text-center mt-4 text-gray-900\">\n                <span class=\"text-xl\">{{ 'VERIFIER.multiple_documents' | translate }}</span>\n            </div>\n            <div class=\"block text-gray-900 overflow-y-auto mt-4\">\n                <div class=\"flex flex-wrap justify-center gap-6 text-center my-4\">\n                    <mat-card *ngFor=\"let doc of this.multiDocumentsData\" (click)=\"loadDocument(doc['id'])\"\n                              class=\"cursor-pointer scale-1 hover:scale-103 transition-all duration-300 max-w-[350px]\">\n                        <img mat-card-image class=\"m-auto p-4\" [src]=\"doc['thumb']\" alt=\"Open-Capture image\">\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<span *ngIf=\"!this.fromToken || (this.processDone && this.fromToken && !this.processMultiDocument)\">\n    <div class=\"grid grid-cols-2 overflow-auto\" [style]=\"!this.fromToken ? 'height: calc(100vh - 4rem)' : 'height: 100vh'\">\n        <div id=\"image\" class=\"overflow-auto\" [style]=\"!this.fromToken ? 'height: calc(100vh - 4rem); direction: rtl' : 'height: 100vh;direction: rtl'\">\n            <div class=\"fixed left-4 z-50 text-xl text-left py-2\">\n                <ng-container *ngIf=\"!this.loading && this.document['nb_pages']> 1\">\n                    <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n                    {{ 'VERIFIER.page' | translate }}\n                    {{ currentPage }}\n                    {{ 'VERIFIER.on' | translate }}\n                    {{ this.document['nb_pages'] }}\n                    <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n                </ng-container>\n            </div>\n            <div class=\"image-container px-4\" *ngIf=\"this.document\">\n                <img id=\"document_image\" alt=\"Open-Capture\" [src]=\"this.imgSrc\">\n            </div>\n        </div>\n        <div *ngIf=\"this.fields\" id=\"form\" class=\"px-4 overflow-auto pt-2\">\n            <div *ngIf=\"this.formSettings.settings['unique_url']['change_form']\">\n                <div class=\"relative float-left top-5\">\n                    <i class=\"fa-solid fa-eye cursor-pointer text-green-400 text-lg\" (click)=\"hideVisuals()\"\n                       [class.fa-eye-slash]=\"this.visualIsHide\"\n                       [matTooltip]=\"'VERIFIER.hide_visuals' | translate\"></i>\n                </div>\n                <div class=\"relative z-20 float-right\" style=\"width: 96%\">\n                    <mat-accordion>\n                        <mat-expansion-panel class=\"top-2 mb-4\" [(expanded)]=\"this.settingsOpen\">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title class=\"justify-center\">{{ 'GLOBAL.settings' | translate }}</mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <mat-tab-group class=\"mx-5\">\n                                <mat-tab [label]=\"'VERIFIER.change_form' | translate\">\n                                    <p class=\"mt-3 text-center text-gray-400\">{{ 'VERIFIER.change_form_details' | translate }}</p>\n                                    <mat-form-field class=\"w-full\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                        <mat-select [(value)]=\"this.currentFormFields['form_id']\" (selectionChange)=\"changeForm($event)\"\n                                                    [disabled]=\"this.document.status === 'END'\">\n                                            <mat-option *ngFor=\"let form of this.formList\" [value]=\"form['id']\">\n                                                {{ form['label'] }}\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-hint class=\"text-gray-500\">\n                                            {{ 'VERIFIER.outputs_list' | translate }} : {{ this.outputsLabel.join(', ') }}\n                                        </mat-hint>\n                                    </mat-form-field>\n                                </mat-tab>\n                            </mat-tab-group>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                </div>\n            </div>\n            <div *ngIf=\"!this.formEmpty else noField\">\n                <ng-container *ngFor=\"let category of this.fieldCategories\">\n                    <ng-container *ngIf=\"this.form[category['id']].length !== 0\">\n                        <span class=\"relative text-xl tracking-wider px-1.5 bg-white left-6 z-10\">\n                            {{ getCategoryLabel(category) }}\n                            <span *ngIf=\"getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"cursor-default relative top-1.5 text-red-500 text-3xl\"\n                                  matTooltip=\"{{ 'VERIFIER.only_raw_footer' | translate }}\">&bull;</span>\n                            <span *ngIf=\"!getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"cursor-default relative top-1.5 text-green-400 text-3xl\"\n                                  matTooltip=\"{{ 'VERIFIER.calculated_footer' | translate }}\">&bull;</span>\n                            <span *ngIf=\"this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"text-sm cursor-pointer ml-2\">\n                                <i *ngIf=\"this.document.supplier_id && supplierExists && this.document.status !== 'END' && this.formSettings.settings['unique_url']['update_supplier']\"\n                                   (click)=\"editSupplier()\" class=\"fa-solid fa-edit\"></i>\n                                <i *ngIf=\"!this.document.supplier_id || !supplierExists && this.document.status !== 'END' && this.formSettings.settings['unique_url']['create_supplier']\"\n                                   (click)=\"createSupplier()\" class=\"fa-solid fa-plus\"></i>\n                            </span>\n                        </span>\n                        <div class=\"relative border-green-400 border rounded-lg -top-3.5\">\n                            <div id=\"{{ category['id'] }}\" class=\"flex flex-wrap w-full mt-6\" style=\"min-height: 50px;\">\n                                <div *ngFor=\"let field of this.form[category['id']];\" class=\"flex items-center p-2\" [class]=\"field.class\">\n                                    <ng-container *ngIf=\"field.type === 'text' || (field.type === 'regex' && field.format !== 'date')\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\"\n                                                        (click)=\"updateFilteredOption($event, field.control)\"\n                                                        *ngIf=\"category['id'] === 'supplier' && field.id === 'name' else other\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }}\n                                            </mat-label>\n                                            <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field['required']\" [readonly]=\"this.document.status === 'END'\"\n                                                   [formControl]=\"field['control']\" [pattern]=\"field.pattern\" [matAutocomplete]=\"auto\">\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                            <mat-autocomplete #auto=\"matAutocomplete\" [id]=\"field.id\"\n                                                              (optionSelected)='getSupplierInfo($event.option.id, true)'>\n                                                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                                                    <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                        <ng-template #other>\n                                            <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                                <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                    {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                                </mat-label>\n                                                <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                      class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                                    <i class=\"fa-solid fa-circle-plus\"></i>\n                                                </span>\n                                                <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                      class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                                    <i class=\"fa-solid fa-trash\"></i>\n                                                </span>\n                                                <input [id]=\"field.id\" matInput type=\"text\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [pattern]=\"field.pattern\" (click)=\"this.ocrFromUser = true; this.saveInfo = true;\"\n                                                       (focusin)=\"ocr($event, true, field.color);\" [readonly]=\"this.document.status === 'END'\"\n                                                       (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id']); checkVAT(field['id'], $any($event.target).value); checkSirenOrSiret(field['id'], $any($event.target).value)\">\n                                                <mat-error *ngIf=\"field.control.errors\">\n                                                    {{ getErrorMessage(field.id, category['id']) }}\n                                                </mat-error>\n                                                <i *ngIf=\"showAutoLogo(field)\" class=\"fa-solid fa-bolt text-gray-600 absolute top-2 -right-2\"\n                                                   [matTooltip]=\"'VERIFIER.data_found_auto' | translate\"></i>\n                                            </mat-form-field>\n                                        </ng-template>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'textarea'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                            </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                            </span>\n                                            <textarea [id]=\"field.id\" matInput cdkTextareaAutosize\n                                                      cdkAutosizeMinRows=\"1\"\n                                                      cdkAutosizeMaxRows=\"5\"\n                                                      [required]=\"field['required']\" [formControl]=\"field['control']\" [pattern]=\"field.pattern\"\n                                                      (focusin)=\"ocr($event, true, field.color)\" [readonly]=\"this.document.status === 'END'\"\n                                                      (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"></textarea>\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'date' || (field.type === 'regex' && field.format === 'date')\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                                <i class=\"fa-solid fa-circle-plus\"></i>\n                                            </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </span>\n                                            <input [id]=\"field.id\" matInput [matDatepicker]=\"picker\" [formControl]=\"field['control']\"\n                                                   [readonly]=\"this.document.status === 'END'\"\n                                                   (focusin)=\"ocr($event, true, field.color)\" [required]=\"field['required']\"\n                                                   (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                                   (dateChange)=\"saveData($any($event.targetElement).value, field['id'])\">\n                                            <mat-datepicker-toggle [disabled]=\"this.document.status === 'END'\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                            <mat-datepicker #picker></mat-datepicker>\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                            <i *ngIf=\"showAutoLogo(field)\" class=\"fa-solid fa-bolt text-xs text-gray-600 absolute top-0.5 -right-12\"\n                                               [matTooltip]=\"'VERIFIER.data_found_auto' | translate\"></i>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'autocomplete'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                        </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                        </span>\n                                            <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field['required']\"\n                                                   [formControl]=\"field['control']\"\n                                                   (focusin)=\"ocr($event, true, field.color)\"\n                                                   (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                                   [matAutocomplete]=\"data\" [readonly]=\"this.document.status === 'END'\">\n                                            <mat-autocomplete #data=\"matAutocomplete\">\n                                            <span *ngIf=\"field.autocomplete_values\">\n                                                <mat-option *ngFor=\"let option of field.autocomplete_values | async\" [value]=\"option.data\"\n                                                            (onSelectionChange)=\"setAutocompleteDefaultValue($event)\" [id]=\"option.res_id\">\n                                                    <span [innerHTML]=\"option.data | highlight: toHighlight\"></span>\n                                                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">\n                                                        {{ option.alt_identifier }}\n                                                    </span>\n                                                </mat-option>\n                                            </span>\n                                                <mat-option *ngIf=\"!field.autocomplete_values\">\n                                                    <span [innerHTML]=\"'VERIFIER.no_autocomplete_data' | translate\"></span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'select'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                        </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                        </span>\n                                            <input matInput [id]=\"field.id\" type=\"text\" [required]=\"field['required']\"\n                                                   [formControl]=\"field['control']\" [matAutocomplete]=\"accounting\" [readonly]=\"this.document.status === 'END'\">\n                                            <span *ngIf=\"accountingPlanEmpty\" class=\"absolute text-gray-600 top-0.5 -right-2.5 cursor-help\"\n                                                  [matTooltip]=\"'VERIFIER.accounting_plan_empty' | translate\">\n                                                <i class=\"fa-solid fa-circle-question\"></i>\n                                            </span>\n                                            <mat-autocomplete #accounting=\"matAutocomplete\">\n                                                <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option.compte_lib\" [id]=\"option.compte_num\">\n                                                    <span [innerHTML]=\"option.compte_num + ' - ' + option['compte_lib'] | highlight: toHighlightAccounting\"></span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"!field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }}\n                                            </mat-label>\n                                            <mat-select [id]=\"field.id\" [disabled]=\"this.document.status === 'END'\">\n                                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['compte_num']\">\n                                                    {{ option['compte_num'] }} - {{ option['compte_lib'] }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <span *ngIf=\"field.fullSizeSelected\" (click)=\"duplicateLine(field.id, category['id'])\"\n                                          class=\"relative -right-1.5 cursor-pointer text-gray-900 -top-2.5\"\n                                          [matTooltip]=\"'VERIFIER.duplicate_line' | translate\" matTooltipPosition=\"above\">\n                                    <i class=\"fa-solid fa-clone text-lg\"></i>\n                                </span>\n                                    <span *ngIf=\"field.deleteLine\" (click)=\"removeDuplicateLine(field.id, category['id'])\"\n                                          class=\"relative -right-1.5 cursor-pointer text-red-500 -top-2.5\"\n                                          [matTooltip]=\"'VERIFIER.remove_duplicated_line' | translate\" matTooltipPosition=\"above\">\n                                    <i class=\"fa-solid fa-trash text-lg\"></i>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <ng-template #noField>\n                <div class=\"text-gray-900 text-center text-xl mt-32\">\n                    {{ 'FORMS.no_fields' | translate }}\n                </div>\n            </ng-template>\n            <div [class.mt-20]=\"this.formEmpty\" class=\"mb-6 grid grid-cols-2 gap-4 h-12 text-gray-900\"\n                 *ngIf=\"this.formSettings.settings['unique_url']['validate_document'] || this.formSettings.settings['unique_url']['refuse_document']\">\n                <button mat-button (click)=\"validateForm()\" type=\"submit\" [disabled]=\"this.document.status === 'END'\" class=\"valid_button\"\n                        *ngIf=\"this.formSettings.settings['unique_url']['validate_document']\">\n                    <span *ngIf=\"!this.loadingSubmit\">{{ 'FORMS.validate' | translate }}</span>\n                    <i *ngIf=\"this.loadingSubmit\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n                <button mat-button (click)=\"refuseForm()\" type=\"submit\" [disabled]=\"this.document.status === 'END'\"\n                        *ngIf=\"this.formSettings.settings['unique_url']['refuse_document']\"\n                        class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                    {{ 'FORMS.refuse' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</span>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { environment } from \"./app/env\";\nimport { AppModule } from './app/app.module';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nif (environment.production) {\n    enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule).then();\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Estus Flask @StackOverflow */\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const timeoutValue = req.headers.get('timeout');\n        if (!timeoutValue) {\n            return next.handle(req);\n        }\n        const timeoutValueNumeric = Number(timeoutValue);\n\n        return next.handle(req).pipe(timeout(timeoutValueNumeric));\n    }\n}","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Injectable } from '@angular/core';\nimport { LocalStorageService } from \"./local-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"./user.service\";\nimport { environment } from \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n    public headersExists : boolean = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private localStorage: LocalStorageService\n    ) {\n        if (!this.getToken()) {\n            this.headersExists = false;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    generateHeaders() {\n        if (this.getToken()) {\n            this.headersExists = true;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    setCachedUrl(url: string) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['cachedUrlName'], url);\n    }\n\n    getCachedUrl() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['cachedUrlName']);\n    }\n\n    cleanCachedUrl() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.remove(tokenNames['cachedUrlName']);\n    }\n\n    setTokenConfig(config: any) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['configName'], config);\n    }\n\n    getTokenConfig() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['configName']);\n    }\n\n    getTokenName() {\n        let tokenName = 'OpenCaptureToken';\n        let userDataName = 'OpenCaptureUserData';\n        let cachedUrlName = 'OpenCaptureCachedUrl';\n        let configName = 'OpenCaptureConfig';\n        if (environment['customId']) {\n            tokenName += '_' + environment['customId'];\n            userDataName += '_' + environment['customId'];\n            cachedUrlName += '_' + environment['customId'];\n            configName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            tokenName += '_' + environment['fqdn'];\n            userDataName += '_' + environment['fqdn'];\n            cachedUrlName += '_' + environment['fqdn'];\n            configName += '_' + environment['fqdn'];\n        }\n\n        return {\n            'tokenJwt': tokenName,\n            'configName': configName,\n            'userData': userDataName,\n            'cachedUrlName': cachedUrlName\n        };\n    }\n\n    setTokens(token: string, user_token: string) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['tokenJwt'], token);\n        this.localStorage.save(tokenNames['userData'], user_token);\n    }\n\n    getToken() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['tokenJwt']);\n    }\n\n    logout() {\n        const tokenNames = this.getTokenName();\n\n        const user = this.userService.getUser();\n        let user_info = '';\n        if (user) {\n            user_info = user['lastname'] + ' ' + user['firstname'] + ' (' + user['username'] + ')';\n        }\n\n        this.userService.setUser({});\n        this.localStorage.remove('login_image_b64');\n        this.localStorage.remove('selectedSettings');\n        this.localStorage.remove(tokenNames['tokenJwt']);\n        this.localStorage.remove(tokenNames['userData']);\n        this.localStorage.remove('splitter_or_verifier');\n        this.localStorage.remove('selectedParentSettings');\n        this.localStorage.remove('monitoring_minimize_display');\n        this.http.get(environment['url'] + '/ws/auth/logout?user_info=' + user_info).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.router.navigateByUrl(\"/login\").then();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { CodeModel } from \"@ngstack/code-editor\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { environment } from \"../../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"../notifications/notifications.service\";\nimport { AuthService } from \"../auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.scss']\n})\nexport class CodeEditorComponent implements OnInit {\n    theme               : string    = 'vs';\n    testing             : boolean   = false;\n    splitterOrVerifier  : any       = 'verifier';\n    codeModel           : CodeModel = {\n        language: 'python',\n        uri: 'scripting.py',\n        value: ''\n    };\n    options             : any       = {\n        contextmenu: true,\n        lineNumbers: true,\n        minimap: {\n            enabled: true\n        }\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit(): void {\n        if (this.router.url.includes('/verifier/')) {\n            this.splitterOrVerifier = 'verifier';\n        } else if (this.router.url.includes('/splitter/')) {\n            this.splitterOrVerifier = 'splitter';\n        }\n\n        if (this.data['codeContent']) {\n            this.codeModel.value = this.translate.instant(this.data['codeContent']);\n        }\n    }\n\n    testScript() {\n        if (this.testing) return;\n        this.testing = true;\n        this.http.post(environment['url'] + '/ws/workflows/' + this.splitterOrVerifier + '/testScript', {\n            'args': {\n                'input_folder': this.data.input_folder,\n                'step': this.data.step,\n                'codeContent': this.codeModel.value\n            }\n        }, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                this.testing = false;\n                this.notify.success(this.translate.instant('WORKFLOW.test_script_success', {return: data.replace(/[\\n\\r]/g, '<br>')}));\n            }),\n            catchError((err: any) => {\n                this.testing = false;\n                console.debug(err);\n                this.notify.error(this.translate.instant('WORKFLOW.test_script_error', {return: err.error.replace(/[\\n\\r]/g, '<br>')}));\n                return of(false);\n            })\n        ).subscribe();\n    }\n}","<div class=\"h-full\">\n    <ngs-code-editor style=\"height: 95%\"\n                     [theme]=\"theme\"\n                     [codeModel]=\"codeModel\"\n                     [options]=\"options\">\n    </ngs-code-editor>\n    <span class=\"flex pb-4 pr-4\">\n        <span class=\"flex w-full justify-start pl-4\" *ngIf=\"data['testScriptButton']\">\n            <button mat-button class=\"text-gray-900\" (click)=\"testScript()\">\n                {{ data['testScriptButton'] }}\n                <i *ngIf=\"this.testing\" class=\"fa-solid fa-circle-notch fa-spin\"></i>\n            </button>\n        </span>\n        <span class=\"flex w-full justify-end\">\n            <button mat-button [mat-dialog-close]=\"false\">\n                {{ data['cancelButton'] }}\n            </button>\n            <button class=\"text-green-400\" mat-button [mat-dialog-close]=\"this.codeModel.value\" cdkFocusInitial>\n                {{ data['confirmButton'] }}\n            </button>\n        </span>\n    </span>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService\n    ) {}\n\n    readConfig() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        return new Promise((resolve) => {\n            this.http.get(environment['url'] + '/ws/config/readConfig', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.config);\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    setConfig(config: any) {\n        this.authService.setTokenConfig(btoa(JSON.stringify(config)));\n    }\n\n    getConfig() {\n        return JSON.parse(atob(this.authService.getTokenConfig() as string));\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string\n    confirmText : string\n    confirmButton : string\n    selectValues: any\n    selectLabel : string\n    confirmButtonColor : string\n    cancelButton : string\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html'\n})\n\nexport class ConfirmDialogComponent {\n    selectData: any;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData\n    ) {}\n}\n","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 w-11/12 m-auto\">\n<mat-dialog-content class=\"mat-typography text-gray-900\" [innerHTML]=data.confirmText></mat-dialog-content>\n<mat-dialog-content class=\"mat-typography\" *ngIf=\"data.selectValues\">\n    <mat-form-field class=\"w-full mt-1\">\n        <mat-label>{{ data.selectLabel }}</mat-label>\n        <mat-select [(value)]=\"this.selectData\">\n            <mat-option *ngFor=\"let option of data.selectValues\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions class=\"flex justify-end pb-4 pr-4\">\n    <button mat-button [mat-dialog-close]=\"\">{{ data.cancelButton }}</button>\n    <button *ngIf=\"data.selectValues\" mat-button [mat-dialog-close]=\"this.selectData\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n    <button *ngIf=\"!data.selectValues\" mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\"\n            cdkFocusInitial [class.text-green-400]=\"data.confirmButtonColor === 'green'\">{{ data.confirmButton }}\n    </button>\n</mat-dialog-actions>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-hint-error',\n    templateUrl: './error.service.html',\n    styleUrls: ['./error.service.scss']\n})\n\nexport class ErrorServiceComponent {\n    @Input() message!: string;\n    @Input() specificClass: string = 'w-1/2';\n}\n","<div class=\"hint {{ this.specificClass }}\">\n    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n    <div class=\"message\" [innerHTML]=\"this.message\"></div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { PrivilegesService } from \"./privileges.service\";\nimport { ActivatedRouteSnapshot, Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport {LocalStorageService} from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localStorage: LocalStorageService,\n        private privilegesService: PrivilegesService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        if (route.data['privileges'] !== undefined) {\n            let returnValue = true;\n            route.data['privileges'].forEach((privilege: any) => {\n                const hasPrivilege = this.privilegesService.hasPrivilege(privilege);\n                if (!hasPrivilege) {\n                    this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                        let label = '';\n                        if (route.routeConfig) {\n                            label = '<b>' + this.translate.instant(route.data['title']) + '</b>';\n                        }\n                        this.notify.error(translated + label);\n                        if (route.url[0].path === 'settings') {\n                            this.localStorage.remove('selectedSettings');\n                            this.localStorage.remove('selectedParentSettings');\n                        }\n                        this.router.navigateByUrl('/home').then();\n                    });\n                    returnValue = false;\n                }\n            });\n            return returnValue;\n        } else {\n            return false;\n        }\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: './hint.service.html',\n    styleUrls: ['./hint.service.scss']\n})\n\nexport class HintServiceComponent {\n    @Input() message!: string;\n    @Input() specificClass: string = 'w-1/2';\n}\n","<div class=\"hint text-center {{ this.specificClass }}\">\n    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n    <div class=\"message\" [innerHTML]=\"this.message\"></div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from  \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { AuthService } from \"./auth.service\";\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HistoryService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService\n    ) { }\n\n    addHistory(module: any, submodule: string, desc: string, predefined_user: any = {}) {\n        if (!this.userService.user || !this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = predefined_user;\n        }\n        const user = this.userService.user.lastname + ' ' + this.userService.user.firstname + ' (' + this.userService.user.username + ')';\n        const data = {\n            'module': module,\n            'submodule': submodule,\n            'desc': desc,\n            'user_info': user,\n            'user_id': this.userService.user.id\n        };\n        this.http.post(environment['url'] + '/ws/history/add', data).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getCurrentUrl() {\n        return this.currentUrl;\n    }\n\n    public getPreviousUrl() {\n        return this.previousUrl;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n\n    constructor() {}\n\n    save(id: string, content: any) {\n        localStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return localStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        localStorage.removeItem(id);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport * as moment from 'moment';\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang         : string = 'fra';\n    currentBabelLang    : string = 'fr';\n    dateAdaptaterLocale : string = 'fr-FR';\n    langs               : [] = [];\n    localeLoading       : boolean = false;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private dateAdapter: DateAdapter<any>\n    ) {\n        this.dateAdapter.setLocale('fr-FR');\n        moment.updateLocale('fr-FR', {\n            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n            months : 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n            weekdays : 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n            longDateFormat : {\n                LT : 'HH:mm',\n                LTS : 'HH:mm:ss',\n                L : 'DD/MM/YYYY',\n                l : 'DD/MM/YYYY',\n                LL : 'D MMMM YYYY',\n                LLL : 'D MMM YYYY à HH:mm:ss',\n                LLLL : 'dddd D MMMM YYYY à HH:mm:ss'\n            },\n            week : {\n                dow : 1, // Monday is the first day of the week.\n            }\n        });\n        moment.updateLocale('en-GB', {\n            longDateFormat : {\n                LT: \"h:mm A\",\n                LTS: \"h:mm:ss A\",\n                L: \"MM/DD/YYYY\",\n                l: \"MM/DD/YYYY\",\n                LL: \"MMMM Do YYYY\",\n                LLL: \"MMM Do YYYY - HH:mm:ss\",\n                LLLL: \"dddd, MMMM Do YYYY HH:mm:ss\",\n                llll: \"ddd, MMM D YYYY HH:mm:ss\"\n            },\n            week : {\n                dow : 0, // Sunday is the first day of the week.\n            }\n        });\n        moment.locale(this.dateAdaptaterLocale);\n    }\n\n    changeLocale(data: any) {\n        this.localeLoading = true;\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/i18n/changeLanguage/' + data.value, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.getCurrentLocale();\n            }),\n            finalize(() => {\n                setTimeout(() => {\n                    this.localeLoading = false;\n                    window.location.reload();\n                }, 500);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCurrentLocale() {\n        this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang;\n                this.currentBabelLang = data.babel_lang;\n                if (data.moment_lang) {\n                    this.dateAdaptaterLocale = data.moment_lang;\n                }\n                this.dateAdapter.setLocale(this.dateAdaptaterLocale);\n                this.translate.use(this.currentLang);\n                moment.locale(this.dateAdaptaterLocale);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getLocales() {\n        this.http.get(environment['url'] + '/ws/i18n/getAllLang').pipe(\n            tap((data: any) => {\n                this.langs = data.langs;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(): boolean {\n        if (this.authService.getToken()) {\n            this.router.navigateByUrl('/home').then();\n            return false;\n        }\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"./user.service\";\nimport { environment } from \"../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"./locale.service\";\nimport { ConfigService } from \"./config.service\";\nimport { LastUrlService } from \"./last-url.service\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService implements CanActivate {\n\n    constructor(\n        public router: Router,\n        private http:HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private routerExtService: LastUrlService,\n        private localStorage: LocalStorageService\n    ) {}\n\n    login(token: string, route: any) {\n        if ((this.userService.getUser() === undefined || Object.keys(this.userService.getUser()).length === 0) && this.userService.getUserFromLocal() === undefined) {\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'token': token,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())));\n                    if (!this.authService.headersExists) {\n                        this.authService.generateHeaders();\n                    }\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (route) {\n                            this.localStorage.save('monitoring_minimize_display', 'true');\n                            this.router.navigate([route]).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    if (err.status !== 402) { // Specific case for simple SSO\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    }\n                    return of(true);\n                })\n            ).subscribe();\n        }\n    }\n\n    canActivate(): boolean {\n        const token = this.authService.getToken();\n        let route = '';\n        if (!token) {\n            const params = new URLSearchParams(window.location.href);\n            let token_param = '';\n            for (const [key, value] of params.entries()) {\n                if (key === 'token') {\n                    token_param = value;\n                    route = window.location.hash.replace('#', '').replace(/\\?.*/, '');\n                    this.login(token_param, route);\n                }\n            }\n        }\n        if (!token) {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                const currentUrl = this.routerExtService.getCurrentUrl();\n                if (currentUrl.includes('verifier/viewer_token')) {\n                    return true;\n                }\n                if (currentUrl !== '/logout' && currentUrl !== '/login' && currentUrl !== '/500') {\n                    this.authService.setCachedUrl(currentUrl.replace(/^\\//g, ''));\n                }\n                this.notify.error(translated);\n                this.authService.logout();\n                return false;\n            });\n            return false;\n        }\n        this.login(token, null);\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from '@angular/router';\nimport {  ToastrService } from \"ngx-toastr\";\nimport { environment } from  \"../../app/env\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html'\n})\n\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: never) {}\n}\n\n@Injectable()\nexport class NotificationService {\n    constructor(\n        private router: Router,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    success(message: string, _duration?: number) {\n        const duration = _duration ? this.getMessageDuration(message, _duration) :\n            this.getMessageDuration(message, 2000);\n        this.toastr.success(message, '', {timeOut: duration, enableHtml: true});\n    }\n\n    error(message: string) {\n        const duration = this.getMessageDuration(message, 4000);\n        this.toastr.error(message, '', {timeOut: duration, enableHtml: true});\n    }\n\n    handleErrors(err: any, route = '') {\n        if (err.status === 0 && err.statusText === 'Unknown Error') {\n            const message = '<b>' + this.translate.instant('ERROR.connection_failed') + '</b> <br>' +\n                this.translate.instant('ERROR.is_server_up', {server: environment['url']});\n            if (this.router.url !== '/login') {\n                this.router.navigate(['/500']).then(() => {\n                    this.error(message);\n                });\n            } else {\n                this.error(message);\n            }\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                if (err.error.message === 'missing_custom_or_file_doesnt_exists') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.is_custom_present_and_file_exists'));\n                } else if (err.error.message === 'bad_or_missing_database_informations') {\n                    this.error('<b>' + this.translate.instant('ERROR.database_error') + '</b> : ' + this.translate.instant('ERROR.bad_or_missing_database_informations'));\n                } else if (err.error.message === 'missing_secret_key') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.missing_secret_key'));\n                } else {\n                    if (err.url) {\n                        this.error(err.url + '<br> <b>' + err.error.errors + '</b> : ' + err.error.message);\n                    } else {\n                        this.error('<b>' + err.error.errors + '</b> : ' + err.error.message);\n                    }\n                }\n                if (err.status === 403 || err.status === 404) {\n                    this.router.navigate(['/login']).then();\n                }\n                else if (err.error.errors === this.translate.instant('ERROR.jwt_error')) {\n                    this.router.navigate(['/logout']).then();\n                }\n            } else if (err.error.exception !== undefined) {\n                this.error(err.url + '<br>' +  err.error.exception[0].message);\n            } else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined) {\n                    this.error(err.url + '<br>' +  err.error.error[0].message);\n                } else {\n                    this.error(err.url + '<br>' + err.error.error.message);\n                }\n            } else {\n                this.error(err.url + '<br>' + `${err.status} : ${err.statusText}`);\n            }\n        } else {\n            this.error(err);\n        }\n\n        if (route) {\n            this.router.navigate([route]).then();\n        }\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PasswordVerificationService {\n    minLengthEnabled : boolean = false;\n    passwordRules    : any     = {\n        minLength: 0,\n        uppercaseMandatory: false,\n        specialCharMandatory: false,\n        numberMandatory: false\n    };\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService\n    ) {\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/passwordRules').pipe(\n            tap((data: any) => {\n                if (data.configuration[0] && data.configuration[0].data.value) {\n                    this.passwordRules = data.configuration[0].data.value;\n                    if (this.passwordRules.minLength > 0) {\n                        this.minLengthEnabled = true;\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkPasswordValidityUnique(userFields: any) {\n        const password = userFields.filter((element: any) => element.id === 'new_password')[0];\n        const passwordError = this.verifyRules(password.control.value);\n\n        if (passwordError !== '') password.control.setErrors({\"message\": passwordError});\n        else password.control.setErrors(null);\n    }\n\n    checkPasswordValidity(userFields: any) {\n        const password = userFields.filter((element: any) => element.id === 'password')[0];\n        const passwordCheck = userFields.filter((element: any) => element.id === 'password_check')[0];\n        const passwordError = this.verifyRules(password.control.value);\n        const passwordCheckError = this.verifyRules(passwordCheck.control.value);\n\n        if (passwordError !== '') password.control.setErrors({\"message\": passwordError});\n        else password.control.setErrors(null);\n\n        if (passwordCheckError !== '') passwordCheck.control.setErrors({\"message\": passwordCheckError});\n        else passwordCheck.control.setErrors(null);\n\n        if (passwordError === '' && passwordCheckError === '') {\n            const mismatch = this.checkPasswordConfirmation(password.control.value, passwordCheck.control.value);\n            if (mismatch) {\n                password.control.setErrors({\"message\": mismatch});\n                passwordCheck.control.setErrors({\"message\": mismatch});\n            }\n        }\n    }\n\n    verifyRules(password: string) {\n        let errorMessage = '';\n        if (password) {\n            if (!password.match(/[A-Z]/g) && this.passwordRules.uppercaseMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_uppercase_mandatory');\n            } else if (!password.match(/[0-9]/g) && this.passwordRules.numberMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_number_mandatory');\n            } else if (!password.match(/[^A-Za-z0-9]/g) && this.passwordRules.specialCharMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_special_char_mandatory');\n            } else if (password.length < this.passwordRules.minLength && this.passwordRules.minLength !== 0) {\n                errorMessage = this.translate.instant('AUTH.password_min_length', {\"min\": this.passwordRules.minLength});\n            }\n        }\n        return errorMessage;\n    }\n\n    checkPasswordConfirmation(password: any, passwordCheck: any) {\n        let errorMessage;\n        if (password && passwordCheck && password !== passwordCheck) {\n            errorMessage = this.translate.instant('USER.password_mismatch');\n        } else {\n            errorMessage = '';\n        }\n        return errorMessage;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { PipeTransform, Pipe, Injectable } from '@angular/core';\n\n@Pipe({\n    name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], field : string, value : string): any[] {\n        if (!items) return [];\n        if (!value || value.length === 0) return items;\n        return items.filter(it =>\n        it[field].toLowerCase().indexOf(value.toLowerCase()) !== -1);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilegeId: any) {\n        let found = false;\n        const user = this.userService.getUserFromLocal();\n        if (user) {\n            const userPrivileges = user['privileges'];\n            if (userPrivileges) {\n                if (privilegeId === undefined || userPrivileges === '*') {\n                    return true;\n                }\n\n                userPrivileges.forEach((element: any) => {\n                    if (privilegeId === element) {\n                        found = true;\n                    }\n                });\n                return found;\n            }\n        }\n        return false;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../local-storage.service\";\nimport { environment } from \"../../app/env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { interval, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router } from \"@angular/router\";\nimport { NotificationService } from \"../notifications/notifications.service\";\n\n@Component({\n    selector: 'app-process-watcher',\n    templateUrl: './process-watcher.component.html'\n})\n\nexport class ProcessWatcherComponent implements OnInit {\n    minimizeDisplay     : boolean = false;\n    isFirstCallDone     : boolean = false;\n    getProcessRunning   : boolean = false;\n    processes           : any[]   = [];\n    displayedProcessData: any[]   = [];\n    authorizedUrl       : any[]   = ['/verifier/list', '/splitter/list', '/upload'];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.minimizeDisplay = this.localStorageService.get('monitoring_minimize_display') === 'true';\n        interval(5000).subscribe(() => {\n            if (this.authorizedUrl.includes(this.router.url) && !this.getProcessRunning && !this.minimizeDisplay) {\n                this.getLastProcesses();\n            }\n        });\n    }\n\n    changeDisplayMode(minimizeDisplay: boolean) {\n        this.minimizeDisplay = minimizeDisplay;\n        if (!this.minimizeDisplay) {\n            this.getLastProcesses();\n        }\n        this.localStorageService.save('monitoring_minimize_display', minimizeDisplay ? 'true' : 'false');\n    }\n\n    getLastProcesses() {\n        this.isFirstCallDone = true;\n        this.getProcessRunning  = true;\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier) {\n            this.http.get(environment['url'] + '/ws/monitoring/' + splitterOrVerifier + '/lasts',\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (this.displayedProcessData !== data.processses) {\n                        this.processes = [];\n                        let cpt = 1;\n                        for (const process of data.processses) {\n                            process.error_message = '';\n                            if (process.error) {\n                                Object.keys(process.steps).forEach((step: any) => {\n                                    if (process.steps[step].status == 'error') {\n                                        process.error_message = process.steps[step].message;\n                                    }\n                                });\n                            }\n                            this.processes.push({\n                                'id'            : cpt,\n                                'type'          : process.type,\n                                'fileName'      : process.filename,\n                                'module'        : process.module,\n                                'beginTime'     : process.creation_date_formated,\n                                'endTime'       : process.end_date_formated,\n                                'error'         : process.error,\n                                'errorMessage'  : process.error_message,\n                                'status'        : process.status ? process.status : 'in_progress',\n                                'age'           : process.age !== 0 ?\n                                    this.translate.instant(\"GLOBAL.n_minutes_ago\", {'minutes': process.age}) :\n                                    this.translate.instant(\"GLOBAL.few_seconds_ago\")\n                            });\n                            cpt++;\n                        }\n                    }\n                    this.displayedProcessData = data.process;\n                }),\n                finalize(() => this.getProcessRunning = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    showError(error: any) {\n        if (error) {\n            this.notify.handleErrors({\n                error: {\n                    errors : this.translate.instant('GLOBAL.task_error_informations'),\n                    message : '<br>' + error.replaceAll('\\n', '<br>')\n                }\n            });\n        }\n    }\n}\n","<mat-card class=\"w-1/3 h-36 absolute bottom-2 right-2 z-10 bg-slate-50\" style=\"padding: 0 !important;\"\n          *ngIf=\"!this.minimizeDisplay && this.authorizedUrl.includes(this.router.url)\">\n    <mat-card-title class=\"text-sm m-4\" cdkDragHandle>\n        {{ 'GLOBAL.current_tasks' | translate }}\n    <span class=\"text-lg absolute right-4 top-2 hover:text-green-400 inline-block align-bottom hover:cursor-pointer\"\n          (click)=\"changeDisplayMode(!this.minimizeDisplay)\" matTooltip=\"{{ 'GLOBAL.minimize' | translate }}\">\n        <i class=\"fa-solid fa-window-minimize align-top\"></i>\n    </span>\n    </mat-card-title>\n    <div class=\"mx-4 h-20 bg-slate-100\" [class.overflow-hidden]=\"processes.length === 0 && !isFirstCallDone\"\n        [class.overflow-y-auto]=\"processes.length !== 0 && isFirstCallDone\">\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"processes.length === 0 && !isFirstCallDone\">\n            <i class=\"fa-solid fa-circle-notch fa-spin fa-2x w-full text-gray-400\"></i>\n            <span class=\"block\">{{ 'GLOBAL.loading' | translate }}</span>\n        </div>\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"processes.length === 0 && !getProcessRunning && isFirstCallDone\">\n            <i class=\"fa-solid fa-check fa-2x w-full text-gray-400 mt-4\"></i>\n            <span class=\"block\">{{ 'GLOBAL.no_task_to_show' | translate }}</span>\n        </div>\n        <div *ngFor=\"let process of processes\" class=\"h-8 w-full px-4 border-t-2 grid grid-cols-10\" (click)=\"showError(process.errorMessage)\" [class.cursor-pointer] = process.error>\n            <span class=\"col-span-1 pt-1\">\n                {{ process.id }}\n            </span>\n            <span class=\"col-span-5 pt-1 w-full truncate\">\n                {{ process.fileName }}\n            </span>\n            <span class=\"col-span-3 text-sm text-slate-400 pt-1 truncate\"\n                  matTooltip=\"{{ 'GLOBAL.add_time' | translate }} {{ process.beginTime}}\">\n                {{ process.age }}\n            </span>\n            <span class=\"col-span-1 text-right\">\n                <i *ngIf=\"process.status === 'running'\" class=\"fa-solid fa-person-running fa-fade text-green-400 fa-lg my-4\"\n                   [matTooltip]=\"'MONITORING.running' | translate\"></i>\n                <i *ngIf=\"process.status === 'wait'\" class=\"fa-solid fa-clock text-gray-400 fa-lg my-4\"\n                   [matTooltip]=\"'MONITORING.wait' | translate\"></i>\n                <i *ngIf=\"process.status === 'error'\" class=\"fa-solid fa-xmark fa-lg my-4 text-red-400 cursor-pointer\"\n                    matTooltip=\"{{ 'MONITORING.error' | translate }}\"></i>\n                <i *ngIf=\"process.status === 'done'\" class=\"fa-solid fa-check fa-lg my-4\"\n                   matTooltip=\"{{ 'GLOBAL.end_time' | translate }} {{ process.endTime }}\"></i>\n            </span>\n        </div>\n    </div>\n</mat-card>\n<div (click)=\"changeDisplayMode(!this.minimizeDisplay)\" *ngIf=\"this.minimizeDisplay && this.authorizedUrl.includes(this.router.url)\"\n     matTooltip=\"{{ 'MONITORING.current_processes' | translate }}\"\n     class=\"w-12 h-12 absolute bottom-6 right-6 rounded-full z-10 bg-slate-100 hover:text-green-400 hover:cursor-pointer\n            grid justify-items-center drop-shadow-md\">\n    <span  class=\"text-lg pt-2\">\n        <i class=\"fa-solid fa-list-check fa-align-center\"></i>\n    </span>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LastUrlService } from './last-url.service';\nimport { HintServiceComponent } from './hint/hint.service';\nimport { ErrorServiceComponent } from './error/error.service';\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ProcessWatcherComponent } from './process-watcher/process-watcher.component';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport { CodeEditorModule } from \"@ngstack/code-editor\";\n\n@NgModule({\n    imports: [AppMaterialModule, CommonModule, TranslateModule, DragDropModule, CodeEditorModule],\n    declarations: [CustomSnackbarComponent, ConfirmDialogComponent, ProcessWatcherComponent, CodeEditorComponent],\n    exports: [ProcessWatcherComponent],\n    providers: [NotificationService, LastUrlService, HintServiceComponent, ErrorServiceComponent]\n})\nexport class ServicesModule { }\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Title } from \"@angular/platform-browser\";\nimport { LastUrlService } from \"./last-url.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SettingsService {\n    selectedSetting         : any       = \"configurations\";\n    selectedParentSetting   : any       = \"general\";\n    minimizeSideNav         : boolean   = false;\n    settingsParent          : any[]     = [\n        {\n            \"id\": \"general\",\n            \"label\": this.translate.instant(\"SETTINGS.general\"),\n            \"icon\": 'fa-globe',\n            \"opened\": false\n        },\n        {\n            \"id\": \"verifier\",\n            \"label\": this.translate.instant(\"SETTINGS.verifier\"),\n            \"icon\": 'fa-certificate',\n            \"opened\": false\n        },\n        {\n            \"id\": \"splitter\",\n            \"label\": this.translate.instant(\"SETTINGS.splitter\"),\n            \"icon\": 'fa-arrows-split-up-and-left',\n            \"opened\": false\n        }\n    ];\n    settings                : any       = {\n        \"general\": [\n            {\n                \"id\"        : \"configurations\",\n                \"label\"     : this.translate.instant(\"SETTINGS.configurations\"),\n                \"icon\"      : \"fa-solid fa-sliders\",\n                \"route\"     : '/settings/general/configurations',\n                \"privilege\" : \"configurations\"\n            },\n            {\n                \"id\"        : \"docservers\",\n                \"label\"     : this.translate.instant(\"SETTINGS.docservers\"),\n                \"icon\"      : \"fa-solid fa-hard-drive\",\n                \"route\"     : '/settings/general/docservers',\n                \"privilege\" : \"docservers\"\n            },\n            {\n                \"id\"        : \"regex\",\n                \"label\"     : this.translate.instant(\"SETTINGS.regex\"),\n                \"icon\"      : \"fa-solid fa-star-of-life\",\n                \"route\"     : '/settings/general/regex',\n                \"privilege\" : \"regex\"\n            },\n            {\n                \"id\"        : \"mailcollect\",\n                \"label\"     : this.translate.instant(\"SETTINGS.mailcollect\"),\n                \"icon\"      : \"fa-solid fa-inbox\",\n                \"route\"     : '/settings/general/mailcollect',\n                \"privilege\" : \"mailcollect\"\n            },\n            {\n                \"id\"        : \"users\",\n                \"label\"     : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"      : \"fa-solid fa-user\",\n                \"route\"     : '/settings/general/users',\n                \"privilege\" : \"users_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : 'add_user',\n                        \"label\"     : this.translate.instant(\"USER.create_user\"),\n                        \"route\"     : \"/settings/general/users/new\",\n                        \"privilege\" : \"add_user\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_user',\n                        \"label\"             : this.translate.instant(\"USER.update\"),\n                        \"route\"             : \"/settings/general/users/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_user\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"user-quota\",\n                \"label\"     : this.translate.instant(\"SETTINGS.user_quota\"),\n                \"icon\"      : \"fa-solid fa-user-gear\",\n                \"route\"     : '/settings/general/user-quota',\n                \"privilege\" : \"user_quota\"\n            },\n            {\n                \"id\"        : \"roles\",\n                \"label\"     : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"      : \"fa-solid fa-users\",\n                \"route\"     : \"/settings/general/roles\",\n                \"privilege\" : \"roles_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_role\",\n                        \"label\"     : this.translate.instant(\"ROLE.create_role\"),\n                        \"route\"     : \"/settings/general/roles/new\",\n                        \"privilege\" : \"add_role\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_role',\n                        \"label\"             : this.translate.instant(\"ROLE.update\"),\n                        \"route\"             : \"/settings/general/roles/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_role\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"custom-fields\",\n                \"label\"     : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"route\"     : \"/settings/general/custom-fields\",\n                \"icon\"      : \"fa-solid fa-code\",\n                \"privilege\" : \"custom_fields\"\n            },\n            {\n                \"id\"        : \"login-methods\",\n                \"label\"     : this.translate.instant(\"SETTINGS.login_methods\"),\n                \"icon\"      : \"fa-solid fa-right-to-bracket\",\n                \"route\"     : \"/settings/general/login-methods\",\n                \"privilege\" : \"login_methods\"\n            },\n            {\n                \"id\"        : \"about-us\",\n                \"label\"     : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"      : \"fa-solid fa-address-card\",\n                \"route\"     : \"/settings/general/about-us\"\n            }\n        ],\n        \"verifier\": [\n            {\n                \"id\"        : \"verifier_settings\",\n                \"label\"     : this.translate.instant(\"SETTINGS.verifier_settings\"),\n                \"icon\"      : \"fa-solid fa-cogs\",\n                \"route\"     : \"/settings/verifier\",\n                \"privilege\" : \"verifier_settings\"\n            },\n            {\n                \"id\"        : \"workflow_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_workflows\"),\n                \"icon\"      : \"fa-solid fa-diagram-next\",\n                \"route\"     : \"/settings/verifier/workflows\",\n                \"privilege\" : \"workflows_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_workflow\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.workflow_builder\"),\n                        \"route\"     : \"/settings/verifier/workflows/builder/new\",\n                        \"privilege\" : \"add_workflow\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_workflonw\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.workflow_update\"),\n                        \"route\"             : \"/settings/verifier/workflows/builder/edit/\",\n                        \"privilege\"         : \"update_workflow\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/verifier/forms\",\n                \"privilege\" : \"forms_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/verifier/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/verifier/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/verifier/outputs\",\n                \"privilege\" : \"outputs_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/verifier/outputs/new\",\n                        \"privilege\" : \"add_output\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/verifier/outputs/update/\",\n                        \"privilege\"         : \"update_output\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"position_mask_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_positions_mask\"),\n                \"icon\"      : \"fa-solid fa-map-marker-alt\",\n                \"route\"     : \"/settings/verifier/positions-mask\",\n                \"privilege\" : \"position_mask_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_position_mask\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.positions_mask_builder\"),\n                        \"route\"     : \"/settings/verifier/positions-mask/create\",\n                        \"privilege\" : \"add_position_mask\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_position_mask\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.positions_mask_update\"),\n                        \"route\"             : \"/settings/verifier/positions-mask/update/\",\n                        \"privilege\"         : \"update_position_mask\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"artificial-intelligence\",\n                \"label\"     : this.translate.instant(\"SETTINGS.artificial_intelligence\"),\n                \"icon\"      : \"fa-solid fa-microchip\",\n                \"route\"     : \"/settings/verifier/ai\",\n                \"privilege\" : \"list_ai_model\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"verifier_add_model\",\n                        \"label\"     : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.add_model\"),\n                        \"route\"     : \"/settings/verifier/ai/create\",\n                        \"privilege\" : \"create_ai_model\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"verifier_update_model\",\n                        \"label\"             : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.update_model\"),\n                        \"route\"             : \"/settings/verifier/ai/update/\",\n                        \"privilege\"         : \"update_ai_model\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"verifier_status_update\",\n                \"label\"     : this.translate.instant(\"SETTINGS.status_update\"),\n                \"icon\"      : \"fa-solid fa-flag\",\n                \"route\"     : \"/settings/verifier/status-update\",\n                \"privilege\" : \"update_status\"\n            }\n        ],\n        \"splitter\": [\n            {\n                \"id\"        : \"splitter_workflow_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_workflows\"),\n                \"icon\"      : \"fa-solid fa-diagram-next\",\n                \"route\"     : \"/settings/splitter/workflows\",\n                \"privilege\" : \"workflows_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_workflow\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.workflow_builder\"),\n                        \"route\"     : \"/settings/splitter/workflows/builder/new\",\n                        \"privilege\" : \"add_workflow_splitter\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_workflow\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.workflow_update\"),\n                        \"route\"             : \"/settings/splitter/workflows/builder/edit/\",\n                        \"privilege\"         : \"update_workflow_splitter\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/splitter/forms\",\n                \"privilege\" : \"forms_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/splitter/forms/builder/new\",\n                        \"privilege\" : \"add_form_splitter\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/splitter/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form_splitter\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/splitter/outputs\",\n                \"privilege\" : \"outputs_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_output\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/splitter/outputs/new\",\n                        \"privilege\" : \"add_output_splitter\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_output\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/splitter/outputs/update/\",\n                        \"privilege\"         : \"update_output_splitter\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"separator\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\"      : \"fa-solid fa-qrcode\",\n                \"route\"     : \"/settings/splitter/separator\",\n                \"privilege\" : \"separator_splitter\"\n            },\n            {\n                \"id\"        : \"document-type\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\"      : \"fa-solid fa-file\",\n                \"route\"     : \"/settings/splitter/document-type\",\n                \"privilege\" : \"document_type_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type\"),\n                        \"route\"     : \"/settings/splitter/document-type/new\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"        : \"splitter_add_folder_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type_folder\"),\n                        \"route\"     : \"/settings/splitter/document-type/create-folder\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-folder-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_doc_type\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_doc_type\"),\n                        \"route\"             : \"/settings/splitter/document-type/update/\",\n                        \"privilege\"         : \"update_document_type\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"artificial-intelligence\",\n                \"label\"     : this.translate.instant(\"SETTINGS.artificial_intelligence\"),\n                \"icon\"      : \"fa-solid fa-microchip\",\n                \"route\"     : \"/settings/splitter/ai\",\n                \"privilege\" : \"list_ai_model_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_model\",\n                        \"label\"     : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.add_model\"),\n                        \"route\"     : \"/settings/splitter/ai/create\",\n                        \"privilege\" : \"create_ai_model_splitter\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_model\",\n                        \"label\"             : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.update_model\"),\n                        \"route\"             : \"/settings/splitter/ai/update/\",\n                        \"privilege\"         : \"update_ai_model_splitter\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_status_update\",\n                \"label\"     : this.translate.instant(\"SETTINGS.status_update\"),\n                \"icon\"      : \"fa-solid fa-flag\",\n                \"route\"     : \"/settings/splitter/status-update\",\n                \"privilege\" : \"update_status_splitter\"\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private titleService: Title,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private localStorage: LocalStorageService\n    ) {}\n\n    init() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const selectedParentSetting = this.localStorage.get('selectedParentSettings');\n        const selectedSetting = this.localStorage.get('selectedSettings');\n\n        onresize = () => {\n            this.minimizeSideNav = window.innerWidth < 1500;\n        };\n\n        if (selectedSetting) {\n            this.setSelectedSettings(selectedSetting);\n        }\n        if (selectedParentSetting) {\n            this.setSelectedParentSettings(selectedParentSetting);\n        }\n\n        if (selectedParentSetting == null && selectedSetting == null) {\n            let foundSettings = false;\n            this.settingsParent.forEach((parent: any) => {\n                if (this.router.url.includes(parent['id'])) {\n                    foundSettings = true;\n                    this.setSelectedParentSettings(parent['id']);\n                }\n            });\n\n            if (!foundSettings) {\n                this.setSelectedParentSettings('general');\n                this.setSelectedSettings('about-us');\n            }\n        }\n\n        this.closeOtherParent('', this.selectedParentSetting);\n    }\n\n    getTitle() {\n        let title = this.titleService.getTitle();\n        title = title.split(' - ')[0];\n        return title;\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.setSelectedSettings(settingId);\n        this.setSelectedParentSettings(settingParentId);\n    }\n\n    getSelectedSetting() {\n        return this.selectedSetting;\n    }\n\n    getSelectedParentSetting() {\n        return this.selectedParentSetting;\n    }\n\n    getSettingsParent() {\n        return this.settingsParent;\n    }\n\n    closeOtherParent(url: any, parentId: any) {\n        this.settingsParent.forEach((parent: any) => {\n            parent.opened = parentId === parent['id'];\n        });\n    }\n\n    getSettings() {\n        return this.settings;\n    }\n\n    getSettingsAction(parentId: any, settingId: any) {\n        let actions: any;\n        this.settings[parentId].forEach((element: any) => {\n            if (element['id'] === settingId && element['actions']) {\n                actions = element['actions'];\n            }\n        });\n        return actions;\n    }\n\n    setSelectedSettings(value: string) {\n        this.selectedSetting = value;\n        this.localStorage.save('selectedSettings', value);\n    }\n\n    setSelectedParentSettings(value: string) {\n        this.selectedParentSetting = value;\n        this.localStorage.save('selectedParentSettings', value);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"./local-storage.service\";\nimport { environment } from \"../app/env\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private localStorage: LocalStorageService\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser() {\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        const token = this.getUserData();\n        if (token) {\n            return JSON.parse(atob(token as string));\n        } else {\n            if (this.router.url !== '/' && !this.router.url.includes('/resetPassword') && this.router.url !== '/forgotPassword' && this.router.url !== '/login' && this.router.url !== '/logout') {\n                this.router.navigate(['/logout']).then();\n            }\n        }\n    }\n\n    getUserData() {\n        let userTokenName = 'OpenCaptureUserData';\n        if (environment['customId']) {\n            userTokenName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            userTokenName += '_' + environment['fqdn'];\n        }\n        return this.localStorage.get(userTokenName);\n    }\n}\n","var map = {\n\t\"./af\": 35528,\n\t\"./af.js\": 35528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 17579,\n\t\"./ar-dz.js\": 17579,\n\t\"./ar-kw\": 69588,\n\t\"./ar-kw.js\": 69588,\n\t\"./ar-ly\": 11650,\n\t\"./ar-ly.js\": 11650,\n\t\"./ar-ma\": 93258,\n\t\"./ar-ma.js\": 93258,\n\t\"./ar-sa\": 54085,\n\t\"./ar-sa.js\": 54085,\n\t\"./ar-tn\": 90287,\n\t\"./ar-tn.js\": 90287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 89757,\n\t\"./az.js\": 89757,\n\t\"./be\": 59620,\n\t\"./be.js\": 59620,\n\t\"./bg\": 31139,\n\t\"./bg.js\": 31139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 19641,\n\t\"./bn-bd\": 19126,\n\t\"./bn-bd.js\": 19126,\n\t\"./bn.js\": 19641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 20934,\n\t\"./br.js\": 20934,\n\t\"./bs\": 26274,\n\t\"./bs.js\": 26274,\n\t\"./ca\": 45831,\n\t\"./ca.js\": 45831,\n\t\"./cs\": 92354,\n\t\"./cs.js\": 92354,\n\t\"./cv\": 79692,\n\t\"./cv.js\": 79692,\n\t\"./cy\": 58774,\n\t\"./cy.js\": 58774,\n\t\"./da\": 38955,\n\t\"./da.js\": 38955,\n\t\"./de\": 21557,\n\t\"./de-at\": 24954,\n\t\"./de-at.js\": 24954,\n\t\"./de-ch\": 81881,\n\t\"./de-ch.js\": 81881,\n\t\"./de.js\": 21557,\n\t\"./dv\": 16475,\n\t\"./dv.js\": 16475,\n\t\"./el\": 38877,\n\t\"./el.js\": 38877,\n\t\"./en-au\": 70454,\n\t\"./en-au.js\": 70454,\n\t\"./en-ca\": 67356,\n\t\"./en-ca.js\": 67356,\n\t\"./en-gb\": 10456,\n\t\"./en-gb.js\": 10456,\n\t\"./en-ie\": 28789,\n\t\"./en-ie.js\": 28789,\n\t\"./en-il\": 85471,\n\t\"./en-il.js\": 85471,\n\t\"./en-in\": 39664,\n\t\"./en-in.js\": 39664,\n\t\"./en-nz\": 97672,\n\t\"./en-nz.js\": 97672,\n\t\"./en-sg\": 80805,\n\t\"./en-sg.js\": 80805,\n\t\"./eo\": 87390,\n\t\"./eo.js\": 87390,\n\t\"./es\": 1564,\n\t\"./es-do\": 51473,\n\t\"./es-do.js\": 51473,\n\t\"./es-mx\": 92089,\n\t\"./es-mx.js\": 92089,\n\t\"./es-us\": 84156,\n\t\"./es-us.js\": 84156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 22687,\n\t\"./fi.js\": 22687,\n\t\"./fil\": 80032,\n\t\"./fil.js\": 80032,\n\t\"./fo\": 46845,\n\t\"./fo.js\": 46845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 56425,\n\t\"./fr-ca.js\": 56425,\n\t\"./fr-ch\": 41746,\n\t\"./fr-ch.js\": 41746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 67037,\n\t\"./fy.js\": 67037,\n\t\"./ga\": 11217,\n\t\"./ga.js\": 11217,\n\t\"./gd\": 37010,\n\t\"./gd.js\": 37010,\n\t\"./gl\": 51931,\n\t\"./gl.js\": 51931,\n\t\"./gom-deva\": 64488,\n\t\"./gom-deva.js\": 64488,\n\t\"./gom-latn\": 8032,\n\t\"./gom-latn.js\": 8032,\n\t\"./gu\": 34984,\n\t\"./gu.js\": 34984,\n\t\"./he\": 69090,\n\t\"./he.js\": 69090,\n\t\"./hi\": 42085,\n\t\"./hi.js\": 42085,\n\t\"./hr\": 38787,\n\t\"./hr.js\": 38787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 59819,\n\t\"./hy-am.js\": 59819,\n\t\"./id\": 44074,\n\t\"./id.js\": 44074,\n\t\"./is\": 70715,\n\t\"./is.js\": 70715,\n\t\"./it\": 31746,\n\t\"./it-ch\": 77040,\n\t\"./it-ch.js\": 77040,\n\t\"./it.js\": 31746,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 34346,\n\t\"./jv.js\": 34346,\n\t\"./ka\": 65538,\n\t\"./ka.js\": 65538,\n\t\"./kk\": 79772,\n\t\"./kk.js\": 79772,\n\t\"./km\": 87905,\n\t\"./km.js\": 87905,\n\t\"./kn\": 79125,\n\t\"./kn.js\": 79125,\n\t\"./ko\": 69140,\n\t\"./ko.js\": 69140,\n\t\"./ku\": 2354,\n\t\"./ku.js\": 2354,\n\t\"./ky\": 63768,\n\t\"./ky.js\": 63768,\n\t\"./lb\": 14016,\n\t\"./lb.js\": 14016,\n\t\"./lo\": 83169,\n\t\"./lo.js\": 83169,\n\t\"./lt\": 62353,\n\t\"./lt.js\": 62353,\n\t\"./lv\": 83243,\n\t\"./lv.js\": 83243,\n\t\"./me\": 52338,\n\t\"./me.js\": 52338,\n\t\"./mi\": 35555,\n\t\"./mi.js\": 35555,\n\t\"./mk\": 85794,\n\t\"./mk.js\": 85794,\n\t\"./ml\": 53151,\n\t\"./ml.js\": 53151,\n\t\"./mn\": 46458,\n\t\"./mn.js\": 46458,\n\t\"./mr\": 69165,\n\t\"./mr.js\": 69165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 87477,\n\t\"./ms-my.js\": 87477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 79684,\n\t\"./mt.js\": 79684,\n\t\"./my\": 40285,\n\t\"./my.js\": 40285,\n\t\"./nb\": 45922,\n\t\"./nb.js\": 45922,\n\t\"./ne\": 29040,\n\t\"./ne.js\": 29040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 74460,\n\t\"./nl-be.js\": 74460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 53693,\n\t\"./nn.js\": 53693,\n\t\"./oc-lnc\": 88676,\n\t\"./oc-lnc.js\": 88676,\n\t\"./pa-in\": 92341,\n\t\"./pa-in.js\": 92341,\n\t\"./pl\": 57416,\n\t\"./pl.js\": 57416,\n\t\"./pt\": 84344,\n\t\"./pt-br\": 30113,\n\t\"./pt-br.js\": 30113,\n\t\"./pt.js\": 84344,\n\t\"./ro\": 72643,\n\t\"./ro.js\": 72643,\n\t\"./ru\": 61305,\n\t\"./ru.js\": 61305,\n\t\"./sd\": 96095,\n\t\"./sd.js\": 96095,\n\t\"./se\": 74486,\n\t\"./se.js\": 74486,\n\t\"./si\": 58742,\n\t\"./si.js\": 58742,\n\t\"./sk\": 96722,\n\t\"./sk.js\": 96722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 52416,\n\t\"./sq.js\": 52416,\n\t\"./sr\": 39450,\n\t\"./sr-cyrl\": 50501,\n\t\"./sr-cyrl.js\": 50501,\n\t\"./sr.js\": 39450,\n\t\"./ss\": 32222,\n\t\"./ss.js\": 32222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 19638,\n\t\"./sw.js\": 19638,\n\t\"./ta\": 96494,\n\t\"./ta.js\": 96494,\n\t\"./te\": 94435,\n\t\"./te.js\": 94435,\n\t\"./tet\": 25003,\n\t\"./tet.js\": 25003,\n\t\"./tg\": 13706,\n\t\"./tg.js\": 13706,\n\t\"./th\": 16025,\n\t\"./th.js\": 16025,\n\t\"./tk\": 59780,\n\t\"./tk.js\": 59780,\n\t\"./tl-ph\": 22068,\n\t\"./tl-ph.js\": 22068,\n\t\"./tlh\": 39167,\n\t\"./tlh.js\": 39167,\n\t\"./tr\": 32494,\n\t\"./tr.js\": 32494,\n\t\"./tzl\": 58707,\n\t\"./tzl.js\": 58707,\n\t\"./tzm\": 91296,\n\t\"./tzm-latn\": 34532,\n\t\"./tzm-latn.js\": 34532,\n\t\"./tzm.js\": 91296,\n\t\"./ug-cn\": 12086,\n\t\"./ug-cn.js\": 12086,\n\t\"./uk\": 85069,\n\t\"./uk.js\": 85069,\n\t\"./ur\": 29304,\n\t\"./ur.js\": 29304,\n\t\"./uz\": 95115,\n\t\"./uz-latn\": 97609,\n\t\"./uz-latn.js\": 97609,\n\t\"./uz.js\": 95115,\n\t\"./vi\": 34802,\n\t\"./vi.js\": 34802,\n\t\"./x-pseudo\": 65605,\n\t\"./x-pseudo.js\": 65605,\n\t\"./yo\": 88456,\n\t\"./yo.js\": 88456,\n\t\"./zh-cn\": 23272,\n\t\"./zh-cn.js\": 23272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 48101,\n\t\"./zh-mo.js\": 48101,\n\t\"./zh-tw\": 40262,\n\t\"./zh-tw.js\": 40262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["marker","FormControl","catchError","tap","environment","of","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r6","getErrorMessageCustomer","field_r3","id","ɵɵtemplate","CreateCustomerComponent_ng_container_11_mat_form_field_1_mat_error_6_Template","ɵɵpipeBind1","label","ɵɵproperty","type","control","invalid","option_r11","ɵɵtextInterpolate1","ctx_r10","ɵɵlistener","CreateCustomerComponent_ng_container_11_mat_form_field_2_Template_mat_select_valueChange_4_listener","$event","ɵɵrestoreView","_r15","ɵɵnextContext","$implicit","ɵɵresetView","value","CreateCustomerComponent_ng_container_11_mat_form_field_2_Template_mat_select_selectionChange_4_listener","ctx_r16","updateRequired","CreateCustomerComponent_ng_container_11_mat_form_field_2_mat_option_5_Template","CreateCustomerComponent_ng_container_11_mat_form_field_2_mat_error_6_Template","values","ɵɵelementContainerStart","CreateCustomerComponent_ng_container_11_mat_form_field_1_Template","CreateCustomerComponent_ng_container_11_mat_form_field_2_Template","ɵɵelementContainerEnd","ctx_r22","getErrorMessageAddress","field_r19","CreateCustomerComponent_ng_container_12_mat_form_field_1_mat_error_6_Template","ɵɵclassProp","CreateCustomerComponent_ng_container_12_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","_r26","ctx_r25","onCountrySelected","ctx_r21","defaultValue","CreateCustomerComponent_ng_container_12_mat_form_field_1_Template","CreateCustomerComponent_ng_container_12_mat_select_country_2_Template","CreateCustomerComponent","constructor","router","http","dialog","route","userService","formBuilder","authService","translate","notify","serviceSettings","privilegesService","headers","loading","currentModule","customerForm","required","instant","addressForm","name","alpha2Code","alpha3Code","numericCode","callingCode","ngOnInit","headersExists","generateHeaders","country","forEach","element","setValue","field","requiredFields","includes","isValidForm","state","status","markAsTouched","onSubmit","customer","address","post","pipe","data","success","navigate","then","err","console","debug","handleErrors","subscribe","error","ɵɵdirectiveInject","i1","Router","i2","HttpClient","i3","MatDialog","ActivatedRoute","i4","UserService","i5","FormBuilder","i6","AuthService","i7","TranslateService","i8","NotificationService","i9","SettingsService","i10","PrivilegesService","selectors","decls","vars","consts","template","CreateCustomerComponent_Template","rf","ctx","CreateCustomerComponent_div_2_Template","CreateCustomerComponent_Template_form_ngSubmit_10_listener","CreateCustomerComponent_ng_container_11_Template","CreateCustomerComponent_ng_container_12_Template","getTitle","finalize","ConfirmDialogComponent","element_r19","element_r20","element_r21","company_number","element_r22","vat_number","element_r23","siret","element_r24","siren","element_r25","module","CustomersListComponent_mat_cell_41_Template_button_click_1_listener","restoredCtx","_r28","element_r26","ctx_r27","stopPropagation","deleteConfirmDialog","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","row_r29","CustomersListComponent","routerExtService","localStorageService","columnsToDisplay","allCustomers","customers","pageSize","pageIndex","total","offset","search","lastUrl","getPreviousUrl","get","parseInt","remove","loadCustomers","length","searchCustomer","event","target","onPageChange","save","customerId","dialogRef","open","confirmTitle","confirmText","confirmButton","confirmButtonColor","cancelButton","width","afterClosed","result","deleteCustomer","undefined","delete","sortData","sort","slice","active","direction","splice","a","b","isAsc","compare","LastUrlService","i11","i12","LocalStorageService","CustomersListComponent_Template","CustomersListComponent_div_2_Template","CustomersListComponent_Template_input_keyup_9_listener","CustomersListComponent_Template_mat_table_matSortChange_17_listener","CustomersListComponent_mat_header_cell_19_Template","CustomersListComponent_mat_cell_20_Template","CustomersListComponent_mat_header_cell_22_Template","CustomersListComponent_mat_cell_23_Template","CustomersListComponent_mat_header_cell_25_Template","CustomersListComponent_mat_cell_26_Template","CustomersListComponent_mat_header_cell_28_Template","CustomersListComponent_mat_cell_29_Template","CustomersListComponent_mat_header_cell_31_Template","CustomersListComponent_mat_cell_32_Template","CustomersListComponent_mat_header_cell_34_Template","CustomersListComponent_mat_cell_35_Template","CustomersListComponent_mat_header_cell_37_Template","CustomersListComponent_mat_cell_38_Template","CustomersListComponent_mat_header_cell_40_Template","CustomersListComponent_mat_cell_41_Template","CustomersListComponent_mat_header_row_42_Template","CustomersListComponent_mat_row_43_Template","CustomersListComponent_Template_mat_paginator_page_44_listener","ɵɵpureFunction0","_c0","ctx_r1","ctx_r7","field_r4","UpdateCustomerComponent_ng_container_12_mat_form_field_1_mat_error_6_Template","option_r12","ctx_r11","UpdateCustomerComponent_ng_container_12_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r16","UpdateCustomerComponent_ng_container_12_mat_form_field_2_Template_mat_select_selectionChange_4_listener","ctx_r17","UpdateCustomerComponent_ng_container_12_mat_form_field_2_mat_option_5_Template","UpdateCustomerComponent_ng_container_12_mat_form_field_2_mat_error_6_Template","UpdateCustomerComponent_ng_container_12_mat_form_field_1_Template","UpdateCustomerComponent_ng_container_12_mat_form_field_2_Template","ctx_r23","field_r20","UpdateCustomerComponent_ng_container_13_mat_form_field_1_mat_error_6_Template","UpdateCustomerComponent_ng_container_13_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","_r27","ctx_r26","UpdateCustomerComponent_ng_container_13_mat_form_field_1_Template","UpdateCustomerComponent_ng_container_13_mat_select_country_2_Template","UpdateCustomerComponent","snapshot","params","hasOwnProperty","addressId","put","UpdateCustomerComponent_Template","UpdateCustomerComponent_div_2_Template","UpdateCustomerComponent_span_7_Template","UpdateCustomerComponent_Template_form_ngSubmit_11_listener","UpdateCustomerComponent_ng_container_12_Template","UpdateCustomerComponent_ng_container_13_Template","Validators","CreateSupplierComponent_ng_container_10_mat_slide_toggle_1_Template","getErrorMessageSupplier","field_r7","hint","CreateSupplierComponent_ng_container_13_mat_form_field_1_mat_error_6_Template","CreateSupplierComponent_ng_container_13_mat_form_field_1_span_7_Template","option_r17","CreateSupplierComponent_ng_container_13_mat_form_field_2_mat_option_5_Template","CreateSupplierComponent_ng_container_13_mat_form_field_2_mat_error_6_Template","CreateSupplierComponent_ng_container_13_mat_form_field_1_Template","CreateSupplierComponent_ng_container_13_mat_form_field_2_Template","CreateSupplierComponent_ng_container_14_mat_form_field_1_mat_error_6_Template","CreateSupplierComponent_ng_container_14_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","CreateSupplierComponent_ng_container_14_mat_form_field_1_Template","CreateSupplierComponent_ng_container_14_mat_select_country_2_Template","CreateSupplierComponent","localeService","supplierForm","email","forms","cpt","valueChanges","replace","langs","lang","push","supplier","errors","LocaleService","CreateSupplierComponent_Template","CreateSupplierComponent_div_2_Template","CreateSupplierComponent_ng_container_10_Template","CreateSupplierComponent_Template_form_ngSubmit_12_listener","CreateSupplierComponent_ng_container_13_Template","CreateSupplierComponent_ng_container_14_Template","element_r27","element_r28","iban","element_r29","form_label","SuppliersListComponent_mat_cell_52_Template_button_click_1_listener","_r32","element_r30","ctx_r31","SuppliersListComponent_mat_cell_52_Template_button_click_4_listener","ctx_r33","deletePositionsConfirmDialog","SuppliersListComponent_mat_cell_52_Template_button_click_7_listener","ctx_r34","skipAutoValidateConfirmDialog","row_r35","SuppliersListComponent","allSuppliers","suppliers","loadSuppliers","form","form_id","searchSupplier","supplierId","deleteSupplier","deleteSupplierPositions","skipAutoValidate","getReferenceFile","mimeType","mimetype","referenceFile","file","link","document","createElement","href","download","filename","click","importSuppliers","files","formData","FormData","append","SuppliersListComponent_Template","SuppliersListComponent_div_2_Template","SuppliersListComponent_Template_input_keyup_9_listener","SuppliersListComponent_Template_input_change_13_listener","SuppliersListComponent_Template_button_click_15_listener","_r36","_r1","ɵɵreference","SuppliersListComponent_Template_button_click_18_listener","SuppliersListComponent_Template_mat_table_matSortChange_25_listener","SuppliersListComponent_mat_header_cell_27_Template","SuppliersListComponent_mat_cell_28_Template","SuppliersListComponent_mat_header_cell_30_Template","SuppliersListComponent_mat_cell_31_Template","SuppliersListComponent_mat_header_cell_33_Template","SuppliersListComponent_mat_cell_34_Template","SuppliersListComponent_mat_header_cell_36_Template","SuppliersListComponent_mat_cell_37_Template","SuppliersListComponent_mat_header_cell_39_Template","SuppliersListComponent_mat_cell_40_Template","SuppliersListComponent_mat_header_cell_42_Template","SuppliersListComponent_mat_cell_43_Template","SuppliersListComponent_mat_header_cell_45_Template","SuppliersListComponent_mat_cell_46_Template","SuppliersListComponent_mat_header_cell_48_Template","SuppliersListComponent_mat_cell_49_Template","SuppliersListComponent_mat_header_cell_51_Template","SuppliersListComponent_mat_cell_52_Template","SuppliersListComponent_mat_header_row_53_Template","SuppliersListComponent_mat_row_54_Template","SuppliersListComponent_Template_mat_paginator_page_55_listener","hasPrivilege","field_r5","UpdateSupplierComponent_ng_container_11_mat_slide_toggle_1_Template","field_r8","UpdateSupplierComponent_ng_container_14_mat_form_field_1_mat_error_6_Template","option_r16","ctx_r15","UpdateSupplierComponent_ng_container_14_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r20","UpdateSupplierComponent_ng_container_14_mat_form_field_2_mat_option_5_Template","UpdateSupplierComponent_ng_container_14_mat_form_field_2_mat_error_6_Template","UpdateSupplierComponent_ng_container_14_mat_form_field_1_Template","UpdateSupplierComponent_ng_container_14_mat_form_field_2_Template","field_r22","UpdateSupplierComponent_ng_container_15_mat_form_field_1_mat_error_6_Template","UpdateSupplierComponent_ng_container_15_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","_r29","ctx_r28","ctx_r24","UpdateSupplierComponent_ng_container_15_mat_form_field_1_Template","UpdateSupplierComponent_ng_container_15_mat_select_country_2_Template","UpdateSupplierComponent","adr_field","adr_element","UpdateSupplierComponent_Template","UpdateSupplierComponent_div_2_Template","UpdateSupplierComponent_span_7_Template","UpdateSupplierComponent_ng_container_11_Template","UpdateSupplierComponent_Template_form_ngSubmit_13_listener","UpdateSupplierComponent_ng_container_14_Template","UpdateSupplierComponent_ng_container_15_Template","MomentDateAdapter","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MAT_MOMENT_DATE_FORMATS","DateAdapter","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MatNativeDateModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatRippleModule","MatTreeModule","AppMaterialModule","provide","useClass","deps","useValue","imports","exports","RouterModule","HomeComponent","LoginComponent","LogoutComponent","UploadComponent","HistoryComponent","UserProfileComponent","NotFoundComponent","HasPrivilegeService","StatisticsComponent","LoginRedirectService","LoginRequiredService","Error500Component","VerifierListComponent","SplitterListComponent","ResetPasswordComponent","ForgotPasswordComponent","SplitterViewerComponent","VerifierViewerComponent","MonitoringListComponent","MonitoringDetailsComponent","routes","path","component","showMenu","redirectTo","pathMatch","title","canActivate","privileges","AppRoutingModule","forRoot","useHash","filter","map","NavigationEnd","ctx_r0","image","imageMobile","AppComponent","titleService","sanitizer","activatedRoute","changeDetector","appTitle","events","child","firstChild","childImage","childImageMobile","splitterOrVerifier","url","ttl","b64Content","bypassSecurityTrustUrl","currentLang","use","setTitle","ngAfterContentChecked","detectChanges","Title","DomSanitizer","ChangeDetectorRef","AppComponent_Template","AppComponent_app_menu_0_Template","BrowserModule","ServicesModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","DragDropModule","BrowserAnimationsModule","TranslateLoader","TranslateModule","HTTP_INTERCEPTORS","HttpClientModule","TranslateHttpLoader","FormsModule","ReactiveFormsModule","ToastrModule","EditorModule","SettingsRoutingModule","FilterPipe","NgxFileDragDropModule","NgxMatSelectSearchModule","NgsgModule","NgxChartsModule","DocumentTypeFactoryComponent","DocumentTypeComponent","MenuComponent","UsersListComponent","SettingsComponent","MatPaginatorIntl","CustomMatPaginatorIntl","AboutUsComponent","CreateUserComponent","UpdateUserComponent","RolesListComponent","UpdateRoleComponent","CreateRoleComponent","LoginMethodsComponent","LoaderComponent","CustomFieldsComponent","FormListComponent","FormBuilderComponent","CreateOutputComponent","OutputsListComponent","HighlightPipe","UpdateOutputComponent","UpdatePositionsMaskComponent","PositionsMaskListComponent","CreatePositionsMaskComponent","VerifierStatusUpdateComponent","SeparatorComponent","SplitterUpdateOutputComponent","SplitterCreateOutputComponent","SplitterOutputListComponent","SplitterFormBuilderComponent","SplitterUpdateStatusComponent","SplitterFormListComponent","CreateDoctypeComponent","ListDoctypeComponent","CreateFolderDoctypeComponent","ListVerifierAiModelComponent","CreateVerifierAiModelComponent","UpdateVerifierAiModelComponent","ListSplitterAiModelComponent","CreateSplitterAiModelComponent","UpdateSplitterAiModelComponent","ConfigurationsComponent","DocserversComponent","RegexComponent","HintServiceComponent","ErrorServiceComponent","MatSelectCountryModule","MiddlewareComponent","VariousSettingsVerifierComponent","MailCollectComponent","UserQuotaComponent","SettingsMenuComponent","WorkflowListComponent","WorkflowBuilderComponent","WorkflowListSplitterComponent","WorkflowBuilderSplitterComponent","TimeoutInterceptor","CodeEditorModule","createTranslateLoader","AppModule","bootstrap","appearance","multi","maxOpened","enableHtml","preventDuplicates","defaultLanguage","loader","useFactory","declarations","getRangeLabel","page","Math","max","startIndex","endIndex","min","nbPage","ceil","getAndInitTranslations","translated","itemsPerPageLabel","nextPageLabel","firstPageLabel","lastPageLabel","previousPageLabel","changes","next","ɵɵinject","factory","ɵfac","customId","fqdn","production","version","require","Error500Component_Template","ɵɵsanitizeHtml","ɵɵsanitizeUrl","configService","emailControl","minLength","sending","smtpStatus","getCurrentLocale","valid","currentUrl","window","location","userId","ConfigService","ForgotPasswordComponent_Template","ForgotPasswordComponent_div_0_Template","ForgotPasswordComponent_app_loader_2_Template","ForgotPasswordComponent_app_hint_7_Template","ForgotPasswordComponent_app_hint_error_8_Template","ForgotPasswordComponent_Template_form_ngSubmit_10_listener","ForgotPasswordComponent_mat_error_17_Template","ForgotPasswordComponent_span_20_Template","ForgotPasswordComponent_i_21_Template","startWith","DatePipe","moment","field_r18","option_r25","HistoryComponent_ng_container_12_mat_form_field_2_Template_mat_select_valueChange_4_listener","HistoryComponent_ng_container_12_mat_form_field_2_Template_mat_select_selectionChange_4_listener","ctx_r29","setSelectedSubModule","HistoryComponent_ng_container_12_mat_form_field_2_mat_option_5_Template","option_r32","HistoryComponent_ng_container_12_mat_form_field_3_Template_mat_select_valueChange_4_listener","_r35","HistoryComponent_ng_container_12_mat_form_field_3_Template_mat_select_selectionChange_4_listener","ctx_r36","setSelectedModule","HistoryComponent_ng_container_12_mat_form_field_3_mat_option_5_Template","option_r42","ɵɵpipeBind2","username","ctx_r40","toHighlight","HistoryComponent_ng_container_12_mat_form_field_4_mat_hint_5_Template","HistoryComponent_ng_container_12_mat_form_field_4_Template_mat_autocomplete_optionSelected_6_listener","_r44","ctx_r43","setSelectedUser","option","HistoryComponent_ng_container_12_mat_form_field_4_mat_option_8_Template","_r39","displayFn","filteredUsers","HistoryComponent_ng_container_12_mat_form_field_1_Template","HistoryComponent_ng_container_12_mat_form_field_2_Template","HistoryComponent_ng_container_12_mat_form_field_3_Template","HistoryComponent_ng_container_12_mat_form_field_4_Template","element_r46","element_r47","element_r48","element_r49","date","element_r50","element_r51","element_r52","datePipe","userSelected","moduleSelected","subModuleSelected","_filter","array","filterValue","toLowerCase","indexOf","user","getUserFromLocal","users","userHistory","history","_user","user_id","loadHistory","history_module","format","localeData","longDateFormat","history_date","transform","resetPaginator","subModule","resetFilter","lastname","firstname","history_submodule","user_info","history_desc","user_ip","features","ɵɵProvidersFeature","HistoryComponent_Template","HistoryComponent_div_2_Template","HistoryComponent_ng_container_12_Template","HistoryComponent_Template_div_click_13_listener","HistoryComponent_Template_mat_table_matSortChange_18_listener","HistoryComponent_mat_header_cell_20_Template","HistoryComponent_mat_cell_21_Template","HistoryComponent_mat_header_cell_23_Template","HistoryComponent_mat_cell_24_Template","HistoryComponent_mat_header_cell_26_Template","HistoryComponent_mat_cell_27_Template","HistoryComponent_mat_header_cell_29_Template","HistoryComponent_mat_cell_30_Template","HistoryComponent_mat_header_cell_32_Template","HistoryComponent_mat_cell_33_Template","HistoryComponent_mat_header_cell_35_Template","HistoryComponent_mat_cell_36_Template","HistoryComponent_mat_header_cell_38_Template","HistoryComponent_mat_cell_39_Template","HistoryComponent_mat_header_row_40_Template","HistoryComponent_mat_row_41_Template","HistoryComponent_Template_mat_paginator_page_42_listener","HomeComponent_mat_card_1_Template_a_click_1_listener","_r3","ctx_r2","getUnseenBatches","HomeComponent_mat_card_2_Template_a_click_1_listener","_r5","ctx_r4","unseenBatches","splitter","verifier","checkConnection","token","getToken","logout","HomeComponent_Template","HomeComponent_mat_card_1_Template","HomeComponent_mat_card_2_Template","LoaderComponent_Template","loginImage","loginTopMessage","getErrorMessage","ctx_r3","ɵɵtextInterpolate2","enableLoginMethodName","loginBottomMessage","processLogin","showPassword","isConnectionBtnDisabled","loginForm","group","password","configuration","bypassSecurityTrustHtml","login_method_name","currentBabelLang","observe","setUser","body","setTokens","auth_token","btoa","JSON","stringify","getUser","readConfig","getCachedUrl","admin_password_alert","cleanCachedUrl","hasError","LoginComponent_Template","LoginComponent_app_loader_1_Template","LoginComponent_div_3_Template","LoginComponent_Template_form_ngSubmit_9_listener","LoginComponent_mat_error_16_Template","LoginComponent_Template_mat_icon_click_23_listener","LoginComponent_mat_error_25_Template","LoginComponent_mat_hint_26_Template","LoginComponent_div_27_Template","LoginComponent_span_29_Template","LoginComponent_i_30_Template","controls","LogoutComponent_Template","styles","ɵɵnamespaceSVG","getSplitterOrVerifier","ctx_r5","ctx_r8","ctx_r9","MenuComponent_div_30_Template_a_click_1_listener","_r14","ctx_r13","closeprofileDropDown","MenuComponent_div_30_Template_a_click_4_listener","profileDropdownCurrentState","MenuComponent_div_31_a_5_Template_a_click_0_listener","_r19","ctx_r18","mobileMenuState","MenuComponent_div_31_a_6_Template_a_click_0_listener","_r21","ctx_r20","MenuComponent_div_31_Template_a_click_2_listener","_r23","MenuComponent_div_31_a_5_Template","MenuComponent_div_31_a_6_Template","MenuComponent_div_31_Template_a_click_7_listener","ctx_r12","setTimeout","getLocales","k","n","addEventListener","e","key","audio","Audio","konami","getElementById","style","display","transition","opacity","volume","play","r","toggleProfileDropdown","toggleMobileMenu","Location","inputs","MenuComponent_Template","MenuComponent_Template_button_click_5_listener","MenuComponent__svg_svg_6_Template","MenuComponent__svg_svg_7_Template","MenuComponent_button_18_Template","MenuComponent_button_19_Template","MenuComponent_div_21_Template","MenuComponent_div_22_Template","MenuComponent_div_23_Template","MenuComponent_div_24_Template","MenuComponent_div_25_Template","MenuComponent_div_26_Template","MenuComponent_Template_div_click_27_listener","MenuComponent_span_28_Template","MenuComponent_div_30_Template","MenuComponent_div_31_Template","HttpHeaders","HttpRequest","localStorage","isValidIP","str","arr","split","el","test","isValidFQDN","intercept","request","RegExp","currentUrlArray","i","isIp","isFQDN","currentCustom","oldUrl","set","newRequest","method","Object","assign","handle","MonitoringDetailsComponent_div_19_span_4_span_2_Template_span_click_0_listener","_r25","splitterCpt","processData","time","MonitoringDetailsComponent_div_19_span_4_span_5_Template_span_click_0_listener","MonitoringDetailsComponent_div_19_span_4_span_2_Template","MonitoringDetailsComponent_div_19_span_4_a_3_Template","MonitoringDetailsComponent_div_19_span_4_a_4_Template","MonitoringDetailsComponent_div_19_span_4_span_5_Template","ctx_r19","MonitoringDetailsComponent_div_19_span_2_Template","MonitoringDetailsComponent_div_19_span_3_Template","MonitoringDetailsComponent_div_19_span_4_Template","workflowLabel","step","message","MonitoringDetailsComponent_mat_cell_63_span_1_Template","MonitoringDetailsComponent_mat_cell_63_span_2_Template","element_r31","_this","_asyncToGenerator","processId","loadProcess","timer","setInterval","clearInterval","ngOnDestroy","_this2","process","keys","now","Date","oneDay","diffDays","abs","getTime","workflow_id","listOfSteps","steps","hours","elapsed_time","minutes","seconds","seconds_splitted","microseconds","elapsedTimeMessage","allSteps","MonitoringDetailsComponent_Template","MonitoringDetailsComponent_Template_div_click_3_listener","back","MonitoringDetailsComponent_div_10_Template","MonitoringDetailsComponent_div_19_Template","MonitoringDetailsComponent_span_21_Template","MonitoringDetailsComponent_div_44_Template","MonitoringDetailsComponent_div_45_Template","MonitoringDetailsComponent_div_46_Template","MonitoringDetailsComponent_div_47_Template","MonitoringDetailsComponent_mat_header_cell_53_Template","MonitoringDetailsComponent_mat_cell_54_Template","MonitoringDetailsComponent_mat_header_cell_56_Template","MonitoringDetailsComponent_mat_cell_57_Template","MonitoringDetailsComponent_mat_header_cell_59_Template","MonitoringDetailsComponent_mat_cell_60_Template","MonitoringDetailsComponent_mat_header_cell_62_Template","MonitoringDetailsComponent_mat_cell_63_Template","MonitoringDetailsComponent_mat_header_row_64_Template","MonitoringDetailsComponent_mat_row_65_Template","MonitoringDetailsComponent_Template_mat_paginator_page_66_listener","creation_date_formated","end_date_formated","option_r19","MonitoringListComponent_ng_container_13_mat_form_field_1_Template_mat_select_valueChange_4_listener","_r22","field_r16","MonitoringListComponent_ng_container_13_mat_form_field_1_Template_mat_select_selectionChange_4_listener","updateData","MonitoringListComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","MonitoringListComponent_ng_container_13_mat_form_field_1_Template","creation_date","end_date","last_message","MonitoringListComponent_mat_cell_37_span_1_Template","MonitoringListComponent_mat_cell_37_span_2_Template","MonitoringListComponent_mat_cell_37_span_3_Template","MonitoringListComponent_mat_cell_37_span_4_Template","row_r36","allProcessData","statusSelected","processss","loadMonitoring","processses","numberOfSteps","MonitoringListComponent_Template","MonitoringListComponent_div_6_Template","MonitoringListComponent_ng_container_13_Template","MonitoringListComponent_Template_div_click_14_listener","MonitoringListComponent_Template_mat_table_matSortChange_19_listener","MonitoringListComponent_mat_header_cell_21_Template","MonitoringListComponent_mat_cell_22_Template","MonitoringListComponent_mat_header_cell_24_Template","MonitoringListComponent_mat_cell_25_Template","MonitoringListComponent_mat_header_cell_27_Template","MonitoringListComponent_mat_cell_28_Template","MonitoringListComponent_mat_header_cell_30_Template","MonitoringListComponent_mat_cell_31_Template","MonitoringListComponent_mat_header_cell_33_Template","MonitoringListComponent_mat_cell_34_Template","MonitoringListComponent_mat_header_cell_36_Template","MonitoringListComponent_mat_cell_37_Template","MonitoringListComponent_mat_header_row_38_Template","MonitoringListComponent_mat_row_39_Template","MonitoringListComponent_Template_mat_paginator_page_40_listener","NotFoundComponent_Template","profile","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_7_Template_mat_icon_click_0_listener","_r13","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_8_Template_mat_icon_click_0_listener","_r17","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_error_6_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_7_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_8_Template","disablePasswordModification","option_r21","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r24","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_mat_option_5_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_Template","UserProfileComponent_div_0_span_3_Template","UserProfileComponent_div_0_span_4_Template","UserProfileComponent_div_0_Template_form_ngSubmit_6_listener","UserProfileComponent_div_0_ng_container_7_Template","profileForm","privilegeService","passwordVerification","roles","login_methods","enabled","method_name","loggedUserId","navigateByUrl","editable","checkPasswordValidityUnique","PasswordVerificationService","UserProfileComponent_Template","UserProfileComponent_div_0_Template","field_r6","ResetPasswordComponent_ng_container_14_Template_mat_icon_click_7_listener","_r10","ResetPasswordComponent_ng_container_14_mat_hint_9_Template","resetToken","passwordForm","queryParams","checkPasswordValidity","passwordConfirm","newPassword","ResetPasswordComponent_Template","ResetPasswordComponent_div_0_Template","ResetPasswordComponent_app_loader_2_Template","ResetPasswordComponent_app_hint_9_Template","ResetPasswordComponent_app_hint_10_Template","ResetPasswordComponent_app_hint_11_Template","ResetPasswordComponent_Template_form_ngSubmit_13_listener","ResetPasswordComponent_ng_container_14_Template","ɵɵpureFunction1","passwordRules","specialCharMandatory","uppercaseMandatory","numberMandatory","currentVersion","lastVersion","isProd","init","git_latest","AboutUsComponent_Template","AboutUsComponent_div_5_Template","AboutUsComponent_Template_button_click_8_listener","minimizeSideNav","AboutUsComponent_span_12_Template","AboutUsComponent_span_13_Template","AboutUsComponent_span_14_Template","AboutUsComponent_span_15_Template","_r0","opened","lang_r29","ConfigurationsComponent_div_19_div_23_Template_mat_select_selectionChange_5_listener","_r31","ctx_r30","changeLocale","ConfigurationsComponent_div_19_div_23_Template_mat_select_valueChange_5_listener","ctx_r32","ConfigurationsComponent_div_19_div_23_mat_option_6_Template","ConfigurationsComponent_div_19_div_23_i_7_Template","localeLoading","ConfigurationsComponent_div_19_div_24_Template_button_click_8_listener","_r34","updateLoginTopText","ConfigurationsComponent_div_19_div_24_Template_button_click_18_listener","ctx_r35","updateLoginBottomText","_c1","colorsMap","option_r36","ConfigurationsComponent_div_19_div_50_Template_i_click_2_listener","_r38","ctx_r37","copyToken","field_r41","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_5_Template_mat_icon_click_0_listener","_r50","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_Template_input_keyup_4_listener","_r53","ctx_r52","smtpForm","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_5_Template","ctx_r44","disableField","unit_r39","option_r57","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_Template_mat_select_selectionChange_4_listener","_r59","ctx_r58","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_mat_option_5_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_div_1_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_Template","unit","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_Template","element_r63","element_r64","element_r65","description","element_r66","label_type","element_r67","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template_mat_select_ngModelChange_1_listener","_r77","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template_mat_select_selectionChange_1_listener","ctx_r78","updateValue","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template_input_keyup_enter_1_listener","_r83","ctx_r81","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template_input_focusout_1_listener","ctx_r84","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template_input_keyup_enter_1_listener","_r89","ctx_r87","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template_input_focusout_1_listener","ctx_r90","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template","ConfigurationsComponent_div_19_mat_cell_116_Template_mat_cell_click_0_listener","_r95","updateMode","ConfigurationsComponent_div_19_mat_cell_116_ng_container_1_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_Template","ɵɵtemplateRefExtractor","_r69","ConfigurationsComponent_div_19_mat_cell_119_button_1_Template_button_click_0_listener","_r101","element_r96","ConfigurationsComponent_div_19_mat_cell_119_button_2_Template_button_click_0_listener","_r106","ConfigurationsComponent_div_19_mat_cell_119_button_2_i_2_Template","ConfigurationsComponent_div_19_mat_cell_119_button_2_i_3_Template","ctx_r98","updateLoading","ConfigurationsComponent_div_19_mat_cell_119_button_1_Template","ConfigurationsComponent_div_19_mat_cell_119_button_2_Template","ConfigurationsComponent_div_19_mat_paginator_122_Template_mat_paginator_page_0_listener","_r109","ctx_r108","_c2","ConfigurationsComponent_div_19_Template_mat_tab_group_selectedTabChange_1_listener","_r111","ctx_r110","onTabChanged","ConfigurationsComponent_div_19_Template_img_click_15_listener","ctx_r112","onClick","ConfigurationsComponent_div_19_Template_input_change_16_listener","ctx_r113","upload","ConfigurationsComponent_div_19_div_23_Template","ConfigurationsComponent_div_19_div_24_Template","ConfigurationsComponent_div_19_Template_mat_autocomplete_optionSelected_42_listener","ctx_r114","ConfigurationsComponent_div_19_mat_option_44_Template","ConfigurationsComponent_div_19_Template_button_click_47_listener","ctx_r115","generateAuthToken","ConfigurationsComponent_div_19_div_50_Template","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_56_listener","ctx_r116","minLengthEnabled","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_56_listener","ctx_r117","updatePasswordRules","ConfigurationsComponent_div_19_Template_input_ngModelChange_63_listener","ctx_r118","ConfigurationsComponent_div_19_Template_input_change_63_listener","ctx_r119","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_65_listener","ctx_r120","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_65_listener","ctx_r121","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_69_listener","ctx_r122","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_69_listener","ctx_r123","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_73_listener","ctx_r124","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_73_listener","ctx_r125","ConfigurationsComponent_div_19_ng_container_87_Template","ConfigurationsComponent_div_19_Template_button_click_90_listener","ctx_r126","testSmtp","ConfigurationsComponent_div_19_span_91_Template","ConfigurationsComponent_div_19_span_92_Template","ConfigurationsComponent_div_19_Template_button_click_93_listener","ctx_r127","updateSmtp","ConfigurationsComponent_div_19_Template_mat_table_matSortChange_101_listener","ctx_r128","ConfigurationsComponent_div_19_mat_header_cell_103_Template","ConfigurationsComponent_div_19_mat_cell_104_Template","ConfigurationsComponent_div_19_mat_header_cell_106_Template","ConfigurationsComponent_div_19_mat_cell_107_Template","ConfigurationsComponent_div_19_mat_header_cell_109_Template","ConfigurationsComponent_div_19_mat_cell_110_Template","ConfigurationsComponent_div_19_mat_header_cell_112_Template","ConfigurationsComponent_div_19_mat_cell_113_Template","ConfigurationsComponent_div_19_mat_header_cell_115_Template","ConfigurationsComponent_div_19_mat_cell_116_Template","ConfigurationsComponent_div_19_mat_header_cell_118_Template","ConfigurationsComponent_div_19_mat_cell_119_Template","ConfigurationsComponent_div_19_mat_header_row_120_Template","ConfigurationsComponent_div_19_mat_row_121_Template","ConfigurationsComponent_div_19_mat_paginator_122_Template","selectedIndex","tokenExpirationControl","_r6","updating","_c3","emailTestControl","units","smtpFormValid","configurations","tokenUserControl","allConfigurations","config","loadConfigurations","disable","enable","index","navigator","clipboard","writeText","args","logo","ret","enableUnit","find","showSuccess","fileInput","reader","FileReader","readAsDataURL","onload","skipLocationChange","searchConfiguration","ConfigurationsComponent_Template","ConfigurationsComponent_div_5_Template","ConfigurationsComponent_Template_button_click_8_listener","ConfigurationsComponent_Template_input_keyup_17_listener","ConfigurationsComponent_div_19_Template","FormGroup","moveItemInArray","transferArrayItem","option_r15","CustomFieldsComponent_div_26_div_1_mat_form_field_1_span_7_mat_option_1_Template","input_r8","CustomFieldsComponent_div_26_div_1_mat_form_field_1_span_7_Template","field_id","_r12","opt_r19","CustomFieldsComponent_div_26_div_1_mat_form_field_2_ng_container_5_mat_option_1_Template","CustomFieldsComponent_div_26_div_1_mat_form_field_2_Template_mat_select_selectionChange_4_listener","displayType","CustomFieldsComponent_div_26_div_1_mat_form_field_2_ng_container_5_Template","options","CustomFieldsComponent_div_26_div_1_mat_form_field_1_Template","CustomFieldsComponent_div_26_div_1_mat_form_field_2_Template","CustomFieldsComponent_div_26_div_1_Template","limit","displayInput","CustomFieldsComponent_div_27_div_7_Template_div_click_11_listener","optionIndex_r30","deleteSelectOption","option_r29","idControl","labelControl","CustomFieldsComponent_div_27_Template_div_cdkDropListDropped_5_listener","dropSelectOption","CustomFieldsComponent_div_27_div_6_Template","CustomFieldsComponent_div_27_div_7_Template","CustomFieldsComponent_div_27_Template_div_click_8_listener","addSelectOption","selectOptions","opt_r38","CustomFieldsComponent_div_28_Template_mat_slide_toggle_change_4_listener","_r40","ctx_r39","checkRegex","CustomFieldsComponent_div_28_Template_mat_select_selectionChange_22_listener","ctx_r41","CustomFieldsComponent_div_28_mat_option_23_Template","CustomFieldsComponent_div_28_app_hint_25_Template","CustomFieldsComponent_div_28_Template_textarea_keyup_30_listener","ctx_r42","CustomFieldsComponent_div_28_Template_input_keyup_35_listener","regexRemoveKeyWord","regexRemoveSpecialChar","regexFormat","formats","regexControl","regexTestControl","regexResult","CustomFieldsComponent_button_30_Template_button_click_0_listener","_r45","addCustomField","CustomFieldsComponent_button_31_Template_button_click_0_listener","_r47","ctx_r46","updateCustomOnSubmit","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_8_listener","_r56","i_r52","ctx_r54","moveToActive","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_11_listener","item_r51","ctx_r57","updateCustomField","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_14_listener","ctx_r59","deleteCustomField","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template","parent_r48","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_8_listener","_r68","i_r64","ctx_r66","moveToInactive","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_11_listener","item_r63","ctx_r69","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_14_listener","ctx_r71","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template","CustomFieldsComponent_mat_tab_34_Template_div_cdkDropListDropped_6_listener","_r76","ctx_r75","dropCustomField","CustomFieldsComponent_mat_tab_34_span_7_Template","CustomFieldsComponent_mat_tab_34_Template_div_cdkDropListDropped_12_listener","ctx_r77","CustomFieldsComponent_mat_tab_34_span_13_Template","inactiveFields","activeFields","update","isSplitter","inactiveOrActive","parent","addFieldInputs","controlType","autoComplete","class","unallowedFields","retrieveCustomFields","toFormGroup","match","previousContainer","container","previousIndex","currentIndex","enableCustomField","input","regex","substring","tmp","colored","_return","hide","newField","customFields","label_short","settings","metadata_key","displayChoicesList","displayRegex","optionIndex","addSelectOptionsToArgs","setErrors","resetForm","deleteCustom","customFieldId","activeOrInactive","object","custom_label","custom_field","oldList","newList","oldIndex","newIndex","updatedField","updateCustomId","customField","content","remove_keyword","remove_special_char","CustomFieldsComponent_Template","CustomFieldsComponent_div_5_Template","CustomFieldsComponent_Template_button_click_8_listener","CustomFieldsComponent_Template_div_click_22_listener","CustomFieldsComponent_div_26_Template","CustomFieldsComponent_div_27_Template","CustomFieldsComponent_div_28_Template","CustomFieldsComponent_button_30_Template","CustomFieldsComponent_button_31_Template","CustomFieldsComponent_mat_tab_34_Template","element_r16","element_r17","docserver_id","element_r18","DocserversComponent_div_19_mat_cell_15_ng_template_2_Template_input_keyup_enter_1_listener","DocserversComponent_div_19_mat_cell_15_ng_template_2_Template_input_focusout_1_listener","DocserversComponent_div_19_mat_cell_15_Template_mat_cell_click_0_listener","DocserversComponent_div_19_mat_cell_15_ng_container_1_Template","DocserversComponent_div_19_mat_cell_15_ng_template_2_Template","DocserversComponent_div_19_mat_cell_18_button_1_Template_button_click_0_listener","_r37","element_r32","DocserversComponent_div_19_mat_cell_18_button_2_Template_button_click_0_listener","_r42","DocserversComponent_div_19_mat_cell_18_button_2_i_2_Template","DocserversComponent_div_19_mat_cell_18_button_2_i_3_Template","DocserversComponent_div_19_mat_cell_18_button_1_Template","DocserversComponent_div_19_mat_cell_18_button_2_Template","DocserversComponent_div_19_mat_paginator_21_Template_mat_paginator_page_0_listener","DocserversComponent_div_19_Template_mat_table_matSortChange_3_listener","DocserversComponent_div_19_mat_header_cell_5_Template","DocserversComponent_div_19_mat_cell_6_Template","DocserversComponent_div_19_mat_header_cell_8_Template","DocserversComponent_div_19_mat_cell_9_Template","DocserversComponent_div_19_mat_header_cell_11_Template","DocserversComponent_div_19_mat_cell_12_Template","DocserversComponent_div_19_mat_header_cell_14_Template","DocserversComponent_div_19_mat_cell_15_Template","DocserversComponent_div_19_mat_header_cell_17_Template","DocserversComponent_div_19_mat_cell_18_Template","DocserversComponent_div_19_mat_header_row_19_Template","DocserversComponent_div_19_mat_row_20_Template","DocserversComponent_div_19_mat_paginator_21_Template","docservers","allDocservers","loadDocservers","docserver","searchDocservers","DocserversComponent_Template","DocserversComponent_div_5_Template","DocserversComponent_Template_button_click_8_listener","DocserversComponent_Template_input_keyup_17_listener","DocserversComponent_div_19_Template","LoginMethodsComponent_mat_tab_17_div_3_Template_mat_slide_toggle_change_1_listener","_r8","method_r3","changedDefaultMethod","isDefaultChecked","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_1_mat_option_5_Template_mat_option_onSelectionChange_0_listener","updateTypeAd","option_r23","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_1_Template_mat_select_valueChange_4_listener","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_1_mat_option_5_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_2_Template_mat_icon_click_6_listener","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_1_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_2_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_mat_form_field_3_Template","option_r39","LoginMethodsComponent_mat_tab_17_div_4_ng_container_22_mat_form_field_1_Template_mat_select_valueChange_4_listener","field_r35","LoginMethodsComponent_mat_tab_17_div_4_ng_container_22_mat_form_field_1_mat_option_5_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_22_mat_form_field_1_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_22_mat_form_field_2_Template","LoginMethodsComponent_mat_tab_17_div_4_Template_mat_slide_toggle_change_1_listener","ctx_r45","changedLdapMethod","LoginMethodsComponent_mat_tab_17_div_4_ng_template_9_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_10_Template","LoginMethodsComponent_mat_tab_17_div_4_Template_button_click_12_listener","ctx_r48","checkLdapConnexion","LoginMethodsComponent_mat_tab_17_div_4_span_13_Template","LoginMethodsComponent_mat_tab_17_div_4_i_14_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_template_20_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_container_22_Template","LoginMethodsComponent_mat_tab_17_div_4_ng_template_32_Template","LoginMethodsComponent_mat_tab_17_div_4_Template_button_click_41_listener","ctx_r49","ldapSynchronization","LoginMethodsComponent_mat_tab_17_div_4_span_42_Template","LoginMethodsComponent_mat_tab_17_div_4_i_43_Template","LoginMethodsComponent_mat_tab_17_div_4_Template_button_click_44_listener","ctx_r50","saveLoginMethodConfigs","isLdapChecked","connectionFormGroup","isProcessConnectionLaunched","isNextBtnDisabled","synchroparamsFormGroup","isLaunchBtnDisabled","isProcessLaunched","isLaunchBtnClicked","isSaveBtnDisabled","LoginMethodsComponent_mat_tab_17_div_3_Template","LoginMethodsComponent_mat_tab_17_div_4_Template","_formBuilder","connexionServerStatus","synchroUsersStatus","loginMethods","configs","ldap_configurations","isUserInput","source","loginMethodName","enableLoginMethod","disableLoginMethod","isValidConnexionForm","isValidSynchronizationForm","server_data","synchronizationData","methodDataToSave","LoginMethodsComponent_Template","LoginMethodsComponent_div_5_Template","LoginMethodsComponent_Template_button_click_8_listener","LoginMethodsComponent_mat_tab_17_Template","getNameOfProcess","process_r4","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_2_Template_i_click_0_listener","edit_name","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_3_Template_i_click_0_listener","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_4_Template_i_click_0_listener","disableConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_5_Template_i_click_0_listener","enableConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_6_Template_i_click_0_listener","duplicateConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_7_Template_i_click_0_listener","ctx_r38","updateProcessName","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_Template_input_focusout_3_listener","_r43","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_7_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_8_Template","loadingProcessName","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_span_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_3_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_4_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_Template","processIsEnabled","exists","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template_input_focusout_3_listener","_r49","_r46","ctx_r47","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template_i_click_7_listener","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template","field_r56","ctx_r63","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_6_Template_mat_icon_click_0_listener","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_Template_input_keyup_4_listener","_r73","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_error_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_6_Template","ctx_r76","option_r82","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template_input_keyup_4_listener","_r85","ctx_r83","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_span_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_mat_error_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template_mat_autocomplete_optionSelected_7_listener","ctx_r86","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_mat_option_9_Template","ctx_r60","option_r91","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_Template_mat_select_selectionChange_4_listener","_r96","ctx_r94","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_mat_option_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_mat_error_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_div_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_Template","unit_r53","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_Template_button_click_4_listener","_r104","ctx_r102","retrieveFolders","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_span_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_i_6_Template","ctx_r55","folderLoading","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_Template","MailCollectComponent_div_17_mat_tab_2_button_5_Template_button_click_0_listener","_r110","updateProcess","MailCollectComponent_div_17_mat_tab_2_button_5_span_1_Template","MailCollectComponent_div_17_mat_tab_2_button_5_i_2_Template","formValid","processLoading","MailCollectComponent_div_17_mat_tab_2_button_6_Template_button_click_0_listener","_r116","createProcess","MailCollectComponent_div_17_mat_tab_2_button_6_span_1_Template","MailCollectComponent_div_17_mat_tab_2_button_6_i_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_Template","MailCollectComponent_div_17_mat_tab_2_button_5_Template","MailCollectComponent_div_17_mat_tab_2_button_6_Template","MailCollectComponent_div_17_mat_tab_2_Template","processes","allForms","allSplitterWorkflows","processesMail","allprocessesMail","defaultProcessData","disabled","folders","workflows","new_process_name","updateDatabase","oldProcessName","input_label","addProcess","newProcess","process_default","resetDefaultData","processName","duplicateProcess","element_child","disableProcess","enableProcess","deleteProcess","port","login","hostname","secured_connection","MailCollectComponent_Template","MailCollectComponent_div_5_Template","MailCollectComponent_Template_button_click_8_listener","MailCollectComponent_Template_button_click_13_listener","MailCollectComponent_div_17_Template","element_r14","regex_id","element_r15","RegexComponent_div_19_mat_cell_12_ng_template_2_Template_input_keyup_enter_1_listener","RegexComponent_div_19_mat_cell_12_ng_template_2_Template_input_focusout_1_listener","RegexComponent_div_19_mat_cell_12_Template_mat_cell_click_0_listener","RegexComponent_div_19_mat_cell_12_ng_container_1_Template","RegexComponent_div_19_mat_cell_12_ng_template_2_Template","_r18","RegexComponent_div_19_mat_cell_15_button_1_Template_button_click_0_listener","RegexComponent_div_19_mat_cell_15_button_2_Template_button_click_0_listener","RegexComponent_div_19_mat_cell_15_button_2_i_2_Template","RegexComponent_div_19_mat_cell_15_button_2_i_3_Template","RegexComponent_div_19_mat_cell_15_button_1_Template","RegexComponent_div_19_mat_cell_15_button_2_Template","RegexComponent_div_19_mat_paginator_18_Template_mat_paginator_page_0_listener","RegexComponent_div_19_Template_mat_table_matSortChange_3_listener","RegexComponent_div_19_mat_header_cell_5_Template","RegexComponent_div_19_mat_cell_6_Template","RegexComponent_div_19_mat_header_cell_8_Template","RegexComponent_div_19_mat_cell_9_Template","RegexComponent_div_19_mat_header_cell_11_Template","RegexComponent_div_19_mat_cell_12_Template","RegexComponent_div_19_mat_header_cell_14_Template","RegexComponent_div_19_mat_cell_15_Template","RegexComponent_div_19_mat_header_row_16_Template","RegexComponent_div_19_mat_row_17_Template","RegexComponent_div_19_mat_paginator_18_Template","allRegex","loadRegex","searchRegex","RegexComponent_Template","RegexComponent_div_5_Template","RegexComponent_Template_button_click_8_listener","RegexComponent_Template_input_keyup_17_listener","RegexComponent_div_19_Template","CreateRoleComponent_ng_container_17_mat_form_field_1_mat_error_6_Template","maxLength","CreateRoleComponent_ng_container_17_mat_form_field_1_Template","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_button_3_Template_button_click_0_listener","_r4","toggle","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_Template_mat_slide_toggle_change_0_listener","changePrivilege","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_button_3_Template","privilege_r15","ctx_r14","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_Template","parent_r13","getChildsByParent","CreateRoleComponent_mat_tab_group_23_mat_tab_1_Template","CreateRoleComponent_mat_checkbox_42_Template_mat_checkbox_change_0_listener","assignRoleOption_r21","updateAssignRoles","assignRoles","rolePrivileges","roleForm","role","element2","newRoleId","privilegeId","found","privilege","checked","selectAllAssignRoles","check","CreateRoleComponent_Template","CreateRoleComponent_div_5_Template","CreateRoleComponent_Template_button_click_8_listener","CreateRoleComponent_Template_form_ngSubmit_16_listener","CreateRoleComponent_ng_container_17_Template","CreateRoleComponent_mat_tab_group_23_Template","CreateRoleComponent_Template_button_click_25_listener","CreateRoleComponent_Template_button_click_36_listener","CreateRoleComponent_Template_button_click_39_listener","CreateRoleComponent_mat_checkbox_42_Template","CreateRoleComponent_span_43_Template","RolesListComponent_mat_cell_26_span_1_Template","RolesListComponent_mat_cell_26_span_2_Template","RolesListComponent_mat_cell_29_button_1_Template_button_click_0_listener","RolesListComponent_mat_cell_29_button_2_Template_button_click_0_listener","RolesListComponent_mat_cell_29_button_1_Template","RolesListComponent_mat_cell_29_button_2_Template","RolesListComponent_mat_cell_29_Template_button_click_3_listener","_r30","row_r31","loadRoles","roleId","deleteRole","disableRole","enableRole","RolesListComponent_Template","RolesListComponent_div_5_Template","RolesListComponent_Template_button_click_8_listener","RolesListComponent_Template_mat_table_matSortChange_14_listener","RolesListComponent_mat_header_cell_16_Template","RolesListComponent_mat_cell_17_Template","RolesListComponent_mat_header_cell_19_Template","RolesListComponent_mat_cell_20_Template","RolesListComponent_mat_header_cell_22_Template","RolesListComponent_mat_cell_23_Template","RolesListComponent_mat_header_cell_25_Template","RolesListComponent_mat_cell_26_Template","RolesListComponent_mat_header_cell_28_Template","RolesListComponent_mat_cell_29_Template","RolesListComponent_mat_header_row_30_Template","RolesListComponent_mat_row_31_Template","RolesListComponent_Template_mat_paginator_page_32_listener","field_r9","UpdateRoleComponent_ng_container_18_span_1_mat_error_7_Template","UpdateRoleComponent_ng_container_18_span_1_Template","UpdateRoleComponent_ng_container_18_mat_slide_toggle_2_Template","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_button_3_Template_button_click_0_listener","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_Template_mat_slide_toggle_change_0_listener","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_button_3_Template","privilege_r19","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_Template","parent_r17","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_Template","UpdateRoleComponent_mat_checkbox_43_Template_mat_checkbox_change_0_listener","assignRolesOption_r25","parentLabel","privilegesLabel","UpdateRoleComponent_Template","UpdateRoleComponent_div_5_Template","UpdateRoleComponent_Template_button_click_8_listener","UpdateRoleComponent_span_12_Template","UpdateRoleComponent_strong_13_Template","UpdateRoleComponent_Template_form_ngSubmit_17_listener","UpdateRoleComponent_ng_container_18_Template","UpdateRoleComponent_mat_tab_group_24_Template","UpdateRoleComponent_Template_button_click_26_listener","UpdateRoleComponent_Template_button_click_37_listener","UpdateRoleComponent_Template_button_click_40_listener","UpdateRoleComponent_mat_checkbox_43_Template","UpdateRoleComponent_span_44_Template","option_r4","UserQuotaComponent_div_14_Template_mat_slide_toggle_ngModelChange_5_listener","quotaEnabled","UserQuotaComponent_div_14_Template_input_ngModelChange_14_listener","quotaNumber","UserQuotaComponent_div_14_mat_option_20_Template","UserQuotaComponent_div_14_Template_button_click_27_listener","updateQuotaNumber","usersControlSelect","quotaUsersfiltered","usersList","quotaEmailDestControl","pattern","data_users","quota","email_dest","users_filtered","elem","trim","UserQuotaComponent_Template","UserQuotaComponent_div_5_Template","UserQuotaComponent_Template_button_click_8_listener","UserQuotaComponent_div_14_Template","CreateUserComponent_ng_container_18_mat_form_field_1_mat_icon_7_Template_mat_icon_click_0_listener","CreateUserComponent_ng_container_18_mat_form_field_1_mat_icon_8_Template_mat_icon_click_0_listener","CreateUserComponent_ng_container_18_mat_form_field_1_mat_error_6_Template","CreateUserComponent_ng_container_18_mat_form_field_1_mat_icon_7_Template","CreateUserComponent_ng_container_18_mat_form_field_1_mat_icon_8_Template","option_r22","CreateUserComponent_ng_container_18_mat_form_field_2_Template_mat_select_valueChange_4_listener","CreateUserComponent_ng_container_18_mat_form_field_2_mat_option_5_Template","CreateUserComponent_ng_container_18_mat_form_field_2_mat_error_6_Template","CreateUserComponent_ng_container_18_mat_form_field_1_Template","CreateUserComponent_ng_container_18_mat_form_field_2_Template","CreateUserComponent_mat_list_33_mat_list_item_1_Template_mat_list_item_click_0_listener","customer_r29","updateUserCustomers","CreateUserComponent_mat_list_33_mat_list_item_1_span_5_Template","hasCustomer","CreateUserComponent_mat_list_33_mat_list_item_1_Template","CreateUserComponent_mat_list_37_mat_list_item_1_Template_mat_list_item_click_0_listener","form_r34","updateUserForms","CreateUserComponent_mat_list_37_mat_list_item_1_span_5_Template","hasForm","CreateUserComponent_mat_list_37_mat_list_item_1_Template","loadingCustomers","userFields","userForms","userCustomers","errorMessage","_customerId","formId","_formId","CreateUserComponent_Template","CreateUserComponent_div_5_Template","CreateUserComponent_Template_button_click_8_listener","CreateUserComponent_Template_button_click_13_listener","CreateUserComponent_Template_form_ngSubmit_17_listener","CreateUserComponent_ng_container_18_Template","CreateUserComponent_div_32_Template","CreateUserComponent_mat_list_33_Template","CreateUserComponent_div_36_Template","CreateUserComponent_mat_list_37_Template","role_label","UsersListComponent_mat_cell_38_span_1_Template","UsersListComponent_mat_cell_38_span_2_Template","UsersListComponent_mat_cell_41_button_1_Template_button_click_0_listener","UsersListComponent_mat_cell_41_button_2_Template_button_click_0_listener","UsersListComponent_mat_cell_41_button_1_Template","UsersListComponent_mat_cell_41_button_2_Template","UsersListComponent_mat_cell_41_Template_button_click_3_listener","row_r38","activeUser","userQuotaConfig","allUsers","loadUsers","getUserQuotaFiltered","searchUser","deleteUser","disableUser","enableUser","UsersListComponent_Template","UsersListComponent_div_5_Template","UsersListComponent_Template_button_click_8_listener","UsersListComponent_Template_input_keyup_17_listener","UsersListComponent_Template_mat_table_matSortChange_20_listener","UsersListComponent_mat_header_cell_22_Template","UsersListComponent_mat_cell_23_Template","UsersListComponent_mat_header_cell_25_Template","UsersListComponent_mat_cell_26_Template","UsersListComponent_mat_header_cell_28_Template","UsersListComponent_mat_cell_29_Template","UsersListComponent_mat_header_cell_31_Template","UsersListComponent_mat_cell_32_Template","UsersListComponent_mat_header_cell_34_Template","UsersListComponent_mat_cell_35_Template","UsersListComponent_mat_header_cell_37_Template","UsersListComponent_mat_cell_38_Template","UsersListComponent_mat_header_cell_40_Template","UsersListComponent_mat_cell_41_Template","UsersListComponent_mat_header_row_42_Template","UsersListComponent_mat_row_43_Template","UsersListComponent_Template_mat_paginator_page_44_listener","UsersListComponent_div_45_Template","UpdateUserComponent_ng_container_19_span_1_mat_icon_8_Template_mat_icon_click_0_listener","UpdateUserComponent_ng_container_19_span_1_mat_icon_9_Template_mat_icon_click_0_listener","UpdateUserComponent_ng_container_19_span_1_mat_error_7_Template","UpdateUserComponent_ng_container_19_span_1_mat_icon_8_Template","UpdateUserComponent_ng_container_19_span_1_mat_icon_9_Template","UpdateUserComponent_ng_container_19_mat_form_field_2_Template_mat_select_valueChange_4_listener","UpdateUserComponent_ng_container_19_mat_form_field_2_mat_option_5_Template","UpdateUserComponent_ng_container_19_mat_form_field_2_mat_error_6_Template","UpdateUserComponent_ng_container_19_span_1_Template","UpdateUserComponent_ng_container_19_mat_form_field_2_Template","UpdateUserComponent_mat_list_34_mat_list_item_1_Template_mat_list_item_click_0_listener","_r33","customer_r30","UpdateUserComponent_mat_list_34_mat_list_item_1_span_5_Template","UpdateUserComponent_mat_list_34_mat_list_item_1_Template","UpdateUserComponent_mat_list_40_mat_list_item_1_Template_mat_list_item_click_0_listener","form_r35","UpdateUserComponent_mat_list_40_mat_list_item_1_span_5_Template","UpdateUserComponent_mat_list_40_mat_list_item_1_Template","UpdateUserComponent_Template","UpdateUserComponent_div_5_Template","UpdateUserComponent_Template_button_click_8_listener","UpdateUserComponent_span_12_Template","UpdateUserComponent_Template_button_click_14_listener","UpdateUserComponent_Template_form_ngSubmit_18_listener","UpdateUserComponent_ng_container_19_Template","UpdateUserComponent_div_33_Template","UpdateUserComponent_mat_list_34_Template","UpdateUserComponent_div_39_Template","UpdateUserComponent_mat_list_40_Template","parent_r4","ɵɵclassMapInterpolate1","setting_r12","action_r20","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_Template_button_click_1_listener","changeSetting","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_p_4_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_Template_button_click_3_listener","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_p_6_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_Template","getSettingsAction","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_Template_button_click_0_listener","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_p_3_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_Template","SettingsMenuComponent_mat_expansion_panel_5_Template_mat_expansion_panel_opened_0_listener","_r48","closeOtherParent","SettingsMenuComponent_mat_expansion_panel_5_Template_mat_expansion_panel_click_0_listener","setSelectedParentSettings","SettingsMenuComponent_mat_expansion_panel_5_span_4_Template","SettingsMenuComponent_mat_expansion_panel_5_ng_template_5_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_Template","i_r5","_r7","getSettings","SettingsMenuComponent_Template","SettingsMenuComponent_h3_0_Template","SettingsMenuComponent_ng_template_1_Template","SettingsMenuComponent_mat_expansion_panel_5_Template","getSettingsParent","selectedSetting","getSelectedSetting","selectedParentSetting","getSelectedParentSetting","settingsFound","routeToGo","SettingsComponent_Template","encapsulation","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_7_Template","placeholder","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_7_Template","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_Template","CreateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_Template","form_r19","CreateSplitterAiModelComponent_div_14_div_8_div_3_button_8_Template_button_click_0_listener","trainFolder_r14","openDoctypeTree","doctype","CreateSplitterAiModelComponent_div_14_div_8_div_3_Template_mat_select_ngModelChange_6_listener","CreateSplitterAiModelComponent_div_14_div_8_div_3_mat_option_7_Template","CreateSplitterAiModelComponent_div_14_div_8_div_3_button_8_Template","CreateSplitterAiModelComponent_div_14_div_8_Template_mat_checkbox_ngModelChange_1_listener","isSelected","CreateSplitterAiModelComponent_div_14_div_8_div_3_Template","folder","CreateSplitterAiModelComponent_div_14_ng_container_2_Template","CreateSplitterAiModelComponent_div_14_div_8_Template","AiModel","fields","trainFolders","retrieveDoctypes","retrieveForms","trainFolder","createModel","startTraining","totalTrainFolders","selectedTrainFolders","minProba","getValueFromForm","modelName","docs","min_proba","fieldId","height","selectedDoctype","CreateSplitterAiModelComponent_Template","CreateSplitterAiModelComponent_div_5_Template","CreateSplitterAiModelComponent_Template_button_click_8_listener","CreateSplitterAiModelComponent_div_14_Template","CreateSplitterAiModelComponent_Template_button_click_16_listener","FileValidators","ListSplitterAiModelComponent_button_13_Template_button_click_0_listener","model_label","train_time","accuracy_score","documents","ListSplitterAiModelComponent_div_15_mat_cell_22_i_2_Template","ListSplitterAiModelComponent_div_15_mat_cell_22_i_3_Template","ListSplitterAiModelComponent_div_15_mat_cell_22_i_4_Template","element_r33","ListSplitterAiModelComponent_div_15_mat_cell_25_Template_button_click_1_listener","element_r37","selectRow","ListSplitterAiModelComponent_div_15_mat_cell_25_Template_button_click_4_listener","row_r41","ListSplitterAiModelComponent_div_15_Template_mat_table_matSortChange_1_listener","ListSplitterAiModelComponent_div_15_mat_header_cell_3_Template","ListSplitterAiModelComponent_div_15_mat_cell_4_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_6_Template","ListSplitterAiModelComponent_div_15_mat_cell_7_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_9_Template","ListSplitterAiModelComponent_div_15_mat_cell_10_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_12_Template","ListSplitterAiModelComponent_div_15_mat_cell_13_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_15_Template","ListSplitterAiModelComponent_div_15_mat_cell_16_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_18_Template","ListSplitterAiModelComponent_div_15_mat_cell_19_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_21_Template","ListSplitterAiModelComponent_div_15_mat_cell_22_Template","ListSplitterAiModelComponent_div_15_mat_header_cell_24_Template","ListSplitterAiModelComponent_div_15_mat_cell_25_Template","ListSplitterAiModelComponent_div_15_mat_header_row_26_Template","ListSplitterAiModelComponent_div_15_mat_row_27_Template","ListSplitterAiModelComponent_div_15_Template_mat_paginator_page_28_listener","modelsList","displayedColumns","prediction","showResponse","isPredicting","clickedRow","fileControl","fileExtension","retrieveModels","size","models","tmp_doc","j","accuracy","doctypes","row","checkFile","fileName","pop","count","displaySelectedRowId","disp","modelId","model","deleteModel","res","onResponse","ListSplitterAiModelComponent_Template","ListSplitterAiModelComponent_div_5_Template","ListSplitterAiModelComponent_Template_button_click_8_listener","ListSplitterAiModelComponent_button_13_Template","ListSplitterAiModelComponent_div_15_Template","ListSplitterAiModelComponent_Template_ngx_file_drag_drop_valueChanged_29_listener","ListSplitterAiModelComponent_Template_button_click_32_listener","ListSplitterAiModelComponent_div_35_Template","ListSplitterAiModelComponent_mat_progress_bar_37_Template","lastValueFrom","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_7_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_7_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_1_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_mat_form_field_2_Template","form_r17","UpdateSplitterAiModelComponent_div_14_div_4_button_9_Template_button_click_0_listener","UpdateSplitterAiModelComponent_div_14_div_4_Template_mat_select_ngModelChange_7_listener","UpdateSplitterAiModelComponent_div_14_div_4_mat_option_8_Template","UpdateSplitterAiModelComponent_div_14_div_4_button_9_Template","UpdateSplitterAiModelComponent_div_14_ng_container_2_Template","UpdateSplitterAiModelComponent_div_14_div_4_Template","setFormValue","model_path","updateModel","modelPath","modelLabel","trainDocuments","retrieve","trainDocument","UpdateSplitterAiModelComponent_Template","UpdateSplitterAiModelComponent_div_5_Template","UpdateSplitterAiModelComponent_Template_button_click_8_listener","UpdateSplitterAiModelComponent_div_14_Template","UpdateSplitterAiModelComponent_Template_button_click_16_listener","folder_r5","code","CreateFolderDoctypeComponent_div_32_mat_option_1_Template","selectedFormId","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_mat_hint_5_Template","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_mat_error_6_Template","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_Template","CreateFolderDoctypeComponent_ng_container_34_div_2_Template","noMasterFolder","getLastFolderIndex","codeSelected","lastIndex","documentTypeFactoryComponent","treeDataObj","doctypeData","docType","startsWith","currentIdx","Number","getSelectedForm","addFolder","newFolder","getRawValue","reset","loadTree","viewQuery","CreateFolderDoctypeComponent_Query","CreateFolderDoctypeComponent_Template_button_click_7_listener","CreateFolderDoctypeComponent_Template_button_click_12_listener","CreateFolderDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_15_listener","CreateFolderDoctypeComponent_Template_form_ngSubmit_22_listener","CreateFolderDoctypeComponent_div_32_Template","CreateFolderDoctypeComponent_mat_error_33_Template","CreateFolderDoctypeComponent_ng_container_34_Template","CreateDoctypeComponent_div_29_mat_option_1_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_mat_hint_5_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_mat_error_6_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_Template","CreateDoctypeComponent_ng_container_31_div_2_Template","addDocType","newDocType","lastIndexInFolder","toString","CreateDoctypeComponent_Query","CreateDoctypeComponent_Template_button_click_7_listener","CreateDoctypeComponent_Template_button_click_12_listener","CreateDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_15_listener","CreateDoctypeComponent_Template_form_ngSubmit_22_listener","CreateDoctypeComponent_div_29_Template","CreateDoctypeComponent_mat_error_30_Template","CreateDoctypeComponent_ng_container_31_Template","ListDoctypeComponent_div_33_mat_option_1_Template","ListDoctypeComponent_ng_container_34_mat_form_field_1_Template","ListDoctypeComponent_ng_container_34_div_2_Template","isDefault","updateDoctype","getOutPut","join","deleteDoctype","ListDoctypeComponent_Query","ListDoctypeComponent_div_5_Template","ListDoctypeComponent_Template_button_click_8_listener","ListDoctypeComponent_Template_button_click_13_listener","_r2","ListDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_16_listener","ListDoctypeComponent_Template_app_document_type_factory_selectedDoctypeOutput_16_listener","ListDoctypeComponent_Template_form_ngSubmit_23_listener","ListDoctypeComponent_div_33_Template","ListDoctypeComponent_ng_container_34_Template","ListDoctypeComponent_Template_button_click_38_listener","output_label","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_6_Template_span_click_0_listener","addOutput","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_7_Template_span_click_0_listener","cpt_r13","removeOutput","SplitterFormBuilderComponent_div_16_mat_form_field_17_Template_mat_select_ngModelChange_4_listener","field_r12","SplitterFormBuilderComponent_div_16_mat_form_field_17_mat_option_5_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_6_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_7_Template","outputs","canRemove","field_r28","display_icon","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_39_Template_button_click_0_listener","_r52","_class_r48","category_r25","changeClass","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_39_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_42_Template_button_click_0_listener","_display_r55","changeDisplay","icon","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_42_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_45_Template_button_click_0_listener","_r66","required_r62","ctx_r64","changeRequired","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_45_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_48_Template_button_click_0_listener","disabled_r69","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_48_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_51_Template_mat_form_field_click_1_listener","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_51_Template_input_ngModelChange_5_listener","_r80","fieldMetadataItem_r76","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template_div_sorted_0_listener","_r84","ctx_r82","storeNewOrder","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template_i_click_2_listener","index_r29","ctx_r85","deleteField","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_8_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_9_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_10_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_23_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_39_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_42_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_45_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_48_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_51_Template","ɵɵclassMap","class_label","required_icon","classList","displayList","mandatoryList","disabledList","fieldMetadata","SplitterFormBuilderComponent_div_16_ng_container_26_Template_div_cdkDropListDropped_5_listener","ctx_r88","dropFromForm","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template","ɵɵstyleMap","SplitterFormBuilderComponent_div_16_button_28_Template_button_click_0_listener","_r91","createForm","SplitterFormBuilderComponent_div_16_button_29_Template_button_click_0_listener","_r93","ctx_r92","updateForm","SplitterFormBuilderComponent_div_16_mat_option_16_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_Template","SplitterFormBuilderComponent_div_16_ng_container_26_Template","SplitterFormBuilderComponent_div_16_button_28_Template","SplitterFormBuilderComponent_div_16_button_29_Template","formSettings","metadataMethods","outputForm","fieldCategories","creationMode","field_r97","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_2_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_3_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_4_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_5_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_6_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_Template_div_cdkDropListDropped_2_listener","dropFromAvailableFields","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_Template","availableFields_r95","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_Template","availableFieldsParent","loadingCustomFields","labelType","info","setting","batch_metadata","document_metadata","category","currentField","childFields","newClass","classLabel","newDisplay","displayIcon","newRequired","requiredIcon","previousUnit","parentField","categoryId","tmpCurrentOrder","currentOrder","default_form","metadataMethod","metadata_method","exportZipFile","export_zip_file","SplitterFormBuilderComponent_Template","SplitterFormBuilderComponent_div_5_Template","SplitterFormBuilderComponent_Template_button_click_8_listener","SplitterFormBuilderComponent_Template_button_click_13_listener","SplitterFormBuilderComponent_div_16_Template","SplitterFormBuilderComponent_div_23_Template","SplitterFormBuilderComponent_mat_tab_group_24_Template","SplitterFormListComponent_mat_cell_23_span_1_Template","SplitterFormListComponent_mat_cell_23_span_2_Template","SplitterFormListComponent_mat_cell_26_span_1_Template","SplitterFormListComponent_mat_cell_26_span_2_Template","SplitterFormListComponent_mat_cell_29_button_1_Template_button_click_0_listener","SplitterFormListComponent_mat_cell_29_button_2_Template_button_click_0_listener","SplitterFormListComponent_mat_cell_29_button_1_Template","SplitterFormListComponent_mat_cell_29_button_2_Template","SplitterFormListComponent_mat_cell_29_Template_button_click_3_listener","SplitterFormListComponent_mat_cell_29_Template_button_click_6_listener","row_r34","loadForms","deleteForm","duplicateForm","disableForm","enableForm","default","SplitterFormListComponent_Template","SplitterFormListComponent_div_5_Template","SplitterFormListComponent_Template_button_click_8_listener","SplitterFormListComponent_Template_mat_table_matSortChange_14_listener","SplitterFormListComponent_mat_header_cell_16_Template","SplitterFormListComponent_mat_cell_17_Template","SplitterFormListComponent_mat_header_cell_19_Template","SplitterFormListComponent_mat_cell_20_Template","SplitterFormListComponent_mat_header_cell_22_Template","SplitterFormListComponent_mat_cell_23_Template","SplitterFormListComponent_mat_header_cell_25_Template","SplitterFormListComponent_mat_cell_26_Template","SplitterFormListComponent_mat_header_cell_28_Template","SplitterFormListComponent_mat_cell_29_Template","SplitterFormListComponent_mat_header_row_30_Template","SplitterFormListComponent_mat_row_31_Template","SplitterFormListComponent_Template_mat_paginator_page_32_listener","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","option_r13","output_type_id","output_type_label","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","changeOutputType","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_2_mat_option_5_Template","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","outputsTypes","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_3_mat_option_5_Template","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_3_mat_error_6_Template","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_1_Template","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template","SplitterCreateOutputComponent_div_14_ng_container_2_mat_form_field_3_Template","selectedOutputType","SplitterCreateOutputComponent_div_14_ng_container_2_Template","outputs_types","createOutput","ocrise","outputLabel","compressType","outputTypeId","SplitterCreateOutputComponent_Template","SplitterCreateOutputComponent_div_5_Template","SplitterCreateOutputComponent_Template_button_click_8_listener","SplitterCreateOutputComponent_div_14_Template","SplitterCreateOutputComponent_Template_button_click_16_listener","element_r12","element_r13","SplitterOutputListComponent_mat_cell_26_Template_button_click_1_listener","SplitterOutputListComponent_mat_cell_26_Template_button_click_4_listener","row_r19","loadOutputs","outputId","output","deleteOutput","duplicateOutput","SplitterOutputListComponent_Template","SplitterOutputListComponent_div_5_Template","SplitterOutputListComponent_Template_button_click_8_listener","SplitterOutputListComponent_Template_mat_table_matSortChange_14_listener","SplitterOutputListComponent_mat_header_cell_16_Template","SplitterOutputListComponent_mat_cell_17_Template","SplitterOutputListComponent_mat_header_cell_19_Template","SplitterOutputListComponent_mat_cell_20_Template","SplitterOutputListComponent_mat_header_cell_22_Template","SplitterOutputListComponent_mat_cell_23_Template","SplitterOutputListComponent_mat_header_cell_25_Template","SplitterOutputListComponent_mat_cell_26_Template","SplitterOutputListComponent_mat_header_row_27_Template","SplitterOutputListComponent_mat_row_28_Template","SplitterOutputListComponent_Template_mat_paginator_page_29_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_mat_error_6_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_option_5_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_error_6_Template","option_r26","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_option_5_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_error_6_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_Template","field_r37","outputsTypesForm","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_Template","SplitterUpdateOutputComponent_form_28_button_7_Template_span_click_1_listener","testConnection","field_r44","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_6_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_7_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_span_6_Template","option_r65","extra","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template_mat_form_field_focusin_0_listener","retrieveDataFromWS","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_span_6_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_option_9_Template","webservice","connection","_r62","filteredOptions","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template","SplitterUpdateOutputComponent_form_28_span_4_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_Template","SplitterUpdateOutputComponent_form_28_button_7_Template","SplitterUpdateOutputComponent_form_28_span_10_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_Template","SplitterUpdateOutputComponent_div_36_div_1_mat_divider_7_Template","field_r71","labelShort","cpt_r72","SplitterUpdateOutputComponent_div_36_div_1_Template","availableFields","allowedPath","testConnectionMapping","originalOutputType","_output","isJson","outputElement","json_error","eval","testCmisConnection","getCmisConnectionInfo","auth","testMEMConnection","getMEMConnectionInfo","getOpenadsConnectionInfo","testOpenadsConnection","getUsersFromMem","toPromise","setAutocompleteValues","getEntitiesFromMem","entities","serialId","entity_label","entity_id","getDoctypesFromMem","type_id","getPrioritiesFromMem","priorities","getStatusesFromMem","statuses","label_status","getIndexingModelsFromMem","indexingModels","updateOutput","_array","parse","sortArrayAlphab","x","toUpperCase","y","functionName","SplitterUpdateOutputComponent_Template","SplitterUpdateOutputComponent_div_5_Template","SplitterUpdateOutputComponent_Template_button_click_8_listener","SplitterUpdateOutputComponent_Template_button_click_13_listener","_r74","SplitterUpdateOutputComponent_div_17_Template","SplitterUpdateOutputComponent_Template_button_click_23_listener","SplitterUpdateOutputComponent_form_28_Template","SplitterUpdateOutputComponent_div_35_Template","SplitterUpdateOutputComponent_div_36_Template","separator_r5","SeparatorComponent_div_34_Template_button_click_2_listener","moveCurrentThumbnail","SeparatorComponent_div_34_Template_button_click_6_listener","separator","thumbnails","current","loadingSeparator","selectedSeparator","separators","generateSeparator","onChangeType","fileUrl","encoded_file","encoded_thumbnails","downloadSeparator","downloadPdf","base64String","SeparatorComponent_Template","SeparatorComponent_Template_button_click_7_listener","SeparatorComponent_Template_button_click_12_listener","_r9","SeparatorComponent_Template_app_document_type_factory_selectedDoctypeOutput_15_listener","SeparatorComponent_Template_mat_select_ngModelChange_27_listener","SeparatorComponent_mat_option_28_Template","SeparatorComponent_Template_button_click_30_listener","SeparatorComponent_div_33_Template","SeparatorComponent_div_34_Template","SplitterUpdateStatusComponent_span_35_Template_i_click_4_listener","identifier_r5","removeIdentifier","identifierControl","statusControl","identifiers","addIdentifier","identifier","updateStatus","SplitterUpdateStatusComponent_Template","SplitterUpdateStatusComponent_Template_button_click_7_listener","SplitterUpdateStatusComponent_mat_option_24_Template","SplitterUpdateStatusComponent_Template_button_click_30_listener","SplitterUpdateStatusComponent_span_34_Template","SplitterUpdateStatusComponent_span_35_Template","SplitterUpdateStatusComponent_Template_button_click_37_listener","STEPPER_GLOBAL_OPTIONS","WorkflowBuilderSplitterComponent_i_13_Template_i_click_0_listener","_r11","updateWorkflow","WorkflowBuilderSplitterComponent_ng_container_31_div_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_31_div_1_Template","field_r17","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_1_button_6_Template_button_click_0_listener","checkFolder","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_1_button_6_Template","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_2_Template_mat_select_selectionChange_4_listener","setSeparationMode","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_2_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_2_span_6_Template","multiple","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_1_Template","WorkflowBuilderSplitterComponent_ng_container_33_mat_form_field_2_Template","show","WorkflowBuilderSplitterComponent_ng_container_43_div_1_Template_mat_slide_toggle_change_1_listener","setUseInterface","setUsedOutputs","WorkflowBuilderSplitterComponent_ng_container_43_div_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_43_div_1_Template","field_r45","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_1_span_5_Template","option_r53","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r57","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_2_Template_mat_select_selectionChange_4_listener","updateOutputs","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_2_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_2_span_6_Template","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_1_Template","WorkflowBuilderSplitterComponent_ng_container_45_mat_form_field_2_Template","field_r61","WorkflowBuilderSplitterComponent_ng_container_56_mat_form_field_1_Template_mat_select_valueChange_4_listener","WorkflowBuilderSplitterComponent_ng_container_56_mat_form_field_1_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_56_mat_form_field_1_span_6_Template","ctx_r62","useInterface","WorkflowBuilderSplitterComponent_ng_container_56_mat_form_field_1_Template","separationMode","stepValid","separation","oldFolder","nameControl","form_outputs","workflow_outputs","workflowId","workflow","Array","isArray","aiModel","concat","f","_element","splitMethods","isStepValid","createWorkflow","displayDefaultIndicatorType","WorkflowBuilderSplitterComponent_Template","WorkflowBuilderSplitterComponent_div_5_Template","WorkflowBuilderSplitterComponent_Template_button_click_8_listener","WorkflowBuilderSplitterComponent_i_13_Template","WorkflowBuilderSplitterComponent_ng_container_31_Template","WorkflowBuilderSplitterComponent_ng_container_33_Template","WorkflowBuilderSplitterComponent_Template_button_click_35_listener","WorkflowBuilderSplitterComponent_ng_container_43_Template","WorkflowBuilderSplitterComponent_ng_container_45_Template","WorkflowBuilderSplitterComponent_Template_button_click_50_listener","WorkflowBuilderSplitterComponent_ng_container_56_Template","WorkflowBuilderSplitterComponent_Template_button_click_60_listener","WorkflowBuilderSplitterComponent_span_61_Template","WorkflowBuilderSplitterComponent_span_62_Template","WorkflowListSplitterComponent_mat_cell_29_Template_button_click_1_listener","WorkflowListSplitterComponent_mat_cell_29_Template_button_click_4_listener","row_r22","allWorkflows","loadWorkflows","deleteWorkflow","duplicateWorkflow","WorkflowListSplitterComponent_Template","WorkflowListSplitterComponent_div_5_Template","WorkflowListSplitterComponent_Template_button_click_8_listener","WorkflowListSplitterComponent_Template_mat_table_matSortChange_14_listener","WorkflowListSplitterComponent_mat_header_cell_16_Template","WorkflowListSplitterComponent_mat_cell_17_Template","WorkflowListSplitterComponent_mat_header_cell_19_Template","WorkflowListSplitterComponent_mat_cell_20_Template","WorkflowListSplitterComponent_mat_header_cell_22_Template","WorkflowListSplitterComponent_mat_cell_23_Template","WorkflowListSplitterComponent_mat_header_cell_25_Template","WorkflowListSplitterComponent_mat_cell_26_Template","WorkflowListSplitterComponent_mat_header_cell_28_Template","WorkflowListSplitterComponent_mat_cell_29_Template","WorkflowListSplitterComponent_mat_header_row_30_Template","WorkflowListSplitterComponent_mat_row_31_Template","WorkflowListSplitterComponent_Template_mat_paginator_page_32_listener","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_7_Template","option_r14","modelForm","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_option_5_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_3_mat_error_6_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_3_mat_error_7_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_3_Template","option_r28","CreateVerifierAiModelComponent_div_14_div_8_mat_form_field_4_Template_mat_select_selectionChange_4_listener","i_r24","item_r23","onFormSelect","doc","CreateVerifierAiModelComponent_div_14_div_8_mat_form_field_4_mat_option_5_Template","CreateVerifierAiModelComponent_div_14_div_8_mat_form_field_4_mat_error_6_Template","formControl","CreateVerifierAiModelComponent_div_14_div_8_Template_mat_checkbox_ngModelChange_1_listener","CreateVerifierAiModelComponent_div_14_div_8_Template_mat_checkbox_change_1_listener","checkSelectedBatch","CreateVerifierAiModelComponent_div_14_div_8_mat_form_field_4_Template","CreateVerifierAiModelComponent_div_14_ng_container_2_Template","CreateVerifierAiModelComponent_div_14_div_8_Template","docStatus","listModels","chosenForm","chosenDocs","totalChecked","retrieveOCDoctypes","linked_doctype","linked_form","current_doc","newDoctype","is_default","val","start_training","isValidForm2","matches","fold","formid","displayDoctypes","doctypeKey","doctypeLabel","CreateVerifierAiModelComponent_Template","CreateVerifierAiModelComponent_div_5_Template","CreateVerifierAiModelComponent_Template_button_click_8_listener","CreateVerifierAiModelComponent_div_14_Template","CreateVerifierAiModelComponent_Template_button_click_16_listener","ListVerifierAiModelComponent_button_13_Template_button_click_0_listener","ListVerifierAiModelComponent_div_15_mat_cell_22_i_2_Template","ListVerifierAiModelComponent_div_15_mat_cell_22_i_3_Template","ListVerifierAiModelComponent_div_15_mat_cell_22_i_4_Template","ListVerifierAiModelComponent_div_15_mat_cell_25_Template_button_click_1_listener","ListVerifierAiModelComponent_div_15_mat_cell_25_Template_button_click_4_listener","ListVerifierAiModelComponent_div_15_Template_mat_table_matSortChange_1_listener","ListVerifierAiModelComponent_div_15_mat_header_cell_3_Template","ListVerifierAiModelComponent_div_15_mat_cell_4_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_6_Template","ListVerifierAiModelComponent_div_15_mat_cell_7_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_9_Template","ListVerifierAiModelComponent_div_15_mat_cell_10_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_12_Template","ListVerifierAiModelComponent_div_15_mat_cell_13_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_15_Template","ListVerifierAiModelComponent_div_15_mat_cell_16_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_18_Template","ListVerifierAiModelComponent_div_15_mat_cell_19_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_21_Template","ListVerifierAiModelComponent_div_15_mat_cell_22_Template","ListVerifierAiModelComponent_div_15_mat_header_cell_24_Template","ListVerifierAiModelComponent_div_15_mat_cell_25_Template","ListVerifierAiModelComponent_div_15_mat_header_row_26_Template","ListVerifierAiModelComponent_div_15_mat_row_27_Template","ListVerifierAiModelComponent_div_15_Template_mat_paginator_page_28_listener","ListVerifierAiModelComponent_Template","ListVerifierAiModelComponent_div_5_Template","ListVerifierAiModelComponent_Template_button_click_8_listener","ListVerifierAiModelComponent_button_13_Template","ListVerifierAiModelComponent_div_15_Template","ListVerifierAiModelComponent_Template_ngx_file_drag_drop_valueChanged_29_listener","ListVerifierAiModelComponent_Template_button_click_32_listener","ListVerifierAiModelComponent_div_35_Template","ListVerifierAiModelComponent_mat_progress_bar_37_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_mat_error_7_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_mat_error_7_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_1_Template","UpdateVerifierAiModelComponent_div_14_ng_container_2_mat_form_field_2_Template","UpdateVerifierAiModelComponent_div_14_div_4_Template_mat_select_selectionChange_7_listener","item_r14","UpdateVerifierAiModelComponent_div_14_div_4_mat_option_8_Template","Documents","formsFormControl","UpdateVerifierAiModelComponent_div_14_ng_container_2_Template","UpdateVerifierAiModelComponent_div_14_div_4_Template","tableData","doc_types","formById","doctypesFormControl","len","Doctypes","Formulaires","oc_targets","model_name","UpdateVerifierAiModelComponent_Template","UpdateVerifierAiModelComponent_div_5_Template","UpdateVerifierAiModelComponent_Template_button_click_8_listener","UpdateVerifierAiModelComponent_div_14_Template","UpdateVerifierAiModelComponent_Template_button_click_16_listener","FormBuilderComponent_div_16_mat_form_field_25_span_6_Template_span_click_0_listener","FormBuilderComponent_div_16_mat_form_field_25_span_7_Template_span_click_0_listener","cpt_r12","FormBuilderComponent_div_16_mat_form_field_25_Template_mat_select_ngModelChange_4_listener","field_r11","FormBuilderComponent_div_16_mat_form_field_25_mat_option_5_Template","FormBuilderComponent_div_16_mat_form_field_25_span_6_Template","FormBuilderComponent_div_16_mat_form_field_25_span_7_Template","FormBuilderComponent_div_16_ng_container_27_span_2_span_2_Template_span_click_0_listener","category_r24","edit","focusInput","FormBuilderComponent_div_16_ng_container_27_span_2_span_2_Template","getCategoryLabel","FormBuilderComponent_div_16_ng_container_27_span_3_Template_input_focusout_1_listener","updateLabel","FormBuilderComponent_div_16_ng_container_27_span_3_Template_span_click_4_listener","FormBuilderComponent_div_16_ng_container_27_div_6_i_2_Template_i_click_0_listener","_r51","index_r42","FormBuilderComponent_div_16_ng_container_27_div_6_i_3_Template_i_click_0_listener","_r55","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_1_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_6_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_7_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template_input_keyup_enter_2_listener","_r64","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template_input_focusout_2_listener","ctx_r65","color","_r78","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_Template_button_click_0_listener","_class_r85","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_23_Template_button_click_0_listener","_color_r92","ctx_r93","changeColor","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_Template_button_click_0_listener","_r102","_format_r98","ctx_r100","changeFormat","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_Template_button_click_0_listener","_display_r105","ctx_r107","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_Template_button_click_0_listener","required_r112","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_11_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_12_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_23_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_Template","_r72","colorsList","formatList","FormBuilderComponent_div_16_ng_container_27_div_6_div_8_Template_i_click_1_listener","_r122","fullSizeSelected","FormBuilderComponent_div_16_ng_container_27_div_6_Template_div_sorted_0_listener","_r126","FormBuilderComponent_div_16_ng_container_27_div_6_Template_mat_form_field_click_1_listener","selectForLine","FormBuilderComponent_div_16_ng_container_27_div_6_i_2_Template","FormBuilderComponent_div_16_ng_container_27_div_6_i_3_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_8_Template","ɵɵpureFunction2","fullSize","FormBuilderComponent_div_16_ng_container_27_span_2_Template","FormBuilderComponent_div_16_ng_container_27_span_3_Template","FormBuilderComponent_div_16_ng_container_27_Template_div_cdkDropListDropped_5_listener","_r131","ctx_r130","FormBuilderComponent_div_16_ng_container_27_div_6_Template","FormBuilderComponent_div_16_button_29_Template_button_click_0_listener","_r133","ctx_r132","FormBuilderComponent_div_16_button_30_Template_button_click_0_listener","_r137","ctx_r136","FormBuilderComponent_div_16_button_30_span_1_Template","FormBuilderComponent_div_16_button_30_i_2_Template","updateFormLoading","FormBuilderComponent_div_16_div_31_div_11_mat_divider_7_Template","field_r139","cpt_r140","FormBuilderComponent_div_16_div_31_Template_button_click_7_listener","_r143","ctx_r142","modalOpen","FormBuilderComponent_div_16_div_31_div_11_Template","FormBuilderComponent_div_16_mat_form_field_25_Template","FormBuilderComponent_div_16_ng_container_27_Template","FormBuilderComponent_div_16_button_29_Template","FormBuilderComponent_div_16_button_30_Template","FormBuilderComponent_div_16_div_31_Template","field_r148","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_2_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_3_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_4_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_5_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_Template_div_cdkDropListDropped_2_listener","_r158","ctx_r157","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_Template","availableFields_r145","FormBuilderComponent_mat_tab_group_24_mat_tab_1_Template","selectedFields","formLabels","format_icon","res_outputs","labels","formSettingId","module_settings_id","autocomplete","category_id","focus","newFormat","formatIcon","newColor","ctrlKey","lineSelected","currentNumber","currentSize","Function","round","supplierVerif","supplier_verif","allowLearning","allow_learning","FormBuilderComponent_Template","FormBuilderComponent_div_5_Template","FormBuilderComponent_Template_button_click_8_listener","FormBuilderComponent_Template_button_click_13_listener","_r159","FormBuilderComponent_div_16_Template","FormBuilderComponent_div_23_Template","FormBuilderComponent_mat_tab_group_24_Template","FormListComponent_mat_cell_23_span_1_Template","FormListComponent_mat_cell_23_span_2_Template","FormListComponent_mat_cell_26_span_1_Template","FormListComponent_mat_cell_26_span_2_Template","FormListComponent_mat_cell_29_button_1_Template_button_click_0_listener","FormListComponent_mat_cell_29_button_2_Template_button_click_0_listener","FormListComponent_mat_cell_29_button_6_Template_button_click_0_listener","FormListComponent_mat_cell_29_button_1_Template","FormListComponent_mat_cell_29_button_2_Template","FormListComponent_mat_cell_29_Template_button_click_3_listener","FormListComponent_mat_cell_29_button_6_Template","row_r37","getWorkflows","workflowList","workflowListLabel","selectValues","selectLabel","updateWorkflowsDefaultForm","newFormId","FormListComponent_Template","FormListComponent_div_5_Template","FormListComponent_Template_button_click_8_listener","FormListComponent_Template_mat_table_matSortChange_14_listener","FormListComponent_mat_header_cell_16_Template","FormListComponent_mat_cell_17_Template","FormListComponent_mat_header_cell_19_Template","FormListComponent_mat_cell_20_Template","FormListComponent_mat_header_cell_22_Template","FormListComponent_mat_cell_23_Template","FormListComponent_mat_header_cell_25_Template","FormListComponent_mat_cell_26_Template","FormListComponent_mat_header_cell_28_Template","FormListComponent_mat_cell_29_Template","FormListComponent_mat_header_row_30_Template","FormListComponent_mat_row_31_Template","FormListComponent_Template_mat_paginator_page_32_listener","CreateOutputComponent_div_14_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","CreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","CreateOutputComponent_div_14_ng_container_2_mat_form_field_2_mat_option_5_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","CreateOutputComponent_div_14_ng_container_2_mat_form_field_3_mat_option_5_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_3_mat_error_6_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_1_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_2_Template","CreateOutputComponent_div_14_ng_container_2_mat_form_field_3_Template","CreateOutputComponent_div_14_ng_container_2_Template","CreateOutputComponent_Template","CreateOutputComponent_div_5_Template","CreateOutputComponent_Template_button_click_8_listener","CreateOutputComponent_div_14_Template","CreateOutputComponent_Template_button_click_16_listener","OutputsListComponent_mat_cell_26_Template_button_click_1_listener","OutputsListComponent_mat_cell_26_Template_button_click_4_listener","OutputsListComponent_Template","OutputsListComponent_div_5_Template","OutputsListComponent_Template_button_click_8_listener","OutputsListComponent_Template_mat_table_matSortChange_14_listener","OutputsListComponent_mat_header_cell_16_Template","OutputsListComponent_mat_cell_17_Template","OutputsListComponent_mat_header_cell_19_Template","OutputsListComponent_mat_cell_20_Template","OutputsListComponent_mat_header_cell_22_Template","OutputsListComponent_mat_cell_23_Template","OutputsListComponent_mat_header_cell_25_Template","OutputsListComponent_mat_cell_26_Template","OutputsListComponent_mat_header_row_27_Template","OutputsListComponent_mat_row_28_Template","OutputsListComponent_Template_mat_paginator_page_29_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_option_5_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_option_5_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template","UpdateOutputComponent_div_17_ng_container_2_Template","field_r38","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_Template","UpdateOutputComponent_form_28_button_7_Template_button_click_0_listener","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_6_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_span_6_Template","option_r64","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template_mat_form_field_focusin_0_listener","_r67","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_span_6_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_option_9_Template","_r61","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_5_mat_slide_toggle_1_Template","field_r74","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_span_6_Template","option_r87","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_Template_mat_form_field_focusin_0_listener","_r90","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_mat_error_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_span_6_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_mat_option_9_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_Template","UpdateOutputComponent_form_28_span_4_Template","UpdateOutputComponent_form_28_ng_container_6_Template","UpdateOutputComponent_form_28_button_7_Template","UpdateOutputComponent_form_28_span_10_Template","UpdateOutputComponent_form_28_ng_container_12_Template","UpdateOutputComponent_form_28_mat_tab_13_Template","UpdateOutputComponent_div_36_div_1_mat_divider_7_Template","field_r93","cpt_r94","UpdateOutputComponent_div_36_div_1_Template","text","t","pure","links","getCustomFieldsFromMem","getContactsCustomFieldsFromMem","UpdateOutputComponent_Template","UpdateOutputComponent_div_5_Template","UpdateOutputComponent_Template_button_click_8_listener","UpdateOutputComponent_Template_button_click_13_listener","UpdateOutputComponent_div_17_Template","UpdateOutputComponent_Template_button_click_23_listener","UpdateOutputComponent_form_28_Template","UpdateOutputComponent_div_35_Template","UpdateOutputComponent_div_36_Template","option_r6","option_r7","CreatePositionsMaskComponent_div_14_mat_option_14_Template","CreatePositionsMaskComponent_div_14_mat_option_21_Template","createPositionsMask","supplierName","CreatePositionsMaskComponent_Template","CreatePositionsMaskComponent_div_5_Template","CreatePositionsMaskComponent_Template_button_click_8_listener","CreatePositionsMaskComponent_div_14_Template","CreatePositionsMaskComponent_Template_button_click_16_listener","supplier_name","PositionsMaskListComponent_mat_cell_29_span_1_Template","PositionsMaskListComponent_mat_cell_29_span_2_Template","PositionsMaskListComponent_mat_cell_32_button_1_Template_button_click_0_listener","PositionsMaskListComponent_mat_cell_32_button_2_Template_button_click_0_listener","PositionsMaskListComponent_mat_cell_32_button_1_Template","PositionsMaskListComponent_mat_cell_32_button_2_Template","PositionsMaskListComponent_mat_cell_32_Template_button_click_3_listener","PositionsMaskListComponent_mat_cell_32_Template_button_click_6_listener","positionsMasks","loadPositionMask","retrieveSuppliers","positions_masks","mask","supplier_id","positionMaskId","positionsMask","deletePositionMask","duplicatePositionMask","positionsMaskId","disablePositionMask","enablePositionMask","PositionsMaskListComponent_Template","PositionsMaskListComponent_div_5_Template","PositionsMaskListComponent_Template_button_click_8_listener","PositionsMaskListComponent_Template_mat_table_matSortChange_14_listener","PositionsMaskListComponent_mat_header_cell_16_Template","PositionsMaskListComponent_mat_cell_17_Template","PositionsMaskListComponent_mat_header_cell_19_Template","PositionsMaskListComponent_mat_cell_20_Template","PositionsMaskListComponent_mat_header_cell_22_Template","PositionsMaskListComponent_mat_cell_23_Template","PositionsMaskListComponent_mat_header_cell_25_Template","PositionsMaskListComponent_mat_cell_26_Template","PositionsMaskListComponent_mat_header_cell_28_Template","PositionsMaskListComponent_mat_cell_29_Template","PositionsMaskListComponent_mat_header_cell_31_Template","PositionsMaskListComponent_mat_cell_32_Template","PositionsMaskListComponent_mat_header_row_33_Template","PositionsMaskListComponent_mat_row_34_Template","PositionsMaskListComponent_Template_mat_paginator_page_35_listener","UpdatePositionsMaskComponent_span_43_Template_span_click_0_listener","deleteImage","UpdatePositionsMaskComponent_ng_container_46_Template_i_click_1_listener","previousPage","UpdatePositionsMaskComponent_ng_container_46_Template_i_click_5_listener","nextPage","ɵɵtextInterpolate4","currentPage","documentImageNbPages","UpdatePositionsMaskComponent_div_47_Template_ngx_file_drag_drop_valueChanged_1_listener","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_div_3_Template_input_focusin_10_listener","field_r23","ocr","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_div_3_Template_input_click_10_listener","ocrFromUser","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_div_3_Template_input_ngModelChange_10_listener","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_div_3_Template_input_focusout_10_listener","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_div_3_Template","availableFields_r21","UpdatePositionsMaskComponent_mat_tab_group_57_mat_tab_1_Template","loadingFields","launchOnInit","lastColor","lastLabel","getConfig","getPositionMask","documentImageName","nb_pages","documentImageWidth","imageDocument","$","thumbB64","getThumb","documentImageSrc","ratio","drawPositions","triggerEvent","_this3","_this4","positions","position","getPage","String","lastId","Infinity","newArea","trigger","drawPositionByField","updatePositionsMask","pages","background","outline","imageContainer","addClass","removeClass","innerText","deleteArea","backgroundArea","resizeArea","toggleClass","selectAreas","allowNudge","minSize","maxSize","onChanged","img","selection","ocr_process","onDeleted","inputId","attr","deletePosition","deletePage","deleteClicked","labelContainer","css","labelCount","cptToDelete","_selection","getSelectionByCpt","savePosition","savePage","checkIfObjectIsEqual","object1","object2","aProps","getOwnPropertyNames","bProps","propName","_this5","changeImage","_this6","pageToShow","oldPage","_this7","extension","oldCpt","substr","newCpt","newFilename","parentCpt","_this8","UpdatePositionsMaskComponent_Template","UpdatePositionsMaskComponent_div_5_Template","UpdatePositionsMaskComponent_Template_button_click_8_listener","UpdatePositionsMaskComponent_Template_button_click_13_listener","UpdatePositionsMaskComponent_Template_button_click_18_listener","UpdatePositionsMaskComponent_mat_option_35_Template","UpdatePositionsMaskComponent_mat_option_42_Template","UpdatePositionsMaskComponent_span_43_Template","UpdatePositionsMaskComponent_ng_container_46_Template","UpdatePositionsMaskComponent_div_47_Template","UpdatePositionsMaskComponent_div_56_Template","UpdatePositionsMaskComponent_mat_tab_group_57_Template","VerifierStatusUpdateComponent_span_35_Template_i_click_4_listener","VerifierStatusUpdateComponent_Template","VerifierStatusUpdateComponent_Template_button_click_7_listener","VerifierStatusUpdateComponent_mat_option_24_Template","VerifierStatusUpdateComponent_Template_button_click_30_listener","VerifierStatusUpdateComponent_span_34_Template","VerifierStatusUpdateComponent_span_35_Template","VerifierStatusUpdateComponent_Template_button_click_37_listener","subtitle_r13","VariousSettingsVerifierComponent_div_29_div_17_mat_form_field_2_Template_input_focusout_1_listener","VariousSettingsVerifierComponent_div_29_div_17_i_5_Template_i_click_0_listener","VariousSettingsVerifierComponent_div_29_div_17_strong_1_Template","VariousSettingsVerifierComponent_div_29_div_17_mat_form_field_2_Template","VariousSettingsVerifierComponent_div_29_div_17_i_5_Template","VariousSettingsVerifierComponent_div_29_div_17_i_6_Template","VariousSettingsVerifierComponent_div_29_div_17_Template_i_click_7_listener","cpt_r14","removeLine","VariousSettingsVerifierComponent_div_29_Template_div_cdkDropListDropped_16_listener","drop_card","VariousSettingsVerifierComponent_div_29_div_17_Template","currentForm","VariousSettingsVerifierComponent_div_30_Template_button_click_1_listener","updateDisplay","option_r33","uniqueURlExpirationControl","createSupplierControl","updateSupplierControl","refuseDocumentControl","allowSupplierAutoControl","validateDocumentControl","changeFormControl","VariousSettingsVerifierComponent_div_43_Template_div_click_0_listener","updateUniqueUrl","VariousSettingsVerifierComponent_div_51_Template_div_cdkDropListDropped_0_listener","drop","VariousSettingsVerifierComponent_div_51_div_1_Template","availableFieldsTmp","formLoaded","formLoadedUnique","formInput","loadUniqueUrl","unique_url","expiration","change_form","refuse_document","validate_document","create_supplier","update_supplier","allow_supplier_autocomplete","resetSelectedForm","loadDisplay","subtitles","subtitle","item","VariousSettingsVerifierComponent_Template","VariousSettingsVerifierComponent_div_5_Template","VariousSettingsVerifierComponent_Template_button_click_8_listener","VariousSettingsVerifierComponent_Template_button_click_13_listener","_r41","VariousSettingsVerifierComponent_Template_mat_tab_group_selectedTabChange_17_listener","VariousSettingsVerifierComponent_Template_mat_select_selectionChange_27_listener","VariousSettingsVerifierComponent_mat_option_28_Template","VariousSettingsVerifierComponent_div_29_Template","VariousSettingsVerifierComponent_div_30_Template","VariousSettingsVerifierComponent_Template_mat_select_selectionChange_40_listener","VariousSettingsVerifierComponent_mat_option_41_Template","VariousSettingsVerifierComponent_div_42_Template","VariousSettingsVerifierComponent_div_43_Template","VariousSettingsVerifierComponent_div_50_Template","VariousSettingsVerifierComponent_div_51_Template","CodeEditorComponent","WorkflowBuilderComponent_i_13_Template_i_click_0_listener","field_r13","WorkflowBuilderComponent_ng_container_32_div_1_span_5_Template","WorkflowBuilderComponent_ng_container_32_div_1_Template","WorkflowBuilderComponent_ng_container_34_mat_form_field_1_button_6_Template_button_click_0_listener","WorkflowBuilderComponent_ng_container_34_mat_form_field_1_span_5_Template","WorkflowBuilderComponent_ng_container_34_mat_form_field_1_button_6_Template","option_r30","WorkflowBuilderComponent_ng_container_34_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderComponent_ng_container_34_mat_form_field_2_Template_mat_select_selectionChange_4_listener","WorkflowBuilderComponent_ng_container_34_mat_form_field_2_mat_option_5_Template","WorkflowBuilderComponent_ng_container_34_mat_form_field_2_span_6_Template","WorkflowBuilderComponent_ng_container_34_mat_form_field_1_Template","WorkflowBuilderComponent_ng_container_34_mat_form_field_2_Template","WorkflowBuilderComponent_ng_container_47_div_1_Template_mat_slide_toggle_change_1_listener","WorkflowBuilderComponent_ng_container_47_div_1_span_5_Template","WorkflowBuilderComponent_ng_container_47_div_1_Template","field_r46","WorkflowBuilderComponent_ng_container_49_mat_form_field_1_span_5_Template","option_r54","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r58","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template_mat_select_selectionChange_4_listener","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_mat_option_5_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_span_6_Template","processAllowed","WorkflowBuilderComponent_ng_container_49_mat_form_field_1_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template","WorkflowBuilderComponent_i_58_Template_i_click_0_listener","_r63","openCodeEditor","option_r68","field_r64","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_Template_mat_select_valueChange_4_listener","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_mat_option_5_Template","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_span_6_Template","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_Template","outputAllowed","stepDefaultCode","codeContent","defaultCode","testScriptButton","input_folder","disableClose","fromUser","WorkflowBuilderComponent_Template","WorkflowBuilderComponent_div_5_Template","WorkflowBuilderComponent_Template_button_click_8_listener","WorkflowBuilderComponent_i_13_Template","WorkflowBuilderComponent_ng_container_32_Template","WorkflowBuilderComponent_ng_container_34_Template","WorkflowBuilderComponent_Template_button_click_36_listener","WorkflowBuilderComponent_Template_i_click_39_listener","WorkflowBuilderComponent_ng_container_47_Template","WorkflowBuilderComponent_ng_container_49_Template","WorkflowBuilderComponent_Template_button_click_55_listener","WorkflowBuilderComponent_i_58_Template","WorkflowBuilderComponent_ng_container_62_Template","WorkflowBuilderComponent_Template_button_click_67_listener","WorkflowBuilderComponent_span_68_Template","WorkflowBuilderComponent_span_69_Template","WorkflowBuilderComponent_Template_i_click_70_listener","WorkflowListComponent_mat_cell_29_Template_button_click_1_listener","WorkflowListComponent_mat_cell_29_Template_button_click_4_listener","WorkflowListComponent_Template","WorkflowListComponent_div_5_Template","WorkflowListComponent_Template_button_click_8_listener","WorkflowListComponent_Template_mat_table_matSortChange_14_listener","WorkflowListComponent_mat_header_cell_16_Template","WorkflowListComponent_mat_cell_17_Template","WorkflowListComponent_mat_header_cell_19_Template","WorkflowListComponent_mat_cell_20_Template","WorkflowListComponent_mat_header_cell_22_Template","WorkflowListComponent_mat_cell_23_Template","WorkflowListComponent_mat_header_cell_25_Template","WorkflowListComponent_mat_cell_26_Template","WorkflowListComponent_mat_header_cell_28_Template","WorkflowListComponent_mat_cell_29_Template","WorkflowListComponent_mat_header_row_30_Template","WorkflowListComponent_mat_row_31_Template","WorkflowListComponent_Template_mat_paginator_page_32_listener","EventEmitter","FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","BehaviorSubject","DocumentTypeFactoryComponent_mat_form_field_15_div_5_button_5_Template_button_click_0_listener","form_r6","cloneFormDoctypes","selectFormControl","DocumentTypeFactoryComponent_mat_form_field_15_div_5_button_5_Template","DocumentTypeFactoryComponent_mat_form_field_15_div_5_Template","DocumentTypeFactoryComponent_mat_tree_node_20_Template_button_click_1_listener","node_r11","selectNode","DocumentTypeFactoryComponent_mat_tree_node_20_Template_button_dblclick_1_listener","DocumentTypeFactoryComponent_mat_tree_node_20_i_2_Template","DocumentTypeFactoryComponent_mat_tree_node_20_i_3_Template","selectedDoctypeInput","node_r17","highlight","DocumentTypeFactoryComponent_mat_tree_node_21_button_5_Template_button_click_0_listener","DocumentTypeFactoryComponent_mat_tree_node_21_Template_button_click_1_listener","selectFolder","DocumentTypeFactoryComponent_mat_tree_node_21_span_3_Template","DocumentTypeFactoryComponent_mat_tree_node_21_span_4_Template","DocumentTypeFactoryComponent_mat_tree_node_21_button_5_Template","ɵɵattribute","treeControl","isExpanded","searchText","showFoldersSeparatorBtn","ChecklistDatabase","dataChange","retrieveDocTypes","initialize","buildFileTree","lastSearchValue","obj","level","o","node","TreeItemNode","children","so","_normalizeValue","normalize","filterText","filteredTreeData","d","lastIndexOf","ftd","TreeItemFlatNode","selectedDoctypeOutput","selectedFormOutput","flatNodeMap","Map","nestedNodeMap","getLevel","isExpandable","expandable","getChildren","hasChild","_","_nodeData","transformer","existingNode","flatNode","treeFlattener","dataSource","expandAll","emit","defaultFormId","filterChanged","collapseAll","isDblClick","canFolderBeSelected","sourceFormId","destFormId","cleanSearchText","DocumentTypeFactoryComponent_Template","DocumentTypeFactoryComponent_Template_input_ngModelChange_5_listener","DocumentTypeFactoryComponent_Template_input_input_5_listener","DocumentTypeFactoryComponent_Template_button_click_6_listener","DocumentTypeFactoryComponent_Template_button_click_9_listener","DocumentTypeFactoryComponent_Template_button_click_12_listener","DocumentTypeFactoryComponent_mat_form_field_15_Template","DocumentTypeFactoryComponent_div_17_Template","DocumentTypeFactoryComponent_div_18_Template","DocumentTypeFactoryComponent_mat_tree_node_20_Template","DocumentTypeFactoryComponent_mat_tree_node_21_Template","MAT_DIALOG_DATA","close","MatDialogRef","DocumentTypeComponent_Template","DocumentTypeComponent_Template_app_document_type_factory_selectedDoctypeOutput_3_listener","batch_r1","totals","option_r8","SplitterListComponent_mat_tab_3_div_24_Template_span_click_1_listener","selectOrUnselectAllBatches","SplitterListComponent_mat_tab_3_div_24_Template_i_click_5_listener","deleteAllConfirmDialog","batchesSelected","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_36_Template_i_click_0_listener","batch_r14","mergeAllConfirmDialog","ɵɵtextInterpolate3","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_input_click_2_listener","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_img_click_3_listener","displayBatchLocked","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_mat_card_header_click_4_listener","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_8_Template","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_i_click_30_listener","openConfirmDialog","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_36_Template","currentTime","locked","ɵɵpropertyInterpolate2","isCheckboxChecked","SplitterListComponent_mat_tab_3_div_27_span_2_Template","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template","batches","isLoading","SplitterListComponent_mat_tab_3_ng_template_1_Template","SplitterListComponent_mat_tab_3_Template_input_ngModelChange_9_listener","SplitterListComponent_mat_tab_3_Template_button_click_10_listener","loadBatches","SplitterListComponent_mat_tab_3_Template_mat_select_valueChange_18_listener","currentStatus","SplitterListComponent_mat_tab_3_Template_mat_select_selectionChange_18_listener","changeStatus","SplitterListComponent_mat_tab_3_mat_option_19_Template","SplitterListComponent_mat_tab_3_Template_i_click_20_listener","SplitterListComponent_mat_tab_3_Template_mat_paginator_page_23_listener","SplitterListComponent_mat_tab_3_div_24_Template","SplitterListComponent_mat_tab_3_div_26_Template","SplitterListComponent_mat_tab_3_div_27_Template","pageSizeOptions","_sanitizer","selectedTab","batchList","removeLockByUserId","batch","lockedBy","formLabel","customerName","documentsCount","thumbnail","sanitize","querySelectorAll","parentId","mergeAllBatches","batchId","checkboxList","getElementsByClassName","from","checkboxId","listOfBatchToMerge","listOfBatchFormId","uniqueFormId","ar","deleteAllBatches","deleteBatches","srcElement","textContent","deleteIds","ids","onTabChange","SplitterListComponent_Template","SplitterListComponent_Template_mat_tab_group_selectedTabChange_2_listener","SplitterListComponent_mat_tab_3_Template","debounceTime","delay","takeUntil","ReplaySubject","Subject","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_div_cdkDragStarted_0_listener","isBatchOnDrag","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_div_cdkDragEnded_0_listener","batch_r26","onBatchDrop","SplitterViewerComponent_mat_drawer_container_1_div_10_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_a_click_3_listener","changeBatch","currentBatch","zoomPage","SplitterViewerComponent_mat_drawer_container_1_div_28_Template_div_click_0_listener","SplitterViewerComponent_mat_drawer_container_1_div_28_Template_mat_slide_toggle_change_1_listener","changeInputMode","inputMode","field_r36","searching","getPlaceholderFromResultMask","resultMask","metadata_r46","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_mat_option_6_Template_mat_option_click_0_listener","_r54","ctx_r53","fillData","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_mat_option_6_span_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_mat_option_6_span_2_Template","metadataId","batchMetadataValues","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_mat_option_6_Template","getPlaceholderFromSearchMask","searchMask","filteredServerSideMetadata","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_2_Template_textarea_ngModelChange_6_listener","ctx_r56","setValueChange","option_r62","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_4_Template_mat_select_selectionChange_4_listener","_r65","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_4_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_2_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_3_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_4_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_ng_container_6_Template","field_r79","metadata_r89","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_Template_mat_option_click_0_listener","_r97","ctx_r96","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_span_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_span_2_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_Template","ctx_r80","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_2_Template_textarea_ngModelChange_4_listener","ctx_r99","option_r105","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_4_Template_mat_select_selectionChange_4_listener","_r108","ctx_r106","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_4_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_2_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_3_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_4_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_6_Template","page_r113","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_div_click_0_listener","_r121","selectPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_ngModelChange_3_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_click_3_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_change_3_listener","countSelectedPages","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_button_click_5_listener","pageIndex_r114","documentIndex_r71","rotatePage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_span_8_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_button_click_10_listener","getZoomPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_i_12_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_i_13_Template","pageIdInLoad","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_card_click_0_listener","_r129","document_r70","selectDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_expansion_panel_opened_8_listener","documentMetadataOpenState","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_expansion_panel_closed_8_listener","ctx_r131","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_button_click_12_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_span_17_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_button_click_18_listener","ctx_r133","deleteDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_26_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_div_click_30_listener","ctx_r134","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_div_cdkDropListDropped_30_listener","ctx_r135","dropPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template","fieldsCategories","addDocumentIdToDropList","selectedDocument","DropListDocumentsIds","document_r136","SplitterViewerComponent_mat_drawer_container_1_Template_mat_drawer_container_click_0_listener","_r138","ctx_r137","onScreenClick","SplitterViewerComponent_mat_drawer_container_1_span_8_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_cdkDropListDropped_9_listener","ctx_r139","dropBatch","SplitterViewerComponent_mat_drawer_container_1_div_10_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_12_listener","SplitterViewerComponent_mat_drawer_container_1_i_14_Template","SplitterViewerComponent_mat_drawer_container_1_i_15_Template","SplitterViewerComponent_mat_drawer_container_1_div_16_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_mouseenter_17_listener","ctx_r141","isMouseInDocumentList","SplitterViewerComponent_mat_drawer_container_1_Template_div_mouseleave_17_listener","SplitterViewerComponent_mat_drawer_container_1_div_18_Template","SplitterViewerComponent_mat_drawer_container_1_Template_mat_expansion_panel_opened_20_listener","ctx_r143","batchMetadataOpenState","SplitterViewerComponent_mat_drawer_container_1_Template_mat_expansion_panel_closed_20_listener","ctx_r144","SplitterViewerComponent_mat_drawer_container_1_div_28_Template","SplitterViewerComponent_mat_drawer_container_1_Template_mat_form_field_click_30_listener","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_selectionChange_33_listener","ctx_r146","onFormChange","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_ngModelChange_33_listener","ctx_r147","SplitterViewerComponent_mat_drawer_container_1_mat_option_34_Template","SplitterViewerComponent_mat_drawer_container_1_div_44_Template","SplitterViewerComponent_mat_drawer_container_1_div_46_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_47_listener","ctx_r148","downloadOriginalFile","SplitterViewerComponent_mat_drawer_container_1_i_49_Template","SplitterViewerComponent_mat_drawer_container_1_i_50_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_51_listener","ctx_r149","loadReferential","SplitterViewerComponent_mat_drawer_container_1_span_54_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_cdkDropListDropped_55_listener","ctx_r150","dropDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_66_listener","ctx_r151","deleteSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_69_listener","ctx_r152","setAllPagesTo","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_72_listener","ctx_r153","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_75_listener","ctx_r154","rotateSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_78_listener","ctx_r155","createDocument","SplitterViewerComponent_mat_drawer_container_1_i_80_Template","SplitterViewerComponent_mat_drawer_container_1_i_81_Template","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_ngModelChange_86_listener","ctx_r156","toolSelectedOption","SplitterViewerComponent_mat_drawer_container_1_mat_option_87_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_88_listener","sendSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_91_listener","ctx_r158","saveModifications","SplitterViewerComponent_mat_drawer_container_1_i_93_Template","SplitterViewerComponent_mat_drawer_container_1_i_94_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_96_listener","ctx_r159","cancelBatchModification","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_99_listener","ctx_r160","validateWithConfirmation","SplitterViewerComponent_mat_drawer_container_1_span_100_Template","SplitterViewerComponent_mat_drawer_container_1_span_101_Template","SplitterViewerComponent_mat_drawer_container_1_span_105_Template","validateLoading","timeLabels","getStatusLabel","showZoomPage","batchForm","downloadLoading","selectedPagesCount","addDocumentLoading","hasUnsavedChanges","saveInfosLoading","getOutputsLabels","beforeunloadHandler","returnValue","historyService","batchesLoading","documentsLoading","metadata","movedPages","deletedPagesIds","deletedDocumentsIds","defaultDoctype","rotation","previousFormId","maxSplitIndex","displayOrder","_onDestroy","loadSelectedBatch","updateBatchLock","batch_id","addHistory","clickedElement","zoomPageElement","contains","setValuesFromSavedMetadata","autocompletionValue","customFieldsValues","savedValue","loadBatchById","selectedPageId","loadStatus","loadFormFields","loadDocuments","loadDefaultDocType","loadOutputsData","loadReferentialOnView","statusId","statusFound","currentBatchIndex","findIndex","unshift","documentIndex","splitIndex","getFormForDocument","showZoomButton","checkBox","sourcePage","updateDocumentDisplayOrder","updatedDocuments","currentDisplayOrder","newDisplayOrder","sortDocumentsByDisplayOrder","documentDisplayOrder","newId","newDocumentId","newForm","addControl","controlSearch","pageId","maskVariables","maskVariable","fillDataValues","newValue","callOnSplitterView","loadReferentialWithConfirmation","refreshAfterLoad","metadataItem","complete","selectedMetadata","optionId","fieldCategory","validationMask","toBatchFormGroup","filteredMetadata","getFormFieldsValues","src","newWindow","write","setPageSelection","OrderDisplayDocumentValues","pagesCount","confirmMessage","deleteItemFromList","batchIdToMerge","mergeBatches","list","selectedPageCount","currentDegree","selectedDoc","selectedDocIndex","newPosition","validate","batchMetadata","_documents","_document","outputsLabels","HistoryService","SplitterViewerComponent_Query","ɵɵresolveWindow","SplitterViewerComponent_div_0_Template","SplitterViewerComponent_mat_drawer_container_1_Template","option_r5","currentData","selectedStatistic","StatisticsComponent_div_17_ngx_charts_bar_vertical_1_Template","StatisticsComponent_div_17_ngx_charts_pie_chart_2_Template","StatisticsComponent_div_17_ngx_charts_pie_grid_3_Template","StatisticsComponent_div_17_ngx_charts_line_chart_4_Template","selectedDiagramType","diagramTypes","getDocumentsUploadedVerifier","currentYear","submodules","historyCpt","months","month","_submodule","getDocumentsUploadedSplitter","getFormsProcessDocument","getUsersProcessDocument","changeStatistic","changeDiagramType","StatisticsComponent_Template","StatisticsComponent_div_2_Template","StatisticsComponent_Template_mat_select_selectionChange_10_listener","StatisticsComponent_mat_option_12_Template","StatisticsComponent_Template_mat_select_selectionChange_14_listener","StatisticsComponent_mat_option_16_Template","StatisticsComponent_div_17_Template","UploadComponent_mat_list_item_8_Template_mat_list_item_click_0_listener","workflow_r4","setWorkflow","UploadComponent_mat_list_item_8_span_3_Template","selectedWorkflow","selectedWorkflowTechnicalId","uploadFile","numberOFFiles","timeout","UploadComponent_Template","UploadComponent_mat_list_item_8_Template","UploadComponent_Template_button_click_10_listener","UploadComponent_div_12_Template","UploadComponent_Template_ngx_file_drag_drop_valueChanged_13_listener","UploadComponent_Template_button_click_16_listener","UploadComponent_span_19_Template","VerifierListComponent_button_16_Template_button_click_0_listener","resetSearchCustomer","VerifierListComponent_mat_tree_19_mat_tree_node_1_Template_mat_tree_node_click_0_listener","loadDocumentPerCustomer","node_r14","VerifierListComponent_mat_tree_19_mat_tree_node_2_span_6_Template","VerifierListComponent_mat_tree_19_mat_tree_node_3_span_5_Template","VerifierListComponent_mat_tree_19_mat_tree_node_1_Template","VerifierListComponent_mat_tree_19_mat_tree_node_2_Template","VerifierListComponent_mat_tree_19_mat_tree_node_3_Template","isLevelTwo","isNotLevelOne","isLevelOne","batch_r20","VerifierListComponent_mat_tab_24_div_24_Template_span_click_1_listener","selectOrUnselectAllDocuments","VerifierListComponent_mat_tab_24_div_24_Template_span_click_4_listener","documentToDeleteSelected","document_r35","facturx_level","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_17_Template_button_click_0_listener","customer_r45","changeCustomer","document_id","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_17_span_4_Template","customer_id","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_20_Template_button_click_0_listener","form_r51","changeDocumentForm","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_20_span_4_Template","subtitles_r57","VerifierListComponent_mat_tab_24_div_28_mat_card_2_Template_input_click_2_listener","checkCheckedDocuments","VerifierListComponent_mat_tab_24_div_28_mat_card_2_div_3_Template","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_17_Template","VerifierListComponent_mat_tab_24_div_28_mat_card_2_button_20_Template","VerifierListComponent_mat_tab_24_div_28_mat_card_2_Template_img_click_21_listener","displayDocumentLocked","locked_by","VerifierListComponent_mat_tab_24_div_28_mat_card_2_Template_mat_card_header_click_22_listener","ctx_r61","VerifierListComponent_mat_tab_24_div_28_mat_card_2_i_25_Template","VerifierListComponent_mat_tab_24_div_28_mat_card_2_div_32_Template","VerifierListComponent_mat_tab_24_div_28_mat_card_2_Template_i_click_34_listener","facturx","filteredForms","thumb","VerifierListComponent_mat_tab_24_div_28_mat_card_2_Template","VerifierListComponent_mat_tab_24_ng_template_1_Template","VerifierListComponent_mat_tab_24_Template_input_ngModelChange_8_listener","VerifierListComponent_mat_tab_24_Template_input_keyup_8_listener","searchDocument","VerifierListComponent_mat_tab_24_Template_mat_select_valueChange_14_listener","VerifierListComponent_mat_tab_24_Template_mat_select_selectionChange_14_listener","ctx_r67","VerifierListComponent_mat_tab_24_mat_option_15_Template","VerifierListComponent_mat_tab_24_Template_mat_select_valueChange_20_listener","ctx_r68","VerifierListComponent_mat_tab_24_Template_mat_select_selectionChange_20_listener","changeForm","VerifierListComponent_mat_tab_24_mat_option_21_Template","VerifierListComponent_mat_tab_24_Template_mat_paginator_page_23_listener","ctx_r70","VerifierListComponent_mat_tab_24_div_24_Template","VerifierListComponent_mat_tab_24_div_26_Template","VerifierListComponent_mat_tab_24_div_27_Template","VerifierListComponent_mat_tab_24_div_28_Template","allowedCustomers","allowedSuppliers","purchaseOrSale","TREE_DATA","expanded","customerFilterEmpty","customerFilter","customerFilterEnabled","_transformer","parent_id","purchase_or_sale","data_customers_by_id","datas","document_display_tmp","subtitle_data","customersPurchaseToKeep","customersSaleToKeep","_data","customer1","childExists","createChildren","customer2","filterCustomers","fillChildren","childName","childNameExists","tmpData","customerMatch","documentId","resetDocuments","deleteAllDocuments","batchDelete","VerifierListComponent_Template","VerifierListComponent_Template_i_click_4_listener","VerifierListComponent_Template_i_click_8_listener","VerifierListComponent_Template_input_keyup_15_listener","VerifierListComponent_button_16_Template","VerifierListComponent_div_17_Template","VerifierListComponent_div_18_Template","VerifierListComponent_mat_tree_19_Template","VerifierListComponent_Template_button_click_21_listener","_r71","VerifierListComponent_Template_mat_tab_group_selectedTabChange_23_listener","VerifierListComponent_mat_tab_24_Template","interval","VerifierViewerComponent_div_1_i_8_Template_i_click_0_listener","VerifierViewerComponent_div_1_i_8_Template","processErrorIcon","processErrorMessage","processInError","VerifierViewerComponent_div_2_mat_card_9_Template_mat_card_click_0_listener","doc_r8","loadDocument","VerifierViewerComponent_div_2_mat_card_9_Template","multiDocumentsData","VerifierViewerComponent_span_3_ng_container_4_Template_i_click_1_listener","VerifierViewerComponent_span_3_ng_container_4_Template_i_click_5_listener","imgSrc","form_r23","VerifierViewerComponent_span_3_div_6_div_1_Template_i_click_2_listener","hideVisuals","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_expansion_panel_expandedChange_6_listener","settingsOpen","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_select_valueChange_18_listener","currentFormFields","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_select_selectionChange_18_listener","VerifierViewerComponent_span_3_div_6_div_1_mat_option_19_Template","visualIsHide","formList","outputsLabel","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_1_Template_i_click_0_listener","editSupplier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_2_Template_i_click_0_listener","createSupplier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_2_Template","supplierExists","field_r42","category_r30","option_r58","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template_mat_form_field_click_0_listener","updateFilteredOption","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_mat_error_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template_mat_autocomplete_optionSelected_6_listener","getSupplierInfo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_mat_option_8_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_5_Template_span_click_0_listener","duplicateField","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_6_Template_span_click_0_listener","ctx_r74","removeDuplicateField","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_click_7_listener","_r81","saveInfo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_focusin_7_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_focusout_7_listener","saveData","checkVAT","checkSirenOrSiret","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_mat_error_8_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_i_9_Template","isChildField","showAutoLogo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_6_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_7_Template_span_click_0_listener","_r100","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template_textarea_focusin_8_listener","ctx_r104","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template_textarea_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_mat_error_9_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_6_Template_span_click_0_listener","_r119","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_7_Template_span_click_0_listener","_r123","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_focusin_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_dateChange_8_listener","targetElement","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_mat_error_12_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_i_13_Template","_r113","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_6_Template_span_click_0_listener","_r144","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_7_Template_span_click_0_listener","_r148","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_mat_option_1_Template_mat_option_onSelectionChange_0_listener","_r153","setAutocompleteDefaultValue","option_r151","res_id","alt_identifier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_mat_option_1_Template","autocomplete_values","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template_input_focusin_8_listener","_r157","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template_input_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_mat_option_12_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_5_Template_span_click_0_listener","_r172","ctx_r170","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_6_Template_span_click_0_listener","_r176","ctx_r174","option_r178","compte_lib","compte_num","ctx_r168","toHighlightAccounting","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_8_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_mat_option_11_Template","ctx_r161","_r167","accountingPlanEmpty","option_r181","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_mat_option_5_Template","ctx_r162","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_6_Template_span_click_0_listener","_r186","ctx_r184","duplicateLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_7_Template_span_click_0_listener","_r190","ctx_r188","removeDuplicateLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_7_Template","deleteLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_3_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_Template","getOnlyRawFooter","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_1_Template_button_click_0_listener","_r198","ctx_r197","validateForm","VerifierViewerComponent_span_3_div_6_div_5_button_1_span_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_1_i_2_Template","ctx_r193","loadingSubmit","VerifierViewerComponent_span_3_div_6_div_5_button_2_Template_button_click_0_listener","_r200","ctx_r199","refuseForm","ctx_r194","VerifierViewerComponent_span_3_div_6_div_5_button_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_2_Template","formEmpty","VerifierViewerComponent_span_3_div_6_div_1_Template","VerifierViewerComponent_span_3_div_6_div_2_Template","VerifierViewerComponent_span_3_div_6_ng_template_3_Template","VerifierViewerComponent_span_3_div_6_div_5_Template","VerifierViewerComponent_span_3_ng_container_4_Template","VerifierViewerComponent_span_3_div_5_Template","VerifierViewerComponent_span_3_div_6_Template","fromToken","deleteDataOnChangeForm","processMultiDocument","isOCRRunning","processDone","disableOCR","tokenINSEEError","oldVAT","oldSIRET","oldSIREN","currentFilename","tokenINSEE","accountingPlan","workflowSettings","imgArray","currentSupplier","lines","facturation","other","alphanum","alphanum_extended","alphanum_extended_with_accent","number_int","number_float","char","supplierNamecontrol","document_id_from_multi","retrieveDocumentIdAndStatusFromToken","reloadPageWaitingFinish","reference","tmp_thumb","getThumbByDocumentId","getDocumentById","updateDocument","getDocument","getWorkflow","full_jpg_filename","fromTokenFormId","generateOutputs","getAllForm","supplierFormFound","defaultFormFound","getForm","img_width","fillForm","convertAutocomplete","scrollTo","top","behavior","ms","Promise","resolve","reload","catch","supplier_element","_filter_data","resources","getFormFieldsById","getFormById","getOutputs","generateTokenInsee","register_date","patchValue","getFieldInfo","_this9","splittedFieldId","isNaN","blur","ocr_from_user","_this10","_this11","_this12","_this13","_this14","_this15","_this16","_this17","getPattern","_field","retrieveAccountingPlan","retrieveDefaultAccountingPlan","sortArray","_filter_accounting","replaceAll","_d","findChildren","field_data","_this18","_this19","_this20","visuals","splitted","scrollToElement","_img","updateFormValue","deleteData","currentHeight","innerHeight","getBoundingClientRect","deleteContainer","resizeHandler","backgroundColor","add","document_lang","thumbSize","currentTarget","registerDate","oldPosition","savePages","_this21","showNotif","oldData","getField","_this22","addressData","supplierData","_ref","supplier_data","_x","apply","arguments","showError","neededValue","listOfNewField","listOfNewFieldData","numberOfField","lineEmpty","newFieldId","parent_field","listOfFieldToDelete","splittedId","isInteger","address_id","address1","address2","city","postal_code","get_only_raw_footer","column","verify","isVAT","bal","charCodeAt","datePickerPattern","matDatepickerParse","siret_error","siren_error","vat_error","requiredPattern","autocomplete_id","arrayData","countLines","file_path","_this23","tmpFieldId","siretOrSiren","sizeSIREN","sizeSIRET","sizeVAT","hostBindings","VerifierViewerComponent_HostBindings","VerifierViewerComponent_Template","VerifierViewerComponent_div_0_Template","VerifierViewerComponent_div_1_Template","VerifierViewerComponent_div_2_Template","VerifierViewerComponent_span_3_Template","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","req","timeoutValue","timeoutValueNumeric","setCachedUrl","tokenNames","getTokenName","setTokenConfig","getTokenConfig","tokenName","userDataName","cachedUrlName","configName","user_token","providedIn","CodeEditorComponent_span_3_Template_button_click_1_listener","testScript","CodeEditorComponent_span_3_i_3_Template","testing","theme","codeModel","language","uri","contextmenu","lineNumbers","minimap","return","CodeEditorComponent_Template","CodeEditorComponent_span_3_Template","setConfig","atob","ConfirmDialogComponent_mat_dialog_content_4_Template_mat_select_valueChange_4_listener","selectData","ConfirmDialogComponent_mat_dialog_content_4_mat_option_5_Template","ConfirmDialogComponent_Template","ConfirmDialogComponent_mat_dialog_content_4_Template","ConfirmDialogComponent_button_8_Template","ConfirmDialogComponent_button_9_Template","specificClass","ErrorServiceComponent_Template","routeConfig","HintServiceComponent_Template","submodule","desc","predefined_user","previousUrl","getCurrentUrl","setItem","getItem","removeItem","dateAdapter","dateAdaptaterLocale","setLocale","updateLocale","monthsShort","weekdays","weekdaysMin","LT","LTS","L","l","LL","LLL","LLLL","week","dow","llll","locale","babel_lang","moment_lang","URLSearchParams","token_param","entries","hash","MAT_SNACK_BAR_DATA","CustomSnackbarComponent","CustomSnackbarComponent_Template","toastr","_duration","duration","getMessageDuration","timeOut","statusText","server","exception","minimumDuration","maxDuration","ToastrService","passwordError","verifyRules","passwordCheck","passwordCheckError","mismatch","checkPasswordConfirmation","items","it","userPrivileges","process_r5","endTime","ProcessWatcherComponent_mat_card_0_div_10_Template_div_click_0_listener","ProcessWatcherComponent_mat_card_0_div_10_i_9_Template","ProcessWatcherComponent_mat_card_0_div_10_i_10_Template","ProcessWatcherComponent_mat_card_0_div_10_i_11_Template","ProcessWatcherComponent_mat_card_0_div_10_i_12_Template","beginTime","age","ProcessWatcherComponent_mat_card_0_Template_span_click_4_listener","changeDisplayMode","minimizeDisplay","ProcessWatcherComponent_mat_card_0_div_8_Template","ProcessWatcherComponent_mat_card_0_div_9_Template","ProcessWatcherComponent_mat_card_0_div_10_Template","isFirstCallDone","getProcessRunning","ProcessWatcherComponent_div_1_Template_div_click_0_listener","ProcessWatcherComponent","displayedProcessData","authorizedUrl","getLastProcesses","error_message","ProcessWatcherComponent_Template","ProcessWatcherComponent_mat_card_0_Template","ProcessWatcherComponent_div_1_Template","CommonModule","settingsParent","onresize","innerWidth","setSelectedSettings","foundSettings","settingId","settingParentId","actions","getUserData","userTokenName"],"sourceRoot":"webpack:///","x_google_ignoreList":[180]}