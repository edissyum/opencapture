{"version":3,"file":"main.js","mappings":"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":["./src/frontend/app/accounts/customers/create/create-customer.component.ts","./src/frontend/app/accounts/customers/create/create-customer.component.html","./src/frontend/app/accounts/customers/list/customers-list.component.ts","./src/frontend/app/accounts/customers/list/customers-list.component.html","./src/frontend/app/accounts/customers/update/update-customer.component.ts","./src/frontend/app/accounts/customers/update/update-customer.component.html","./src/frontend/app/accounts/suppliers/create/create-supplier.component.ts","./src/frontend/app/accounts/suppliers/create/create-supplier.component.html","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.ts","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.html","./src/frontend/app/accounts/suppliers/update/update-supplier.component.ts","./src/frontend/app/accounts/suppliers/update/update-supplier.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/app/app-routing.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/app.module.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/env.ts","./src/frontend/app/errors/error-500/error-500.component.ts","./src/frontend/app/errors/error-500/error-500.component.html","./src/frontend/app/forgot-password/forgot-password.component.ts","./src/frontend/app/forgot-password/forgot-password.component.html","./src/frontend/app/history/history.component.ts","./src/frontend/app/history/history.component.html","./src/frontend/app/home/home.component.ts","./src/frontend/app/home/home.component.html","./src/frontend/app/loader.component.ts","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/app/middleware.component.ts","./src/frontend/app/monitoring/details/monitoring-details.component.ts","./src/frontend/app/monitoring/details/monitoring-details.component.html","./src/frontend/app/monitoring/list/monitoring-list.component.ts","./src/frontend/app/monitoring/list/monitoring-list.component.html","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/reset-password/reset-password.component.ts","./src/frontend/app/reset-password/reset-password.component.html","./src/frontend/app/settings/general/about-us/about-us.component.ts","./src/frontend/app/settings/general/about-us/about-us.component.html","./src/frontend/app/settings/general/configurations/configurations.component.ts","./src/frontend/app/settings/general/configurations/configurations.component.html","./src/frontend/app/settings/general/custom-fields/custom-fields.component.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.html","./src/frontend/app/settings/general/docservers/docservers.component.ts","./src/frontend/app/settings/general/docservers/docservers.component.html","./src/frontend/app/settings/general/login-methods/login-methods.component.ts","./src/frontend/app/settings/general/login-methods/login-methods.component.html","./src/frontend/app/settings/general/mailcollect/mailcollect.component.ts","./src/frontend/app/settings/general/mailcollect/mailcollect.component.html","./src/frontend/app/settings/general/regex/regex.component.ts","./src/frontend/app/settings/general/regex/regex.component.html","./src/frontend/app/settings/general/roles/create/create-role.component.ts","./src/frontend/app/settings/general/roles/create/create-role.component.html","./src/frontend/app/settings/general/roles/list/roles-list.component.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.html","./src/frontend/app/settings/general/roles/update/update-role.component.ts","./src/frontend/app/settings/general/roles/update/update-role.component.html","./src/frontend/app/settings/general/user-quota/user-quota.component.ts","./src/frontend/app/settings/general/user-quota/user-quota.component.html","./src/frontend/app/settings/general/users/create/create-user.component.ts","./src/frontend/app/settings/general/users/create/create-user.component.html","./src/frontend/app/settings/general/users/list/users-list.component.ts","./src/frontend/app/settings/general/users/list/users-list.component.html","./src/frontend/app/settings/general/users/update/update-user.component.ts","./src/frontend/app/settings/general/users/update/update-user.component.html","./src/frontend/app/settings/settings-menu.component.ts","./src/frontend/app/settings/settings-menu.component.html","./src/frontend/app/settings/settings-routing.module.ts","./src/frontend/app/settings/settings.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.html","./src/frontend/app/settings/splitter/doctypes/create-folder/create-folder-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/create-folder/create-folder-doctype.component.html","./src/frontend/app/settings/splitter/doctypes/create/create-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/create/create-doctype.component.html","./src/frontend/app/settings/splitter/doctypes/list/list-doctype.component.ts","./src/frontend/app/settings/splitter/doctypes/list/list-doctype.component.html","./src/frontend/app/settings/splitter/form/builder/form-builder.component.ts","./src/frontend/app/settings/splitter/form/builder/form-builder.component.html","./src/frontend/app/settings/splitter/form/list/form-list.component.ts","./src/frontend/app/settings/splitter/form/list/form-list.component.html","./src/frontend/app/settings/splitter/output/create/create-output.component.ts","./src/frontend/app/settings/splitter/output/create/create-output.component.html","./src/frontend/app/settings/splitter/output/list/output-list.component.ts","./src/frontend/app/settings/splitter/output/list/output-list.component.html","./src/frontend/app/settings/splitter/output/update/update-output.component.ts","./src/frontend/app/settings/splitter/output/update/update-output.component.html","./src/frontend/app/settings/splitter/separator/separator.component.ts","./src/frontend/app/settings/splitter/separator/separator.component.html","./src/frontend/app/settings/splitter/update-status/update-status.component.ts","./src/frontend/app/settings/splitter/update-status/update-status.component.html","./src/frontend/app/settings/splitter/workflow/builder/workflow-builder.component.ts","./src/frontend/app/settings/splitter/workflow/builder/workflow-builder.component.html","./src/frontend/app/settings/splitter/workflow/list/workflow-list.component.ts","./src/frontend/app/settings/splitter/workflow/list/workflow-list.component.html","./src/frontend/app/settings/verifier/ai-model/create/create-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/create/create-ai-model.component.html","./src/frontend/app/settings/verifier/ai-model/list/list-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/list/list-ai-model.component.html","./src/frontend/app/settings/verifier/ai-model/update/update-ai-model.component.ts","./src/frontend/app/settings/verifier/ai-model/update/update-ai-model.component.html","./src/frontend/app/settings/verifier/form/builder/form-builder.component.ts","./src/frontend/app/settings/verifier/form/builder/form-builder.component.html","./src/frontend/app/settings/verifier/form/list/form-list.component.ts","./src/frontend/app/settings/verifier/form/list/form-list.component.html","./src/frontend/app/settings/verifier/outputs/create/create-output.component.ts","./src/frontend/app/settings/verifier/outputs/create/create-output.component.html","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.ts","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.html","./src/frontend/app/settings/verifier/outputs/update/update-output.component.ts","./src/frontend/app/settings/verifier/outputs/update/update-output.component.html","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.html","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.ts","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.html","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.html","./src/frontend/app/settings/verifier/update-status/update-status.component.ts","./src/frontend/app/settings/verifier/update-status/update-status.component.html","./src/frontend/app/settings/verifier/various-settings/various-settings.component.ts","./src/frontend/app/settings/verifier/various-settings/various-settings.component.html","./src/frontend/app/settings/verifier/workflow/builder/workflow-builder.component.ts","./src/frontend/app/settings/verifier/workflow/builder/workflow-builder.component.html","./src/frontend/app/settings/verifier/workflow/list/workflow-list.component.ts","./src/frontend/app/settings/verifier/workflow/list/workflow-list.component.html","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.ts","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.html","./src/frontend/app/splitter/document-type/document-type.component.ts","./src/frontend/app/splitter/document-type/document-type.component.html","./src/frontend/app/splitter/list/splitter-list.component.ts","./src/frontend/app/splitter/list/splitter-list.component.html","./src/frontend/app/splitter/viewer/splitter-viewer.component.ts","./src/frontend/app/splitter/viewer/splitter-viewer.component.html","./src/frontend/app/statistics/statistics.component.ts","./src/frontend/app/statistics/statistics.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/app/verifier/list/verifier-list.component.ts","./src/frontend/app/verifier/list/verifier-list.component.html","./src/frontend/app/verifier/viewer/verifier-viewer.component.ts","./src/frontend/app/verifier/viewer/verifier-viewer.component.html","./src/frontend/main.ts","./src/frontend/services/HttpTimeout.service.ts","./src/frontend/services/auth.service.ts","./src/frontend/services/code-editor/code-editor.component.ts","./src/frontend/services/code-editor/code-editor.component.html","./src/frontend/services/config.service.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/services/error/error.service.ts","./src/frontend/services/error/error.service.html","./src/frontend/services/export-dialog/export-dialog.component.ts","./src/frontend/services/export-dialog/export-dialog.component.html","./src/frontend/services/has-privilege.service.ts","./src/frontend/services/hint/hint.service.ts","./src/frontend/services/hint/hint.service.html","./src/frontend/services/history.service.ts","./src/frontend/services/import-dialog/import-dialog.component.ts","./src/frontend/services/import-dialog/import-dialog.component.html","./src/frontend/services/last-url.service.ts","./src/frontend/services/locale.service.ts","./src/frontend/services/login-redirect.service.ts","./src/frontend/services/login-required.service.ts","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/password-verification.service.ts","./src/frontend/services/pipes/filter.pipe.ts","./src/frontend/services/privileges.service.ts","./src/frontend/services/process-watcher/process-watcher.component.ts","./src/frontend/services/process-watcher/process-watcher.component.html","./src/frontend/services/services.module.ts","./src/frontend/services/session-storage.service.ts","./src/frontend/services/settings.service.ts","./src/frontend/services/user.service.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../env\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-create-customer',\n    templateUrl: './create-customer.component.html'\n})\nexport class CreateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    customer        : any;\n    loading         : boolean       = true;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        }\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.loading = false;\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                if (element.control.value) {\n                    address[element.id] = element.control.value;\n                }\n            });\n            if (Object.keys(address).length !== 0) {\n                address['module'] = this.currentModule;\n                this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n                ).pipe(\n                    tap((data: any) => {\n                        if (data) {\n                            customer['address_id'] = data.id;\n                        }\n                        this.create_customer(customer);\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                customer['address_id'] = 0;\n                this.create_customer(customer);\n            }\n        }\n    }\n\n    create_customer(customer: any) {\n        this.http.post(environment['url'] + '/ws/accounts/customers/create', {'args': customer}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('ACCOUNTS.customer_created'));\n                this.router.navigate(['/accounts/customers/list']).then();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.router.navigate(['/accounts/customers'])\" [matTooltip]=\"'ACCOUNTS.back_to_customers_list' | translate\">\n                    <i class=\"fa-solid fa-arrow-left fa-md\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"w-full text-center mt-4\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.customer_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-3 gap-2 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.address_informations' | translate }}\n                </h3>\n            </div>\n\n            <form class=\"grid grid-cols-3 gap-2 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n            </form>\n            <div class=\"button text-center\">\n                <button class=\"valid_button\" type=\"submit\" mat-button (click)=\"onSubmit()\">\n                    {{ 'ACCOUNTS.create_customer' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../services/session-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.scss']\n})\nexport class CustomersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'name', 'company_number', 'vat_number', 'siret', 'siren', 'module', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    allCustomers    : any         = [];\n    customers       : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/customers') || lastUrl === '/') {\n            if (this.sessionStorageService.get('customersPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('customersPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('customersPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allCustomers = data.customers;\n                this.loadCustomers();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.http.get(environment['url'] + '/ws/accounts/customers/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                if (this.customers.length !== 0) {\n                    this.total = data.customers[0].total;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchCustomer(event: any) {\n        this.search = event.target.value;\n        this.loadCustomers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.sessionStorageService.save('customersPageIndex', event.pageIndex);\n        this.loadCustomers();\n    }\n\n    deleteConfirmDialog(customerId: number, customer: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_customer', {\"customer\": customer}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteCustomer(customerId);\n            }\n        });\n    }\n\n    deleteCustomer(customerId: number) {\n        if (customerId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/customers/delete/' + customerId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allCustomers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.customers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.customers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'company_number': return this.compare(a.company_number, b.company_number, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                default: return 0;\n            }\n        });\n        this.customers = this.customers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_customer' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchCustomer($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <button routerLink=\"/accounts/customers/create\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\" [matTooltip]=\"'ACCOUNTS.create_customer' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"customers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.customer_name' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"company_number\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.company_number' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.company_number }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vat_number\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.vat_number' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.vat_number }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"siret\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siret' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.siret }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"siren\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siren' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.siren }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"module\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.module }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/accounts/customers/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../../../env\";\nimport { FormControl } from \"@angular/forms\";\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { COUNTRIES_DB_FR, Country } from \"@angular-material-extensions/select-country\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-customer.component.html'\n})\nexport class UpdateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    customerId      : any;\n    addressId       : any;\n    customer        : any;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        }\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.customerId = this.route.snapshot.params['id'];\n        this.http.get(environment['url'] + '/ws/accounts/customers/getById/' + this.customerId, {headers: this.authService.headers}).pipe(\n            tap((customer: any) => {\n                this.customer = customer;\n                for (const field in this.customer) {\n                    if (field === 'module') {\n                        this.currentModule = this.customer[field];\n                        this.updateRequired({control: {value: this.currentModule}});\n                    }\n                }\n                for (const field in this.customer) {\n                    if (customer.hasOwnProperty(field)) {\n                        this.customerForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.customer[field]);\n                            } else if (field === 'address_id') {\n                                this.addressId = this.customer[field];\n                                if (this.addressId) {\n                                    this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                        tap((address: any) => {\n                                            for (const field in address) {\n                                                if (address.hasOwnProperty(field)) {\n                                                    this.addressForm.forEach(element => {\n                                                        if (element.id === field) {\n                                                            if (field === 'country') {\n                                                                COUNTRIES_DB_FR.forEach((country: Country) => {\n                                                                    if (country.name === address[field]) {\n                                                                        this.defaultValue = country;\n                                                                    }\n                                                                });\n                                                            }\n                                                            element.control.setValue(address[field]);\n                                                        }\n                                                    });\n                                                }\n                                            }\n                                        }),\n                                        finalize(() => this.loading = false),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                } else {\n                                    this.addressId = 0;\n                                    this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                    ).pipe(\n                                        finalize(() => this.loading = false),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                if (element.control.value) {\n                    address[element.id] = element.control.value;\n                }\n            });\n\n            if (this.addressId === 0 && Object.keys(address).length !== 0) {\n                this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n                ).pipe(\n                    tap((data: any) => {\n                        if (data) {\n                            customer['address_id'] = data.id;\n                            this.update_customer(customer);\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else if (this.addressId !== 0 && Object.keys(address).length !== 0) {\n                this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.update_customer(customer);\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.update_customer(customer);\n            }\n        }\n    }\n\n    update_customer(customer: any) {\n        this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': customer}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('ACCOUNTS.customer_updated'));\n                this.router.navigate(['/accounts/customers/list']).then();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.router.navigate(['/accounts/customers'])\" [matTooltip]=\"'ACCOUNTS.back_to_customers_list' | translate\">\n                    <i class=\"fa-solid fa-arrow-left fa-md\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.customer\">\n                    {{ this.customer['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"w-full text-center mt-4\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.customer_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-3 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                    [required]=\"field['required']\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.address_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-3 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n            </form>\n            <div class=\"button text-center\">\n                <button class=\"valid_button\" type=\"submit\" mat-button (click)=\"onSubmit()\">\n                    {{ 'ACCOUNTS.update_customer' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Country } from '@angular-material-extensions/select-country';\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-supplier.component.html'\n})\nexport class CreateSupplierComponent implements OnInit {\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean   = true;\n    createLoading   : boolean   = false;\n    supplierForm    : any[]     = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(true),\n            required: true\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^(EU|SI|HU|D(K|E)|PL|CHE|(F|H)R|B(E|G)(0)?)[0-9A-Za-z]{2}[0-9]{6,9}$')),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[0-9]{14}$')),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[0-9]{9}$')),\n            required: false\n        },\n        {\n            id: 'duns',\n            label: marker('ACCOUNTS.duns'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^([0-9]{9})|([0-9]{2}-[0-9]{3}-[0-9]{4})$')),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[A-Za-z]{2}(?:[ ]?[0-9]){18,25}$')),\n            required: false\n        },\n        {\n            id: 'bic',\n            label: marker('ACCOUNTS.bic'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[a-zA-Z0-9]{4}[A-Z]{2}[a-zA-Z0-9]{2}(?:[a-zA-Z0-9]{3})?$')),\n            required: false\n        },\n        {\n            id: 'rccm',\n            label: marker('ACCOUNTS.rccm'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[aA-zZ]{2}-[aA-zZ]{3}-[0-9]{2}-[0-9]{4}-[aA-zZ]{1}[0-9]{2}-[0-9]{5}$')),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            hint: marker('ACCOUNTS.only_one_email'),\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: []\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        }\n    ];\n    addressForm     : any[]     = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true\n        }\n    ];\n    defaultValue    : Country   = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n    supplier: any;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const forms = data.forms;\n                for (const cpt in forms) {\n                    if (forms.hasOwnProperty(cpt)) {\n                        this.supplierForm.forEach(element => {\n                            if (element.id === 'form_id') {\n                                element.values = forms;\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                    this.loading = false;\n                }\n            }\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.createLoading = true;\n\n            this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    supplier['address_id'] = data.id;\n                    this.http.post(environment['url'] + '/ws/accounts/suppliers/create', {'args': supplier}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                            this.router.navigate(['/accounts/suppliers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.createLoading = false;\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.createLoading = false;\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n            if (element.control.errors) {\n                if (element.control.errors.email) {\n                    error = this.translate.instant('ACCOUNTS.email_format_error');\n                } else if (element.control.errors.pattern) {\n                    error = this.translate.instant('ACCOUNTS.pattern_error');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.router.navigate(['/accounts/suppliers'])\" [matTooltip]=\"'ACCOUNTS.back_to_suppliers_list' | translate\">\n                    <i class=\"fa-solid fa-arrow-left fa-md\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center mt-10\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field['control']\">\n                        {{ field.label | translate }}\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.supplier_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-5 gap-2 gap-y-5 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.address_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-3 gap-2 gap-y-5 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\" [value]=\"defaultValue\"\n                                        [label]=\"field.label | translate\" (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n            </form>\n            <div class=\"button text-center\">\n                <button class=\"valid_button\" type=\"submit\" mat-button [disabled]=\"this.createLoading\" (click)=\"onSubmit()\">\n                    <span *ngIf=\"!this.createLoading\">\n                        {{ 'ACCOUNTS.create_supplier' | translate }}\n                    </span>\n                    <i *ngIf=\"this.createLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../services/session-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {ImportDialogComponent} from \"../../../../services/import-dialog/import-dialog.component\";\n\n@Component({\n    selector: 'suppliers-list',\n    templateUrl: './suppliers-list.component.html',\n    styleUrls: ['./suppliers-list.component.scss']\n})\nexport class SuppliersListComponent implements OnInit {\n    columnsToDisplay : string[]    = ['id', 'name', 'email', 'vat_number', 'siret', 'siren', 'iban', 'form_label', 'actions'];\n    headers          : HttpHeaders = this.authService.headers;\n    loading          : boolean     = true;\n    allSuppliers     : any         = [];\n    suppliers        : any         = [];\n    pageSize         : number      = 10;\n    search           : string      = '';\n    pageIndex        : number      = 0;\n    total            : number      = 0;\n    offset           : number      = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/suppliers') || lastUrl === '/') {\n            if (this.sessionStorageService.get('suppliersPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('suppliersPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('suppliersPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSuppliers = data.suppliers;\n                this.loadSuppliers();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadSuppliers() {\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name&limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = data.suppliers;\n                if (this.suppliers.length !== 0) {\n                    this.total = data.suppliers[0].total;\n                }\n                this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        for (const cpt in this.suppliers) {\n                            for (const form of data.forms) {\n                                if (form.id === this.suppliers[cpt].form_id) {\n                                    this.suppliers[cpt].form_label = form.label;\n                                }\n                            }\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchSupplier(event: any) {\n        this.search = event.target.value;\n        this.loadSuppliers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.sessionStorageService.save('suppliersPageIndex', event.pageIndex);\n        this.loadSuppliers();\n    }\n\n    deleteConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplier(supplierId);\n            }\n        });\n    }\n\n    deletePositionsConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier_positions', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplierPositions(supplierId);\n            }\n        });\n    }\n\n    skipAutoValidateConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_skip_auto_validate', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.skipAutoValidate(supplierId);\n            }\n        });\n    }\n\n    deleteSupplier(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.loading = true;\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/delete/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loading = false;\n                    this.loadSuppliers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    skipAutoValidate(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.loading = true;\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/skipAutoValidate/' + supplierId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loading = false;\n                    this.notify.success(this.translate.instant('ACCOUNTS.skip_validated_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deleteSupplierPositions(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.loading = true;\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/deletePositions/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loading = false;\n                    this.notify.success(this.translate.instant('ACCOUNTS.positions_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allSuppliers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.suppliers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.suppliers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                case 'iban': return this.compare(a.iban, b.iban, isAsc);\n                default: return 0;\n            }\n        });\n        this.suppliers = this.suppliers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    getReferenceFile() {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/accounts/supplier/fillReferenceFile', {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.http.get(environment['url'] + '/ws/accounts/supplier/getReferenceFile', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        const mimeType = data.mimetype;\n                        const referenceFile = 'data:' + mimeType + ';base64, ' + data.file;\n                        const link = document.createElement(\"a\");\n                        link.href = referenceFile;\n                        link.download = data.filename;\n                        link.click();\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    importSuppliers(event: any) {\n        const columns = ['name', 'vat_number', 'siret', 'siren', 'duns', 'bic', 'rccm', 'iban', 'email', 'address1',\n            'address2', 'postal_code', 'city', 'country', 'footer_coherence', 'document_lang'];\n        const dialogRef = this.dialog.open(ImportDialogComponent, {\n            data: {\n                rows: [],\n                extension: 'CSV',\n                skipHeader: true,\n                allowColumnsSelection : true,\n                title : this.translate.instant('ACCOUNTS.import_suppliers'),\n                availableColumns : columns,\n                selectedColumns : columns\n            },\n            width: \"1200px\"\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const formData: FormData = new FormData();\n                for (const file of result.fileControl.value) {\n                    if (result.fileControl.status === 'VALID') {\n                        formData.append(file['name'], file);\n                    } else {\n                        this.notify.handleErrors(this.translate.instant('DATA-IMPORT.extension_unauthorized', {\"extension\": 'CSV'}));\n                        return;\n                    }\n                }\n\n                formData.set('selectedColumns', result.selectedColumns);\n                formData.set('skipHeader', result.skipHeader);\n\n                this.http.post(environment['url'] + '/ws/accounts/supplier/importSuppliers', formData, {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ACCOUNTS.suppliers_referencial_loaded'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-x-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 py-1.5 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_supplier' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchSupplier($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('import_suppliers')\"\n                        [matTooltip]=\"'ACCOUNTS.import_suppliers' | translate\" (click)=\"importSuppliers($event);\"\n                        [disabled]=\"this.loading\" class=\"ml-4\">\n                    <i class=\"fa-solid fa-file-import text-2xl ml-2\"></i>\n                </button>\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('export_suppliers')\"\n                        (click)=\"getReferenceFile()\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.export_suppliers' | translate\" [disabled]=\"this.loading\">\n                    <i class=\"fa-solid fa-file-export text-2xl ml-2\"></i>\n                </button>\n                <button routerLink=\"/accounts/suppliers/create\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.create_supplier' | translate\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <mat-table matSort [dataSource]=\"suppliers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'HEADER.id' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.id }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.supplier_name' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'FORMATS.email' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vat_number\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.vat_number' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.vat_number }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"siret\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siret' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.siret }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"siren\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siren' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.siren }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"iban\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.iban' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.iban }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"form_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.form' | translate }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{ element.form_label }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation();deletePositionsConfirmDialog(element.id, element.name)\"\n                                matTooltip=\"{{ 'GLOBAL.delete_supplier_positions' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-circle-xmark text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation();skipAutoValidateConfirmDialog(element.id, element.name)\"\n                                matTooltip=\"{{ 'GLOBAL.skip_auto_validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-forward text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/accounts/suppliers/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300 z-20\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { COUNTRIES_DB_FR, Country } from \"@angular-material-extensions/select-country\";\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-supplier.component.html'\n})\nexport class UpdateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplierId: any;\n    addressId: any;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^(EU|SI|HU|D(K|E)|PL|CHE|(F|H)R|B(E|G)(0)?)[0-9A-Za-z]{2}[0-9]{6,9}$')),\n            required: true\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[0-9]{14}$')),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[0-9]{9}$')),\n            required: false\n        },\n        {\n            id: 'duns',\n            label: marker('ACCOUNTS.duns'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^([0-9]{9})|([0-9]{2}-[0-9]{3}-[0-9]{4})$')),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[A-Za-z]{2}(?:[ ]?[0-9]){18,25}$')),\n            required: false\n        },\n        {\n            id: 'bic',\n            label: marker('ACCOUNTS.bic'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[a-zA-Z0-9]{4}[A-Z]{2}[a-zA-Z0-9]{2}(?:[a-zA-Z0-9]{3})?$')),\n            required: false\n        },\n        {\n            id: 'rccm',\n            label: marker('ACCOUNTS.rccm'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern('^[aA-zZ]{2}-[aA-zZ]{3}-[0-9]{2}-[0-9]{4}-[aA-zZ]{1}[0-9]{2}-[0-9]{5}$')),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values:[]\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        }\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true\n        }\n    ];\n\n    defaultValue: Country = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.supplierId = this.route.snapshot.params['id'];\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban' || element.id === 'duns' || element.id === 'bic') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                }\n            }\n        });\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.http.get(environment['url'] + '/ws/accounts/suppliers/getById/' + this.supplierId, {headers: this.authService.headers}).pipe(\n                    tap((supplier: any) => {\n                        this.supplier = supplier;\n                        for (const field in this.supplier) {\n                            if (supplier.hasOwnProperty(field)) {\n                                this.supplierForm.forEach(element => {\n                                    if (element.id === field) {\n                                        if (element.id === 'get_only_raw_footer') {\n                                            element.control.setValue(!this.supplier[field]);\n                                        } else {\n                                            element.control.setValue(this.supplier[field]);\n                                        }\n                                        if (element.id === 'form_id') {\n                                            element.values = forms.forms;\n                                        }\n                                    } else if (field === 'address_id') {\n                                        this.addressId = this.supplier[field];\n                                        if (this.addressId) {\n                                            this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                                tap((address: any) => {\n                                                    for (const adr_field in address) {\n                                                        if (address.hasOwnProperty(adr_field)) {\n                                                            this.addressForm.forEach(adr_element => {\n                                                                if (adr_element.id === adr_field) {\n                                                                    if (adr_field === 'country') {\n                                                                        COUNTRIES_DB_FR.forEach((country: Country) => {\n                                                                            if (country.name === address[adr_field]) {\n                                                                                this.defaultValue = country;\n                                                                            }\n                                                                        });\n                                                                    }\n                                                                    adr_element.control.setValue(address[adr_field]);\n                                                                }\n                                                            });\n                                                        }\n                                                    }\n                                                }),\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        } else {\n                                            this.http.post(environment['url'] + '/ws/accounts/addresses/create',\n                                                {'args': {\n                                                        'address1': '',\n                                                        'address2': '',\n                                                        'postal_code': '',\n                                                        'city': '',\n                                                        'country': ''\n                                                    }\n                                                }, {headers: this.authService.headers},\n                                            ).pipe(\n                                                tap((data: any) => {\n                                                    this.addressId = data.id;\n                                                    this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                                    ).pipe(\n                                                        finalize(() => this.loading = false),\n                                                        catchError((err: any) => {\n                                                            console.debug(err);\n                                                            this.notify.handleErrors(err);\n                                                            return of(false);\n                                                        })\n                                                    ).subscribe();\n                                                }),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country' && country) {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': supplier}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n                    this.router.navigate(['/accounts/suppliers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n                if (element.control.errors) {\n                     if (element.control.errors.email) {\n                         error = this.translate.instant('ACCOUNTS.email_format_error');\n                     }\n                     else if (element.control.errors.pattern) {\n                         error = this.translate.instant('ACCOUNTS.pattern_error');\n                     }\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"relative z-30 h-[3.75rem] flex justify-between items-center px-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.router.navigate(['/accounts/suppliers'])\" [matTooltip]=\"'ACCOUNTS.back_to_suppliers_list' | translate\">\n                    <i class=\"fa-solid fa-arrow-left fa-md\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.supplier\">\n                    {{ this.supplier['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center m-10\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field['control']\">\n                        {{ field.label | translate }}\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.supplier_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-5 gap-2 gap-y-5 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <hr class=\"border-green-400 relative my-5 w-1/2 m-auto\">\n            <div class=\"w-full text-center\">\n                <h3 class=\"text-gray-900\">\n                    {{ 'ACCOUNTS.address_informations' | translate }}\n                </h3>\n            </div>\n            <form class=\"grid grid-cols-3 gap-2 gap-y-5 mx-10 text-center\">\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\" [value]=\"defaultValue\"\n                                        [label]=\"field.label | translate\" (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n            </form>\n            <div class=\"button text-center\">\n                <button class=\"valid_button\" type=\"submit\" mat-button (click)=\"onSubmit()\">\n                    {{ 'ACCOUNTS.update_supplier' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule, DateAdapter, MatRippleModule } from '@angular/material/core';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule\n    ],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]},\n        {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS}\n    ]\n})\nexport class AppMaterialModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { HistoryComponent } from \"./history/history.component\";\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\nimport { Error500Component } from \"./errors/error-500/error-500.component\";\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterListComponent } from \"./splitter/list/splitter-list.component\";\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SplitterViewerComponent } from \"./splitter/viewer/splitter-viewer.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { MonitoringListComponent } from \"./monitoring/list/monitoring-list.component\";\nimport { CustomersListComponent } from \"./accounts/customers/list/customers-list.component\";\nimport { SuppliersListComponent } from \"./accounts/suppliers/list/suppliers-list.component\";\nimport { MonitoringDetailsComponent } from \"./monitoring/details/monitoring-details.component\";\nimport { UpdateSupplierComponent } from \"./accounts/suppliers/update/update-supplier.component\";\nimport { CreateSupplierComponent } from \"./accounts/suppliers/create/create-supplier.component\";\nimport { UpdateCustomerComponent } from \"./accounts/customers/update/update-customer.component\";\nimport { CreateCustomerComponent } from \"./accounts/customers/create/create-customer.component\";\n\nconst routes: Routes = [\n    { path: '500', component: Error500Component, data: { showMenu: false }},\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: 'GLOBAL.home' }, canActivate: [LoginRequiredService] },\n    { path: 'login', component: LoginComponent, data: { title: 'GLOBAL.login', showMenu: false }, canActivate: [LoginRedirectService] },\n    { path: 'forgotPassword', component: ForgotPasswordComponent, data: { title: marker('GLOBAL.forgot-password'), showMenu: false}},\n    { path: 'resetPassword', component: ResetPasswordComponent, data: { title: marker('GLOBAL.reset-password'), showMenu: false}},\n    { path: 'logout', component: LogoutComponent, canActivate: [LoginRequiredService] },\n    { path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService] },\n    {\n        path: 'splitter/viewer/:currentTime/:id', component: SplitterViewerComponent,\n        data: { title: marker('SPLITTER.viewer'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'splitter/list', component: SplitterListComponent,\n        data: { title: marker('SPLITTER.list'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full' },\n    {\n        path: 'verifier/viewer_token/:token', component: VerifierViewerComponent,\n        data: { title: marker('VERIFIER.viewer'), showMenu: false }\n    },\n    {\n        path: 'verifier/viewer/:id', component: VerifierViewerComponent,\n        data: { title: marker('VERIFIER.viewer'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'verifier/list', component: VerifierListComponent,\n        data: { title: marker('VERIFIER.list'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full' },\n\n    {\n        path: 'upload', component: UploadComponent,\n        data: { title: marker('GLOBAL.upload'), privileges: ['upload'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'history', component: HistoryComponent,\n        data: { title: marker('GLOBAL.history'), privileges: ['history'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'statistics', component: StatisticsComponent,\n        data: { title: marker('GLOBAL.statistics'), privileges: ['statistics'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'monitoring', component: MonitoringListComponent,\n        data: { title: marker('GLOBAL.monitoring'), privileges: ['monitoring'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'monitoring/:id', component: MonitoringDetailsComponent,\n        data: { title: marker('GLOBAL.monitoring_detail_process'), privileges: ['monitoring'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'accounts/suppliers', redirectTo: 'accounts/suppliers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/suppliers/list', component: SuppliersListComponent,\n        data: { title: marker('ACCOUNTS.suppliers_list'), privileges: ['suppliers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/update/:id', component: UpdateSupplierComponent,\n        data: { title: marker('ACCOUNTS.update_supplier'), privileges: ['update_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/create', component: CreateSupplierComponent,\n        data: { title: marker('ACCOUNTS.create_supplier'), privileges: ['create_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n    { path: 'accounts/customers', redirectTo: 'accounts/customers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/customers/list', component: CustomersListComponent,\n        data: { title: marker('ACCOUNTS.customers_list'), privileges: ['customers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/update/:id', component: UpdateCustomerComponent,\n        data: { title: marker('ACCOUNTS.update_customer'), privileges: ['update_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/create', component: CreateCustomerComponent,\n        data: { title: marker('ACCOUNTS.create_customer'), privileges: ['create_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: '404', component: NotFoundComponent, data: {showMenu: false} }, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    { path: '**', redirectTo: '404' } // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"./env\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocaleService } from \"../services/locale.service\";\nimport { catchError, filter, map, tap } from 'rxjs/operators';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { SessionStorageService } from \"../services/session-storage.service\";\nimport { DomSanitizer, Title } from '@angular/platform-browser';\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport {AfterContentChecked, ChangeDetectorRef, Component, OnInit, SecurityContext} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit, AfterContentChecked {\n    imageMobile : string  = '';\n    image       : any     = '';\n    loading     : boolean = true;\n    showMenu    : boolean = true;\n    title       : string  = 'Open-Capture';\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private titleService: Title,\n        private sanitizer: DomSanitizer,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n        private activatedRoute: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                this.showMenu = true;\n                let child = this.activatedRoute.firstChild;\n                let childImage = 'assets/imgs/login_image.png';\n                let childImageMobile = 'assets/imgs/Open-Capture_Verifier.svg';\n                let splitterOrVerifier;\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n                    if (this.router.url !== '/home' && !this.router.url.includes('settings')) {\n                        splitterOrVerifier = this.sessionStorageService.get('splitter_or_verifier');\n                        if (splitterOrVerifier !== undefined) {\n                            if (splitterOrVerifier === 'splitter') {\n                                childImage = 'assets/imgs/logo_splitter.png';\n                                childImageMobile = 'assets/imgs/Open-Capture_Splitter.png';\n                            } else {\n                                childImage = 'assets/imgs/logo_verifier.png';\n                            }\n                        }\n                    }\n                    if (child.snapshot.data['showMenu'] === false) {\n                        this.showMenu = false;\n                    }\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], childImage, childImageMobile, splitterOrVerifier];\n                    }\n                }\n                return [appTitle, childImage, childImageMobile, splitterOrVerifier];\n            })\n        ).subscribe((data: any) => {\n            const ttl = data[0];\n            this.image = data[1];\n            this.imageMobile = data[2];\n            const splitterOrVerifier = data[3];\n            if (!splitterOrVerifier) {\n                const b64Content = this.sessionStorageService.get('loginImageB64');\n                if (!b64Content) {\n                    this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                        tap((data: any) => {\n                            this.sessionStorageService.save('loginImageB64', data);\n                            this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + data);\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + b64Content);\n                }\n            }\n            if (this.localeService.currentLang === undefined) {\n                this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                    tap((data: any) => {\n                        this.translate.use(data.lang);\n                        this.translate.get(ttl).subscribe((data:any)=> {\n                            this.titleService.setTitle(data + ' - ' + this.title);\n                        });\n                        this.loading = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.translate.get(ttl).subscribe((data:any)=> {\n                    this.titleService.setTitle(data + ' - ' + this.title);\n                });\n                this.loading = false;\n            }\n        });\n    }\n\n    ngAfterContentChecked(): void {\n        this.changeDetector.detectChanges();\n    }\n}\n","<app-process-watcher></app-process-watcher>\n<app-menu [image]=\"this.image\" [imageMobile]=\"this.imageMobile\" *ngIf=\"this.showMenu && loading === this.loading\"></app-menu>\n\n<router-outlet></router-outlet>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsRoutingModule } from './settings/settings-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/splitter-viewer.component';\nimport { SplitterListComponent } from './splitter/list/splitter-list.component';\n\nimport { FilterPipe } from '../services/pipes/filter.pipe';\nimport { NgxFileDragDropModule } from 'ngx-file-drag-drop';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { NgsgModule } from 'ng-sortgrid';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { DocumentTypeFactoryComponent } from './splitter/document-type-factory/document-type-factory.component';\nimport { DocumentTypeComponent } from './splitter/document-type/document-type.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { UsersListComponent } from './settings/general/users/list/users-list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { CustomMatPaginatorIntl } from './custom-mat-paginator';\nimport { LastUrlService } from '../services/last-url.service';\nimport { AboutUsComponent } from './settings/general/about-us/about-us.component';\nimport { CreateUserComponent } from './settings/general/users/create/create-user.component';\nimport { UpdateUserComponent } from './settings/general/users/update/update-user.component';\nimport { RolesListComponent } from './settings/general/roles/list/roles-list.component';\nimport { UpdateRoleComponent } from './settings/general/roles/update/update-role.component';\nimport { CreateRoleComponent } from './settings/general/roles/create/create-role.component';\nimport { LoginMethodsComponent } from './settings/general/login-methods/login-methods.component';\nimport { LoaderComponent } from './loader.component';\nimport { CustomFieldsComponent } from './settings/general/custom-fields/custom-fields.component';\nimport { FormListComponent } from './settings/verifier/form/list/form-list.component';\nimport { FormBuilderComponent } from './settings/verifier/form/builder/form-builder.component';\nimport { SuppliersListComponent } from './accounts/suppliers/list/suppliers-list.component';\nimport { UpdateSupplierComponent } from './accounts/suppliers/update/update-supplier.component';\nimport { CreateSupplierComponent } from './accounts/suppliers/create/create-supplier.component';\nimport { CustomersListComponent } from './accounts/customers/list/customers-list.component';\nimport { UpdateCustomerComponent } from './accounts/customers/update/update-customer.component';\nimport { CreateCustomerComponent } from './accounts/customers/create/create-customer.component';\nimport { CreateOutputComponent } from './settings/verifier/outputs/create/create-output.component';\nimport { OutputsListComponent } from './settings/verifier/outputs/list/outputs-list.component';\nimport { HighlightPipe, UpdateOutputComponent } from './settings/verifier/outputs/update/update-output.component';\nimport { UpdatePositionsMaskComponent } from './settings/verifier/positions-mask/update/update-positions-mask.component';\nimport { PositionsMaskListComponent } from './settings/verifier/positions-mask/list/positions-mask-list.component';\nimport { CreatePositionsMaskComponent } from './settings/verifier/positions-mask/create/create-positions-mask.component';\nimport { VerifierStatusUpdateComponent } from './settings/verifier/update-status/update-status.component';\nimport { HistoryComponent } from './history/history.component';\nimport { SeparatorComponent } from './settings/splitter/separator/separator.component';\nimport { SplitterUpdateOutputComponent } from './settings/splitter/output/update/update-output.component';\nimport { SplitterCreateOutputComponent } from './settings/splitter/output/create/create-output.component';\nimport { SplitterOutputListComponent } from './settings/splitter/output/list/output-list.component';\nimport { SplitterFormBuilderComponent } from './settings/splitter/form/builder/form-builder.component';\nimport { SplitterUpdateStatusComponent } from './settings/splitter/update-status/update-status.component';\nimport { SplitterFormListComponent } from './settings/splitter/form/list/form-list.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { CreateDoctypeComponent } from './settings/splitter/doctypes/create/create-doctype.component';\nimport { ListDoctypeComponent } from './settings/splitter/doctypes/list/list-doctype.component';\nimport { CreateFolderDoctypeComponent } from './settings/splitter/doctypes/create-folder/create-folder-doctype.component';\nimport { ListVerifierAiModelComponent } from \"./settings/verifier/ai-model/list/list-ai-model.component\";\nimport { CreateVerifierAiModelComponent } from \"./settings/verifier/ai-model/create/create-ai-model.component\";\nimport { UpdateVerifierAiModelComponent } from \"./settings/verifier/ai-model/update/update-ai-model.component\";\nimport { ListSplitterAiModelComponent } from \"./settings/splitter/ai-model/list/list-ai-model.component\";\nimport { CreateSplitterAiModelComponent } from \"./settings/splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateSplitterAiModelComponent } from \"./settings/splitter/ai-model/update/update-ai-model.component\";\nimport { ConfigurationsComponent } from './settings/general/configurations/configurations.component';\nimport { DocserversComponent } from './settings/general/docservers/docservers.component';\nimport { RegexComponent } from './settings/general/regex/regex.component';\nimport { HintServiceComponent } from \"../services/hint/hint.service\";\nimport { ErrorServiceComponent } from \"../services/error/error.service\";\nimport { Error500Component } from './errors/error-500/error-500.component';\nimport { MatSelectCountryModule } from \"@angular-material-extensions/select-country\";\nimport { MiddlewareComponent } from \"./middleware.component\";\nimport { VariousSettingsVerifierComponent } from './settings/verifier/various-settings/various-settings.component';\nimport { MailCollectComponent } from './settings/general/mailcollect/mailcollect.component';\nimport { UserQuotaComponent } from './settings/general/user-quota/user-quota.component';\nimport { SettingsMenuComponent } from './settings/settings-menu.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { MonitoringListComponent } from './monitoring/list/monitoring-list.component';\nimport { MonitoringDetailsComponent } from './monitoring/details/monitoring-details.component';\nimport { WorkflowListComponent } from './settings/verifier/workflow/list/workflow-list.component';\nimport { WorkflowBuilderComponent } from './settings/verifier/workflow/builder/workflow-builder.component';\nimport { WorkflowListSplitterComponent } from './settings/splitter/workflow/list/workflow-list.component';\nimport { WorkflowBuilderSplitterComponent } from './settings/splitter/workflow/builder/workflow-builder.component';\nimport { TimeoutInterceptor } from \"../services/HttpTimeout.service\";\nimport { CodeEditorModule } from '@ngstack/code-editor';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        HighlightPipe,\n        AppComponent,\n        VerifierViewerComponent,\n        VerifierListComponent,\n        SplitterListComponent,\n        SplitterViewerComponent,\n        DocumentTypeFactoryComponent,\n        DocumentTypeComponent,\n        LoginComponent,\n        LogoutComponent,\n        HomeComponent,\n        MenuComponent,\n        NotFoundComponent,\n        UserProfileComponent,\n        UploadComponent,\n        UsersListComponent,\n        SettingsComponent,\n        AboutUsComponent,\n        RolesListComponent,\n        CreateUserComponent,\n        UpdateUserComponent,\n        UpdateRoleComponent,\n        CreateRoleComponent,\n        LoaderComponent,\n        CustomFieldsComponent,\n        SeparatorComponent,\n        FormBuilderComponent,\n        FormListComponent,\n        SuppliersListComponent,\n        UpdateSupplierComponent,\n        CreateSupplierComponent,\n        CustomersListComponent,\n        CreateCustomerComponent,\n        UpdateCustomerComponent,\n        CreateOutputComponent,\n        OutputsListComponent,\n        UpdateOutputComponent,\n        UpdatePositionsMaskComponent,\n        PositionsMaskListComponent,\n        CreatePositionsMaskComponent,\n        FilterPipe,\n        SplitterFormListComponent,\n        SplitterFormBuilderComponent,\n        SplitterUpdateOutputComponent,\n        SplitterCreateOutputComponent,\n        SplitterOutputListComponent,\n        ListVerifierAiModelComponent,\n        CreateVerifierAiModelComponent,\n        UpdateVerifierAiModelComponent,\n        ListSplitterAiModelComponent,\n        CreateSplitterAiModelComponent,\n        UpdateSplitterAiModelComponent,\n        HistoryComponent,\n        StatisticsComponent,\n        CreateDoctypeComponent,\n        ListDoctypeComponent,\n        CreateFolderDoctypeComponent,\n        ConfigurationsComponent,\n        DocserversComponent,\n        RegexComponent,\n        HintServiceComponent,\n        ErrorServiceComponent,\n        Error500Component,\n        LoginMethodsComponent,\n        VariousSettingsVerifierComponent,\n        MailCollectComponent,\n        UserQuotaComponent,\n        SettingsMenuComponent,\n        ForgotPasswordComponent,\n        ResetPasswordComponent,\n        MonitoringListComponent,\n        MonitoringDetailsComponent,\n        SplitterUpdateStatusComponent,\n        VerifierStatusUpdateComponent,\n        WorkflowListComponent,\n        WorkflowBuilderComponent,\n        WorkflowListSplitterComponent,\n        WorkflowBuilderSplitterComponent\n    ],\n    imports: [\n        BrowserModule,\n        SettingsRoutingModule,\n        AppRoutingModule,\n        AppMaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        EditorModule,\n        ServicesModule,\n        NgsgModule,\n        NgxChartsModule,\n        CodeEditorModule.forRoot(),\n        ToastrModule.forRoot({\n            maxOpened: 1,\n            enableHtml: true,\n            preventDuplicates: true\n        }),\n        TranslateModule.forRoot({\n            defaultLanguage: 'fra',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        FormsModule,\n        NgxFileDragDropModule,\n        DragDropModule,\n        NgxMatSelectSearchModule,\n        MatSelectCountryModule.forRoot('fr')\n    ],\n    providers: [\n        Title,\n        LastUrlService,\n        TranslateService,\n        HintServiceComponent,\n        ErrorServiceComponent,\n        {\n            provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n            useValue: {\n                appearance: 'outline'\n            }\n        },\n        {\n            provide: MatPaginatorIntl,\n            useClass: CustomMatPaginatorIntl\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: MiddlewareComponent,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TimeoutInterceptor,\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from  \"./env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"../services/locale.service\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private http: HttpClient,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        this.itemsPerPageLabel = '';\n        if (this.localeService.currentLang === undefined) {\n            this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                tap((data: any) => {\n                    this.translate.use(data.lang);\n                    this.translateLabels();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.translateLabels();\n            this.changes.next();\n        }\n    }\n\n    translateLabels() {\n        this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n            this.nextPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n            this.firstPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n            this.lastPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n            this.previousPageLabel = translated;\n        });\n        this.changes.next();\n    }\n\n    override getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length === 0 || pageSize === 0) { return '0 ' + this.translate.instant('PAGINATOR.of') + ` ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        return ` ${startIndex + 1} - ${endIndex} ` + ' | ' +\n            this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    };\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\ndeclare const require: any;\n\nexport const environment = {\n    url: 'http://localhost:5000',\n    customId: '',\n    fqdn: '',\n    production: false,\n    version: require('../../../package.json').version + ' (development mode)'\n};\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component } from '@angular/core';\nimport { UserService } from \"../../../services/user.service\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error-500.component.html'\n})\nexport class Error500Component {\n\n    constructor(\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0 top-0 flex justify-center\">\n    <mat-sidenav-content class=\"flex items-center\">\n        <div class=\"text-center flex flex-col gap-20\">\n            <div class=\"text-gray-900 leading-none\" style=\"font-size: 15rem\">\n                500\n            </div>\n            <div class=\"text-green-400\">\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 3s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin fa-spin-reverse mx-4\" style=\"--fa-animation-duration: 3.5s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 4s;\"></i>\n            </div>\n            <div class=\"text-5xl\" [innerHTML]=\"'ERROR.500' | translate\"></div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Component, OnInit, SecurityContext} from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { SessionStorageService } from \"../../services/session-storage.service\";\nimport { environment } from \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n    emailControl            : FormControl = new FormControl('', [Validators.required, Validators.email, Validators.minLength(5)]);\n    image                   : any         = '';\n    loading                 : boolean     = true;\n    sending                 : boolean     = false;\n    smtpStatus              : boolean     = false;\n\n    constructor(\n        private http: HttpClient,\n        private sanitizer: DomSanitizer,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n\n        const b64Content = this.sessionStorageService.get('loginImageB64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.sessionStorageService.save('loginImageB64', data);\n                    this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + b64Content);\n        }\n\n        this.http.get(environment['url'] + '/ws/smtp/isServerUp').pipe(\n            tap((data: any) => {\n                this.smtpStatus = data.status;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onSubmit() {\n        if (this.emailControl.valid) {\n            this.sending = true;\n            const email = this.emailControl.value;\n            const currentUrl = window.location.href.replace('/forgotPassword', '');\n            this.http.post(environment['url'] + '/ws/users/getByMail', {email: email}).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/users/sendEmailForgotPassword', {userId: data.id, currentUrl: currentUrl}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('USER.forgot_password_email_sent'));\n                        }),\n                        finalize(() => this.sending = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    this.sending = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<div class=\"relative top-16 2xl:top-32 flex justify-center h-20\" *ngIf=\"this.image\">\n    <img [src]=\"this.image\" alt=\"Open-Capture logo\">\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <mat-card class=\"text-center w-full 2xl:w-1/4 sm:w-1/2\">\n        <mat-card-title class=\"my-4\">\n            {{ 'GLOBAL.forgot-password' | translate }}\n        </mat-card-title>\n        <app-hint *ngIf=\"this.smtpStatus\" class=\"m-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.forgot_password_hint' | translate\"></app-hint>\n        <app-hint-error *ngIf=\"!this.smtpStatus\" class=\"m-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.smtp_server_down' | translate\"></app-hint-error>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.email' | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.emailControl\" type=\"text\" placeholder=\"{{ 'USER.email' | translate }}\" required>\n                    <mat-error *ngIf=\"this.emailControl.invalid\">{{ 'ERROR.bad_email_pattern' | translate }}</mat-error>\n                </mat-form-field>\n                <div [class.cursor-not-allowed]=\"!this.smtpStatus\">\n                    <button mat-button [disabled]=\"!this.smtpStatus || this.sending\" [class.bg-gray-400]=\"!this.smtpStatus\"\n                            [class.bg-green-400]=\"this.smtpStatus\" class=\"p-6 valid_button\" type=\"submit\">\n                        <span *ngIf=\"!this.sending\">\n                            {{ 'SPLITTER.send' | translate }}\n                        </span>\n                        <i *ngIf=\"this.sending\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n        <div class=\"text-center relative top-8 text-gray-900\">\n            <a routerLink=\"/login\">\n                {{ 'AUTH.back_to_login' | translate }}\n            </a>\n        </div>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { DatePipe } from '@angular/common';\nimport { UserService } from \"../../services/user.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    providers: [DatePipe]\n})\nexport class HistoryComponent implements OnInit {\n    columnsToDisplay    : string[] = ['id', 'history_module', 'history_submodule', 'history_date', 'user_info', 'history_desc', 'user_ip'];\n    filteredUsers       : Observable<any> | any;\n    loading             : boolean  = true;\n    toHighlight         : string   = '';\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    userSelected        : string = '';\n    moduleSelected      : string = '';\n    subModuleSelected   : string = '';\n    history             : any;\n    allHistory          : any;\n    users               : any;\n    form                : any[]    = [\n        {\n            'id': 'user_id',\n            'type': 'autocomplete',\n            'label': this.translate.instant('HISTORY.user'),\n            'control': new FormControl(),\n            'values': []\n        },\n        {\n            'id': 'module',\n            'label': this.translate.instant('CUSTOM-FIELDS.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'general',\n                    'label': this.translate.instant('HISTORY.general')\n                },\n                {\n                    'id': 'accounts',\n                    'label': this.translate.instant('HISTORY.accounts')\n                },\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'submodule',\n            'type': 'select',\n            'label': this.translate.instant('HISTORY.submodule'),\n            'control': new FormControl(),\n            'values': []\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        private datePipe: DatePipe,\n        private userService: UserService,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        }\n        return array;\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.users = [];\n                this.form.forEach((element: any) => {\n                    if (element.id === 'user_id') {\n                        this.http.get(environment['url'] + '/ws/history/users', {headers: this.authService.headers}).pipe(\n                            tap((userHistory: any) => {\n                                userHistory.history.forEach((_user: any) => {\n                                    data.users.forEach((user: any) => {\n                                        if (_user.user_id === user.id) {\n                                            this.users.push(user);\n                                        }\n                                    });\n                                });\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.filteredUsers = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.users) : this.users)\n                        );\n                    } else if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadHistory();\n    }\n\n    loadHistory() {\n        this.http.get(environment['url'] + '/ws/history/list?user=' + this.userSelected + '&submodule=' + this.subModuleSelected + '&module=' + this.moduleSelected, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allHistory = data.history;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(\n            environment['url'] + '/ws/history/list?limit=' + this.pageSize + '&offset=' + this.offset + '&user=' + this.userSelected + '&submodule=' + this.subModuleSelected + '&module=' + this.moduleSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.history[0]) {\n                    this.total = data.history[0].total;\n                }\n                this.history = data.history;\n                this.form.forEach((element: any) => {\n                    if (element.id === 'module') {\n                        element.values.forEach((module: any) => {\n                            this.history.forEach((history: any) => {\n                                if (history.history_module === module.id) {\n                                    history.history_module = this.translate.instant(module.label);\n                                }\n                            });\n                        });\n                    }\n                    if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules?module=' + this.moduleSelected, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n\n                this.history.forEach((element: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    element.history_date = this.datePipe.transform(element.history_date, format + ' HH:mm:ss');\n                });\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.loading = true;\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n    }\n\n    setSelectedUser(userId: any) {\n        this.userSelected = userId;\n        this.pageIndex = 0;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedModule(module: any) {\n        this.moduleSelected = module;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedSubModule(subModule: any) {\n        this.subModuleSelected = subModule;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    resetFilter() {\n        this.subModuleSelected = '';\n        this.moduleSelected = '';\n        this.userSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadHistory();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadHistory();\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allHistory.slice();\n        if (!sort.active || sort.direction === '') {\n            this.history = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.history = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'history_module': return this.compare(a.history_module, b.history_module, isAsc);\n                case 'history_submodule': return this.compare(a['history_submodule'], b['history_submodule'], isAsc);\n                case 'history_date': return this.compare(a.history_date, b.history_date, isAsc);\n                case 'user_info': return this.compare(a.user_info, b.user_info, isAsc);\n                case 'history_desc': return this.compare(a['history_desc'], b['history_desc'], isAsc);\n                case 'user_ip': return this.compare(a['user_ip'], b['user_ip'], isAsc);\n                default: return 0;\n            }\n        });\n        this.history = this.history.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center\">\n                <div class=\"m-auto w-1/12 text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n                <form class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                    <ng-container *ngFor=\"let field of form\">\n                        <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                        </mat-form-field>\n                        <mat-form-field class=\"block\" *ngIf=\"field.id === 'submodule'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                        [required]=\"field['required']\" (selectionChange)=\"setSelectedSubModule($event.value)\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['history_submodule']\">\n                                    {{ option['history_submodule'] }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"block\" *ngIf=\"field.id === 'module'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                        [required]=\"field['required']\" (selectionChange)=\"setSelectedModule($event.value)\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'autocomplete'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControl]=\"field['control']\" [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                            <mat-hint *ngIf=\"field.hint\" class=\"text-gray-600\">{{ field.hint }}</mat-hint>\n                            <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"setSelectedUser($event.option.id)\">\n                                <mat-option *ngFor=\"let option of this.filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                    <span [innerHTML]=\"option['lastname'] + ' ' + option['firstname'] + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n                <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                     [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                    <i class=\"fa-solid fa-sync-alt\"></i>\n                </div>\n            </div>\n            <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n            <div class=\"flex justify-center\">\n                <mat-table matSort [dataSource]=\"history\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 100px!important;\">{{ 'HEADER.id' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 100px!important;\">{{ element.id }}</mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"history_module\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\">{{ 'CUSTOM-FIELDS.module' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\">{{ element['history_module'] }}</mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"history_submodule\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 190px!important;\">{{ 'HISTORY.submodule' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 190px!important;\">{{ element['history_submodule'] }}</mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"history_date\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\">{{ 'HISTORY.history_date' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\">{{ element.date }}</mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"user_info\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 250px!important;\">{{ 'HISTORY.user_info' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 250px!important;\">{{ element['user_info'] }}</mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"history_desc\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'HISTORY.history_desc' | translate }}</mat-header-cell>\n                        <mat-cell class=\"p-0.5\" *matCellDef=\"let element\" [innerHTML]=\"'<span>' + element['history_desc'] + '</span>'\"></mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"user_ip\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 250px !important\">{{ 'HISTORY.user_ip' | translate }}</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 250px !important\">{{ element['user_ip'] }}</mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                             class=\"hover:text-green-400 select-none hover:shadow-md transition-colors duration-300\"></mat-row>\n                </mat-table>\n            </div>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../../services/user.service\";\nimport { SessionStorageService } from \"../../services/session-storage.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Router } from \"@angular/router\";\nimport { LastUrlService } from \"../../services/last-url.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    unseenBatches : any = {'splitter': 0, 'verifier': 0};\n\n    constructor(\n        private router: Router,\n        private http : HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.setValue('');\n        const splitter = this.privilegesService.hasPrivilege('access_splitter');\n        const verifier = this.privilegesService.hasPrivilege('access_verifier');\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        this.userService.user   = this.userService.getUserFromLocal();\n        if (lastUrl === '/login') {\n            if (verifier && !splitter) {\n                this.router.navigate(['/verifier/list']).then();\n            } else if (splitter && !verifier) {\n                this.router.navigate(['/splitter/list']).then();\n            } else {\n                this.checkConnection();\n            }\n        } else {\n            this.checkConnection();\n        }\n\n        this.http.get(environment['url'] + '/ws/verifier/getUnseen/user/' + this.userService.user.id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.unseenBatches['verifier'] = data['unseen'];\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/getUnseen/user/' + this.userService.user.id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.unseenBatches['splitter'] = data['unseen'];\n            })\n        ).subscribe();\n    }\n\n    checkConnection() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const token = this.authService.getToken('tokenJwt');\n        if (token) {\n            this.http.post(environment['url'] + '/ws/auth/checkToken', {'token': token}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.authService.logout();\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    setValue(value: string) {\n        this.sessionStorageService.save('splitter_or_verifier', value);\n    }\n\n    getUnseenBatches(module: string) {\n        return this.unseenBatches[module];\n    }\n}\n","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_splitter')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 20rem\"></div>\n        </a>\n        <div class=\"absolute inline-flex items-center justify-center w-12 h-10 text-md -right-1 font-bold\n                    text-white bg-green-400 rounded-full -top-4\">\n            {{ getUnseenBatches('splitter') }}\n        </div>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_verifier')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier md:w-full bg-no-repeat bg-center h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 12rem\"></div>\n        </a>\n        <div class=\"absolute inline-flex items-center justify-center w-12 h-10 text-md -right-1 font-bold\n                    text-white bg-green-400 rounded-full -top-4\">\n            {{ getUnseenBatches('verifier') }}\n        </div>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card *ngIf=\"!this.privilegesService.hasPrivilege('access_verifier') && !this.privilegesService.hasPrivilege('access_splitter')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg\">\n        <i class=\"fa-solid fa-ban fa-8x m-4 text-gray-400\"></i>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.no_authorized_module' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-loader',\n    template:\n        '<div class=\"w-full h-full\">' +\n        '    <div id=\"preloader\" class=\"absolute inset-0 bg-white z-30\">' +\n        '            <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">' +\n        '                <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"' +\n        '                     height=\"300\">' +\n        '                    <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">' +\n        '                        <stop offset=\"0%\" stop-color=\"#76B442\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                        <stop offset=\"100%\" stop-color=\"#A7A8AA\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                    </linearGradient>' +\n        '                    <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7' +\n        '                            c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1' +\n        '                            c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4' +\n        '                            L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7' +\n        '                            C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>' +\n        '            </svg>' +\n        '        </div>' +\n        '    </div>' +\n        '</div>'\n})\n\nexport class LoaderComponent  {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../env\";\nimport { Router } from \"@angular/router\";\nimport {Component, OnInit, SecurityContext} from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { SessionStorageService } from \"../../services/session-storage.service\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n    loginForm               : any;\n    enableLoginMethodName   : any;\n    loginImage              : any       = '';\n    loginTopMessage         : SafeHtml  = '';\n    loginBottomMessage      : SafeHtml  = '';\n    loading                 : boolean   = true;\n    isConnectionBtnDisabled : boolean   = true;\n    processLogin            : boolean   = false;\n    showPassword            : boolean   = false;\n    defaultRoute            : string    = '/home';\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private SessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n        const b64Content = this.SessionStorageService.get('loginImageB64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.SessionStorageService.save('loginImageB64', data);\n                    this.loginImage = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loginImage = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + b64Content);\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/loginTopMessage').pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    let value = data.configuration[0].data.value.replace(/&gt;/gi, '>');\n                    value = value.replace(/&gt;/gi, '>');\n                    value = value.replace(/&lt;/gi, '<');\n                    value = value.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n                    this.loginTopMessage = this.sanitizer.bypassSecurityTrustHtml(value);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/loginBottomMessage').pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    let value = data.configuration[0].data.value.replace(/&gt;/gi, '>');\n                    value = value.replace(/&gt;/gi, '>');\n                    value = value.replace(/&lt;/gi, '<');\n                    value = value.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n                    this.loginBottomMessage = this.sanitizer.bypassSecurityTrustHtml(value);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/auth/getEnabledLoginMethod', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['login_method_name'][0]) {\n                    const login_method_name = data['login_method_name'][0];\n                    this.enableLoginMethodName = login_method_name['method_name'];\n                } else {\n                    this.notify.error(this.translate.instant('LOGIN-METHODS.no_default_login_methods'));\n                    this.enableLoginMethodName = 'default';\n                }\n                this.isConnectionBtnDisabled = false;\n            }),\n            catchError((err: any) => {\n                this.isConnectionBtnDisabled = true;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onSubmit() {\n        const password = this.loginForm.get('password').value;\n        const username = this.loginForm.get('username').value;\n        if (password && username) {\n            this.processLogin = true;\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    const passwordAlert = data.body['admin_password_alert'];\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body['auth_token'], data.body['refresh_token'], btoa(JSON.stringify(this.userService.getUser())));\n                    this.authService.generateHeaders();\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (this.authService.getToken('cachedUrlName')) {\n                            this.router.navigate([this.authService.getToken('cachedUrlName')]).then(() => {\n                                if (passwordAlert) {\n                                    this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                }\n                            });\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.http.get(environment['url'] + '/ws/users/getDefaultRoute/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n                                tap((data: any) => {\n                                    if (data.route) {\n                                        this.defaultRoute = data.route;\n                                    }\n                                    this.router.navigate([this.defaultRoute]).then(() => {\n                                        if (passwordAlert) {\n                                            this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                        }\n                                    });\n                                }),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    this.processLogin = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if (this.loginForm.get(field).hasError('required')) {\n            return this.translate.instant('AUTH.field_required');\n        }\n        return this.translate.instant('ERROR.unknow_error');\n    }\n\n    protected readonly environment = environment;\n}\n","<div class=\"min-h-screen flex\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <div class=\"w-full flex items-center justify-center text-center flex-col\">\n        <div class=\"w-11/12 max-w-md\" *ngIf=\"this.loginImage\">\n            <img class=\"m-auto\" [src]=\"this.loginImage\" alt=\"Open-Capture logo\">\n            <mat-card-subtitle class=\"relative top-2\" [innerHTML]=\"this.loginTopMessage\"></mat-card-subtitle>\n        </div>\n        <mat-card class=\"text-center m-6 mb-0 w-11/12 max-w-md\">\n            <mat-card-title class=\"m-5\">\n                {{ 'GLOBAL.login' | translate }}\n            </mat-card-title>\n            <mat-card-content>\n                <form [formGroup]=\"this.loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                        <input matInput id=\"username\" formControlName=\"username\" type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                        <mat-error *ngIf=\"this.loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                        <input matInput id=\"password\" autocomplete=\"off\" formControlName=\"password\"\n                               [type]=\"this.showPassword ? 'text' : 'password'\"\n                               placeholder=\"{{ 'USER.password' | translate }}\" required>\n                        <mat-icon matSuffix (click)=\"this.showPassword = !this.showPassword\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword\" [class.fa-eye]=\"this.showPassword\"></i>\n                        </mat-icon>\n                        <mat-error *ngIf=\"this.loginForm.controls.password.invalid\">\n                            {{ getErrorMessage('password') }}\n                        </mat-error>\n                        <mat-hint align=\"end\" *ngIf=\"this.enableLoginMethodName === 'ldap'\">\n                            <span class=\"underline decoration-1\">\n                                {{ this.enableLoginMethodName | uppercase }} {{ 'LOGIN-METHODS.enabled' | translate }}\n                            </span>\n                        </mat-hint>\n                    </mat-form-field>\n                    <button id=\"login\" mat-button [disabled]=\"this.processLogin || this.isConnectionBtnDisabled || this.loginForm.invalid\"\n                            [class.invalid_button]=\"this.processLogin || this.isConnectionBtnDisabled || this.loginForm.invalid\"\n                            [class.valid_button]=\"!(this.processLogin || this.isConnectionBtnDisabled || this.loginForm.invalid)\"\n                            class=\"mb-4 mt-2 p-6\" type=\"submit\" style=\"max-width: 250px;\">\n                        <span *ngIf=\"!this.processLogin && !this.isConnectionBtnDisabled\">\n                            {{ 'AUTH.login' | translate }}\n                        </span>\n                        <i *ngIf=\"this.processLogin || this.isConnectionBtnDisabled\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                    </button>\n                    <div class=\"text-right text-gray-900\" *ngIf=\"this.enableLoginMethodName === 'default'\">\n                        <a routerLink=\"/forgotPassword\">\n                            {{ 'AUTH.forgot_password' | translate }}\n                        </a>\n                    </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n        <span class=\"mt-5\" [innerHTML]=\"this.loginBottomMessage\"></span>\n        <div class=\"flex flex-col gap-y-2 absolute bottom-px right-px\">\n            <div class=\"flex gap-x-2 mr-2 mb-2\">\n                <span class=\"text-gray-900 text-sm text-right\">\n                    Open-Capture version {{ environment.version }}\n                    <br>\n                    Powered by\n                    <a class=\"text-green-400\" href=\"https://edissyum.com/\" target=\"_blank\" rel=\"noopener\">\n                        Edissyum Consulting\n                    </a>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private authService: AuthService\n    ) {}\n\n    ngOnInit(): void {\n        this.authService.logout();\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { environment } from \"../env\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"../../services/user.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { SessionStorageService } from \"../../services/session-storage.service\";\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss']\n})\n\nexport class MenuComponent implements OnInit {\n    @Input() image       : any;\n    @Input() imageMobile : any;\n    hideProfileDropdown  : boolean = true;\n    mobileMenuState      : boolean = false;\n    defaultModule        : string = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public location: Location,\n        public authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        public localeService: LocaleService,\n        public privilegesService: PrivilegesService,\n        public sessionStorageService: SessionStorageService\n    ) { }\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            this.userService.user = this.userService.getUserFromLocal();\n        }, 100);\n\n        if (this.userService.user) {\n            this.localeService.getLocales();\n            this.localeService.getCurrentLocale();\n        }\n\n        const k = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];\n        let n = 0;\n        document.addEventListener('keydown', (e) => {\n            if (e.key === k[n++]) {\n                if (n === k.length) {\n                    const audio = new Audio(\"assets/imgs/konami.mp3\");\n                    const konami = document.getElementById('konami');\n                    konami!.style.display = \"block\";\n                    konami!.style.transition = \"opacity .5s\";\n                    konami!.style.opacity = \"1\";\n                    audio.volume = 0.3;\n                    audio.play().then(() => setTimeout(() => {\n                        konami!.style.transition = \"opacity 1s\";\n                        konami!.style.opacity = \"0\";\n                        setTimeout(() => {\n                            konami!.style.display = \"none\";\n                        }, 1000);\n                    }, 3000));\n                    n = 0;\n                }\n            }\n            else {\n                n = 0;\n            }\n        });\n\n        if (!this.defaultModule) {\n            this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/defaultModule', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.configuration.length === 1) {\n                        this.defaultModule = data.configuration[0].data.value;\n                    }\n                })\n            ).subscribe();\n        }\n    }\n\n    @HostListener('document:click', ['$event'])\n    onScreenClick(event: MouseEvent) {\n        const clickedElement = event.target as HTMLElement;\n        const userMenu = document.getElementById('user-menu');\n        if (userMenu && !userMenu.contains(clickedElement)) {\n            this.hideProfileDropdown = true;\n        }\n    }\n\n    goToUpload() {\n        if (this.defaultModule && !this.getSplitterOrVerifier()) {\n            this.sessionStorageService.save('splitter_or_verifier', this.defaultModule);\n        }\n    }\n\n    getSplitterOrVerifier() {\n        return this.sessionStorageService.get('splitter_or_verifier');\n    }\n\n    toggleProfileDropdown() {\n        this.hideProfileDropdown = !this.hideProfileDropdown;\n    }\n\n    closeProfileDropDown() {\n        this.hideProfileDropdown = false;\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = !this.mobileMenuState;\n    }\n}\n","<nav style=\"background: #f8f9fa\" class=\"shadow-md relative z-40\">\n    <div class=\"mx-auto px-2 sm:px-6 lg:px-8\" style=\"max-width: 100rem\">\n        <div class=\"relative flex items-center justify-between h-16 z-50\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center lg:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white\n                        hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\" aria-expanded=\"false\">\n                    <svg *ngIf=\"!this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 items-center sm:hidden xl:flex\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.image\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"flex-shrink-0 items-center sm:flex xl:hidden\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.imageMobile\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden lg:block sm:ml-3\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [class.text-gray-500]=\"!location.path().includes('/home')\"\n                                [class.bg-transparent]=\"!location.path().includes('/home')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button [routerLink]=\"'/' + this.getSplitterOrVerifier()\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier()\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [disabled]=\"!privilegesService.hasPrivilege('access_splitter') && !privilegesService.hasPrivilege('access_verifier')\"\n                                [class.cursor-not-allowed]=\"!privilegesService.hasPrivilege('access_splitter') && !privilegesService.hasPrivilege('access_verifier')\"\n                                [class.text-gray-500]=\"!location.path().includes('/' + this.getSplitterOrVerifier()) || location.path().includes('/settings')\"\n                                [class.bg-transparent]=\"!location.path().includes('/' + this.getSplitterOrVerifier()) || location.path().includes('/settings')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [disabled]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.cursor-not-allowed]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.hover:bg-gray-500]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.hover:text-white]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.text-gray-500]=\"!location.path().includes('/upload')\"\n                                [class.bg-transparent]=\"!location.path().includes('/upload')\"\n                                class=\"px-3 py-2 text-sm font-medium transition duration-300\"\n                                (click)=\"goToUpload()\" *ngIf=\"this.defaultModule || getSplitterOrVerifier()\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex absolute inset-y-0 right-0 items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <div class=\"ml-3 mr-0 md:mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/settings\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            [matTooltip]=\"this.translate.instant('GLOBAL.settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-cog\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('history')\">\n                    <button id=\"history-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/history\"\n                            [class.settings_active]=\"location.path().includes('history')\"\n                            [matTooltip]=\"'GLOBAL.history' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-history\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('statistics')\">\n                    <button id=\"statistics-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/statistics\"\n                            [class.settings_active]=\"location.path().includes('statistics')\"\n                            [matTooltip]=\"'GLOBAL.statistics' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-chart-bar\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('monitoring')\">\n                    <button id=\"monitoring-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/monitoring\"\n                            [class.settings_active]=\"location.path().includes('monitoring')\"\n                            [matTooltip]=\"'GLOBAL.monitoring' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-magnifying-glass-chart\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative border-l border-green-400 pl-5\" *ngIf=\"this.privilegesService.hasPrivilege('suppliers_list')\">\n                    <button id=\"supplier-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/suppliers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/suppliers')\"\n                            [matTooltip]=\"'ACCOUNTS.suppliers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-city\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.privilegesService.hasPrivilege('customers_list')\">\n                    <button id=\"customer-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/customers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/customers')\"\n                            [matTooltip]=\"'ACCOUNTS.customers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-users\"></i>\n                    </button>\n                </div>\n                <div class=\"my_profile ml-4 relative py-2 px-1 hover:cursor-pointer\" (click)=\"toggleProfileDropdown()\" id=\"user-menu\" aria-haspopup=\"true\"\n                     [class.profile_active]=\"location.path().includes('profile/' + this.userService.user['id'])\">\n                    <span *ngIf=\"this.userService.user\" class=\"flex items-center\"\n                          [matTooltip]=\"this.translate.instant('USER.my_profile')\">\n                        <div class=\"hidden xl:block\">\n                            <strong>\n                                {{ this.userService.user['lastname'] }} {{ this.userService.user['firstname'] }}\n                            </strong>\n                            <br>({{ this.userService.user['username'] }})\n                        </div>\n                        <span class=\"ml-2\">\n                            <i class=\"fa-solid fa-user text-xl\"></i>\n                        </span>\n                    </span>\n                    <div class=\"ml-3 mr-0 md:mr-2 relative\">\n                        <div [class.hidden]=\"this.hideProfileDropdown\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                             role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\" *ngIf=\"this.userService.user\">\n                            <a (click)=\"closeProfileDropDown()\" routerLink=\"/profile/{{ this.userService.user['id'] }}\"\n                               class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                                {{ 'USER.my_profile' | translate }}\n                            </a>\n                            <a (click)=\"closeProfileDropDown()\" routerLink=\"/logout\"\n                               class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                                {{ 'GLOBAL.log_out' | translate }}\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"this.mobileMenuState\" id=\"mobile-menu\">\n            <div class=\"space-y-1 px-2 pt-2 pb-3 text-gray-500\">\n                <a routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.home' | translate }}\n                </a>\n                <a routerLink=\"/verifier\" *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'verifier'\"\n                   [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.batches' | translate }}\n                </a>\n                <a routerLink=\"/splitter\" *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'splitter'\"\n                   [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.batches' | translate }}\n                </a>\n                <a routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\" (click)=\"this.mobileMenuState = false\"\n                   class=\"hover:bg-gray-500 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\n                    {{ 'GLOBAL.upload' | translate }}\n                </a>\n            </div>\n        </div>\n    </div>\n</nav>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Observable, switchMap} from \"rxjs\";\nimport { environment } from \"./env\";\nimport { Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { catchError } from \"rxjs/operators\";\nimport { AuthService } from \"../services/auth.service\";\nimport { SessionStorageService } from \"../services/session-storage.service\";\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\n\n@Injectable()\nexport class MiddlewareComponent implements HttpInterceptor {\n    isRefreshing = false;\n\n    constructor(\n        private router: Router,\n        private authService: AuthService,\n        private sessionStorage: SessionStorageService\n    ) {}\n\n    isValidIP(str: any) {\n        const arr = str.split(\".\").filter((el: any) => !/^0.|\\D/g.test(el));\n        return arr.filter((el: any) => el.length && el >= 0 && el <= 255).length === 4;\n    }\n\n    isValidFQDN(str: any) {\n        return /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/g.test(str);\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        if (!environment['customId'] && /http(s)?:\\/\\/|backend_oc\\//.test(request.url)) {\n            let currentUrl = window.location.href;\n            currentUrl = currentUrl.replace('http://', '').replace('https://', '');\n            currentUrl = currentUrl.replace(new RegExp('//'), '/');\n            const currentUrlArray = currentUrl.split('/');\n            if (this.isValidFQDN(currentUrlArray[0])) {\n                environment['fqdn'] = currentUrlArray[0];\n            }\n            for (let i = 0; i <= currentUrlArray.length; i++) {\n                if (currentUrlArray[i] === 'dist') {\n                    let customId = '';\n                    const isIp = this.isValidIP(currentUrlArray[i - 1]);\n                    const isFQDN = this.isValidFQDN(currentUrlArray[i - 1]);\n                    const currentCustom = environment['customId'];\n                    customId = currentUrlArray[i - 1];\n                    if (!isFQDN && !isIp && currentUrlArray[i - 1] !== 'localhost' && !currentUrlArray[i - 1].includes('opencapture') && !currentUrlArray[i - 1].includes('opencaptureforinvoices') && !currentUrlArray[i - 1].includes('backend_oc')) {\n                        customId = currentUrlArray[i - 1];\n                        const oldUrl = environment['url'];\n                        environment['customId'] = customId;\n                        environment['url'] += '/' + customId;\n                        if (environment.production) {\n                            environment['url'] = '../' + environment['url'];\n                        }\n                        const token = this.sessionStorage.get('OpenCaptureToken_' + customId);\n                        if (currentCustom && customId !== currentCustom) {\n                            this.router.navigate(['/logout']).then();\n                        }\n                        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n                        const newRequest = new HttpRequest(request.method as any,\n                            request.url.replace(oldUrl, environment['url']), {headers: headers});\n                        request = Object.assign(request, newRequest);\n                        return next.handle(request);\n                    }\n                }\n            }\n        }\n\n        return next.handle(request).pipe(\n            catchError((err: any) => {\n                if (err.status === 401) {\n                    return this.handle401Error(request, next);\n                }\n                return next.handle(request);\n            })\n        );\n    }\n\n    handle401Error(request: HttpRequest<unknown>, next: HttpHandler) {\n        if (!this.isRefreshing) {\n            this.isRefreshing = true;\n            return this.authService.refreshToken().pipe(\n                switchMap((data: any) => {\n                    this.isRefreshing = false;\n                    if (data) {\n                        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + data.token);\n                        const newRequest = new HttpRequest(request.method as any,\n                            request.url, {headers: headers});\n                        request = Object.assign(request, newRequest);\n                    }\n                    return next.handle(request);\n                })\n            );\n        }\n        return next.handle(request);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport * as moment from \"moment\";\n@Component({\n    selector: 'app-monitoring-details',\n    templateUrl: './monitoring-details.component.html',\n    styleUrls: ['./monitoring-details.component.scss']\n})\n\nexport class MonitoringDetailsComponent implements OnInit, OnDestroy {\n    columnsToDisplay    : string[]              = ['step', 'event_date', 'event_message', 'status'];\n    loading             : boolean               = true;\n    workflowLabel       : string                = '';\n    processData         : any                   = [];\n    pageSize            : number                = 20;\n    pageIndex           : number                = 0;\n    total               : number                = 0;\n    splitterCpt         : number                = 0;\n    offset              : number                = 0;\n    processId           : number | undefined;\n    steps               : any;\n    allSteps            : any;\n    timer               : any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.processId = this.route.snapshot.params['id'];\n        await this.loadProcess();\n\n        this.timer = setInterval(()=> {\n            if (this.processData.status === 'done' || this.processData.status === 'error') {\n                clearInterval(this.timer);\n                return;\n            }\n            this.loadProcess();\n        }, 4000);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timer);\n    }\n\n    async loadProcess() {\n        this.http.get(environment['url'] + '/ws/monitoring/getProcessById/' + this.processId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.process && Object.keys(data.process).length > 0) {\n                    this.processData = data.process[0];\n                    const now = new Date();\n                    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n                    const diffDays = Math.abs((now.getTime() - new Date(this.processData['creation_date']).getTime()) / (oneDay));\n\n                    this.processData.time = 'older';\n                    if (diffDays <= 1) {\n                        this.processData.time = 'today';\n                    } else if (diffDays > 1 && diffDays <= 2) {\n                        this.processData.time = 'yesterday';\n                    }\n\n                    if (this.processData.workflow_id && this.workflowLabel === '') {\n                        this.http.get(environment['url'] + '/ws/workflows/' + this.processData.module + '/getByWorkflowId/' + this.processData.workflow_id, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                this.workflowLabel = data.label;\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                this.router.navigate(['/monitoring']).then();\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                    const listOfSteps: any = [];\n                    if (Object.keys(this.processData.steps).length > 0) {\n                        this.total = Object.keys(this.processData.steps).length;\n                        Object.keys(this.processData.steps).forEach((step: any) => {\n                            this.processData.steps[step].step = parseInt(step);\n                            this.processData.steps[step].date = moment(this.processData.steps[step].date).format('LLL');\n                            listOfSteps.push(this.processData.steps[step]);\n                        });\n                    }\n                    if (this.processData['elapsed_time']) {\n                        const hours = this.processData['elapsed_time'].slice(0, 2);\n                        const minutes = this.processData['elapsed_time'].slice(3, 5);\n                        const seconds = this.processData['elapsed_time'].slice(6, 11);\n\n                        let message = '';\n                        if (hours && hours !== '00') {\n                            if (parseInt(hours) > 1) {\n                                message += hours + ' ' + this.translate.instant('MONITORING.hours') + ', ';\n                            } else {\n                                message += hours + ' ' + this.translate.instant('MONITORING.hour') + ', ';\n                            }\n                        }\n                        if (minutes && minutes !== '00') {\n                            if (parseInt(minutes) > 1) {\n                                message += minutes + ' ' + this.translate.instant('MONITORING.minutes') + ' ' + this.translate.instant('MONITORING.and') + ' ';\n                            } else {\n                                message += minutes + ' ' + this.translate.instant('MONITORING.minute') + ' ' + this.translate.instant('MONITORING.and') + ' ';\n                            }\n                        }\n                        if (seconds) {\n                            if (parseInt(minutes) < 1 && parseInt(hours) < 1) {\n                                const seconds_splitted = seconds.slice(0, 2);\n                                const microseconds = seconds.slice(3, 5);\n                                message += seconds_splitted + ' ' + this.translate.instant('MONITORING.seconds');\n                                message += ' ' + this.translate.instant('MONITORING.and') + ' ';\n                                message +=  microseconds + ' ' + this.translate.instant('MONITORING.microseconds');\n                            } else if (parseInt(seconds) > 1) {\n                                message += seconds + ' ' + this.translate.instant('MONITORING.seconds');\n                            } else {\n                                message += seconds + ' ' + this.translate.instant('MONITORING.second');\n                            }\n                        }\n                        this.processData.elapsedTimeMessage = message;\n                    }\n\n                    this.allSteps = listOfSteps;\n                    this.steps = listOfSteps.slice().splice(0, this.pageSize);\n                } else {\n                    this.notify.error(this.translate.instant('MONITORING.process_doesnt_exist', {id: this.processId}));\n                    this.router.navigate(['/monitoring']);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        const data = this.allSteps.slice();\n        this.steps = data.splice(this.pageSize * event.pageIndex, this.pageSize + (this.pageSize * (event.pageIndex)));\n    }\n\n    protected readonly window = window;\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header flex justify-between p-4 items-center bg-green-400 bg-opacity-60 text-gray-900 relative z-50\">\n            <div class=\"cursor-pointer\" [matTooltip]=\"'GLOBAL.back' | translate\" (click)=\"window.history.back()\">\n                <i class=\"fa-solid fa-arrow-left fa-xl\"></i>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"overflow-x-hidden\">\n            <div class=\"flex justify-center\">\n                <div class=\"grid my-10 mx-10\">\n                    <span class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.process_id' | translate }}\n                    </span>\n                    <span class=\"text-center text-xl\">\n                        {{ this.processId }}\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\" *ngIf=\"this.processData['document_ids']\">\n                    <span class=\"text-gray-400 text-base text-center\">\n                        <span *ngIf=\"this.processData['document_ids'].length <= 1\">\n                            {{ 'MONITORING.document_id' | translate }}\n                        </span>\n                        <span *ngIf=\"this.processData['document_ids'].length > 1\">\n                            {{ 'MONITORING.documents_id' | translate }}\n                        </span>\n                    </span>\n                    <span class=\"text-center text-xl\" *ngIf=\"this.processData['document_ids']\">\n                        <div>\n                            <span class=\"material-icons mr-3 relative top-1 font-light cursor-pointer text-gray-400\" *ngIf=\"this.processData['document_ids'].length > 1\"\n                                  (click)=\"this.splitterCpt !== 0 ? this.splitterCpt = this.splitterCpt - 1 : this.splitterCpt = this.processData['document_ids'].length - 1\">\n                                arrow_back\n                            </span>\n                            <a [routerLink]=\"'../../verifier/viewer/' + this.processData['document_ids'][0]\" *ngIf=\"this.processData.module === 'verifier'\">\n                                {{ this.processData['document_ids'][this.splitterCpt] }}\n                            </a>\n                            <a [routerLink]=\"'../../splitter/viewer/' + this.processData.time + '/' + this.processData['document_ids'][this.splitterCpt]\" *ngIf=\"this.processData.module === 'splitter'\">\n                                {{ this.processData['document_ids'][this.splitterCpt] }}\n                            </a>\n                            <span class=\"material-icons ml-3 relative top-1 font-light cursor-pointer text-gray-400\" *ngIf=\"this.processData['document_ids'].length > 1\"\n                                  (click)=\"this.splitterCpt < this.processData['document_ids'].length - 1 ? this.splitterCpt = this.splitterCpt + 1 : this.splitterCpt = 0\">\n                                arrow_forward\n                            </span>\n                        </div>\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <span *ngIf=\"this.processData['workflow_id']\">\n                        <div class=\"text-gray-400 text-base text-center\">\n                            {{ 'MONITORING.workflow_associated' | translate }}\n                        </div>\n                        <div class=\"text-center text-xl\">\n                            {{ this.workflowLabel }}\n                        </div>\n                    </span>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'HEADER.creation_date' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.creation_date_formated }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'HEADER.end_date' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.end_date_formated }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.process_time' | translate }}\n                    </div>\n                    <div class=\"text-center text-xl\">\n                        {{ this.processData.elapsedTimeMessage }}\n                    </div>\n                </div>\n                <div class=\"grid my-10 mx-10\">\n                    <div class=\"text-gray-400 text-base text-center\">\n                        {{ 'MONITORING.status' | translate }}\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'wait' && !this.processData.error\" class=\"text-gray-400 text-center text-3xl\"\n                          [matTooltip]=\"'MONITORING.wait' | translate\">\n                        <i class=\"fa-solid fa-clock text-gray-400\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'running' && !this.processData.error\" class=\"text-gray-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.running' | translate\">\n                        <i class=\"fa-solid fa-person-running fa-fade text-green-400\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'done' && !this.processData.error\" class=\"text-green-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.done' | translate\">\n                        <i class=\"fa-solid fa-check\"></i>\n                    </div>\n                    <div *ngIf=\"this.processData.status === 'error' || this.processData.error\" class=\"text-red-400 text-center text-3xl\"\n                              [matTooltip]=\"'MONITORING.error' | translate\">\n                        <i class=\"fa-solid fa-xmark\"></i>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"border-green-400 w-1/3 mx-auto -mt-2 mb-4\">\n            <div class=\"overflow-x-hidden\" style=\"height: calc(100vh - 20rem)\">\n                <div class=\"flex justify-center\">\n                    <mat-table matSort [dataSource]=\"this.steps\" class=\"w-full\">\n                        <ng-container matColumnDef=\"step\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'MONITORING.step' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\"> {{ element.step }} </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"event_date\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.event_date' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\"> {{ element.date }} </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"event_message\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.event_message' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.message\"></mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"status\">\n                            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                            <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.status !== 'error'\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-check text-green-400 text-lg w-6\"></i>\n                            {{ 'MONITORING.task_done' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'error'\" class=\"text-red-400\">\n                            <i class=\"fa-solid fa-xmark text-lg w-6\"></i>\n                            {{ 'MONITORING.task_error' | translate }}\n                        </span>\n                            </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                                 class=\"hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n                    </mat-table>\n                </div>\n                <mat-paginator [showFirstLastButtons]=\"true\"\n                               [length]=\"total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-monitoring-list',\n    templateUrl: './monitoring-list.component.html',\n    styleUrls: ['./monitoring-list.component.scss']\n})\nexport class MonitoringListComponent implements OnInit, OnDestroy {\n    columnsToDisplay    : string[] = ['module', 'creation_date', 'end_date', 'filename', 'last_message', 'status'];\n    loading             : boolean  = true;\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    allProcessData      : any      = [];\n    moduleSelected      : string   = '';\n    statusSelected      : string   = '';\n    processData         : any;\n    form                : any[]    = [\n        {\n            'id': 'module',\n            'label': this.translate.instant('CUSTOM-FIELDS.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'status',\n            'type': 'select',\n            'label': this.translate.instant('HEADER.status'),\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'running',\n                    'label': this.translate.instant('MONITORING.running')\n                },\n                {\n                    'id': 'done',\n                    'label': this.translate.instant('MONITORING.done')\n                },\n                {\n                    'id': 'error',\n                    'label': this.translate.instant('MONITORING.error')\n                }\n            ]\n        }\n    ];\n    timer               : any;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) { }\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/monitoring/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allProcessData = data['processes'];\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.loadMonitoring();\n        this.timer = setInterval(()=>{\n            this.loadMonitoring();\n        }, 4000);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timer);\n    }\n\n    loadMonitoring() {\n        this.http.get(\n            environment['url'] + '/ws/monitoring/list?limit=' + this.pageSize + '&offset=' + this.offset + '&module=' + this.moduleSelected + '&status=' + this.statusSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.processData = data['processes'];\n                if (data['processes'][0]) {\n                    this.total = data['processes'][0].total;\n                }\n                this.processData.forEach((element: any) => {\n                    const numberOfSteps = Object.keys(element.steps).length;\n                    if (element.steps[numberOfSteps]) {\n                        element.last_message = element.steps[numberOfSteps].message;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadMonitoring();\n    }\n\n    resetFilter() {\n        this.moduleSelected = '';\n        this.statusSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadMonitoring();\n    }\n\n    updateData(id: string, value: string) {\n        if (id === 'module') {\n            this.moduleSelected = value;\n        } else if (id === 'status') {\n            this.statusSelected = value;\n        }\n        this.loadMonitoring();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allProcessData.slice();\n        if (!sort.active || sort.direction === '') {\n            this.processData = data;\n            return;\n        }\n\n        this.processData = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'module': return this.compare(a.module, b.module, isAsc);\n                case 'creation_date': return this.compare(a.creation_date, b.creation_date, isAsc);\n                case 'end_date': return this.compare(a.end_date, b.end_date, isAsc);\n                case 'last_message': return this.compare(a.last_message, b.last_message, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                default: return 0;\n            }\n        });\n        this.processData = this.processData.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900 relative z-50\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center\">\n                <div class=\"m-auto text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n                <form class=\"grid grid-cols-2 w-6/12 gap-6 mt-5 mb-0 text-center\">\n                    <ng-container *ngFor=\"let field of form\">\n                        <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\"\n                                        [required]=\"field['required']\" (selectionChange)=\"updateData(field.id, $event.value)\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n                <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                     [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                    <i class=\"fa-solid fa-sync-alt\"></i>\n                </div>\n            </div>\n            <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n            <div class=\"flex justify-center\">\n                <mat-table matSort [dataSource]=\"this.processData\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                    <ng-container matColumnDef=\"module\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ 'MONITORING.' + element.module | translate }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"creation_date\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.creation_date' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [matTooltip]=\"element['creation_date_formated']\"> {{ element['creation_date'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"end_date\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.end_date' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [matTooltip]=\"element['end_date_formated']\"> {{ element['end_date'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"filename\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.filename' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"truncate w-10/12\" [matTooltip]=\"element.filename\">\n                                {{ element.filename }}\n                            </span>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"last_message\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.last_message' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" [innerHTML]=\"element['last_message']\"></mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"status\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.status === 'wait' && !element.error\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-clock text-lg w-6\"></i>\n                            {{ 'MONITORING.wait' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'running' && !element.error\" class=\"text-gray-400\">\n                            <i class=\"fa-solid fa-person-running fa-fade text-green-400 text-lg w-6\"></i>\n                            {{ 'MONITORING.running' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'done' && !element.error\" class=\"text-green-400\">\n                            <i class=\"fa-solid fa-check text-lg w-6\"></i>\n                            {{ 'MONITORING.done' | translate }}\n                        </span>\n                        <span *ngIf=\"element.status === 'error' || element.error\" class=\"text-red-400\">\n                            <i class=\"fa-solid fa-xmark text-lg w-6\"></i>\n                            {{ 'MONITORING.error' | translate }}\n                        </span>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\" [routerLink]=\"'/monitoring/' + row.id\"\n                             class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n                </mat-table>\n            </div>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit  } from '@angular/core';\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private notify: NotificationService,\n        private translate: TranslateService\n    ) { }\n\n    ngOnInit(): void {\n        this.translate.get('ERROR.404').subscribe((translated: string) => {\n            this.notify.error(translated);\n            this.router.navigate(['/login']).then();\n        });\n    }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\" height=\"300\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { PasswordVerificationService } from \"../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    userId                      : any;\n    profile                     : any;\n    roles                       : any[]         = [];\n    profileForm                 : any[]         = [\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'old_password',\n            label: this.translate.instant('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: this.translate.instant('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private privilegeService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) { }\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.userId = parseInt(this.route.snapshot.params['id']);\n        const loggedUserId = this.userService.user.id;\n\n        if (this.userId !== parseInt(loggedUserId)) {\n            if (!this.privilegeService.hasPrivilege('update_user')) {\n                this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                    this.notify.error(translated);\n                    this.router.navigateByUrl('/home').then();\n                });\n            }\n        }\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id + '?full',\n            {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable || this.userService.getUser().privileges === '*') {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                for (const field in this.profile) {\n                    if (this.profile.hasOwnProperty(field)) {\n                        this.profileForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.profile[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.profileForm.forEach((element: any) => {\n            if (element.id === 'new_password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidityUnique(this.profileForm);\n                    }\n                    this.profileForm.filter((element: any) => element.id === 'old_password')[0].required = !!value;\n                });\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            this.loading = true;\n            const user : any = {};\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                environment['url'] + '/ws/users/update/' + this.userId, {'args': user},\n                {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId === this.userService.user.id) {\n                        this.userService.setUser(data.user);\n                    }\n                }),\n                finalize(() => this.loading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n\n        this.profileForm.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId === this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId !== this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{ this.profile['username'] }}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block m-2\" *ngIf=\"field.type !== 'select'\"\n                                    [class.pointer-events-none]=\"field.type === 'password' && this.disablePasswordModification\">\n                        <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input [readonly]=\"field.type === 'password' && this.disablePasswordModification\" matInput\n                               [formControl]=\"field['control']\" [type]=\"field.type\" [required]=\"field['required']\"\n                               [email]=\"field.type === 'email'\" [placeholder]=\"field.label | translate\">\n                        <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                        <mat-icon *ngIf=\"field.id === 'old_password'\" matSuffix (click)=\"field.type === 'password' ? field.type = 'text' : field.type = 'password'\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type === 'password'\" [class.fa-eye]=\"field.type !== 'password'\"></i>\n                        </mat-icon>\n                        <mat-icon *ngIf=\"field.id === 'new_password'\" matSuffix (click)=\"field.type === 'password' ? field.type = 'text' : field.type = 'password'\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type === 'password'\" [class.fa-eye]=\"field.type !== 'password'\"></i>\n                        </mat-icon>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['username'] === 'admin' || this.userService.getUserFromLocal()['privileges'] !== '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"valid_button\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit, SecurityContext} from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { SessionStorageService } from \"../../services/session-storage.service\";\nimport { environment } from \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PasswordVerificationService } from \"../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n    loading                 : boolean = true;\n    showPassword            : boolean = false;\n    image                   : any     = '';\n    resetToken              : string  = '';\n    passwordForm            : any[]   = [\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl()\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl()\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private sessionStorageService: SessionStorageService,\n        public passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n        this.resetToken = this.route.snapshot.queryParams['reset_token'];\n        if (!this.resetToken) {\n            this.translate.get('AUTH.token_not_provided').subscribe((translated: string) => {\n                this.notify.error(this.translate.instant(translated));\n                this.authService.logout();\n            });\n        }\n        const b64Content = this.sessionStorageService.get('loginImageB64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.sessionStorageService.save('loginImageB64', data);\n                    this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + data);\n                }),\n                finalize(() => { this.loading = false; }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.image = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + b64Content);\n            this.loading = false;\n        }\n\n        this.passwordForm.forEach((element: any) => {\n            element.control.valueChanges.subscribe((value: any) => {\n                if (value) {\n                    this.passwordVerification.checkPasswordValidity(this.passwordForm);\n                }\n            });\n        });\n    }\n\n    onSubmit() {\n        const passwordConfirm = this.passwordForm.filter((element: any) => element.id === 'password_check')[0].control.value;\n        this.http.put(environment['url'] + '/ws/users/resetPassword', {resetToken: this.resetToken, newPassword: passwordConfirm}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.password_reset_success'));\n                this.authService.logout();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.passwordForm.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div class=\"relative top-16 2xl:top-32 flex justify-center h-20\" *ngIf=\"this.image\">\n    <img [src]=\"this.image\" alt=\"Open-Capture logo\">\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <mat-card class=\"text-center w-full 2xl:w-1/4 sm:w-1/2\">\n        <mat-card-title class=\"my-4\">\n            {{ 'GLOBAL.reset-password' | translate }}\n        </mat-card-title>\n        <app-hint class=\"mx-2\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_min_length' | translate : {min: this.passwordVerification.passwordRules.minLength}\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.specialCharMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_special_char_mandatory' | translate\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.uppercaseMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_uppercase_mandatory' | translate\"></app-hint>\n        <app-hint *ngIf=\"this.passwordVerification.passwordRules.numberMandatory\" class=\"mx-2 -mt-5\" [specificClass]=\"'w-full'\" [message]=\"'AUTH.password_number_mandatory' | translate\"></app-hint>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of passwordForm\">\n                    <mat-form-field class=\"block mb-4\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field['control']\"\n                               [type]=\"this.showPassword ? 'text' : 'password'\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                        <mat-icon matSuffix (click)=\"this.showPassword = !this.showPassword\"\n                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword\" [class.fa-eye]=\"this.showPassword\"></i>\n                        </mat-icon>\n                        <mat-hint class=\"text-red-400\" *ngIf=\"field.control.invalid\" [innerHTML]=\"getErrorMessage(field.id)\"></mat-hint>\n                    </mat-form-field>\n                </ng-container>\n                <div>\n                    <button mat-button class=\"w-1/2 valid_button\" type=\"submit\">\n                        {{ 'AUTH.modify_password' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n        <div class=\"text-center relative top-8 text-gray-900\">\n            <a routerLink=\"/login\">\n                {{ 'AUTH.back_to_login' | translate }}\n            </a>\n        </div>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"../../../env\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-about-us',\n    templateUrl: './about-us.component.html',\n    styleUrls: ['./about-us.component.scss']\n})\n\nexport class AboutUsComponent implements OnInit {\n    lastVersion    : any       = '';\n    loading        : boolean   = true;\n    isProd         : boolean   = false;\n    currentVersion : any       = 'dev';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.isProd = environment.production;\n        this.currentVersion = environment.version;\n        this.http.get(environment['url'] + '/ws/config/gitInfo').pipe(\n            tap((data: any) => {\n                if (data['git_latest']) {\n                    this.lastVersion = data['git_latest'];\n                } else {\n                    this.lastVersion = 'error';\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                Open-Capture&nbsp;<span *ngIf=\"!this.loading\"><strong>version <span id=\"gitVersion\">{{ this.currentVersion }}</span></strong>&nbsp;</span>\n                <span *ngIf=\"this.lastVersion === 'error'\">\n                    |<span class=\"text-red-600\">&nbsp;{{ 'ERROR.git_connection' | translate }}</span>\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion > this.currentVersion && this.isProd\">\n                    | {{ 'ABOUT-US.new_version_available' | translate }} (<strong>\n                        <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                           target=\"_blank\">{{ this.lastVersion }}</a>\n                    </strong>)\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion < this.currentVersion && this.isProd\">\n                    | {{ 'ABOUT-US.are_you_in_future' | translate }} ({{ 'ABOUT-US.last_official_version' | translate }}&nbsp;:\n                    <strong>\n                        <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                            target=\"_blank\">{{ this.lastVersion }}</a>\n                    </strong>)\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div id=\"license\" class=\"text-center mt-10\">\n                <h2>{{ 'ABOUT-US.license' | translate }}</h2>\n                {{ 'ABOUT-US.distributed_under' | translate }}\n                <a class=\"text-green-400\" href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n                    {{ 'ABOUT-US.gnu_license' | translate }}\n                </a>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"edissyum text-center mt-10 text-lg\" style=\"line-height: 35px !important;\">\n                <h2>{{ 'ABOUT-US.editor' | translate }}</h2>\n                <div class=\"grid grid-cols-2 gap-10 w-1/2 m-auto\">\n                    <div class=\"text-right\">\n                        Edissyum Consulting <br>\n                        98 Avenue Pierre Semard <br>\n                        84200 Carpentras\n                    </div>\n                    <div class=\"text-left\" style=\"width: 200%\">\n                        {{ 'ABOUT-US.official_website' | translate }} : <a class=\"text-green-400\" rel=\"noopener\" href=\"https://kutt.it/OpenCaptureWebSite\" target=\"_blank\">open-capture.com</a><br>\n                        Documentation : <a class=\"text-green-400\" rel=\"noopener\" href=\"https://kutt.it/DocumentationV2\" target=\"_blank\">edissyum.gitbook.io/open-capture/</a> <br>\n                        Support : <a class=\"text-green-400\" rel=\"noopener\" href=\"https://kutt.it/OCForInvoices_ISSUES\" target=\"_blank\">github.com/edissyum/opencapture</a>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"flex justify-center items-center mt-10 mb-5\">\n                <div>\n                    <img src=\"assets/imgs/login_image.png\" alt=\"Open-Capture\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n            </div>\n            <div class=\"logo grid grid-cols-7\">\n                <div id=\"verifier\" class=\"m-auto col-start-2 col-span-2\">\n                    <img src=\"assets/imgs/logo_verifier.png\" alt=\"Open-Capture Verifier\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n                <div id=\"splitter\" class=\"m-auto col-start-5 col-span-2\">\n                    <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : BRICH Oussama</h3>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div id=\"dependency\" class=\"text-center mt-10 mb-10\">\n                <h2>{{ 'ABOUT-US.dependency' | translate }}</h2>\n                <h4><i>{{ 'ABOUT-US.thanks_to_developers' | translate }}</i></h4>\n                <div>\n                    <ul>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://angular.io/\">Angular</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://material.angular.io/\">Angular Material</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://jquery.com/download/\">jQuery</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kreuzerk/ng-sortgrid\">NgSortGridModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/telebroad/ngx-file-drag-drop\">NgxFileDragDropModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ngx-translate/core\">NgxTranslateModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/swimlane/ngx-charts\">NgxCharts</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ngx-translate/\">NgxTranslate</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Kr0san89/ng-click-outside\">Click Outside 2</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/tyxla/remove-accents\">Remove-accent</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/hjnilsson/country-flags\">SVG Country Flags</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/angular-material-extensions/select-country\">Select Country</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://tailwindcss.com/\">Tailwind CSS</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://fontawesome.com/\">FontAwesome</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" rel=\"noopener\" href=\"https://www.npmjs.com/package/moment\">moment</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport {Component, OnInit, SecurityContext, ViewEncapsulation} from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../services/session-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from  \"../../../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { LocaleService } from \"../../../../services/locale.service\";\nimport { PasswordVerificationService } from \"../../../../services/password-verification.service\";\nimport {FormControl, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-configurations',\n    templateUrl: './configurations.component.html',\n    styleUrls: ['./configurations.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfigurationsComponent implements OnInit {\n    columnsToDisplay        : string[]      = ['id', 'label', 'description', 'type', 'content', 'actions'];\n    emailTestControl        : FormControl   = new FormControl('', Validators.email);\n    tokenExpirationControl  : FormControl   = new FormControl(7);\n    tokenUserControl        : FormControl   = new FormControl('');\n    headers                 : HttpHeaders   = this.authService.headers;\n    filteredUsers           : Observable<any> | any;\n    updateLoading           : boolean       = false;\n    updating                : boolean       = false;\n    sending                 : boolean       = false;\n    smtpFormValid           : boolean       = false;\n    loading                 : boolean       = true;\n    configurations          : any           = [];\n    allConfigurations       : any           = [];\n    toHighlight             : string        = '';\n    token                   : string        = '';\n    search                  : string        = '';\n    loginImage              : any           = '';\n    loginBottomMessage      : FormControl   = new FormControl();\n    loginTopMessage         : FormControl   = new FormControl();\n    pageSize                : number        = 10;\n    pageIndex               : number        = 0;\n    selectedIndex           : number        = 0;\n    total                   : number        = 0;\n    offset                  : number        = 0;\n    units                   : any           = [\n        {\n            id: 'general',\n            label: marker('MAILCOLLECT.smtp_general')\n        },\n        {\n            id: 'auth',\n            label: marker('MAILCOLLECT.smtp_auth')\n        },\n        {\n            id: 'notif_error',\n            label: marker('MAILCOLLECT.smtp_notif_error')\n        }\n    ];\n    smtpForm                : any[]         = [\n        {\n            id: 'smtpHost',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_host'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'smtpPort',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_port'),\n            type: 'number',\n            required: true\n        },\n        {\n            id: 'smtpProtocoleSecure',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_protocol'),\n            type: 'select',\n            required: true,\n            values: [\n                {\n                    id: 'none',\n                    label: marker('MAILCOLLECT.protocol_none')\n                },\n                {\n                    id: 'ssl',\n                    label: 'SSL'\n                },\n                {\n                    id: 'tls',\n                    label: 'TLS'\n                }\n            ]\n        },\n        {\n            id: 'smtpNotifOnError',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_notif_on_error'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'smtpDelay',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_delay'),\n            type: 'number',\n            required: false\n        },\n        {\n            id: 'smtpAuth',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.enable_smtp_auth'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'smtpLogin',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_login'),\n            type: 'text',\n            required: false\n        },\n        {\n            id: 'smtpPwd',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_pwd'),\n            type: 'password',\n            required: false\n        },\n        {\n            id: 'smtpFromMail',\n            unit: 'auth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_from_mail'),\n            type: 'text',\n            required: false\n        },\n        {\n            id: 'smtpDestAdminMail',\n            unit: 'notif_error',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_dest_admin_mail'),\n            type: 'text',\n            required: false\n        }\n    ];\n    colorsMap               : any[]         = [\n        '#97BF3D', 'Open-Capture Green',\n        '#A7A8AA', 'Open-Capture Light Gray',\n        '#4C4C4E', 'Open-Capture Gray',\n        '#ECCAFA', 'Light Purple',\n        '#C2E0F4', 'Light Blue',\n\n        '#2DC26B', 'Green',\n        '#F1C40F', 'Yellow',\n        '#E03E2D', 'Red',\n        '#B96AD9', 'Purple',\n        '#3598DB', 'Blue',\n\n        '#169179', 'Dark Turquoise',\n        '#E67E23', 'Orange',\n        '#BA372A', 'Dark Red',\n        '#843FA1', 'Dark Purple',\n        '#236FA1', 'Dark Blue',\n\n        '#000000', 'Black',\n        '#ffffff', 'White'\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService,\n        public passwordVerification: PasswordVerificationService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/configurations') || lastUrl === '/') {\n            if (this.sessionStorageService.get('configurationsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('configurationsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('configurationsPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurations', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allConfigurations = data.configurations;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/smtp', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    Object.keys(data.configuration[0].data.value).forEach((config: any ) => {\n                        this.smtpForm.forEach((element: any) => {\n                            if (element.id === config) {\n                                if (data.configuration[0].data.value[config]) {\n                                    element.control.setValue(data.configuration[0].data.value[config]);\n                                }\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/loginBottomMessage', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginBottomMessage.setValue(data.configuration[0].data.value);\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/loginTopMessage', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.loginTopMessage.setValue(data.configuration[0].data.value);\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        const b64Content = this.sessionStorageService.get('loginImageB64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.loginImage = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loginImage = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + b64Content);\n        }\n\n        this.loadConfigurations();\n        this.smtpForm.forEach((element: any) => {\n            if (element.id === 'smtpNotifOnError' || element.id === 'smtpAuth') {\n                const unit = element.unit;\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.smtpForm.forEach((element: any) => {\n                        if (element.unit === unit && (element.id !== 'smtpNotifOnError' && element.id !== 'smtpAuth')) {\n                            if (!value) {\n                                element.control.disable();\n                            } else {\n                                element.control.enable();\n                            }\n                        }\n                    });\n                });\n                element.control.setValue(element.control.value);\n            }\n        });\n        this.http.get(environment['url'] + '/ws/users/list?mode=webservice', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.filteredUsers = this.tokenUserControl.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, data.users) : data.users)\n                );\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => (option.lastname + ' ' + option.firstname + ' (' + option.username + ')').toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    onTabChanged(event: any) {\n        this.selectedIndex = event.index;\n    }\n\n    updateLoginBottomText() {\n        const data: any = {\n            'value': this.loginBottomMessage.value\n        };\n        if (this.privilegesService.hasPrivilege('update_login_bottom_message')) {\n            this.http.put(environment['url'] + '/ws/config/updateConfiguration/loginBottomMessage', {'args': data},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('CONFIGURATIONS.login_bottom_message_updated'));\n                }),\n                finalize(() => this.updating = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('ERROR.no_privilege_update_bottom_login'));\n        }\n    }\n\n    updateLoginTopText() {\n        const data: any = {\n            'value': this.loginTopMessage.value\n        };\n        if (this.privilegesService.hasPrivilege('update_login_top_message')) {\n            this.http.put(environment['url'] + '/ws/config/updateConfiguration/loginTopMessage', {'args': data},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('CONFIGURATIONS.login_top_message_updated'));\n                }),\n                finalize(() => this.updating = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('ERROR.no_privilege_update_top_login'));\n        }\n    }\n\n    setSelectedUser(event: any) {\n        this.tokenUserControl.setValue(event.option.value.username);\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    copyToken() {\n        navigator.clipboard.writeText(this.token).then(() => {\n            this.notify.success(this.translate.instant('CONFIGURATIONS.token_copied'));\n        });\n    }\n\n    generateAuthToken() {\n        if (this.tokenUserControl.value && this.tokenExpirationControl.value) {\n            const args = {\n                'username': this.tokenUserControl.value,\n                'expiration': this.tokenExpirationControl.value\n            };\n            this.http.post(environment['url'] + '/ws/auth/generateAuthToken', args, {headers: this.authService.headers}).pipe(\n                tap((token: any) => {\n                    if (token) {\n                        this.token = token['token'];\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('CONFIGURATIONS.check_form_completion'));\n        }\n    }\n\n    updatePasswordRules() {\n        this.updating = true;\n        if (!this.passwordVerification.minLengthEnabled) {\n            this.passwordVerification.passwordRules.minLength = 0;\n        } else if (this.passwordVerification.passwordRules.minLength === 0) {\n            this.passwordVerification.passwordRules.minLength = 8;\n        }\n\n        const args = {\n            'value': this.passwordVerification.passwordRules,\n            'type': 'json',\n            'description': ''\n        };\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/passwordRules', {'args': args},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CONFIGURATIONS.password_rules_updated'));\n            }),\n            finalize(() => this.updating = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onClick(logo: any) {\n        logo.click();\n    }\n\n    disableField(unit: any) {\n        let ret = false;\n        const enableUnit = this.smtpForm.find((element: any) => element.type === 'boolean' && element.unit === unit);\n        if (enableUnit) {\n            ret = enableUnit.control.value !== true;\n        }\n        return ret;\n    }\n\n    testSmtp() {\n        if (this.emailTestControl.errors) {\n            this.notify.error(this.translate.instant('MAILCOLLECT.test_email_bad_format'));\n            return;\n        }\n        this.updateSmtp(false);\n\n        this.sending = true;\n        this.smtpFormValid = false;\n        this.http.post(environment['url'] + '/ws/smtp/test', {'email': this.emailTestControl.value}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('MAILCOLLECT.smtp_test_success', {email: this.emailTestControl.value}));\n            }),\n            finalize(() => {\n                this.sending = false;\n                this.smtpFormValid = true;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateSmtp(showSuccess: boolean = true) {\n        if (this.isValidForm(this.smtpForm)) {\n            const data: any = {\n                'value': {}\n            };\n\n            this.smtpForm.forEach((element: any) => {\n                data['value'][element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/config/updateConfiguration/smtp', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    if (showSuccess) {\n                        this.notify.success(this.translate.instant('MAILCOLLECT.smtp_general_settings_updated'));\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    upload(fileInput: any) {\n        if (fileInput.target.files && fileInput.target.files[0]) {\n            this.loading = true;\n            const reader = new FileReader();\n            reader.readAsDataURL(fileInput.target.files[0]);\n            reader.onload = (value: any) => {\n                const args = {\n                    'image_content': value.target.result\n                };\n                this.http.put(environment['url'] + '/ws/config/updateLoginImage', {'args': args},\n                    {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.loginImage = this.sanitizer.sanitize(SecurityContext.URL, args['image_content']);\n                        this.sessionStorageService.save('loginImageB64', args['image_content'].replace('data:image/png;base64,', ''));\n                        const currentUrl = this.router.url;\n                        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n                            this.router.navigate([currentUrl]).then();\n                        });\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.login_image_changed'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            };\n        }\n    }\n\n    loadConfigurations() {\n        this.http.get(environment['url'] + '/ws/config/getConfigurations?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configurations[0]) {\n                    this.total = data.configurations[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadConfigurations();\n                }\n                this.configurations = data.configurations;\n                this.configurations.forEach((element: any) => {\n                    switch (element.data.type) {\n                        case 'int':\n                            element.data.label_type = marker('CONFIGURATIONS.int');\n                            break;\n                        case 'float':\n                            element.data.label_type = marker('CONFIGURATIONS.float');\n                            break;\n                        case 'string':\n                            element.data.label_type = marker('CONFIGURATIONS.string');\n                            break;\n                        case 'bool':\n                            element.data.label_type = marker('CONFIGURATIONS.bool');\n                            break;\n                        case 'list':\n                            element.data.label_type = marker('CONFIGURATIONS.list');\n                            break;\n                        default:\n                            break;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number) {\n        this.updateLoading = true;\n        const value = event.target ? event.target.value : event.value;\n        this.configurations.forEach((element: any) => {\n            if (element.id === id) {\n                element.data.value = value;\n                this.http.put(environment['url'] + '/ws/config/updateConfiguration/' + element.id, element, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.configuration_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchConfiguration(event: any) {\n        this.search = event.target.value;\n        this.loadConfigurations();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('configurationsPageIndex', event.pageIndex);\n        this.loadConfigurations();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allConfigurations.slice();\n        if (!sort.active || sort.direction === '') {\n            this.configurations = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.configurations = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'description': return this.compare(a.data.description, b.data.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.configurations = this.configurations.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    isValidForm(form: any, notify: boolean = true) {\n        let state = true;\n\n        form.forEach((element: any) => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        if (!state && notify) {\n            this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n        } else {\n            this.smtpFormValid = true;\n        }\n\n        return state;\n    }\n\n    getErrorMessage(field: any, process: any) {\n        let error: any;\n        process.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                    this.smtpFormValid = false;\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'CONFIGURATIONS.search_config' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchConfiguration($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <mat-tab-group [dynamicHeight]=\"true\" (selectedTabChange)=\"onTabChanged($event)\">\n                <mat-tab [label]=\"'CONFIGURATIONS.global' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center\" style=\"height: calc(100vh - 12rem) !important\">\n                        <div class=\"grid grid-cols-2 gap-6\">\n                            <div>\n                                <h3 class=\"text-gray-900 m-4\">{{ \"CONFIGURATIONS.change_image\" | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <mat-hint class=\"text-gray-600\">\n                                    {{ \"CONFIGURATIONS.authorized_extensions\" | translate }}\n                                </mat-hint>\n                                <div style=\"min-height: 12rem\" class=\"mt-4\">\n                                    <img class=\"shadow-md hover:shadow-xl m-auto p-2 transition-all ease-in-out duration-500\n                                 cursor-pointer shadow-gray-900 hover:shadow-gray-900\" [src]=\"this.loginImage\" alt=\"Login\"\n                                         (click)=\"onClick(logo)\">\n                                    <input type=\"file\" name=\"files[]\" #logo (change)=\"upload($event)\" accept=\"image/png\" class=\"hidden\">\n                                </div>\n                            </div>\n                            <div>\n                                <h3 class=\"text-gray-900 m-4\">{{ \"PRIVILEGES.change_language\" | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <div class=\"ml-3 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('change_language')\">\n                                    <mat-form-field class=\"language origin-top-right right-0 mt-4 w-1/2\">\n                                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                                        <mat-select (selectionChange)=\"this.localeService.changeLocale($event)\"\n                                                    [disabled]=\"this.localeService.localeLoading\"\n                                                    [(value)]=\"this.localeService.currentLang\">\n                                            <mat-option *ngFor=\"let lang of this.localeService.langs\" [value]=\"lang[0]\">\n                                                {{ lang[1] }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <i *ngIf=\"this.localeService.localeLoading\"\n                                       class=\"fa-solid fa-earth-europe fa-beat fa-lg text-gray-900 ml-4\"></i>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"grid grid-cols-2\" *ngIf=\"this.selectedIndex === 0\">\n                            <div class=\"mb-5 mx-5 h-48\">\n                                <h3 class=\"text-gray-900\">{{ 'CONFIGURATIONS.top_login_text' | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <editor [formControl]=\"loginTopMessage\"\n                                        licenseKey=\"gpl\"\n                                        [init]=\"{\n                                            resize: false,\n                                            menubar: false,\n                                            branding: false,\n                                            promotion: false,\n                                            language: 'fr_FR',\n                                            base_url: './tinymce',\n                                            language_url: './assets/i18n/tinymce/langs/fr_FR.js',\n                                            toolbar: 'undo redo | formatselect | bold italic forecolor backcolor | link | alignleft aligncenter alignright alignjustify',\n                                            plugins: 'lists link image table code wordcount',\n                                            color_map: this.colorsMap\n                                        }\">\n                                </editor>\n                                <div class=\"flex justify-center m-6\"\n                                     [class.cursor-not-allowed]=\"!this.privilegesService.hasPrivilege('update_login_top_message')\">\n                                    <button class=\"p-6\" type=\"submit\" mat-button (click)=\"updateLoginTopText()\"\n                                            [disabled]=\"!this.privilegesService.hasPrivilege('update_login_top_message')\"\n                                            [class.valid_button]=\"this.privilegesService.hasPrivilege('update_login_top_message')\"\n                                            [class.invalid_button]=\"!this.privilegesService.hasPrivilege('update_login_top_message')\">\n                                        {{ 'CONFIGURATIONS.save_login_text' | translate }}\n                                    </button>\n                                </div>\n                            </div>\n                            <div class=\"mb-5 mx-5 h-48\">\n                                <h3 class=\"text-gray-900\">{{ 'CONFIGURATIONS.bottom_login_text' | translate }}</h3>\n                                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                                <editor [formControl]=\"loginBottomMessage\"\n                                        licenseKey=\"gpl\"\n                                        [init]=\"{\n                                            resize: false,\n                                            menubar: false,\n                                            branding: false,\n                                            promotion: false,\n                                            language: 'fr_FR',\n                                            base_url: './tinymce',\n                                            language_url: './assets/i18n/tinymce/langs/fr_FR.js',\n                                            toolbar: 'undo redo | formatselect | bold italic forecolor backcolor | link | alignleft aligncenter alignright alignjustify',\n                                            plugins: 'lists link image table code wordcount',\n                                            color_map: this.colorsMap\n                                        }\">\n                                </editor>\n                                <div class=\"flex justify-center m-6\"\n                                     [class.cursor-not-allowed]=\"!this.privilegesService.hasPrivilege('update_login_bottom_message')\">\n                                    <button class=\"p-6\" type=\"submit\" mat-button (click)=\"updateLoginBottomText()\"\n                                            [disabled]=\"!this.privilegesService.hasPrivilege('update_login_bottom_message')\"\n                                            [class.valid_button]=\"this.privilegesService.hasPrivilege('update_login_bottom_message')\"\n                                            [class.invalid_button]=\"!this.privilegesService.hasPrivilege('update_login_bottom_message')\">\n                                        {{ 'CONFIGURATIONS.save_login_text' | translate }}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.generate_token' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 12rem) !important\">\n                        <div class=\"text-center\">\n                            <div class=\"text-lg text-gray-900 mb-4\">\n                                {{ \"CONFIGURATIONS.token_expiration\" | translate }}\n                            </div>\n                            <mat-form-field class=\"w-96\">\n                                <input matInput type=\"number\" [formControl]=\"this.tokenExpirationControl\" required>\n                            </mat-form-field>\n                        </div>\n                        <hr class=\"border border-green-400 w-1/4 m-auto mb-4\">\n                        <div class=\"text-center w-auto\">\n                            <div class=\"text-lg text-gray-900 mb-4\">\n                                {{ \"CONFIGURATIONS.token_associated_user\" | translate }}\n                            </div>\n                            <mat-form-field class=\"w-96\">\n                                <input matInput id=\"associated_user\" type=\"text\" [matAutocomplete]=\"autocomplete\" [placeholder]=\"'CONFIGURATIONS.select_user' | translate\" required>\n                                <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"setSelectedUser($event)\">\n                                    <mat-option *ngFor=\"let option of this.filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                        <span [innerHTML]=\"option['firstname'] + ' ' + option['lastname'] + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                                    </mat-option>\n                                </mat-autocomplete>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"text-center mt-8\" [class.cursor-not-allowed]=\"!this.privilegesService.hasPrivilege('generate_auth_token')\">\n                            <button class=\"valid_button\" type=\"submit\" mat-button (click)=\"generateAuthToken()\"\n                                    [disabled]=\"!this.privilegesService.hasPrivilege('generate_auth_token')\"\n                                    [class.invalid_button]=\"!this.privilegesService.hasPrivilege('generate_auth_token')\"\n                                    [class.valid_button]=\"this.privilegesService.hasPrivilege('generate_auth_token')\">\n                                {{ 'CONFIGURATIONS.generate_token' | translate }}\n                            </button>\n                            <div class=\"mt-8 text-gray-900\" *ngIf=\"this.token\">\n                                {{ this.token }}\n                                <i class=\"ml-4 fa-solid fa-copy text-2xl cursor-pointer\"\n                                   [matTooltip]=\"'CONFIGURATIONS.copy_token' | translate\"\n                                   (click)=\"copyToken()\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.password_rules' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow text-center\">\n                        <div class=\"flex flex-col items-center justify-center items-center gap-4 mt-4\">\n                            <div class=\"text-left\">\n                                <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.minLengthEnabled\" [checked]=\"this.passwordVerification.passwordRules.minLength > 0\"\n                                                  (change)=\"updatePasswordRules()\" [disabled]=\"this.updating\">\n                                    {{ \"CONFIGURATIONS.enable_password_min_length\" | translate }}\n                                </mat-slide-toggle>\n                                <mat-form-field appearance=\"outline\" class=\"w-4/12 ml-2\">\n                                    <mat-label>{{ \"CONFIGURATIONS.password_min_length\" | translate }}</mat-label>\n                                    <input matInput type=\"number\" [(ngModel)]=\"this.passwordVerification.passwordRules.minLength\"\n                                           [disabled]=\"!this.passwordVerification.minLengthEnabled || this.updating\" (change)=\"updatePasswordRules()\">\n                                </mat-form-field>\n                                <div class=\"mb-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules['uppercaseMandatory']\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_uppercase_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                                <div class=\"my-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules['specialCharMandatory']\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_special_char_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                                <div class=\"my-4\">\n                                    <mat-slide-toggle [(ngModel)]=\"this.passwordVerification.passwordRules['numberMandatory']\" (change)=\"updatePasswordRules()\"\n                                                      [disabled]=\"this.updating\">\n                                        {{ \"CONFIGURATIONS.enable_password_number_mandatory\" | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.smtp' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 12rem) !important\">\n                        <div class=\"hint text-center\">\n                            <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n                            <div class=\"message w-auto\">\n                                <span class=\"text-lg\">\n                                    {{ \"CONFIGURATIONS.smtp_test_email\" | translate }}\n                                </span>\n                                <mat-form-field subscriptSizing=\"dynamic\" [ngStyle]=\"{'width.ch': this.emailTestControl.value.length + 0.5, 'min-width.ch': 25}\">\n                                    <input matInput type=\"text\" [formControl]=\"this.emailTestControl\">\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <ng-container *ngFor=\"let unit of this.units\">\n                            <h2 class=\"text-gray-900\">{{ unit['label'] | translate }}</h2>\n                            <div class=\"flex justify-center mx-10\">\n                                <div class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                                    <ng-container *ngFor=\"let field of this.smtpForm\">\n                                        <ng-container *ngIf=\"field.unit === unit['id']\">\n                                            <div *ngIf=\"field.type === 'boolean'\" class=\"col-span-3 mb-8\">\n                                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field['control']\">\n                                                    {{ field.label | translate }}\n                                                </mat-slide-toggle>\n                                            </div>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'text' || field.type === 'password' || field.type === 'number'\"\n                                                [class.pointer-events-none]=\"disableField(unit['id'])\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [type]=\"field.type\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [readonly]=\"disableField(unit['id'])\" (keyup)=\"isValidForm(this.smtpForm, false)\">\n                                                <mat-icon matSuffix *ngIf=\"field.id === 'smtpPwd'\" (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text' \"\n                                                          class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                                </mat-icon>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\" (selectionChange)=\"isValidForm(this.smtpForm, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                                        {{ option['label'] | translate }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </ng-container>\n                        <div class=\"flex justify-center items-center mt-4\">\n                            <span [class.cursor-not-allowed]=\"!this.emailTestControl.value\">\n                                <button class=\"p-6 mr-4 border min-w-56 text-white transition border-solid duration-300 border-gray-900 hover:text-gray-900 hover:bg-transparent\" mat-button (click)=\"this.testSmtp()\"\n                                        [disabled]=\"!this.emailTestControl.value\"\n                                        [class.bg-gray-900]=\"this.emailTestControl.value\"\n                                        [class.bg-gray-400]=\"!this.emailTestControl.value\">\n                                    <span *ngIf=\"!this.sending\">\n                                        {{ \"CONFIGURATIONS.test_smtp\" | translate }}\n                                    </span>\n                                    <span *ngIf=\"this.sending\">\n                                        <i class=\"fa fa-circle-notch fa-spin fa-2x\"></i>\n                                    </span>\n                                </button>\n                            </span>\n                            <button class=\"ml-4 min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.smtpFormValid\"\n                                    [class.bg-gray-400]=\"!this.smtpFormValid\"\n                                    [class.bg-green-400]=\"this.smtpFormValid\"\n                                    type=\"submit\" mat-button (click)=\"this.updateSmtp()\">\n                                {{ 'CONFIGURATIONS.update_smtp' | translate }}\n                            </button>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'CONFIGURATIONS.advanced' | translate\">\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center\" style=\"height: calc(100vh - 12rem) !important\">\n                        <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n                        <mat-table matSort [dataSource]=\"configurations\" (matSortChange)=\"sortData($event)\">\n                            <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"label\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"description\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.data.description }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"type\">\n                                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.type' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\"> {{ element.data['label_type'] | translate }} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"content\">\n                                <mat-header-cell *matHeaderCellDef>{{ 'HEADER.value' | translate }} </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                                    <ng-container *ngIf=\"!element['updateMode'] else update\">\n                                        {{ element.data.value }}\n                                    </ng-container>\n                                    <ng-template #update>\n                                        <mat-form-field appearance=\"outline\" *ngIf=\"element.data.type === 'bool'\">\n                                            <mat-select class=\"relative -top-3\" [(ngModel)]=\"element.data.value\"\n                                                        (selectionChange)=\"updateValue($event, element.id)\">\n                                                <mat-option [value]=\"true\">Activer</mat-option>\n                                                <mat-option [value]=\"false\">Désactiver</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\"\n                                                        *ngIf=\"element.data.type === 'int' || element.data.type === 'float'\">\n                                            <input matInput type=\"number\" [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                                   class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                        </mat-form-field>\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"element.data.type === 'string'\">\n                                            <input matInput [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                                   class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                        </mat-form-field>\n                                        <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"element.data.type === 'list'\">\n                                            <mat-select class=\"relative -top-3\" [(ngModel)]=\"element.data.value\"\n                                                        (selectionChange)=\"updateValue($event, element.id)\">\n                                                <mat-option *ngFor=\"let option of element.data.options\" [value]=\"option\">\n                                                    {{ option }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </ng-template>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"actions\">\n                                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\">\n                                    <button *ngIf=\"!element['updateMode']\"\n                                            (click)=\"element.updateMode = true\"\n                                            matTooltip=\"{{ 'CONFIGURATIONS.update' | translate }}\" mat-icon-button\n                                            class=\"inline-block align-text-top\">\n                                        <i class=\"fa-solid fa-edit text-lg\"></i>\n                                    </button>\n                                    <button *ngIf=\"element['updateMode']\"\n                                            (click)=\"element.updateMode = false;\"\n                                            matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                            class=\"inline-block align-text-top\">\n                                        <i *ngIf=\"!this.updateLoading\" class=\"fa-solid text-lg fa-check\"></i>\n                                        <i *ngIf=\"this.updateLoading\" class=\"fa-solid text-lg fa-circle-notch fa-spin\"></i>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n                        </mat-table>\n                        <mat-paginator [showFirstLastButtons]=\"true\"\n                                       *ngIf=\"this.total > 0\"\n                                       [length]=\"this.total\"\n                                       [pageSize]=\"pageSize\"\n                                       [pageIndex]=\"pageIndex\"\n                                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                                       (page)=\"onPageChange($event)\">\n                        </mat-paginator>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { remove } from \"remove-accents\";\n\n@Component({\n    selector: 'app-custom-fields',\n    templateUrl: './custom-fields.component.html',\n    styleUrls: ['./custom-fields.component.scss']\n})\nexport class CustomFieldsComponent implements OnInit {\n    update                    : boolean       = false;\n    loading                   : boolean       = true;\n    isSplitter                : boolean       = false;\n    inactiveFields            : any[]         = [];\n    activeFields              : any[]         = [];\n    selectOptions             : any[]         = [];\n    inactiveOrActive          : string        = '';\n    regexResult               : string        = '';\n    regexControl              : FormControl   = new FormControl();\n    regexTestControl          : FormControl   = new FormControl();\n    regexRemoveSpaces         : FormControl   = new FormControl();\n    regexCharMinControl       : FormControl   = new FormControl();\n    regexRemoveSpecialChar    : FormControl   = new FormControl();\n    regexRemoveKeyWord        : FormControl   = new FormControl();\n    regexRemoveKeyWordControl : FormControl   = new FormControl();\n    regexFormat               : FormControl   = new FormControl();\n    conditionalControl        : FormControl   = new FormControl();\n    formats                   : any[]         = [\n        {\n            'id': 'text',\n            'label': this.translate.instant('FORMATS.text')\n        },\n        {\n            'id': 'date',\n            'label': this.translate.instant('FORMATS.date')\n        },\n        {\n            'id': 'number_float',\n            'label': this.translate.instant('FORMATS.number')\n        },\n        {\n            'id': 'amount',\n            'label': this.translate.instant('FORMATS.amount')\n        },\n        {\n            'id': 'luhn_algorithm',\n            'label': this.translate.instant('FORMATS.luhn_algorithm')\n        },\n        {\n            'id': 'iban',\n            'label': this.translate.instant('FORMATS.iban')\n        },\n        {\n            'id': 'adeli',\n            'label': this.translate.instant('FORMATS.adeli')\n        }\n    ];\n    updateCustomId            : any;\n    form!                     : FormGroup;\n    parent                    : any[]         = [\n        {\n            'id': 'verifier',\n            'label': this.translate.instant('HOME.verifier')\n        },\n        {\n            'id': 'splitter',\n            'label': this.translate.instant('HOME.splitter')\n        }\n    ];\n    addFieldInputs            : any[]         = [\n        {\n            field_id    : 'label_short',\n            controlType : 'text',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('HEADER.label_short'),\n            autoComplete: [],\n            required    : true\n        },\n        {\n            field_id    : 'label',\n            controlType : 'text',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('HEADER.label'),\n            autoComplete: [],\n            required    : true\n        },\n        {\n            field_id    : 'module',\n            controlType : 'dropdown',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('CUSTOM-FIELDS.module'),\n            options     : [\n                { key: 'verifier', value: this.translate.instant('HOME.verifier') },\n                { key: 'splitter', value: this.translate.instant('HOME.splitter') }\n            ],\n            required: true,\n            autoComplete: []\n        },\n        {\n            field_id    : 'type',\n            controlType : 'dropdown',\n            control     : new FormControl('', Validators.required),\n            label       : this.translate.instant('CUSTOM-FIELDS.type'),\n            options     : [\n                { key: 'text', value: this.translate.instant('FORMATS.text') },\n                { key: 'regex', value: this.translate.instant('FORMATS.regex')},\n                { key: 'date', value: this.translate.instant('FORMATS.date') },\n                { key: 'textarea', value: this.translate.instant('FORMATS.textarea') },\n                { key: 'select', value: this.translate.instant('FORMATS.select') },\n                { key: 'checkbox', value: this.translate.instant('CUSTOM-FIELDS.checkbox') }\n            ],\n            autoComplete: [],\n            required    : true\n        },\n        {\n            field_id    : 'metadata_key',\n            controlType : 'text',\n            control     : new FormControl(),\n            label       : this.translate.instant('SETTINGS.autocomplete'),\n            limit       : 'splitter',\n            autoComplete: [\n                { key: '', value: this.translate.instant('SPLITTER.other') },\n                { key: 'SEPARATOR_MEM', value: this.translate.instant('SPLITTER.separator_mem') },\n                { key: 'SEPARATOR_META1', value: this.translate.instant('SPLITTER.separator_meta1') },\n                { key: 'SEPARATOR_META2', value: this.translate.instant('SPLITTER.separator_meta2') },\n                { key: 'SEPARATOR_META3', value: this.translate.instant('SPLITTER.separator_meta3') }\n            ],\n            required    : false,\n            class       : \"\"\n        }\n    ];\n    unallowedFields           : any[]         = ['vat_rate', 'vat_amount', 'no_rate_amount', 'description', 'line_ht',\n        'unit_price', 'quantity'];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.retrieveCustomFields();\n        this.form = this.toFormGroup();\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'label_short') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value.match(/[\\u00C0-\\u017F]/gi) !== null) {\n                        element.control.setValue(remove(value));\n                    }\n\n                    if (value.match(/[!-\\/=£`°\\\\|\\]\\[@{}]/g) !== null) {\n                        element.control.setValue(value.replace(/[!-\\/=£`°\\\\|\\]\\[@{}]/g, \"\"));\n                    }\n                });\n            }\n        });\n    }\n\n    dropCustomField(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.enableCustomField(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n        }\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.addFieldInputs.forEach(input => {\n            group[input.field_id] = input.required ? new FormControl(input.value || '', Validators.required)\n                : new FormControl(input.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    checkCharMin() {\n        if (this.regexCharMinControl.value && this.regexCharMinControl.value.match(/^[0-9]+$/) === null) {\n            this.regexCharMinControl.setValue(this.regexCharMinControl.value.replace(/[^0-9]/g, \"\"));\n        }\n    }\n\n    checkRegex() {\n        if (this.regexTestControl.value && this.regexControl.value && this.regexControl.value !== '\\\\') {\n            const regex = new RegExp(this.regexControl.value, 'gi');\n            this.regexResult = this.regexTestControl.value.replace(regex, function(str: any) {\n                if (str) {\n                    return '<span class=\"text-white bg-green-400 p-1\">' + str + '</span>';\n                }\n                return str;\n            });\n            if (this.regexRemoveKeyWord.value && this.regexRemoveKeyWordControl.value) {\n                const regex = new RegExp(this.regexRemoveKeyWordControl.value, 'gi');\n                const tmp = this.regexTestControl.value.match(regex);\n                if (tmp === null) {\n                    return;\n                }\n                this.regexResult = this.regexResult.replace('<span class=\"text-white bg-green-400 p-1\">', '');\n                this.regexResult = this.regexResult.replace('</span>', '');\n                const colored = '<span class=\"text-white bg-green-400 p-1\">' + this.regexResult.replace(tmp, '') + '</span>';\n                this.regexResult = tmp + colored;\n            }\n        }\n    }\n\n    moveToActive(index: number) {\n        this.enableCustomField(this.inactiveFields, this.activeFields, index, this.activeFields.length);\n    }\n\n    moveToInactive(index: number) {\n        this.enableCustomField(this.activeFields, this.inactiveFields, index, this.inactiveFields.length);\n    }\n\n    displayInput(input: any) {\n        let _return = false;\n        if (input.limit) {\n            this.addFieldInputs.forEach((element: any) => {\n                if (element.field_id === 'module') {\n                    if (element.control.value === input.limit) {\n                        _return = true;\n                    }\n                }\n            });\n        }\n        this.isSplitter = _return;\n        return _return;\n    }\n\n    retrieveCustomFields() {\n        this.loading        = true;\n        this.activeFields   = [];\n        this.inactiveFields = [];\n        let newField;\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data['customFields'].forEach((field: any) => {\n                    newField = {\n                        'id'            : field.id,\n                        'label_short'   : field.label_short,\n                        'module'        : field.module,\n                        'label'         : field.label,\n                        'type'          : field.type,\n                        'enabled'       : field.enabled,\n                        'settings'      : field.settings,\n                        'metadata_key'  : field.metadata_key\n                    };\n                    field.enabled ? this.activeFields.push(newField) : this.inactiveFields.push(newField);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    moduleSelected() {\n        let moduleSelected = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'module') {\n                moduleSelected = element.control.value !== '';\n            }\n        });\n        return moduleSelected;\n    }\n\n    addSelectOption() {\n        const module = this.addFieldInputs.filter((field: any) => field.field_id === 'module')[0].control.value;\n\n        this.selectOptions.push({\n            idControl           : new FormControl(),\n            labelControl        : new FormControl(),\n            customFieldControl  : new FormControl(),\n            customValueControl  : new FormControl(),\n        });\n        this.selectOptions[this.selectOptions.length - 1].customFieldControl.values = this.activeFields.filter((field: any) => field.module === module);\n    }\n\n    displayChoicesList() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                if (element.control.value && (element.control.value === 'checkbox' || element.control.value === 'select')) {\n                    _return = true;\n                }\n            }\n        });\n        return _return;\n    }\n\n    displayConditional() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'module') {\n                if (element.control.value && element.control.value === 'verifier') {\n                    _return = true;\n                }\n            }\n            if (_return && element.field_id === 'type') {\n                _return = element.control.value && element.control.value === 'select';\n            }\n        });\n        return _return;\n    }\n\n    displayRegex() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                if (element.control.value && element.control.value === 'regex') {\n                    _return = true;\n                }\n            }\n        });\n        return _return;\n    }\n\n    dropSelectOption(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.selectOptions, event.previousIndex, event.currentIndex);\n    }\n\n    deleteSelectOption(optionIndex: number) {\n        this.selectOptions.splice(optionIndex, 1);\n    }\n\n    addSelectOptionsToArgs(args: any) {\n        args.options  = [];\n        for (const option of this.selectOptions) {\n            args.options.push({\n                id                      : option.idControl.value,\n                label                   : option.labelControl.value,\n                conditional_custom_field: option.customFieldControl.value,\n                conditional_custom_value: option.customValueControl.value\n            });\n        }\n        return args;\n    }\n\n    addCustomField() {\n        this.loading = true;\n        let newField: any = {};\n        newField = this.addSelectOptionsToArgs(newField);\n        for (const field of this.addFieldInputs) {\n            if (field.required && !field.control.value) {\n                field.control.setErrors({'incorrect': true});\n                this.loading = false;\n                return;\n            }\n            newField[field.field_id] = field.control.value;\n            if (this.unallowedFields.includes(newField.label_short)) {\n                this.notify.error(this.translate.instant('CUSTOM-FIELDS.unallowed_fields'));\n                this.loading = false;\n                return;\n            }\n        }\n\n        if (newField.type === 'regex') {\n            newField.regex = {\n                'format': this.regexFormat.value,\n                'content': this.regexControl.value,\n                'test': this.regexTestControl.value,\n                'char_min': this.regexCharMinControl.value,\n                'remove_spaces': this.regexRemoveSpaces.value,\n                'remove_keyword': this.regexRemoveKeyWord.value,\n                'remove_special_char': this.regexRemoveSpecialChar.value,\n                'remove_keyword_value': this.regexRemoveKeyWordControl.value\n            };\n        }\n\n        if (this.conditionalControl.value) {\n            newField.conditional = this.conditionalControl.value;\n        }\n\n        this.http.post(environment['url'] + '/ws/customFields/add', newField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                newField['id'] = data.id;\n                this.retrieveCustomFields();\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_added'));\n                this.resetForm();\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustom(customFieldId: number, activeOrInactive: string) {\n        this.http.delete(environment['url'] + '/ws/customFields/delete/' + customFieldId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.deleted'));\n\n                if (activeOrInactive === 'active') {\n                    this.activeFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                } else {\n                    this.inactiveFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustomField(customFieldId: number, activeOrInactive: string) {\n        if (customFieldId) {\n            this.http.get(environment['url'] + '/ws/customFields/customPresentsInForm/' + customFieldId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data) {\n                        let custom_label = '';\n                        this.activeFields.forEach((element:any) => {\n                            if (element.id === customFieldId) {\n                                custom_label = element.label;\n                            }\n                        });\n                        if (custom_label === '') {\n                            this.inactiveFields.forEach((element:any) => {\n                                if (element.id === customFieldId) {\n                                    custom_label = element.label;\n                                }\n                            });\n                        }\n\n                        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                            data: {\n                                confirmTitle        : this.translate.instant('CUSTOM-FIELDS.custom_exists'),\n                                confirmText         : this.translate.instant('CUSTOM-FIELDS.confirm_delete', {custom_field: custom_label}),\n                                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                                confirmButtonColor  : \"warn\",\n                                cancelButton        : this.translate.instant('GLOBAL.cancel')\n                            },\n                            width: \"600px\"\n                        });\n\n                        dialogRef.afterClosed().subscribe((result: any) => {\n                            if (result) {\n                                this.deleteCustom(customFieldId, activeOrInactive);\n                            }\n                        });\n                    } else {\n                        this.deleteCustom(customFieldId, activeOrInactive);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableCustomField(oldList: any[], newList: any[], oldIndex: number, newIndex: number) {\n        let updatedField = oldList[oldIndex];\n\n        updatedField = {\n            'id': updatedField['id'],\n            'label_short': updatedField['label_short'],\n            'module': updatedField['module'],\n            'label': updatedField['label'],\n            'type': updatedField['type'],\n            'enabled': !updatedField['enabled'],\n            'metadata_key': updatedField['metadata_key']\n        };\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                transferArrayItem(\n                    oldList,\n                    newList,\n                    oldIndex,\n                    newIndex,\n                );\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomOnSubmit() {\n        let updatedField : any = {};\n        updatedField           = this.addSelectOptionsToArgs(updatedField);\n        updatedField['id']     = this.updateCustomId;\n        if (this.inactiveOrActive === 'active') {\n            this.addFieldInputs.forEach((field: any) => {\n                this.activeFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = true;\n        } else {\n            this.addFieldInputs.forEach((field: any) => {\n                this.inactiveFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = false;\n        }\n\n        if (updatedField.type === 'regex') {\n            updatedField.regex = {\n                'format': this.regexFormat.value,\n                'content': this.regexControl.value,\n                'test': this.regexTestControl.value,\n                'char_min' : this.regexCharMinControl.value,\n                'remove_spaces': this.regexRemoveSpaces.value,\n                'remove_keyword': this.regexRemoveKeyWord.value,\n                'remove_special_char': this.regexRemoveSpecialChar.value,\n                'remove_keyword_value': this.regexRemoveKeyWordControl.value\n            };\n        }\n\n        if (this.conditionalControl.value) {\n            updatedField.conditional = this.conditionalControl.value;\n        }\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n                this.resetForm();\n                this.retrieveCustomFields();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomField(customField: any, activeOrInactive: string) {\n        this.update = true;\n        this.selectOptions = [];\n        if (customField) {\n            this.updateCustomId = customField.id;\n            this.inactiveOrActive = activeOrInactive;\n            this.addFieldInputs.forEach((element: any) => {\n                element.control.setValue(customField[element.field_id]);\n            });\n\n            if (customField.settings.options) {\n                for (const option of customField.settings.options) {\n                    this.selectOptions.push({\n                        'idControl'          : new FormControl(option.id),\n                        'labelControl'       : new FormControl(option.label),\n                        'customFieldControl' : new FormControl(option.conditional_custom_field),\n                        'customValueControl' : new FormControl(option.conditional_custom_value)\n                    });\n                    this.selectOptions[this.selectOptions.length - 1].customFieldControl.values = this.activeFields.filter((field: any) => field.module === customField.module);\n                }\n            }\n\n            if (customField.settings.regex) {\n                this.regexFormat.setValue(customField.settings.regex.format);\n                this.regexControl.setValue(customField.settings.regex.content);\n                this.regexCharMinControl.setValue(customField.settings.regex.char_min);\n                this.regexRemoveSpaces.setValue(customField.settings.regex.remove_spaces);\n                this.regexRemoveKeyWord.setValue(customField.settings.regex.remove_keyword);\n                this.regexRemoveSpecialChar.setValue(customField.settings.regex.remove_special_char);\n                this.regexRemoveKeyWordControl.setValue(customField.settings.regex.remove_keyword_value);\n            }\n            if (customField.settings.conditional) {\n                this.conditionalControl.setValue(customField.settings.conditional);\n            }\n        }\n    }\n\n    resetForm() {\n        this.regexFormat.setValue('');\n        this.regexControl.setValue('');\n        this.regexRemoveSpaces.setValue('');\n        this.regexRemoveKeyWord.setValue('');\n        this.regexCharMinControl.setValue('');\n        this.regexRemoveSpecialChar.setValue('');\n        this.regexRemoveKeyWordControl.setValue('');\n        this.addFieldInputs.forEach((field: any) => {\n            field.control.setValue('');\n            field.control.setErrors(null);\n        });\n        this.selectOptions      = [];\n        this.inactiveOrActive   = '';\n        this.updateCustomId     = '';\n        this.update             = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-accordion>\n                <mat-expansion-panel [expanded]=\"true\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            {{ 'SETTINGS.add_custom_fields' | translate }}\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <form [formGroup]=\"form\">\n                        <div class=\"cursor-pointer relative top-9 ml-4 w-1/12\" [matTooltip]=\"'CUSTOM-FIELDS.reset' | translate\"\n                             (click)=\"resetForm()\">\n                            <i class=\"self-center fa-solid fa-sync fa-lg hover:text-green-400\"></i>\n                        </div>\n                        <div class=\"mx-12 grid grid-cols-4 gap-4\" [class.grid-cols-5]=\"isSplitter\">\n                            <div *ngFor=\"let input of addFieldInputs\">\n                                <div *ngIf=\"!input.limit || (input.limit && displayInput(input))\">\n                                    <mat-form-field *ngIf=\"input['controlType'] === 'text'\" class=\"w-full\">\n                                        <mat-label>{{ input.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"input['control']\" [id]=\"input['field_id']\"\n                                               [type]=\"input.type\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [panelWidth]=\"'auto'\">\n                                        <span *ngIf=\"input.control.value === null || input.control.value === '' || input.control.value === undefined\">\n                                            <mat-option *ngFor=\"let option of input['autoComplete']\" [value]=\"option.key\">\n                                                <span class=\"text-md\" [innerHTML]=\"option.value | translate\"></span>\n                                                <span class=\"text-sm text-green-400 ml-3\">{{ option.key }}</span>\n                                            </mat-option>\n                                        </span>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"input['field_id'] === 'module'\" class=\"w-full\">\n                                        <mat-label>{{ input.label | translate }}</mat-label>\n                                        <mat-select [id]=\"input['field_id']\" [formControl]=\"input['control']\">\n                                            <ng-container *ngFor=\"let opt of input.options\">\n                                                <mat-option [value]=\"opt.key\">\n                                                    {{ opt.value | translate }}\n                                                </mat-option>\n                                            </ng-container>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"input['field_id'] === 'type'\" class=\"w-full\"\n                                                    [class.opacity-70]=\"!moduleSelected()\" [class.pointer-events-none]=\"!moduleSelected()\">\n                                        <mat-label>{{ input.label | translate }}</mat-label>\n                                        <mat-select [id]=\"input['field_id']\" [formControl]=\"input['control']\">\n                                            <ng-container *ngFor=\"let opt of input.options\">\n                                                <mat-option [value]=\"opt.key\">\n                                                    {{ opt.value | translate }}\n                                                </mat-option>\n                                            </ng-container>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center flex-col\" *ngIf=\"displayChoicesList()\">\n                            <span class=\"text-center mb-2 text-xl\">\n                                {{ 'CUSTOM-FIELDS.select_options' | translate }}\n                            </span>\n                            <mat-checkbox class=\"cursor-pointer text-center\" [formControl]=\"this.conditionalControl\" *ngIf=\"displayConditional()\">\n                                <span>{{ 'CUSTOM-FIELDS.conditional_field' | translate }}</span>\n                            </mat-checkbox>\n                            <div class=\"flex justify-center\">\n                                <div cdkDropList class=\"select-options-list w-10/12\" (cdkDropListDropped)=\"dropSelectOption($event)\">\n                                    <div *ngIf=\"selectOptions.length === 0\" class=\"my-14 text-center text-gray-400\">\n                                        {{ 'CUSTOM-FIELDS.no_option_added' | translate }}\n                                    </div>\n                                    <div class=\"drop-box-option p-4\" *ngFor=\"let option of selectOptions; let optionIndex = index;\" cdkDrag>\n                                        <mat-form-field class=\"mr-2\" [ngClass]=\"{'w-1/2': !conditionalControl.value, 'w-1/4': conditionalControl.value}\">\n                                            <mat-label>{{ 'HEADER.id' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option['idControl']\" type=\"text\">\n                                        </mat-form-field>\n                                        <mat-form-field class=\"mr-2\" [ngClass]=\"{'w-1/2': !conditionalControl.value, 'w-1/4': conditionalControl.value}\">\n                                            <mat-label>{{ 'HEADER.label' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option['labelControl']\" type=\"text\">\n                                        </mat-form-field>\n                                        <mat-form-field class=\"w-1/4 mr-2 border-l-2 border-green-400 pl-2\" *ngIf=\"conditionalControl.value\">\n                                            <mat-label>{{ 'CUSTOM-FIELDS.custom_field_name' | translate }}</mat-label>\n                                            <mat-select [formControl]=\"option['customFieldControl']\" [(value)]=\"option['customFieldControl'].value\">\n                                                <mat-option *ngFor=\"let opt of option['customFieldControl'].values\" [value]=\"opt['id']\">\n                                                    {{ opt['label'] }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <mat-form-field class=\"w-1/4\" *ngIf=\"conditionalControl.value\">\n                                            <mat-label>{{ 'CUSTOM-FIELDS.conditional_value' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option['customValueControl']\" type=\"text\">\n                                        </mat-form-field>\n                                        <span class=\"relative text-gray-600 -top-8 -right-6 cursor-help\" *ngIf=\"displayConditional()\"\n                                              [matTooltip]=\"'CUSTOM-FIELDS.conditional_hint' | translate\">\n                                           <i class=\"fa-solid fa-circle-question text-base\"></i>\n                                        </span>\n                                        <div [matTooltip]=\"'CUSTOM-FIELDS.delete_choice' | translate\"\n                                             (click)=\"deleteSelectOption(optionIndex)\" class=\"relative top-1 h-8 -ml-2 mr-2 cursor-pointer\">\n                                            <i class=\"fa-solid fa-trash fa-lg hover:text-green-400\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div [matTooltip]=\"'CUSTOM-FIELDS.add_choice' | translate\"\n                                     (click)=\"addSelectOption()\" class=\"top-0 mx-2 h-8 inline-block\">\n                                    <i class=\"fa-solid fa-plus fa-lg hover:text-green-400\"></i>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center flex-col\" *ngIf=\"displayRegex()\">\n                            <hr class=\"border-green-400 w-11/12 m-auto\">\n                            <div class=\"mx-auto w-11/12 mt-8\">\n                                <div class=\"flex flex-row gap-10 justify-center\">\n                                    <mat-slide-toggle [formControl]=\"regexRemoveKeyWord\" class=\"mb-8 flex justify-center\" (change)=\"checkRegex()\">\n                                        <span class=\"justify-center\">{{ 'CUSTOM-FIELDS.regex_remove_keyword' | translate }}</span>\n                                        <span class=\"relative text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"'CUSTOM-FIELDS.regex_remove_keyword_hint' | translate\">\n                                           <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                    <mat-slide-toggle [formControl]=\"regexRemoveSpecialChar\" class=\"mb-8 flex justify-center\">\n                                        <span class=\"justify-center\">{{ 'CUSTOM-FIELDS.regex_remove_special_char' | translate }}</span>\n                                        <span class=\"relative text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"'CUSTOM-FIELDS.regex_remove_special_char_hint' | translate\">\n                                           <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                    <mat-slide-toggle [formControl]=\"regexRemoveSpaces\" class=\"mb-8 flex justify-center\">\n                                        <span class=\"justify-center\">{{ 'CUSTOM-FIELDS.regex_remove_spaces' | translate }}</span>\n                                    </mat-slide-toggle>\n                                </div>\n                                <div class=\"flex flex-row gap-10 justify-center w-11/12 m-auto\">\n                                    <mat-form-field class=\"w-1/2\">\n                                        <mat-label>{{ 'CUSTOM-FIELDS.regex_format' | translate }}</mat-label>\n                                        <mat-select [formControl]=\"regexFormat\" (selectionChange)=\"checkRegex()\">\n                                            <mat-option *ngFor=\"let opt of formats\" [value]=\"opt.id\">\n                                                {{ opt.label | translate }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field class=\"w-1/2\">\n                                        <mat-label>{{ 'FORMATS.char_min' | translate }}</mat-label>\n                                        <input matInput [value]=\"regexCharMinControl.value\"\n                                               [formControl]=\"regexCharMinControl\" (keyup)=\"checkCharMin()\">\n                                    </mat-form-field>\n                                </div>\n                                <hr class=\"border-green-400 w-1/2 mb-14 mt-2 mx-auto\">\n                                <div class=\"-mt-4 mb-4\">\n                                    <app-hint [specificClass]=\"'w-1/2'\" *ngIf=\"regexRemoveKeyWord.value\"\n                                              [message]=\"'CUSTOM-FIELDS.regex_remove_keyword_explanation' | translate\"></app-hint>\n                                </div>\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ 'FORMATS.regex' | translate }}</mat-label>\n                                    <textarea [cdkTextareaAutosize]=\"true\" [cdkAutosizeMinRows]=\"1\" matInput\n                                              [value]=\"regexControl.value\" [formControl]=\"regexControl\"\n                                              (keyup)=\"checkRegex()\" spellcheck=\"false\"></textarea>\n                                </mat-form-field>\n                                <mat-form-field class=\"w-full\" *ngIf=\"regexRemoveKeyWord.value\">\n                                    <mat-label>{{ 'CUSTOM-FIELDS.regex_remove_keyword_input' | translate }}</mat-label>\n                                    <textarea [cdkTextareaAutosize]=\"true\" [cdkAutosizeMinRows]=\"1\" matInput\n                                              [value]=\"regexRemoveKeyWordControl.value\" [formControl]=\"regexRemoveKeyWordControl\"\n                                              (keyup)=\"checkRegex()\" spellcheck=\"false\"></textarea>\n                                </mat-form-field>\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ 'FORMATS.test_string' | translate }}</mat-label>\n                                    <input matInput type=\"text\" [formControl]=\"regexTestControl\" (keyup)=\"checkRegex()\">\n                                </mat-form-field>\n                                <span>\n                                    {{ 'CUSTOM-FIELDS.regex_results' | translate }} : <span [innerHTML]=\"regexResult\"></span>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"flex justify-center m-5\">\n                            <button class=\"valid_button\" mat-button (click)=\"addCustomField()\" *ngIf=\"!update\">\n                                {{ 'CUSTOM-FIELDS.add' | translate }}\n                            </button>\n                            <button class=\"valid_button\"\n                                    mat-button (click)=\"$event.stopPropagation();updateCustomOnSubmit()\" *ngIf=\"update\">\n                                {{ 'CUSTOM-FIELDS.update' | translate }}\n                            </button>\n                        </div>\n                    </form>\n                </mat-expansion-panel>\n            </mat-accordion>\n            <div class=\"custom-fields-control w-full\">\n                <mat-tab-group>\n                    <mat-tab *ngFor=\"let parent of this.parent\" [label]=\"this.translate.instant(parent.label)\">\n                        <div cdkDropListGroup class=\"w-max mx-auto\">\n                            <div class=\"list-container\">\n                                <h2>{{ 'HEADER.inactive' | translate }}</h2>\n                                <div cdkDropList [cdkDropListData]=\"inactiveFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                     class=\"custom-fields-list\"\n                                     style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of inactiveFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button [matTooltip]=\"'GLOBAL.move_to_active' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToActive(i)\">\n                                                <i class=\"fa fa-plus\"></i>\n                                            </button>\n                                            <button [matTooltip]=\"'GLOBAL.edit' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'inactive')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button [matTooltip]=\"'GLOBAL.delete' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'inactive')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                                </div>\n                            </div>\n                            <div class=\"list-container\">\n                                <h2>{{ 'HEADER.active' | translate }}</h2>\n                                <div cdkDropList [cdkDropListData]=\"activeFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                     class=\"custom-fields-list\"\n                                     style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of activeFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button [matTooltip]=\"'GLOBAL.move_to_inactive' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToInactive(i)\">\n                                                <i class=\"fa fa-minus\"></i>\n                                            </button>\n                                            <button [matTooltip]=\"'GLOBAL.edit' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'active')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button [matTooltip]=\"'GLOBAL.delete' | translate\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'active')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../services/session-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-docservers',\n    templateUrl: './docservers.component.html',\n    styleUrls: ['./docservers.component.scss'],\n    providers: [\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }}\n    ]\n})\nexport class DocserversComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['id', 'docserver_id', 'description', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    docservers          : any           = [];\n    allDocservers       : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/docservers') || lastUrl === '/') {\n            if (this.sessionStorageService.get('docserversPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('docserversPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('docserversPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getDocservers', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allDocservers = data.docservers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadDocservers();\n    }\n\n    loadDocservers() {\n        this.http.get(environment['url'] + '/ws/config/getDocservers?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.docservers[0]) {\n                    this.total = data.docservers[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadDocservers();\n                }\n                this.docservers = data.docservers;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.docservers.forEach((element: any) => {\n            if (element.id === id) {\n                element.path = value;\n                this.http.put(environment['url'] + '/ws/config/updateDocserver/' + element.id, {'args': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('DOCSERVERS.docserver_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchDocservers(event: any) {\n        this.search = event.target.value;\n        this.loadDocservers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('docserversPageIndex', event.pageIndex);\n        this.loadDocservers();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allDocservers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.docservers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.docservers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.docservers = this.docservers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'DOCSERVERS.search_docserver' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchDocservers($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"w-full\">\n                <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n                <mat-table matSort [dataSource]=\"docservers\" (matSortChange)=\"sortData($event)\">\n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"docserver_id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header=\"docserver_id\"> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.docserver_id }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"description\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.description }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"content\">\n                        <mat-header-cell *matHeaderCellDef> {{ 'HEADER.path' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                            <ng-container *ngIf=\"!element['updateMode'] else update\">\n                                {{ element.path }}\n                            </ng-container>\n                            <ng-template #update>\n                                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                    <input matInput [value]=\"element.path\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                           class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                </mat-form-field>\n                            </ng-template>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <button *ngIf=\"!element['updateMode']\"\n                                    (click)=\"element.updateMode = true\"\n                                    matTooltip=\"{{ 'DOCSERVERS.update' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-edit text-lg\"></i>\n                            </button>\n                            <button *ngIf=\"element['updateMode']\"\n                                    (click)=\"element.updateMode = false;\"\n                                    matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                                <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                             class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n                </mat-table>\n                <mat-paginator [showFirstLastButtons]=\"true\"\n                               *ngIf=\"this.total > 0\"\n                               [length]=\"this.total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Essaid MEGHELLET <essaid.meghellet@edissyum.com>*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n  selector: 'app-login-methods',\n  templateUrl: './login-methods.component.html',\n  styleUrls: ['./login-methods.component.scss']\n})\nexport class LoginMethodsComponent implements OnInit {\n    loading                 : boolean   = true;\n    isSaveBtnDisabled       : boolean   = true;\n    isNextBtnDisabled       : boolean   = true;\n    isLaunchBtnDisabled     : boolean   = true;\n    isLaunchBtnClicked      : boolean   = false;\n    isProcessLaunched       : boolean   = false;\n    showPassword            : boolean   = false;\n    isLdapChecked           : boolean   = false;\n    isDefaultChecked        : boolean   = false;\n    connexionServerStatus   : boolean   = false;\n    synchroUsersStatus      : boolean   = false;\n    isProcessConnectionLaunched       : boolean   = false;\n    label                   : any[]     = [\n        marker ('LOGIN-METHODS.ldap'),\n        marker ('LOGIN-METHODS.default')\n    ];\n    loginMethods      : any[]     = [\n        {\n            login_method_name : '',\n            enabled :''\n        }\n    ];\n    connectionFormGroup     : any[]     = [\n        {\n            id: 'typeAD',\n            label: this.translate.instant('LOGIN-METHODS.typeAD'),\n            type: 'select',\n            control: new FormControl(),\n            values: ['openLDAP', 'adLDAP'],\n            required: true\n        },\n        {\n            id: 'host',\n            label: this.translate.instant('LOGIN-METHODS.host'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : ldap://192.168.10.180'\n        },\n        {\n            id: 'port',\n            label: this.translate.instant('LOGIN-METHODS.port'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : 389'\n        },\n        {\n            id: 'loginAdmin',\n            label: this.translate.instant('LOGIN-METHODS.login_admin'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : admin'\n        },\n        {\n            id: 'passwordAdmin',\n            label: this.translate.instant('LOGIN-METHODS.password_admin'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'baseDN',\n            label: this.translate.instant('LOGIN-METHODS.base_dn'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : dc=edissyum,dc=com'\n        },\n        {\n            id: 'prefix',\n            label: this.translate.instant('LOGIN-METHODS.prefix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : edissyum'\n        },\n        {\n            id: 'suffix',\n            label: this.translate.instant('LOGIN-METHODS.suffix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : @domaine-edisslab.com'\n        }\n\n    ];\n    synchroparamsFormGroup  : any[]     = [\n        {\n            id: 'attributSourceUser',\n            label: this.translate.instant('LOGIN-METHODS.source_user_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : uid'\n        },\n        {\n            id: 'classObject',\n            label: this.translate.instant('LOGIN-METHODS.class_Object'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : posixAccount'\n        },\n        {\n            id: 'classUser',\n            label: this.translate.instant('LOGIN-METHODS.class_user'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : objectClass'\n        },\n        {\n            id: 'attributFirstName',\n            label: this.translate.instant('LOGIN-METHODS.first_name_attribute'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : givenname'\n        },\n        {\n            id: 'attributLastName',\n            label: this.translate.instant('LOGIN-METHODS.last_name_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : sn'\n        },\n        {\n            id: 'usersDN',\n            label: this.translate.instant('LOGIN-METHODS.usersDN'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : cn=employes,ou=utilisateurs,dc=edissyum,dc=com'\n        },\n        {\n            id: 'attributRoleDefault',\n            label: this.translate.instant('LOGIN-METHODS.role_default'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : Utilisateur'\n        }\n\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        private _formBuilder: FormBuilder,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                this.loginMethods = data.login_methods;\n                for ( const login_method_name of this.loginMethods ) {\n                    if (login_method_name['method_name'] === 'default') {\n                        this.isDefaultChecked = !!login_method_name['enabled'];\n                    }\n                    if (login_method_name['method_name'] === 'ldap') {\n                        this.isLdapChecked = !!login_method_name['enabled'];\n                    }\n                }\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.synchroparamsFormGroup.forEach((element:any) => {\n                    if (element.id === 'attributRoleDefault') {\n                        element.values = data.roles;\n                    }\n                });\n\n                this.http.get(environment['url'] + '/ws/auth/retrieveLdapConfigurations', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        const configs : any = data.ldap_configurations;\n                        this.connectionFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                if (element.type !== 'password') {\n                                    element.control.setValue(config.data[element.id]);\n                                }\n                            }\n                        });\n                        this.synchroparamsFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                element.control.setValue(config.data[element.id]);\n                            }\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    updateTypeAd(event: any, id: any) {\n        if  (event.isUserInput) {\n            let required = true;\n            if (id === 'typeAD' && event.source.value === 'adLDAP') {\n                required = false;\n            }\n            this.connectionFormGroup.forEach((element: any) => {\n                if (element.id === 'baseDN') {\n                    element.required = required;\n                }\n            });\n        }\n    }\n\n    changedDefaultMethod(loginMethodName: any): void {\n        if (!this.isDefaultChecked) {\n            this.enableLoginMethod(loginMethodName);\n        } else if (this.isDefaultChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    changedLdapMethod(loginMethodName: any): void {\n        if (!this.isLdapChecked) {\n            this.isLdapChecked = true;\n        } else if (this.isLdapChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    isValidForm() {\n        let state = true;\n        this.connectionFormGroup.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    disableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/disableLoginMethodName', loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = false;\n                }\n                if (loginMethodName['method_name'] === 'ldap') {\n                    this.isLdapChecked = false;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_disabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    enableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/enableLoginMethodName', loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = true;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_enabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    checkLdapConnexion(): void {\n        if (this.isValidForm()) {\n            this.isProcessConnectionLaunched = true;\n            const server_data : any = {};\n            this.connectionFormGroup.forEach(element => {\n                server_data[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/connectionLdap', server_data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.isProcessConnectionLaunched = false;\n                    this.isLaunchBtnDisabled = false;\n                    this.connexionServerStatus = true;\n                    this.isNextBtnDisabled = false;\n                    this.notify.success(this.translate.instant('LOGIN-METHODS.server_ldap_connection'));\n                }),\n                catchError ((err: any) => {\n                    this.isProcessConnectionLaunched = false;\n                    this.isLaunchBtnDisabled = true;\n                    this.isSaveBtnDisabled = true;\n                    this.isNextBtnDisabled = true;\n                    this.connexionServerStatus = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of (false);\n                })\n            ).subscribe();\n        }\n    }\n\n    ldapSynchronization(): void {\n        if (this.isValidForm()) {\n            this.isLaunchBtnClicked = true;\n            this.isProcessLaunched = true;\n            const synchronizationData : any = {};\n            this.connectionFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n            this.synchroparamsFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/ldapSynchronization', synchronizationData, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.isProcessLaunched = false;\n                    this.isLaunchBtnClicked = false;\n                    this.isSaveBtnDisabled = false;\n                    this.isNextBtnDisabled = false;\n                    this.isLaunchBtnDisabled = false;\n                    this.synchroUsersStatus = true;\n                    this.notify.success(this.translate.instant('LOGIN-METHODS.result_synchronization_operation', {'users_added':data['create_users'], 'users_updated':data['update_users'], 'users_disabled':data['disabled_users']}));\n                }),\n                catchError ((err: any) => {\n                    this.isProcessLaunched = false;\n                    this.isLaunchBtnClicked = false;\n                    this.isSaveBtnDisabled = true;\n                    this.isLaunchBtnDisabled = true;\n                    this.synchroUsersStatus = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of (false);\n                })\n            ).subscribe();\n        } else {\n            this.isLaunchBtnDisabled = true;\n        }\n    }\n\n    saveLoginMethodConfig(): void {\n        if (this.isValidForm()) {\n            if (this.connexionServerStatus && this.synchroUsersStatus) {\n                const methodDataToSave : any = {};\n                this.connectionFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                this.synchroparamsFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                this.http.post(environment['url'] + '/ws/auth/saveLoginMethodConfig', methodDataToSave, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.isLdapChecked = true;\n                        this.notify.success(this.translate.instant('LOGIN-METHODS.save_ldap_infos_success'));\n                    }),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }\n        } else {\n            this.isSaveBtnDisabled = true;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <app-hint [message]=\"'LOGIN-METHODS.limit_enabled_methods' | translate\"></app-hint>\n            <mat-tab-group class=\"login-methods-tab\">\n                <mat-tab *ngFor=\"let method of this.loginMethods\"\n                         [label]=\"'LOGIN-METHODS.' + method['method_name'] | translate\">\n                    <div class=\"list-container\">\n                        <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'default'\">\n                            <mat-slide-toggle [checked]=\"this.isDefaultChecked\" (change)=\"changedDefaultMethod(method)\">\n                                <span class=\"justify-center\">\n                                    {{ 'LOGIN-METHODS.enable_method' | translate }}\n                                </span>\n                            </mat-slide-toggle>\n                        </div>\n                        <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'ldap'\">\n                            <mat-slide-toggle [checked]=\"this.isLdapChecked\" (change)=\"changedLdapMethod(method)\">\n                                <span class=\"justify-center\">\n                                    {{ 'LOGIN-METHODS.enable_method' | translate }}\n                                </span>\n                            </mat-slide-toggle>\n                            <div [class.pointer-events-none]=\"!this.isLdapChecked\"\n                                 [class.opacity-30]=\"!this.isLdapChecked\">\n                                <mat-stepper orientation=\"horizontal\">\n                                    <mat-step>\n                                        <form class=\"grid gap-x-8 gap-y-2 grid-cols-3 text-center m-5\">\n                                            <ng-template matStepLabel>\n                                                {{ \"LOGIN-METHODS.connection\" | translate }}\n                                            </ng-template>\n                                            <ng-container *ngFor=\"let field of connectionFormGroup\">\n                                                <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                                    <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                                        <mat-option *ngFor=\"let option of field.values\"\n                                                                    (onSelectionChange)=\"updateTypeAd($event, field.id)\"\n                                                                [value]=\"option\">{{ option }}</mat-option>\n                                                    </mat-select>\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'password'\">\n                                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                                    <input matInput [formControl]=\"field['control']\"\n                                                           [placeholder]=\"field.label | translate\"\n                                                           [required]=\"field['required']\"\n                                                           [type]=\"showPassword ? 'text' : 'password'\">\n                                                    <mat-icon matSuffix class=\"text-green-400 relative cursor-pointer -top-1.5 text-base\"\n                                                              (click)=\"this.showPassword = !this.showPassword\">\n                                                        <i class=\"fa fa-1x\"  [class.fa-eye-slash]=\"!showPassword\"\n                                                           [class.fa-eye]=\"showPassword\"></i>\n                                                    </mat-icon>\n                                                    <mat-hint>{{ field.hint }}</mat-hint>\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                                    <input matInput [formControl]=\"field['control']\"\n                                                           [type]=\"field.type\" [required]=\"field['required']\"\n                                                           [placeholder]=\"field.label | translate\">\n                                                    <mat-hint>{{ field.hint }}</mat-hint>\n                                                </mat-form-field>\n                                            </ng-container>\n                                        </form>\n                                        <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                            <button type=\"submit\" mat-button (click)=\"checkLdapConnexion()\"\n                                                    class=\"gray_button col-start-3\">\n                                                <span *ngIf=\"!this.isProcessConnectionLaunched\">\n                                                    {{ \"LOGIN-METHODS.test_connection\" | translate }}\n                                                </span>\n                                                <i *ngIf=\"this.isProcessConnectionLaunched\"\n                                                   class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                                            </button>\n                                            <div [class.cursor-not-allowed]=\"this.isNextBtnDisabled\">\n                                                <button matStepperNext mat-button [disabled]=\"this.isNextBtnDisabled\"\n                                                        [class.bg-gray-400]=\"this.isNextBtnDisabled\"\n                                                        [class.border-gray-400]=\"this.isNextBtnDisabled\"\n                                                        class=\"valid_button ml-2 w-full\">\n                                                    {{ \"LOGIN-METHODS.next\" | translate }}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </mat-step>\n                                    <mat-step [aria-labelledby]=\"this.isNextBtnDisabled ? 'disabled_step' : ''\">\n                                        <ng-template matStepLabel>\n                                            {{ \"LOGIN-METHODS.synchronization\" | translate }}\n                                        </ng-template>\n                                        <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                            <ng-container *ngFor=\"let field of synchroparamsFormGroup\">\n                                                <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                                    <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                                        <mat-option *ngFor=\"let option of field.values\"\n                                                                [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                                                    </mat-select>\n                                                    <mat-hint>{{ field.hint }}</mat-hint>\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                                    <input matInput [formControl]=\"field['control']\"\n                                                           [required]=\"field['required']\"\n                                                           [type]=\"field.type\" [placeholder]=\"field.label | translate\">\n                                                    <mat-hint>{{ field.hint }}</mat-hint>\n                                                </mat-form-field>\n                                            </ng-container>\n                                        </div>\n                                        <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                            <button matStepperPrevious mat-button class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 col-start-3\">\n                                                {{ \"LOGIN-METHODS.return\" | translate }}\n                                            </button>\n                                            <div [class.cursor-not-allowed]=\"this.isNextBtnDisabled\">\n                                                <button matStepperNext mat-button [disabled]=\"this.isNextBtnDisabled\"\n                                                        [class.bg-gray-400]=\"this.isNextBtnDisabled\"\n                                                        [class.border-gray-400]=\"this.isNextBtnDisabled\"\n                                                        class=\"valid_button ml-2 w-full\">\n                                                    {{ \"LOGIN-METHODS.next\" | translate }}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </mat-step>\n                                    <mat-step [aria-labelledby]=\"this.isNextBtnDisabled ? 'disabled_step' : ''\">\n                                        <ng-template matStepLabel>\n                                            {{ \"LOGIN-METHODS.launching\" | translate }}\n                                        </ng-template>\n                                        <p>{{ \"LOGIN-METHODS.end_ldap_setup\" | translate }}</p>\n                                        <div class=\"mb-6 grid grid-cols-3 gap-4 h-12 text-gray-900\">\n                                            <button matStepperPrevious mat-button\n                                                    class=\"p-6 border-solid border-red-400 border bg-red-400 text-white\n                                                    hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                                {{ \"LOGIN-METHODS.return\" | translate }}\n                                            </button>\n                                            <div [class.cursor-not-allowed]=\"this.isLaunchBtnDisabled\">\n                                                <button matStepperNext mat-button [disabled]=\"this.isLaunchBtnDisabled\"\n                                                        [class.bg-gray-400]=\"this.isLaunchBtnDisabled\" type=\"submit\"\n                                                        (click)=\"ldapSynchronization()\"\n                                                        [class.border-gray-400]=\"this.isLaunchBtnDisabled\" class=\"valid_button ml-2 w-full\">\n                                                    <span *ngIf=\"!this.isProcessLaunched\">\n                                                        {{ \"LOGIN-METHODS.launch\" | translate }}\n                                                    </span>\n                                                    <i *ngIf=\"this.isLaunchBtnClicked\"\n                                                       class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                                                </button>\n                                            </div>\n                                            <button (click)=\"saveLoginMethodConfig()\" mat-button\n                                                    [disabled]=\"this.isSaveBtnDisabled\"\n                                                    [class.cursor-not-allowed]=\"this.isSaveBtnDisabled\" class=\"valid_button\">\n                                                {{ \"LOGIN-METHODS.register\" | translate }}\n                                            </button>\n                                        </div>\n                                    </mat-step>\n                                </mat-stepper>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl } from '@angular/forms';\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n    selector: 'app-mailcollect',\n    templateUrl: './mailcollect.component.html',\n    styleUrls: ['./mailcollect.component.scss']\n})\n\nexport class MailCollectComponent implements OnInit {\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    folderLoading       : boolean       = false;\n    processLoading      : boolean       = false;\n    loadingProcessName  : boolean       = false;\n    formValid           : { [key: string]: boolean; } = {};\n    allVerifierWorkflows: any           = [];\n    allSplitterWorkflows: any           = [];\n    processesMail       : any           = [];\n    allprocessesMail    : any           = [];\n    processes           : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    selectedIndex       : number        = 0;\n    search              : string        = '';\n    defaultProcessData  : any           = [\n        {\n            id: 'verifier_insert_body_as_doc',\n            unit: 'verifier',\n            control: new FormControl(false),\n            label: marker('MAILCOLLECT.insert_body_as_doc'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'splitter_insert_body_as_doc',\n            unit: 'splitter',\n            control: new FormControl(false),\n            label: marker('MAILCOLLECT.insert_body_as_doc'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'name',\n            control: new FormControl()\n        },\n        {\n            id: 'secured_connection',\n            unit: 'general',\n            control: new FormControl(true),\n            label: marker('MAILCOLLECT.secured_connection'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'hostname',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.hostname'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'enabled',\n            control: new FormControl(),\n            disabled: true,\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'port',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.port'),\n            type: 'number',\n            required: true\n        },\n        {\n            id: 'login',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('FORMATS.email'),\n            type: 'text',\n            required: true\n        },\n        {\n            id: 'password',\n            unit: 'general',\n            control: new FormControl(),\n            label: marker('USER.password'),\n            type: 'password',\n            required: true\n        },\n        {\n            id: 'verifier_workflow_id',\n            unit: 'verifier',\n            control: new FormControl(),\n            label: marker('WORKFLOW.id'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'is_splitter',\n            unit: 'splitter',\n            control: new FormControl(false),\n            label: marker('MAILCOLLECT.is_splitter'),\n            type: 'boolean',\n            required: false\n        },\n        {\n            id: 'splitter_technical_workflow_id',\n            unit: 'splitter',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.splitter_technical_workflow_id'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'folder_to_crawl',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_to_crawl'),\n            type: 'autocomplete',\n            required: true\n        },\n        {\n            id: 'folder_destination',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_destination'),\n            type: 'autocomplete',\n            required: true\n        },\n        {\n            id: 'folder_trash',\n            unit: 'folders',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_trash'),\n            type: 'autocomplete',\n            required: false\n        },\n        {\n            id: 'action_after_process',\n            unit: 'folders',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.action_after_process'),\n            type: 'select',\n            values: [\n                {\n                    id: 'move',\n                    label: marker('MAILCOLLECT.move')\n                },\n                {\n                    id: 'delete',\n                    label: marker('MAILCOLLECT.delete')\n                },\n                {\n                    id: 'none',\n                    label: marker('MAILCOLLECT.none')\n                }\n            ],\n            required: true\n        }\n    ];\n    toHighlight         : string        = '';\n    folders             : any[]         = [];\n    units               : any           = [\n        {\n            id: 'general',\n            label: marker('MAILCOLLECT.general')\n        },\n        {\n            id: 'folders',\n            label: marker('MAILCOLLECT.folders')\n        },\n        {\n            id: 'verifier',\n            label: marker('MAILCOLLECT.verifier')\n        },\n        {\n            id: 'splitter',\n            label: marker('MAILCOLLECT.splitter')\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allVerifierWorkflows = data.workflows;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'verifier_workflow_id') {\n                        element.values = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.allVerifierWorkflows) : this.allVerifierWorkflows)\n                        );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSplitterWorkflows = data.workflows;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'splitter_technical_workflow_id') {\n                        element.values = element.control.valueChanges.pipe(\n                            startWith(''),\n                            map(option => option ? this._filter(option, this.allSplitterWorkflows) : this.allSplitterWorkflows)\n                        );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.loadProcess();\n        });\n    }\n\n    processIsEnabled(process: any) {\n        let enabled = false;\n        process.forEach((element: any) => {\n            if (element.id === 'enabled') {\n                enabled = element.control.value;\n            }\n        });\n        return enabled;\n    }\n\n    updateProcessName(process: any, new_process_name: any, updateDatabase: boolean = true) {\n        if (new_process_name) {\n            this.loadingProcessName = true;\n            this.formValid[new_process_name] = false;\n            let oldProcessName = '';\n            process.forEach((element: any) => {\n                if (element.id === 'name') {\n                    oldProcessName = element.control.value;\n                    element.control.setValue(new_process_name);\n                }\n            });\n            if (updateDatabase && oldProcessName) {\n                this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + oldProcessName, {\"name\": new_process_name}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('MAILCOLLECT.process_name_updated'));\n                    }),\n                    finalize(() => {\n                        this.loadingProcessName = false;\n                        process.edit_name = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    displayFn(option: any) {\n        if (option) {\n            return option.name ? option.name : option.label ? option.label : option.input_label;\n        }\n        return '';\n    }\n\n    addProcess() {\n        const newProcess: any = [];\n        this.defaultProcessData.forEach((process_default: any) => {\n            newProcess.push(process_default);\n        });\n        this.processes.push(newProcess);\n    }\n\n    loadProcess() {\n        this.processes = [];\n        this.http.get(environment['url'] + '/ws/mailcollect/getProcesses', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.processes.forEach((process: any) => {\n                    const newProcess: any = [];\n                    this.defaultProcessData.forEach((process_default: any) => {\n                        Object.keys(process).forEach((element: any) => {\n                            if (element === process_default.id) {\n                                let value = process[element];\n                                if (element === 'name') {\n                                    this.formValid[value] = true;\n                                }\n                                else if (element === 'verifier_workflow_id') {\n                                    for (let i = 0; i < this.allVerifierWorkflows.length; i++) {\n                                        if (this.allVerifierWorkflows[i].workflow_id === process[element]) {\n                                            value = this.allVerifierWorkflows[i];\n                                        }\n                                    }\n                                } else if (element === 'splitter_technical_workflow_id') {\n                                    for (let i = 0; i < this.allSplitterWorkflows.length; i++) {\n                                        if (parseInt(this.allSplitterWorkflows[i].id) === parseInt(process[element])) {\n                                            value = this.allSplitterWorkflows[i];\n                                        }\n                                    }\n                                } else if (element === 'folder_trash' || element === 'folder_to_crawl' || element === 'folder_destination') {\n                                    value = {id: process[element], label: process[element]};\n                                }\n                                process_default.control.setValue(value);\n                                newProcess.push(process_default);\n                            }\n                        });\n                    });\n                    newProcess.exists = true;\n                    this.resetDefaultData();\n                    this.processes.push(newProcess);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetDefaultData() {\n        this.defaultProcessData = [\n            {\n                id: 'verifier_insert_body_as_doc',\n                unit: 'verifier',\n                control: new FormControl(false),\n                label: marker('MAILCOLLECT.insert_body_as_doc'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'splitter_insert_body_as_doc',\n                unit: 'splitter',\n                control: new FormControl(false),\n                label: marker('MAILCOLLECT.insert_body_as_doc'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'name',\n                control: new FormControl()\n            },\n            {\n                id: 'secured_connection',\n                unit: 'general',\n                control: new FormControl(true),\n                label: marker('MAILCOLLECT.secured_connection'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'hostname',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.hostname'),\n                type: 'text',\n                required: true\n            },\n            {\n                id: 'enabled',\n                control: new FormControl(),\n                disabled: true,\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'port',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.port'),\n                type: 'number',\n                required: true\n            },\n            {\n                id: 'login',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('FORMATS.email'),\n                type: 'text',\n                required: true\n            },\n            {\n                id: 'password',\n                unit: 'general',\n                control: new FormControl(),\n                label: marker('USER.password'),\n                type: 'password',\n                required: true\n            },\n            {\n                id: 'verifier_workflow_id',\n                unit: 'verifier',\n                control: new FormControl(),\n                label: marker('WORKFLOW.id'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'is_splitter',\n                unit: 'splitter',\n                control: new FormControl(false),\n                label: marker('MAILCOLLECT.is_splitter'),\n                type: 'boolean',\n                required: false\n            },\n            {\n                id: 'splitter_technical_workflow_id',\n                unit: 'splitter',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.splitter_technical_workflow_id'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'folder_to_crawl',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_to_crawl'),\n                type: 'autocomplete',\n                required: true\n            },\n            {\n                id: 'folder_destination',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_destination'),\n                type: 'autocomplete',\n                required: true\n            },\n            {\n                id: 'folder_trash',\n                unit: 'folders',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_trash'),\n                type: 'autocomplete',\n                required: false\n            },\n            {\n                id: 'action_after_process',\n                unit: 'folders',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.action_after_process'),\n                type: 'select',\n                values: [\n                    {\n                        id: 'move',\n                        label: marker('MAILCOLLECT.move')\n                    },\n                    {\n                        id: 'delete',\n                        label: marker('MAILCOLLECT.delete')\n                    },\n                    {\n                        id: 'none',\n                        label: marker('MAILCOLLECT.none')\n                    }\n                ],\n                required: true\n            }\n        ];\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'splitter_technical_workflow_id') {\n                element.values = element.control.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, this.allSplitterWorkflows) : this.allSplitterWorkflows)\n                );\n            }\n            if (element.id === 'verifier_workflow_id') {\n                element.values = element.control.valueChanges.pipe(\n                    startWith(''),\n                    map(option => option ? this._filter(option, this.allVerifierWorkflows) : this.allVerifierWorkflows)\n                );\n            }\n        });\n    }\n\n    getNameOfProcess(process: any) {\n        let name = '';\n        process.forEach((element: any) => {\n            if (element.id === 'name' && element.control.value) {\n                name = element.control.value;\n            }\n        });\n        return name;\n    }\n\n    createProcess(process: any) {\n        if (!this.getNameOfProcess(process)) {\n            this.notify.error(this.translate.instant('MAILCOLLECT.process_name_mandatory'));\n            return;\n        }\n\n        if (this.isValidForm(process)) {\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_workflow_id' && element.id !== 'splitter_technical_workflow_id' &&\n                    element.id !== 'folder_to_crawl' && element.id !== 'folder_destination' &&\n                    element.id !== 'folder_trash') {\n                    data[element.id] = element.control.value;\n                } else {\n                    if (element.id == 'verifier_workflow_id') {\n                        data[element.id] = element.control.value ? element.control.value.workflow_id : null;\n                    }\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/createProcess', data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_created'));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_duplicate_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateProcess(process);\n            }\n        });\n    }\n\n    duplicateProcess(process: any) {\n        this.addProcess();\n        this.processes[this.processes.length - 1].forEach((element: any) => {\n            process.forEach((element_child: any ) => {\n                if (element.id === element_child.id && element.id !== 'name') {\n                    element.control.setValue(element_child.control.value);\n                }\n            });\n        });\n    }\n\n    disableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_disable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableProcess(processName);\n            }\n        });\n    }\n\n    disableProcess(processName: string) {\n        this.http.put(environment['url'] + '/ws/mailcollect/disableProcess/' + processName, {}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_disabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    enableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_enable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableProcess(processName);\n            }\n        });\n    }\n\n    enableProcess(processName: string) {\n        this.http.put(environment['url'] + '/ws/mailcollect/enableProcess/' + processName, {}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_enabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_delete_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteProcess(processName);\n            }\n        });\n    }\n\n    deleteProcess(processName: string) {\n        this.http.delete(environment['url'] + '/ws/mailcollect/deleteProcess/' + processName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 300);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_deleted'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateProcess(process: any) {\n        if (this.isValidForm(process)) {\n            this.processLoading = true;\n\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_workflow_id' && element.id !== 'splitter_technical_workflow_id' &&\n                    element.id !== 'folder_to_crawl' && element.id !== 'folder_destination' &&\n                    element.id !== 'folder_trash') {\n                    data[element.id] = element.control.value;\n                } else if (element.id == 'verifier_workflow_id') {\n                    data[element.id] = element.control.value ? element.control.value.workflow_id : null;\n                } else {\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + data['name'], data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_updated'));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    retrieveFolders(process: any) {\n        this.formValid[this.getNameOfProcess(process)] = false;\n        this.folderLoading = true;\n        let port = '';\n        let login = '';\n        let hostname = '';\n        let password = '';\n        let secured_connection = '';\n        process.forEach((element: any) => {\n            if (element.id === 'hostname') {\n                hostname = element.control.value;\n            }\n            if (element.id === 'port') {\n                port = element.control.value;\n            }\n            if (element.id === 'secured_connection') {\n                secured_connection = element.control.value;\n            }\n            if (element.id === 'login') {\n                login = element.control.value;\n            }\n            if (element.id === 'password') {\n                password = element.control.value;\n            }\n        });\n\n        if (hostname && login && password) {\n            const data = {\n                'port': port,\n                'login': login,\n                'hostname': hostname,\n                'password': password,\n                'secured_connection': secured_connection\n            };\n\n            this.http.post(environment['url'] + '/ws/mailcollect/retrieveFolders', data, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    data.forEach((element: any) => {\n                        this.folders.push({'id': element, 'label': element});\n                    });\n\n                    process.forEach((element: any) => {\n                        if (element.id === 'folder_trash' || element.id === 'folder_to_crawl' || element.id === 'folder_destination') {\n                            element.values = element.control.valueChanges.pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.folders) : this.folders)\n                            );\n                        }\n                    });\n                    this.notify.success(this.translate.instant('MAILCOLLECT.folders_updated'));\n                    this.formValid[this.getNameOfProcess(process)] = true;\n                }),\n                finalize(() => this.folderLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.folderLoading = false;\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option['label'].toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allprocessesMail.slice();\n        if (!sort.active || sort.direction === '') {\n            this.processesMail = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.processesMail = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.processesMail = this.processesMail.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    isValidForm(process: any, notify: boolean = true) {\n        let state = true;\n\n        process.forEach((element: any) => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        if (!state && notify) {\n            this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n        } else {\n            this.formValid[this.getNameOfProcess(process)] = true;\n        }\n\n        return state;\n    }\n\n    getErrorMessage(field: any, process: any) {\n        let error: any;\n        process.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                    this.formValid[this.getNameOfProcess(process)] = false;\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex text-gray-900\">\n                <button mat-icon-button (click)=\"addProcess()\" class=\"ml-2\">\n                    <i class=\"fa-solid fa-plus text-2xl\" [matTooltip]=\"'MAILCOLLECT.add_process' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full\">\n            <mat-tab-group [selectedIndex]=\"this.selectedIndex\" [dynamicHeight]=\"true\">\n                <mat-tab *ngFor=\"let process of this.processes\">\n                    <ng-template mat-tab-label>\n                        <span class=\"actions\" *ngIf=\"getNameOfProcess(process) !== '' else input\">\n                            <span *ngIf=\"!process['edit_name']\">\n                                {{ getNameOfProcess(process) }}\n                            </span>\n\n                            <i *ngIf=\"!process['edit_name']\" [title]=\"'MAILCOLLECT.edit_process_name' | translate\"\n                               class=\"fas fa-edit ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"process.edit_name = true\"></i>\n                            <i *ngIf=\"!process['edit_name']\" [title]=\"'MAILCOLLECT.delete_process' | translate\"\n                               class=\"fas fa-trash text-red-600 ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"deleteConfirmDialog(process)\"></i>\n                            <i *ngIf=\"processIsEnabled(process)\" [title]=\"'MAILCOLLECT.disable_process' | translate\"\n                               class=\"fas fa-pause ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"disableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"!processIsEnabled(process)\" [title]=\"'MAILCOLLECT.enable_process' | translate\"\n                               class=\"fas fa-play ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"enableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"process.exists\" [title]=\"'MAILCOLLECT.duplicate_process' | translate\"\n                               class=\"fas fa-clone ml-5 text-green-400 hover:scale-125 transition-all duration-75\"\n                               (click)=\"duplicateConfirmDialog(process)\"></i>\n\n                            <div *ngIf=\"process['edit_name']\" class=\"grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name [value]=\"getNameOfProcess(process)\" matInput\n                                               (focusout)=\"updateProcessName(process, new_process_name.value)\"\n                                               type=\"text\" placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i *ngIf=\"!this.loadingProcessName\" class=\"fas fa-check ml-2\" (click)=\"updateProcessName(process, new_process_name.value)\"></i>\n                                    <i *ngIf=\"this.loadingProcessName\" class=\"fa-solid fa-circle-notch fa-spin\"></i>\n                                </div>\n                            </div>\n                        </span>\n                        <ng-template #input>\n                            <div class=\"actions grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name_input matInput type=\"text\"\n                                               (focusout)=\"updateProcessName(process, new_process_name_input.value)\"\n                                               placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i class=\"fas fa-check ml-1\" (click)=\"updateProcessName(process, new_process_name_input.value, false)\"></i>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ng-template>\n                    <div class=\"overflow-x-hidden overflow-y-auto text-center p-8\" style=\"height: calc(100vh - 9rem) !important\">\n                        <ng-container *ngFor=\"let unit of this.units\">\n                            <h2 class=\"text-gray-900\">{{ unit['label'] | translate }}</h2>\n                            <div class=\"flex justify-center mx-10\">\n                                <div class=\"grid grid-cols-2 gap-6 w-full mb-0 text-center\">\n                                    <ng-container *ngFor=\"let field of process\">\n                                        <ng-container *ngIf=\"field.unit === unit['id']\">\n                                            <div *ngIf=\"field.type === 'boolean'\" class=\"col-span-2 mb-8\">\n                                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field['control']\">\n                                                    {{ field.label | translate }}\n                                                </mat-slide-toggle>\n                                            </div>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'text' || field.type === 'password' || field.type === 'number'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [type]=\"field.type\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       (keyup)=\"isValidForm(process, false)\">\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                                <mat-icon matSuffix *ngIf=\"field.id === 'password'\"\n                                                          (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text'\"\n                                                          class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                                </mat-icon>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'autocomplete'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [type]=\"field.type\" [matAutocomplete]=\"autocomplete\" (keyup)=\"isValidForm(process, false)\">\n                                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                                      [matTooltip]=\"field.hint | translate\">\n                                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                                </span>\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                                <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"isValidForm(process, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option\" [id]=\"option.id\">\n                                                        <span [innerHTML]=\"option.label | highlight: toHighlight\"></span>\n                                                    </mat-option>\n                                                </mat-autocomplete>\n                                            </mat-form-field>\n                                            <mat-form-field class=\"w-full\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [formControl]=\"field['control']\" [required]=\"field['required']\" (selectionChange)=\"isValidForm(process, false)\">\n                                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                                        {{ option['label'] | translate }}\n                                                    </mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, process) }}</mat-error>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </div>\n\n                            <span *ngIf=\"unit['id'] === 'general'\">\n                                <div class=\"hint text-center\">\n                                    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n                                    <div class=\"message w-auto\">\n                                        <button class=\"gray_button col-start-3\" mat-button (click)=\"retrieveFolders(process)\">\n                                            <span *ngIf=\"!this.folderLoading\">\n                                                {{ 'MAILCOLLECT.test_settings_and_retrieve_folders' | translate }}\n                                            </span>\n                                            <i *ngIf=\"this.folderLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-green-400\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </span>\n                        </ng-container>\n                        <div class=\"mb-6 flex justify-center\">\n                            <button *ngIf=\"process.exists\" mat-button (click)=\"updateProcess(process)\" class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-gray-400]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-green-400]=\"this.formValid[getNameOfProcess(process)]\">\n                                <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.update_process' | translate }}</span>\n                                <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                            </button>\n                            <button *ngIf=\"!process.exists\" mat-button (click)=\"createProcess(process)\" class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-gray-400]=\"!this.formValid[getNameOfProcess(process)]\"\n                                    [class.bg-green-400]=\"this.formValid[getNameOfProcess(process)]\">\n                                <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.create_process' | translate }}</span>\n                                <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../services/session-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-regex',\n    templateUrl: './regex.component.html',\n    styleUrls: ['./regex.component.scss']\n})\nexport class RegexComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['regex_id', 'label', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    regex               : any           = [];\n    allRegex            : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/regex') || lastUrl === '/') {\n            if (this.sessionStorageService.get('regexPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('regexPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('regexPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getRegex', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allRegex = data.regex;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.loadRegex();\n    }\n\n    loadRegex() {\n        this.http.get(environment['url'] + '/ws/config/getRegex?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.regex[0]) {\n                    this.total = data.regex[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRegex();\n                }\n                this.regex = data.regex;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.regex.forEach((element: any) => {\n            if (element.id === id) {\n                element.content = value;\n                this.http.put(environment['url'] + '/ws/config/updateRegex/' + element.id, {'args': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('REGEX.regex_updated'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchRegex(event: any) {\n        this.search = event.target.value;\n        this.loadRegex();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('regexPageIndex', event.pageIndex);\n        this.loadRegex();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allRegex.slice();\n        if (!sort.active || sort.direction === '') {\n            this.regex = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.regex = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'regex_id': return this.compare(a.regex_id, b.regex_id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default: return 0;\n            }\n        });\n        this.regex = this.regex.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'REGEX.search_regex' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchRegex($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"w-full\">\n                <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n                <mat-table matSort [dataSource]=\"regex\" (matSortChange)=\"sortData($event)\">\n                    <ng-container matColumnDef=\"regex_id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header=\"regex_id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.regex_id }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"label\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"content\">\n                        <mat-header-cell *matHeaderCellDef> {{ 'HEADER.value' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true;\">\n                            <ng-container *ngIf=\"!element.updateMode else update\">\n                                {{ element.content }}\n                            </ng-container>\n                            <ng-template #update>\n                                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                    <input [id]=\"element.id\" autofocus matInput [value]=\"element.content\" (keyup.enter)=\"updateValue($event, element.id)\"\n                                           class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id)\">\n                                </mat-form-field>\n                            </ng-template>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <button *ngIf=\"!element.updateMode\"\n                                    (click)=\"element.updateMode = true;\"\n                                    matTooltip=\"{{ 'REGEX.update' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-edit text-lg\"></i>\n                            </button>\n                            <button *ngIf=\"element.updateMode\"\n                                    (click)=\"element.updateMode = false;\"\n                                    matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                                <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                             class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n                </mat-table>\n                <mat-paginator [showFirstLastButtons]=\"true\"\n                               *ngIf=\"this.total > 0\"\n                               [length]=\"this.total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-role.component.html',\n    styleUrls: ['./create-role.component.scss']\n})\nexport class CreateRoleComponent implements OnInit {\n    loading         : boolean   = true;\n    privileges      : any;\n    rolePrivileges  : any[]     = [];\n    roles           : any[]     = [];\n    assignRoles     : any[]     = [];\n    roleForm        : any[]     = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            maxLength: 255\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            maxLength: 10\n        },\n        {\n            id: 'default_route',\n            label: this.translate.instant('ROLE.default_route'),\n            type: 'list',\n            options: [\n                {value: '/home', label: this.translate.instant('GLOBAL.home')},\n                {value: '/upload', label: this.translate.instant('GLOBAL.upload')},\n                {value: '/splitter/list', label: this.translate.instant('HEADER.splitter_list')},\n                {value: '/verifier/list', label: this.translate.instant('HEADER.verifier_list')}\n            ],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {\n                'assign_roles': this.assignRoles\n            };\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            if (rolePrivileges.length !== 0) {\n                this.http.post(environment['url'] + '/ws/roles/create', {'args': role}, {headers: this.authService.headers},\n                ).pipe(\n                    tap((data: any) => {\n                        const newRoleId = data.id;\n                        this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + newRoleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n                        ).pipe(\n                            tap(() => {\n                                this.notify.success(this.translate.instant('ROLE.created'));\n                                this.router.navigate(['/settings/general/roles/']).then();\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.notify.error(this.translate.instant('ROLE.no_privileges'));\n            }\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        if (this.rolePrivileges) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilegeId === element) {\n                    found = true;\n                }\n            });\n        }\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n\n    updateAssignRoles(role: any) {\n        if (this.assignRoles.includes(role.id)) {\n            const index = this.assignRoles.indexOf(role.id, 0);\n            this.assignRoles.splice(index, 1);\n        }\n        else {\n            this.assignRoles.push(role.id);\n        }\n    }\n\n    selectAllAssignRoles(check: boolean) {\n        this.assignRoles = [];\n        if (check) {\n            this.roles.forEach((element: any) => {\n                this.assignRoles.push(element.id);\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center\">\n                <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-2 gap-6 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of roleForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput  [maxLength]=\"field.maxLength\" [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'list'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [value]=\"field.control.value\" [formControl]=\"field['control']\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of field.options\" [value]=\"option.value\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <mat-tab-group *ngIf=\"this.privileges\" [dynamicHeight]=\"true\">\n                    <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                        <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                            <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                              [name]=\"privilege\"\n                                              [checked]=\"this.hasPrivilege(privilege)\"\n                                              (change)=\"changePrivilege($event)\">\n                                {{ 'PRIVILEGES.' + privilege | translate }}\n                                <button (click)=\"$event.stopPropagation(); authorizedRoles.toggle();\"\n                                        class=\"m-2 hover:text-green-400\"\n                                        [matTooltip]=\"this.translate.instant('ROLE.authorized_assign_roles')\"\n                                        *ngIf=\"['add_role', 'update_role'].includes(privilege)\">\n                                    <i class=\"fa-solid fa-gears fa-xl text-gray-900\"></i>\n                                </button>\n                            </mat-slide-toggle>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n            <div class=\"flex justify-center items-center mt-10\">\n                <button class=\"valid_button\" (click)=\"onSubmit()\" mat-button>\n                    {{ 'ROLE.create_role' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #authorizedRoles mode=\"side\" position=\"end\" class=\"w-1/5 flex flex-col border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ROLE.authorized_assign_roles\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full mt-2 flex justify-center\">\n            <div class=\"w-20 rounded-lg bg-slate-100 border border-gray-200\">\n                <button (click)=\"selectAllAssignRoles(true)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.select_all' | translate\">\n                    <i class=\"fa-solid fa-circle-check fa-xl\"></i>\n                </button>\n                <button (click)=\"selectAllAssignRoles(false)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.unselect_all' | translate\">\n                    <i class=\"fa-solid fa-ban fa-xl\"></i>\n                </button>\n            </div>\n        </div>\n        <mat-checkbox *ngFor=\"let assignRoleOption of this.roles\"\n                      [checked]=\"this.assignRoles.includes(assignRoleOption.id)\"\n                      (change)=\"updateAssignRoles(assignRoleOption)\" class=\"mt-2 w-full text-xl\">\n            <span>{{ assignRoleOption.label }}</span>\n        </mat-checkbox>\n        <span class=\"w-full mt-8 text-gray-400 flex justify-center\" *ngIf=\"this.roles.length === 0\"  style=\"height: calc(100% - 230px)\">\n            {{ \"ROLE.no_authorized_assign_role\" | translate }}\n        </span>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class RolesListComponent implements OnInit {\n    columnsToDisplay: string[] = ['id', 'label_short', 'label', 'status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean = true;\n    roles           : any = [];\n    pageSize        : number = 10;\n    pageIndex       : number = 0;\n    total           : number = 0;\n    offset          : number = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        // If we came from another route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/roles') || lastUrl === '/') {\n            if (this.sessionStorageService.get('rolesPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('rolesPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('rolesPageIndex');\n        }\n        this.loadRoles();\n    }\n\n    loadRoles(): void {\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id  +\n            '?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                if (data.roles[0]) {\n                    this.total = data.roles[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRoles();\n                }\n                this.roles = data.roles;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('rolesPageIndex', event.pageIndex);\n        this.loadRoles();\n    }\n\n    deleteConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteRole(roleId);\n            }\n        });\n    }\n\n    disableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_disable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableRole(roleId);\n            }\n        });\n    }\n\n    enableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_enable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableRole(roleId);\n            }\n        });\n    }\n\n    deleteRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/roles/delete/' + roleId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                    this.notify.success(this.translate.instant('ROLE.role_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/disable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/enable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.roles.slice();\n        if (!sort.active || sort.direction === '') {\n            this.roles = data;\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label_short\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label_short }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'ROLE.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'ROLE.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/general/roles/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-role.component.html',\n    styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean   = true;\n    roleId          : any;\n    role            : any;\n    roles           : any[]     = [];\n    assignRoles     : any[]     = [];\n    privileges      : any;\n    rolePrivileges  : any;\n    roleForm        : any[]     = [\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'enabled',\n            label: this.translate.instant('ROLE.enable'),\n            type: 'checkbox',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'default_route',\n            label: this.translate.instant('ROLE.default_route'),\n            type: 'list',\n            options: [\n                {value: '/home', label: this.translate.instant('GLOBAL.home')},\n                {value: '/upload', label: this.translate.instant('GLOBAL.upload')},\n                {value: '/splitter/list', label: this.translate.instant('HEADER.splitter_list')},\n                {value: '/verifier/list', label: this.translate.instant('HEADER.verifier_list')}\n            ],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n\n    // Only used to get translation available while running the extract-translations\n    parentLabel = [\n        marker('PRIVILEGES.general'),\n        marker('PRIVILEGES.administration'),\n        marker('PRIVILEGES.verifier'),\n        marker('PRIVILEGES.splitter'),\n        marker('PRIVILEGES.accounts')\n    ];\n    privilegesLabel = [\n        marker('MONITORING.verifier'),\n        marker('MONITORING.splitter'),\n        marker('PRIVILEGES.access_verifier'),\n        marker('PRIVILEGES.access_splitter'),\n        marker('PRIVILEGES.settings'),\n        marker('PRIVILEGES.upload'),\n        marker('PRIVILEGES.users_list'),\n        marker('PRIVILEGES.add_user'),\n        marker('PRIVILEGES.update_user'),\n        marker('PRIVILEGES.roles_list'),\n        marker('PRIVILEGES.add_role'),\n        marker('PRIVILEGES.update_role'),\n        marker('PRIVILEGES.version_update'),\n        marker('PRIVILEGES.custom_fields'),\n        marker('PRIVILEGES.forms_list'),\n        marker('PRIVILEGES.customers_list'),\n        marker('PRIVILEGES.suppliers_list'),\n        marker('PRIVILEGES.create_supplier'),\n        marker('PRIVILEGES.update_supplier'),\n        marker('PRIVILEGES.change_language'),\n        marker('PRIVILEGES.form_builder'),\n        marker('PRIVILEGES.export_suppliers'),\n        marker('PRIVILEGES.import_suppliers'),\n        marker('PRIVILEGES.history'),\n        marker('PRIVILEGES.add_output'),\n        marker('PRIVILEGES.add_form'),\n        marker('PRIVILEGES.update_output'),\n        marker('PRIVILEGES.position_mask_list'),\n        marker('PRIVILEGES.update_form'),\n        marker('PRIVILEGES.outputs_list'),\n        marker('PRIVILEGES.add_position_mask'),\n        marker('PRIVILEGES.update_position_mask'),\n        marker('PRIVILEGES.create_customer'),\n        marker('PRIVILEGES.update_customer'),\n        marker('PRIVILEGES.document_type_splitter'),\n        marker('PRIVILEGES.separator_splitter'),\n        marker('PRIVILEGES.update_output_splitter'),\n        marker('PRIVILEGES.add_output_splitter'),\n        marker('PRIVILEGES.outputs_list_splitter'),\n        marker('PRIVILEGES.update_form_splitter'),\n        marker('PRIVILEGES.add_form_splitter'),\n        marker('PRIVILEGES.forms_list_splitter'),\n        marker('PRIVILEGES.statistics'),\n        marker('PRIVILEGES.configurations'),\n        marker('PRIVILEGES.docservers'),\n        marker('PRIVILEGES.regex'),\n        marker('PRIVILEGES.update_document_type'),\n        marker('PRIVILEGES.add_document_type'),\n        marker('PRIVILEGES.login_methods'),\n        marker('PRIVILEGES.verifier_settings'),\n        marker('PRIVILEGES.mailcollect'),\n        marker('PRIVILEGES.user_quota'),\n        marker('PRIVILEGES.list_ai_model'),\n        marker('PRIVILEGES.list_ai_model_splitter'),\n        marker('PRIVILEGES.create_ai_model'),\n        marker('PRIVILEGES.create_ai_model_splitter'),\n        marker('PRIVILEGES.update_ai_model'),\n        marker('PRIVILEGES.update_ai_model_splitter'),\n        marker('PRIVILEGES.update_status'),\n        marker('PRIVILEGES.update_status_splitter'),\n        marker('PRIVILEGES.access_config'),\n        marker('PRIVILEGES.monitoring'),\n        marker('PRIVILEGES.verifier_display'),\n        marker('PRIVILEGES.workflows_list'),\n        marker('PRIVILEGES.add_workflow'),\n        marker('PRIVILEGES.update_workflow'),\n        marker('PRIVILEGES.workflows_list_splitter'),\n        marker('PRIVILEGES.add_workflow_splitter'),\n        marker('PRIVILEGES.update_workflow_splitter'),\n        marker('PRIVILEGES.generate_auth_token'),\n        marker('PRIVILEGES.update_login_top_message'),\n        marker('PRIVILEGES.update_login_bottom_message')\n    ];\n    // End translation\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.roleId = this.route.snapshot.params['id'];\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/roles/getById/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.role = data;\n                this.assignRoles = data['assign_roles'];\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.roleForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/getbyRoleId/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.rolePrivileges = data;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {\n                'assign_roles': this.assignRoles\n            };\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.put(environment['url'] + '/ws/roles/update/' + this.roleId, {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + this.roleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ROLE.updated'));\n                    this.router.navigate(['/settings/general/roles/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        this.rolePrivileges.forEach((element: any) => {\n            if (privilegeId === element) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n\n    updateAssignRoles(role: any) {\n        if (this.assignRoles.includes(role.id)) {\n            const index = this.assignRoles.indexOf(role.id, 0);\n            this.assignRoles.splice(index, 1);\n        }\n        else {\n            this.assignRoles.push(role.id);\n        }\n    }\n\n    selectAllAssignRoles(check: boolean) {\n        this.assignRoles = [];\n        if (check) {\n            this.roles.forEach((element: any) => {\n                this.assignRoles.push(element.id);\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;<span *ngIf=\"this.role\">{{ this.role['label'] }}</span>\n                <strong *ngIf=\"this.role\">&nbsp;({{ this.role['label_short'] }})</strong>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center\">\n                <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of roleForm\">\n                        <span *ngIf=\"field.type === 'text'\" [class.cursor-not-allowed]=\"field.id === 'label_short'\">\n                            <mat-form-field [class.pointer-events-none]=\"field.id === 'label_short'\" class=\"w-full\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\"\n                                       [readonly]=\"field.id === 'label_short'\" [class.text-gray-400]=\"field.id === 'label_short'\">\n                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                            </mat-form-field>\n                        </span>\n                        <mat-slide-toggle class=\"mt-4\" *ngIf=\"field.type === 'checkbox'\" [formControl]=\"field['control']\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                        <mat-form-field *ngIf=\"field.type === 'list'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [value]=\"field.control.value\" [formControl]=\"field['control']\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of field.options\" [value]=\"option.value\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mx-2\">\n                <mat-tab-group *ngIf=\"this.privileges && this.rolePrivileges\" [dynamicHeight]=\"true\" class=\"w-full\">\n                    <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                        <div class=\"grid grid-cols-4 gap-x-40 gap-y-10 mt-10\">\n                            <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                              [name]=\"privilege\" [checked]=\"this.hasPrivilege(privilege)\"\n                                              (change)=\"changePrivilege($event)\">\n                                {{ 'PRIVILEGES.' + privilege | translate }}\n                                <button (click)=\"$event.stopPropagation(); authorizedRoles.toggle();\"\n                                        class=\"m-2 hover:text-green-400\"\n                                        [matTooltip]=\"this.translate.instant('ROLE.authorized_assign_roles')\"\n                                        *ngIf=\"['add_role', 'update_role'].includes(privilege)\">\n                                    <i class=\"fa-solid fa-gears fa-xl text-gray-900\"></i>\n                                </button>\n                            </mat-slide-toggle>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n            <div class=\"flex justify-center items-center mt-10\">\n                <button class=\"valid_button\" (click)=\"onSubmit()\" mat-button>\n                    {{ 'ROLE.update' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #authorizedRoles mode=\"side\" position=\"end\" class=\"w-1/5 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ROLE.authorized_assign_roles\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full mt-2 flex justify-center\">\n            <div class=\"w-20 rounded-lg bg-slate-100 border border-gray-200\">\n                <button (click)=\"selectAllAssignRoles(true)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.select_all' | translate\">\n                    <i class=\"fa-solid fa-circle-check fa-xl\"></i>\n                </button>\n                <button (click)=\"selectAllAssignRoles(false)\" class=\"m-2 hover:text-green-400\" [matTooltip]=\"'ROLE.unselect_all' | translate\">\n                    <i class=\"fa-solid fa-ban fa-xl\"></i>\n                </button>\n            </div>\n        </div>\n        <mat-checkbox *ngFor=\"let assignRolesOption of this.roles\"\n                      [checked]=\"this.assignRoles.includes(assignRolesOption.id)\"\n                      (change)=\"updateAssignRoles(assignRolesOption)\" class=\"mt-2 w-full text-xl\">\n            <span>{{ assignRolesOption.label }}</span>\n        </mat-checkbox>\n        <span class=\"w-full mt-8 text-gray-400 flex justify-center\" *ngIf=\"this.roles.length === 0\"  style=\"height: calc(100% - 230px)\">\n            {{ \"ROLE.no_authorized_assign_role\" | translate }}\n        </span>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-user-quota',\n    templateUrl: './user-quota.component.html',\n    styleUrls: ['./user-quota.component.scss']\n})\nexport class UserQuotaComponent implements OnInit {\n    headers                 : HttpHeaders = this.authService.headers;\n    loading                 : boolean     = true;\n    quotaNumber             : number      = 0;\n    quotaEnabled            : boolean     = false;\n    quotaUsersfiltered      : any[]       = [];\n    usersControlSelect      : FormControl = new FormControl();\n    quotaEmailDestControl   : FormControl = new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"));\n    usersList               : any[]       = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data_users: any) => {\n                this.usersList = data_users.users;\n                this.http.get(environment['url'] + '/ws/config/getConfiguration/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        if (data.configuration.length === 1) {\n                            this.quotaEnabled = data.configuration[0].data.value.enabled;\n                            this.quotaNumber = data.configuration[0].data.value.quota;\n                            this.quotaEmailDestControl.setValue(data.configuration[0].data.value.email_dest);\n                            data.configuration[0].data.value.users_filtered.forEach((elem: any) => {\n                                this.usersList.forEach((user: any) => {\n                                    if (user['username'] === elem.trim()) {\n                                        this.quotaUsersfiltered.push(user['id']);\n                                    }\n                                });\n                                this.usersControlSelect.setValue(this.quotaUsersfiltered);\n                            });\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateQuotaNumber() {\n        this.loading = true;\n        const data: any = {\n            'value': {\n                'enabled': this.quotaEnabled,\n                'quota': this.quotaNumber,\n                'users_filtered': [],\n                'email_dest': this.quotaEmailDestControl.value\n            }\n        };\n        if (this.usersControlSelect.value) {\n            this.usersControlSelect.value.forEach((user_id: any) => {\n                this.usersList.forEach((user: any) => {\n                    if (user['id'] === user_id) {\n                        data['value']['users_filtered'].push(user['username']);\n                    }\n                });\n            });\n        }\n\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/userQuota',\n            {'args': data}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER-QUOTA.updated'));\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full overflow-auto h-full-overflow\">\n            <app-hint [message]=\"'USER-QUOTA.description' | translate\"></app-hint>\n            <hr class=\"border-green-400 relative z-30 w-1/3 mx-auto my-4\">\n            <div class=\"w-1/3 mx-auto my-10 text-center\">\n                <mat-slide-toggle [(ngModel)]=\"this.quotaEnabled\" matTooltip=\"{{ 'USER-QUOTA.enabled' | translate }}\">\n                    {{ 'USER-QUOTA.enabled' | translate }}\n                </mat-slide-toggle>\n            </div>\n            <div class=\"flex justify-center items-center align-middle\">\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.quota_number' | translate }}</mat-label>\n                    <input matInput type=\"number\" [(ngModel)]=\"this.quotaNumber\"/>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.filtered_users' | translate }}</mat-label>\n                    <mat-select [formControl]=\"usersControlSelect\" [multiple]=\"true\" [value]=\"this.quotaUsersfiltered\">\n                        <mat-option *ngFor=\"let option of this.usersList\" [value]=\"option['id']\">\n                            {{ option['lastname'] + ' ' + option['firstname'] }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.email_dest' | translate }}</mat-label>\n                    <input matInput type=\"text\" [formControl]=\"this.quotaEmailDestControl\"/>\n                </mat-form-field>\n            </div>\n            <div class=\"flex justify-center m-6\">\n                <button class=\"p-6 valid_button\" type=\"submit\" mat-button (click)=\"updateQuotaNumber()\">\n                    {{ 'USER-QUOTA.update' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { PasswordVerificationService } from \"../../../../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-create-user',\n    templateUrl: './create-user.component.html',\n    styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n    loading          : boolean   = true;\n    loadingCustomers : boolean   = true;\n    showPassword     : boolean   = false;\n    roles            : any[]     = [];\n    userFields       : any[]     = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl('', Validators.maxLength(50)),\n            required: true\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'mode',\n            label: this.translate.instant('USER.mode'),\n            type: 'select',\n            values: [\n                {\n                    'id': 'standard',\n                    'label': this.translate.instant('USER.standard'),\n                    'default' : true\n                },\n                {\n                    'id': 'webservice',\n                    'label': this.translate.instant('USER.webservice'),\n                    'default' : false\n                }\n            ],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    forms            : any[]     = [];\n    userForms        : any[]     = [];\n    customers        : any[]     = [];\n    userCustomers    : any[]     = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms = this.forms.concat(data.forms);\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n                this.userFields.forEach(element => {\n                    if (element.id === 'role') {\n                        element.values = this.roles;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.userFields.forEach((element: any) => {\n            if (element.id === 'password_check' || element.id === 'password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidity(this.userFields);\n                    }\n                });\n            }\n        });\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found) {\n            this.userCustomers.push(customerId);\n        } else {\n            this.userCustomers.splice(cpt, 1);\n        }\n    }\n\n    hasForm(formId: any) {\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserForms(formId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found) {\n            this.userForms.push(formId);\n        } else {\n            this.userForms.splice(cpt, 1);\n        }\n    }\n\n    isValidForm() {\n        let state = true;\n        this.userFields.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user : any = {};\n            this.userFields.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            user['customers'] = this.userCustomers;\n            user['forms']     = this.userForms;\n            this.http.post(environment['url'] + '/ws/users/new', user, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.created'));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userFields.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center align-middle\">\n                <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of userFields\">\n                        <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                   [type]=\"field.type === 'password' && showPassword ? 'text' : field.type\"\n                                   [placeholder]=\"field.label | translate\">\n                            <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                            <mat-icon *ngIf=\"field.id === 'password'\" matSuffix (click)=\"showPassword = !showPassword;\"\n                                      class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                            </mat-icon>\n                            <mat-icon *ngIf=\"field.id === 'password_check'\" matSuffix\n                                      (click)=\"showPassword = !showPassword;\"\n                                      class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                            </mat-icon>\n                        </mat-form-field>\n                        <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                    {{ option['label'] | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                    <div class=\"button col-span-3\">\n                        <button class=\"valid_button\" type=\"submit\" mat-button>\n                            {{ 'USER.create_user' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"USER.parameters\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group>\n            <mat-tab id='userCustomers' [label]=\"'ACCOUNTS.customers' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let customer of this.customers\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserCustomers(customer.id)\">\n                        <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                            {{ customer.name }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ customer.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasCustomer(customer.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n            <mat-tab id='userForms' [label]=\"'FORMS.forms' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let form of this.forms\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserForms(form.id)\">\n                        <span [class.text-green-400]=\"hasForm(form.id)\" class=\"hover:text-green-400\">\n                            {{ form.label }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ form.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasForm(form.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport {ExportDialogComponent} from \"../../../../../services/export-dialog/export-dialog.component\";\nimport {ImportDialogComponent} from \"../../../../../services/import-dialog/import-dialog.component\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class UsersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role', 'status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    users           : any         = [];\n    allUsers        : any         = [];\n    roles           : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    activeUser      : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n    userQuotaConfig : any         = {};\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        // If we came from another route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/users') || lastUrl === '/') {\n            if (this.sessionStorageService.get('usersPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('usersPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('usersPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allUsers = data.users;\n                this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.roles = data.roles;\n                        if (this.roles) {\n                            this.allUsers.forEach((user: any) => {\n                                this.roles.forEach((element: any) => {\n                                    if (user.role === element.id) {\n                                        user.role_label = element.label;\n                                    }\n                                });\n                            });\n                        }\n                        this.loadUsers();\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((config: any) => {\n                        this.userQuotaConfig = config.configuration[0].data.value;\n                        this.activeUser = this.allUsers.length;\n                        this.getUserQuotaFiltered();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchUser(event: any) {\n        this.search = event.target.value;\n        this.loadUsers();\n    }\n\n    getUserQuotaFiltered() {\n        this.allUsers.forEach((user: any) => {\n            if (this.userQuotaConfig.users_filtered.includes(user['username'])) {\n                this.activeUser -= 1;\n            }\n        });\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('usersPageIndex', event.pageIndex);\n        this.loadUsers();\n    }\n\n    loadUsers(): void {\n        this.http.get(environment['url'] + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.users[0]) {\n                    this.total = data.users[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadUsers();\n                }\n                this.users = data.users;\n                if (this.roles) {\n                    this.users.forEach((user: any) => {\n                        this.roles.forEach((element: any) => {\n                            if (user.role === element.id) {\n                                user.role_label = element.label;\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteUser(userId);\n            }\n        });\n    }\n\n    disableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableUser(userId);\n            }\n        });\n    }\n\n    enableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableUser(userId);\n            }\n        });\n    }\n\n    deleteUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/users/delete/' + userId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                    this.notify.success(this.translate.instant('USER.user_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/disable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/enable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allUsers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.users = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role_label, b.role_label, isAsc);\n                case 'status': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n        this.users = this.users.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    exportUsers() {\n        const selectedColumns: any [] = [\n            {\n                id: 'username',\n                label: this.translate.instant('USER.username')\n            },\n            {\n                id: 'lastname',\n                label: this.translate.instant('USER.lastname')\n            },\n            {\n                id: 'firstname',\n                label: this.translate.instant('USER.firstname')\n            },\n            {\n                id: 'email',\n                label: this.translate.instant('FORMATS.email')\n            },\n            {\n                id: 'role',\n                label: this.translate.instant('HEADER.role')\n            }\n        ];\n        const availableColumns: any [] = [];\n\n        const dialogRef = this.dialog.open(ExportDialogComponent, {\n            data: {\n                selectedColumns: selectedColumns,\n                availableColumns: availableColumns,\n                title : this.translate.instant('USER.export')\n            },\n            width: \"900px\"\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const args = {\n                    'columns': result.selectedColumns,\n                    'delimiter': result.delimiter,\n                    'extension': result.extension\n                };\n                this.http.post(environment['url'] + '/ws/users/export', {'args': args}, {headers: this.authService.headers},\n                ).pipe(\n                    tap((data: any) => {\n                        const csvContent = atob(data.encoded_file);\n                        const blob = new Blob([csvContent], {type: \"data:application/octet-stream;base64\"});\n                        const url  = window.URL.createObjectURL(blob);\n                        const link = document.createElement(\"a\");\n                        link.href = url;\n                        link.download = `users.${result.extension}`;\n                        link.click();\n                        this.notify.success(this.translate.instant('USER.users_export_success'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    importUsers() {\n        const columns = ['username', 'lastname', 'firstname', 'mail', 'role', 'customer_name'];\n        const dialogRef = this.dialog.open(ImportDialogComponent, {\n            data: {\n                rows: [],\n                extension: 'CSV',\n                skipHeader: false,\n                allowColumnsSelection : false,\n                title: this.translate.instant('USER.import'),\n                availableColumns : columns,\n                selectedColumns : columns\n            },\n            width: \"900px\"\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const formData: FormData = new FormData();\n                for (let i = 0; i < result.fileControl.value!.length; i++) {\n                    if (result.fileControl.status === 'VALID') {\n                        formData.append(result.fileControl.value![i]['name'], result.fileControl.value![i]);\n                    } else {\n                        this.notify.handleErrors(this.translate.instant('DATA-IMPORT.extension_unauthorized', {\"extension\": 'CSV'}));\n                        return;\n                    }\n                }\n\n                formData.set('selectedColumns', result.selectedColumns);\n                formData.set('skipHeader', result.skipHeader);\n\n                this.http.post(environment['url'] + '/ws/users/csv/import', formData, {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('DOCTYPE.users_import_success'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"m-8 absolute right-64\">\n                <button class=\"hover:text-green-400 hover:cursor-pointer mx-2\"\n                        (click)=\"importUsers()\"\n                        [matTooltip]=\"'USER.import' | translate\">\n                    <i class=\"fa-solid fa-file-import fa-2x\"></i>\n                </button>\n                <button class=\"hover:text-green-400 hover:cursor-pointer mx-2\"\n                        (click)=\"exportUsers()\"\n                        [matTooltip]=\"'USER.export' | translate\">\n                    <i class=\"fa-solid fa-file-export fa-2x\"></i>\n                </button>\n            </div>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'USER.search_user' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchUser($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"w-full overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"username\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.username }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"firstname\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.firstname }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"lastname\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.lastname }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"role\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.role' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.role_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/general/users/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"this.pageSize\"\n                           [pageIndex]=\"this.pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n            <div *ngIf=\"this.userQuotaConfig.enabled\" class=\"text-center\">\n                <hr class=\"border-green-400 w-1/3 mx-auto mt-6 -mb-4\">\n                <span class=\"text-xl\">\n                    {{ 'USER-QUOTA.informations' | translate }}\n                    <span class=\"cursor-default relative top-7 text-green-400 text-8xl\"\n                          [class.text-green-400] = \"this.activeUser < this.userQuotaConfig.quota\"\n                          [class.text-red-400] = \"this.activeUser > this.userQuotaConfig.quota\"\n                          [class.text-orange-400] = \"this.activeUser === this.userQuotaConfig.quota\">&bull;</span>\n                </span>\n                <div class=\"m-2 mt-8 text-base\">\n                    {{ 'USER-QUOTA.quota_number' | translate }} : {{ this.userQuotaConfig.quota }}\n                </div>\n                <div class=\"m-2 text-base\">\n                    {{ 'USER.enabled' | translate }} : {{ this.activeUser }}\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com>  */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport {PasswordVerificationService} from \"../../../../../services/password-verification.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-user.component.html',\n    styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    loadingCustomers            : boolean       = true;\n    showPassword                : boolean       = false;\n    userId                      : any;\n    user                        : any;\n    roles                       : any[]         = [];\n    userFields                  : any[]         = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'mode',\n            label: this.translate.instant('USER.mode'),\n            type: 'select',\n            values: [\n                {\n                    'id': 'standard',\n                    'label': this.translate.instant('USER.standard'),\n                    'default' : true\n                },\n                {\n                    'id': 'webservice',\n                    'label': this.translate.instant('USER.webservice'),\n                    'default' : false\n                }\n            ],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    forms                       : any[]         = [];\n    userForms                   : any[]         = [];\n    customers                   : any[]         = [];\n    userCustomers               : any[]         = [];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private passwordVerification: PasswordVerificationService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userId = this.route.snapshot.params['id'];\n        this.userService.user   = this.userService.getUserFromLocal();\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.http.get(environment['url'] + '/ws/users/getCustomersByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.userCustomers = data;\n                        this.loadingCustomers = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms = this.forms.concat(data.forms);\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/users/getFormsByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.userForms = data;\n                        this.loadingCustomers = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable || this.userService.getUser().privileges === '*') {\n                        this.roles.push(element);\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.user = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.userFields.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.userFields.forEach((element: any) => {\n            if (element.id === 'password_check' || element.id === 'password') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value) {\n                        this.passwordVerification.checkPasswordValidity(this.userFields);\n                    }\n                });\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.userFields.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user: any = {};\n            this.userFields.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/users/update/' + this.userId, {'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.updated'));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userFields.forEach(element => {\n            if (element.id === field) {\n                if (element.control.errors && element.control.errors.message) {\n                    error = element.control.errors.message;\n                }\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasForm(formId: any) {\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUserCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.userCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n\n        if (!found) {\n            this.userCustomers.push(customerId);\n        } else {\n            this.userCustomers.splice(cpt, 1);\n        }\n\n        this.http.put(environment['url'] + '/ws/users/customers/update/' + this.userId, {'customers': this.userCustomers}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.customers_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateUserForms(formId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _formId of this.userForms) {\n            if (_formId === formId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n\n        if (!found) {\n            this.userForms.push(formId);\n        } else {\n            this.userForms.splice(cpt, 1);\n        }\n\n        this.http.put(environment['url'] + '/ws/users/forms/update/' + this.userId, {'forms': this.userForms}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.form_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.user\">\n                    {{ this.user['firstname'] }} {{ this.user['lastname'] }}<strong>&nbsp;({{ this.user['username'] }})</strong>\n                </span>\n            </h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"flex justify-center items-center align-middle\">\n                    <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                        <ng-container *ngFor=\"let field of userFields\">\n                        <span *ngIf=\"field.type !== 'select'\" [class.cursor-not-allowed]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\">\n                            <mat-form-field class=\"block\" [class.pointer-events-none]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\">\n                                <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                                    {{ field.label | translate }}\n                                </mat-label>\n                                <input matInput [readonly]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\"\n                                       [class.text-gray-400]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\"\n                                       [formControl]=\"field['control']\" [type]=\"field.type === 'password' && showPassword ? 'text' : field.type\"\n                                       [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                                <mat-error class=\"text-red-400\" [innerHTML]=\"getErrorMessage(field.id)\" *ngIf=\"field.control.invalid\"></mat-error>\n                                <mat-icon *ngIf=\"field.id === 'password'\" matSuffix (click)=\"showPassword = !showPassword;\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                                </mat-icon>\n                                <mat-icon *ngIf=\"field.id === 'password_check'\" matSuffix (click)=\"showPassword = !showPassword;\" class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                    <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!showPassword\" [class.fa-eye]=\"showPassword\"></i>\n                                </mat-icon>\n                            </mat-form-field>\n                        </span>\n                            <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [formControl]=\"field['control']\" [(value)]=\"field.control.value\" [required]=\"field['required']\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                        {{ option['label'] | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                            </mat-form-field>\n                        </ng-container>\n                        <div class=\"button col-span-3\">\n                            <button class=\"valid_button\" type=\"submit\" mat-button>\n                                {{ 'USER.update' | translate }}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"USER.parameters\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group>\n            <mat-tab id='userCustomers' [label]=\"'ACCOUNTS.customers' | translate\">\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let customer of this.customers\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserCustomers(customer.id)\">\n                        <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                            {{ customer.name }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ customer.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasCustomer(customer.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n            <mat-tab id='userForms' [label]=\"'FORMS.forms' | translate\">\n                <app-hint class=\"mt-1\" [specificClass]=\"'w-11/12'\" [message]=\"'USER.form_splitter_only' | translate\"></app-hint>\n                <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n                    <span class=\"text-center overflow-hidden\">\n                        <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n                    </span>\n                </div>\n                <mat-list *ngIf=\"!this.loadingCustomers\" >\n                    <mat-list-item *ngFor=\"let form of this.forms\" class=\"cursor-pointer m-2 w-auto\"\n                                   (click)=\"updateUserForms(form.id)\">\n                        <span [class.text-green-400]=\"hasForm(form.id)\" class=\"hover:text-green-400\">\n                            {{ form.label }} <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\"> {{ form.module }} </span>\n                        </span>\n                        <span *ngIf=\"hasForm(form.id)\">\n                            <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                        </span>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-settings-menu',\n    templateUrl: './settings-menu.component.html',\n    styleUrls: ['./settings-menu.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SettingsMenuComponent {\n    @Input() minimizeSideNav : any;\n\n    constructor(\n        public router: Router,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n}\n","<h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 py-4 truncate\" *ngIf=\"!this.minimizeSideNav else minimize\">\n    {{ \"SETTINGS.administration\" | translate }}\n</h3>\n<ng-template #minimize>\n    <p class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 py-4 truncate\"\n        [matTooltip]=\"'SETTINGS.administration' | translate\" [matTooltipPosition]=\"'above'\">\n        <i class=\"w-4 text-lg fa-solid fa-cog\"></i>\n    </p>\n</ng-template>\n<mat-divider class=\"border-green-400\"></mat-divider>\n<mat-nav-list class=\"pt-0 px-1 overflow-x-hidden overflow-y-auto h-full-overflow\">\n    <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent(); let i = index\"\n                        [expanded]=\"parent['opened']\" (opened)=\"this.serviceSettings.closeOtherParent(this.router.url, parent['id'])\"\n                        class=\"rounded\" (click)=\"this.serviceSettings.setSelectedParentSettings(parent.id)\">\n        <mat-expansion-panel-header class=\"settings_expansion\" [class.border-t-0]=\"i === 0\" [class.p-4]=\"this.minimizeSideNav\">\n            <mat-panel-title class=\"text-sm\" [class.mr-0]=\"this.minimizeSideNav\" [matTooltip]=\"parent['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\">\n                <span *ngIf=\"!this.minimizeSideNav else minimizeParent\">\n                    {{ parent['label'] | translate }}\n                </span>\n                <ng-template #minimizeParent>\n                    <i class=\"w-4 fa-solid {{ parent['icon'] }}\"></i>\n                </ng-template>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"w-full border-t-2 border-gray-600\">\n            <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                 [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                 [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\">\n                <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                    <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\" [class.minified]=\"this.minimizeSideNav\" [expanded]=\"this.router.url.includes(setting['route'])\">\n                        <mat-expansion-panel-header class=\"font-normal w-full h-16 pl-0\" [class.p-4]=\"this.minimizeSideNav\">\n                            <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                <button [class.settings_admin_active]=\"this.router.url === setting['route']\"\n                                        class=\"pr-0 pl-3 font-normal w-full h-16 flex gap-4 justify-center items-center text-center\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        [routerLink]=\"setting['route']\" style=\"font-size: 0.82rem !important\">\n                                    <i [class.text-green-400]=\"this.router.url === setting['route']\"\n                                       class=\"w-4 text-lg rounded-full flex items-center justify-center {{ setting['icon'] }} 2xl:block\"\n                                       [matTooltip]=\"setting['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                                       [matTooltipPosition]=\"'right'\">\n                                    </i>\n                                    <p [class.font-medium]=\"this.router.url === setting['route']\" *ngIf=\"!this.minimizeSideNav\"\n                                       class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                                        {{ setting['label'] | translate }}\n                                    </p>\n                                </button>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                             [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                             [class.border-t]=\"!action['showOnlyIfActive']\"\n                             [class.w-full]=\"!action['showOnlyIfActive']\">\n                            <div class=\"border-b border-gray-400\"\n                                 *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] === '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                <button [class.settings_admin_active]=\"this.router.url.includes(action['route'])\"\n                                        [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                        [class.text-gray-800]=\"!this.router.url.includes(action['route'])\"\n                                        [class.ml-0]=\"this.minimizeSideNav\" [routerLink]=\"action['route']\"\n                                        [class.disable_link]=\"action['showOnlyIfActive']\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        class=\"font-normal w-full h-10 pl-8 text-xs flex gap-4 items-center text-center\">\n                                    <i class=\"w-4 text-sm rounded-full flex items-center justify-center 2xl:block ml-4 {{ action['icon'] }}\"\n                                       [matTooltip]=\"action['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                                       [matTooltipPosition]=\"'right'\"></i>\n                                    <p class=\"m-0 text-xs flex items-center justify-center\" *ngIf=\"!this.minimizeSideNav\">\n                                        {{ action['label'] | translate }}\n                                    </p>\n                                </button>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n                <ng-template #noActions>\n                    <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                            [class.settings_admin_active]=\"this.router.url === setting['route']\"\n                            class=\"pr-0 font-normal w-full h-16 flex gap-4 justify-center items-center text-center noActions\"\n                            [class.pl-3]=\"!this.minimizeSideNav\" [routerLink]=\"setting['route']\"\n                            (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\" style=\"font-size: 0.82rem !important\">\n                        <i class=\"w-4 rounded-full flex items-center justify-center fa-lg 2xl:block {{ setting['icon'] }}\"\n                           [matTooltip]=\"setting['label'] | translate\" [matTooltipDisabled]=\"!this.minimizeSideNav\"\n                           [matTooltipPosition]=\"'right'\"></i>\n                        <p [class.font-medium]=\"this.router.url === setting['route']\" *ngIf=\"!this.minimizeSideNav\"\n                           class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                            {{ setting['label'] | translate }}\n                        </p>\n                    </button>\n                </ng-template>\n            </div>\n        </div>\n    </mat-expansion-panel>\n</mat-nav-list>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { AboutUsComponent } from './general/about-us/about-us.component';\nimport { HasPrivilegeService } from \"../../services/has-privilege.service\";\nimport { SeparatorComponent } from \"./splitter/separator/separator.component\";\nimport { LoginRequiredService } from \"../../services/login-required.service\";\nimport { FormListComponent } from \"./verifier/form/list/form-list.component\";\nimport { WorkflowListComponent } from \"./verifier/workflow/list/workflow-list.component\";\nimport { WorkflowListSplitterComponent } from \"./splitter/workflow/list/workflow-list.component\";\nimport { UsersListComponent } from \"./general/users/list/users-list.component\";\nimport { RolesListComponent } from \"./general/roles/list/roles-list.component\";\nimport { SplitterFormListComponent } from \"./splitter/form/list/form-list.component\";\nimport { CreateUserComponent } from \"./general/users/create/create-user.component\";\nimport { UpdateUserComponent } from \"./general/users/update/update-user.component\";\nimport { CreateRoleComponent } from \"./general/roles/create/create-role.component\";\nimport { UpdateRoleComponent } from \"./general/roles/update/update-role.component\";\nimport { FormBuilderComponent } from \"./verifier/form/builder/form-builder.component\";\nimport { WorkflowBuilderComponent } from \"./verifier/workflow/builder/workflow-builder.component\";\nimport { WorkflowBuilderSplitterComponent } from \"./splitter/workflow/builder/workflow-builder.component\";\nimport { OutputsListComponent } from \"./verifier/outputs/list/outputs-list.component\";\nimport { ListDoctypeComponent } from \"./splitter/doctypes/list/list-doctype.component\";\nimport { CustomFieldsComponent } from \"./general/custom-fields/custom-fields.component\";\nimport { SplitterOutputListComponent } from \"./splitter/output/list/output-list.component\";\nimport { UpdateOutputComponent } from \"./verifier/outputs/update/update-output.component\";\nimport { ConfigurationsComponent } from \"./general/configurations/configurations.component\";\nimport { DocserversComponent } from \"./general/docservers/docservers.component\";\nimport { RegexComponent } from \"./general/regex/regex.component\";\nimport { MailCollectComponent } from \"./general/mailcollect/mailcollect.component\";\nimport { CreateOutputComponent } from \"./verifier/outputs/create/create-output.component\";\nimport { SplitterFormBuilderComponent } from \"./splitter/form/builder/form-builder.component\";\nimport { CreateDoctypeComponent } from \"./splitter/doctypes/create/create-doctype.component\";\nimport { SplitterUpdateOutputComponent } from \"./splitter/output/update/update-output.component\";\nimport { SplitterCreateOutputComponent } from \"./splitter/output/create/create-output.component\";\nimport { ListVerifierAiModelComponent } from \"./verifier/ai-model/list/list-ai-model.component\";\nimport { CreateVerifierAiModelComponent } from \"./verifier/ai-model/create/create-ai-model.component\";\nimport { UpdateVerifierAiModelComponent } from \"./verifier/ai-model/update/update-ai-model.component\";\nimport { ListSplitterAiModelComponent } from \"./splitter/ai-model/list/list-ai-model.component\";\nimport { CreateSplitterAiModelComponent } from \"./splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateSplitterAiModelComponent } from \"./splitter/ai-model/update/update-ai-model.component\";\nimport { PositionsMaskListComponent } from \"./verifier/positions-mask/list/positions-mask-list.component\";\nimport { CreatePositionsMaskComponent } from \"./verifier/positions-mask/create/create-positions-mask.component\";\nimport { UpdatePositionsMaskComponent } from \"./verifier/positions-mask/update/update-positions-mask.component\";\nimport { CreateFolderDoctypeComponent } from \"./splitter/doctypes/create-folder/create-folder-doctype.component\";\nimport { LoginMethodsComponent } from \"./general/login-methods/login-methods.component\";\nimport { VariousSettingsVerifierComponent } from \"./verifier/various-settings/various-settings.component\";\nimport { UserQuotaComponent } from \"./general/user-quota/user-quota.component\";\nimport { SplitterUpdateStatusComponent } from \"./splitter/update-status/update-status.component\";\nimport { VerifierStatusUpdateComponent } from \"./verifier/update-status/update-status.component\";\n\nconst routes: Routes = [\n    {\n        path: 'settings', component: SettingsComponent,\n        data: {title: 'GLOBAL.settings', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n// --- General\n    // Configurations\n    {\n        path: 'settings/general/configurations', component: ConfigurationsComponent,\n        data: {title: 'SETTINGS.configurations', privileges: ['settings', 'configurations']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/docservers', component: DocserversComponent,\n        data: {title: 'SETTINGS.docservers', privileges: ['settings', 'docservers']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/regex', component: RegexComponent,\n        data: {title: 'SETTINGS.regex', privileges: ['settings', 'regex']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/mailcollect', component: MailCollectComponent,\n        data: {title: 'SETTINGS.mailcollect', privileges: ['settings', 'mailcollect']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/user-quota', component: UserQuotaComponent,\n        data: {title: 'SETTINGS.user_quota', privileges: ['settings', 'user_quota']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users', component: UsersListComponent,\n        data: {title: 'SETTINGS.users_list', privileges: ['settings', 'users_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/new', component: CreateUserComponent,\n        data: {title: 'USER.create_user', privileges: ['settings', 'add_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/update/:id', component: UpdateUserComponent,\n        data: {title: 'USER.update', privileges: ['settings', 'update_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles', component: RolesListComponent,\n        data: {title: 'SETTINGS.roles_list', privileges: ['settings', 'roles_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/new', component: CreateRoleComponent,\n        data: {title: 'ROLE.create_role', privileges: ['settings', 'add_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/update/:id', component: UpdateRoleComponent,\n        data: {title: 'ROLE.update', privileges: ['settings', 'update_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/login-methods', component: LoginMethodsComponent,\n        data: {title: 'SETTINGS.login_methods', privileges: ['settings', 'login_methods']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/about-us', component: AboutUsComponent,\n        data: {title: 'SETTINGS.abouts_us', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/custom-fields', component: CustomFieldsComponent,\n        data: {title: 'SETTINGS.custom_fields', privileges: ['settings', 'custom_fields']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// --- END General\n// --- Verifier\n    {\n        path: 'settings/verifier', component: VariousSettingsVerifierComponent,\n        data: {title: 'SETTINGS.verifier_settings', privileges: ['settings', 'verifier_settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows', component: WorkflowListComponent,\n        data: {title: 'SETTINGS.list_workflows', privileges: ['settings', 'workflows_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows/builder/new', component: WorkflowBuilderComponent,\n        data: {title: 'SETTINGS.workflow_builder', privileges: ['settings', 'add_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/workflows/builder/edit/:id', component: WorkflowBuilderComponent,\n        data: {title: 'SETTINGS.workflow_update', privileges: ['settings', 'update_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms', component: FormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/new', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/edit/:id', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs', component: OutputsListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/new', component: CreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/update/:id', component: UpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask', component: PositionsMaskListComponent,\n        data: {title: 'SETTINGS.list_positions_mask', privileges: ['settings', 'positions_mask_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/create', component: CreatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_builder', privileges: ['settings', 'add_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/update/:id', component: UpdatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_update', privileges: ['settings', 'update_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai', component: ListVerifierAiModelComponent,\n        data: {title: 'SETTINGS.artificial_intelligence', privileges: ['settings', 'list_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai/create', component: CreateVerifierAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.add_model', privileges: ['settings', 'create_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/ai/update/:id', component: UpdateVerifierAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.update_model', privileges: ['settings', 'update_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/status-update', component: VerifierStatusUpdateComponent,\n        data: {title: 'SETTINGS.status_update', privileges: ['settings', 'update_status']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// -- END Verifier\n// -- Splitter\n    {\n        path: 'settings/splitter/workflows', component: WorkflowListSplitterComponent,\n        data: {title: 'SETTINGS.list_workflows', privileges: ['settings', 'workflows_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/workflows/builder/new', component: WorkflowBuilderSplitterComponent,\n        data: {title: 'SETTINGS.workflow_builder', privileges: ['settings', 'add_workflow_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/workflows/builder/edit/:id', component: WorkflowBuilderSplitterComponent,\n        data: {title: 'SETTINGS.workflow_update', privileges: ['settings', 'update_workflow']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms', component: SplitterFormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/new', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/edit/:id', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/separator',\n        component: SeparatorComponent,\n        data: {title: 'SETTINGS.document_separator', privileges: ['settings', 'separator_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type',\n        component: ListDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'document_type_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/new',\n        component: CreateDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/create-folder',\n        component: CreateFolderDoctypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs', component: SplitterOutputListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/new', component: SplitterCreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/update/:id', component: SplitterUpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai', component: ListSplitterAiModelComponent,\n        data: {title: 'SETTINGS.artificial_intelligence', privileges: ['settings', 'list_ai_model_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/create', component: CreateSplitterAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.add_model', privileges: ['settings', 'create_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/update/:id', component: UpdateSplitterAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.update_model', privileges: ['settings', 'update_ai_model_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/status-update', component: SplitterUpdateStatusComponent,\n        data: {title: 'SETTINGS.status_update', privileges: ['settings', 'update_status_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    }\n// -- END Splitter\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class SettingsRoutingModule {}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../services/user.service\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: \"settings.component.html\"\n})\n\nexport class SettingsComponent implements OnInit {\n    selectedSetting         : string    = this.serviceSettings.getSelectedSetting();\n    selectedParentSetting   : string    = this.serviceSettings.getSelectedParentSetting();\n    settings                : any       = this.serviceSettings.getSettings();\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.selectedSetting = this.serviceSettings.getSelectedSetting();\n        this.selectedParentSetting = this.serviceSettings.getSelectedParentSetting();\n        this.settings = this.serviceSettings.getSettings();\n        let settingsFound = false;\n        this.settings[this.selectedParentSetting].forEach((element: any) => {\n            if (element['id'] === this.selectedSetting) {\n                settingsFound = true;\n                const routeToGo = element.route;\n                if (routeToGo && this.privilegesService.hasPrivilege(element.privilege)) {\n                    this.router.navigateByUrl(routeToGo).then();\n                }\n            }\n        });\n\n        if (!settingsFound) {\n            this.router.navigateByUrl('/settings/general/configurations').then();\n        }\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport {DocumentTypeComponent} from \"../../../../splitter/document-type/document-type.component\";\n\n@Component({\n  selector: 'app-create-model',\n  templateUrl: './create-ai-model.component.html',\n  styleUrls: ['./create-ai-model.component.scss']\n})\n\nexport class CreateSplitterAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    forms               : any       = [];\n    AiModel             : any       = {\n        id             : 0,\n        trainFolders   : [],\n        fields         : [\n            {\n                id: 'model_label',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_label\"),\n                type: 'text',\n                control: new FormControl('', Validators.required),\n                required: true\n            },\n            {\n                id: 'model_path',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_path\"),\n                type: 'text',\n                control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n                required: true\n            },\n            {\n                id: 'min_proba',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n                type: 'number',\n                control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        this.AiModel.fields.forEach((element: any) => {\n            if (element.id === 'model_label') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes('/')) {\n                        element.control.setValue(value.replace('/', ''));\n                    }\n                });\n            }\n        });\n        this.retrieveDoctypes();\n        this.retrieveForms();\n    }\n\n    retrieveDoctypes() {\n        this.http.get(environment['url'] + '/ws/ai/splitter/getTrainDocuments', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (const trainFolder of data) {\n                    this.AiModel.trainFolders.push({\n                        folder: trainFolder,\n                        isSelected: false,\n                        doctype: \"\",\n                        form: \"\"\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createModel() {\n        let startTraining = true;\n        let totalTrainFolders = 0;\n\n        this.AiModel.trainFolders.forEach((trainFolders: any) => {\n            if (trainFolders.isSelected && trainFolders.doctype === \"\") {\n                startTraining = false;\n            }\n            else {\n                totalTrainFolders ++;\n            }\n        });\n\n        if (this.isValidForm(this.AiModel.fields) && totalTrainFolders > 1) {\n            const selectedTrainFolders: any[] = [];\n            const minProba = this.getValueFromForm(this.AiModel.fields, 'min_proba');\n            const label = this.getValueFromForm(this.AiModel.fields, 'model_label');\n            const modelName = label.toLowerCase().replace(/ /g, \"_\") + '.sav';\n\n            this.AiModel.trainFolders.forEach((trainFolders: any) => {\n                if (trainFolders.isSelected) {\n                    const folder = trainFolders.folder;\n                    const formId = trainFolders.form;\n                    const doctype = trainFolders.doctype;\n                    selectedTrainFolders.push({\n                        form: formId,\n                        folder: folder,\n                        doctype: doctype\n                    });\n                }\n            });\n\n            for (const element of this.AiModel.trainFolders) {\n                const exists = Object.values(element).includes(modelName);\n                if (exists) {\n                    this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.already_existing_model'));\n                    startTraining = false;\n                    break;\n                }\n            }\n            if (startTraining) {\n                this.http.post(environment['url'] + '/ws/ai/splitter/trainModel/' + modelName,\n                    {label: label, docs: selectedTrainFolders, min_proba: minProba},\n                    {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.created'));\n                this.router.navigate(['/settings/splitter/ai']).then();\n            }\n        } else if (totalTrainFolders < 2) {\n            this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.not_enough_checked'));\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveForms() {\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n               this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    openDoctypeTree(trainFolder: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: trainFolder.doctype ? trainFolder.doctype : \"\",\n                    label: \"\"\n                },\n                formId: trainFolder.form\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                trainFolder.doctype = result.key;\n                trainFolder.doctype_label = result.label;\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\">\n                <div class=\"grid grid-cols-3 gap-6 m-10\">\n                    <ng-container *ngFor=\"let field of this.AiModel['fields']\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                                   placeholder=\"{{ field.placeholder | translate }}\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}, format : \"model_name.sav\"\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'number'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                                   [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n                <h2 class=\"text-center m-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.choose_documents' | translate }}\n                </h2>\n                <mat-list class=\"mx-10 my-2 grid grid-cols-{{ this.AiModel['trainFolders'].length }} gap-4 place-items-stretch text-center\">\n                    <div *ngFor=\"let trainFolder of this.AiModel['trainFolders'], let i=index\">\n                        <mat-checkbox [(ngModel)]=\"trainFolder['isSelected']\" [ngModelOptions]=\"{standalone: true}\" class=\"w-lg h-lg accent-green-400 checkBox_list cursor-pointer pr-4 pb-2\">\n                            {{ trainFolder['folder'] }}\n                        </mat-checkbox>\n                        <div *ngIf=\"trainFolder['isSelected']\">\n                            <div class=\"mt-4\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                                    <mat-select [(ngModel)]=\"trainFolder['form']\">\n                                        <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">\n                                            {{ form.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <button class=\"max-w-full text-lg text-left hover:text-green-400\" *ngIf=\"trainFolder.form\"\n                                    (click)=\"openDoctypeTree(trainFolder)\" [matTooltip]=\"'SPLITTER.click_to_select_doctype' | translate\">\n                                <div class=\"truncate\">\n                                    <span *ngIf=\"!trainFolder['doctype_label']\">\n                                        {{ 'SPLITTER.click_to_select_doctype' | translate }} :\n                                    </span>\n                                    <span class=\"font-medium\">\n                                        <i class=\"fa-solid fa-file\"></i>\n                                            {{ trainFolder['doctype_label'] }}\n                                    </span>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                </mat-list>\n            </div>\n            <div class=\"flex justify-center items-center mb-2 py-4\">\n                <button mat-button (click)=\"createModel()\" class=\"valid_button\">\n                    <span class=\"block\">\n                        {{ 'ARTIFICIAL-INTELLIGENCE.train_a_model' | translate }}\n                    </span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport {catchError, interval, of, tap} from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\n\n@Component({\n  selector: 'app-list-ai-splitter',\n  templateUrl: './list-ai-model.component.html',\n  styleUrls: ['./list-ai-model.component.scss']\n})\n\nexport class ListSplitterAiModelComponent implements OnInit {\n    displayedColumns    : string[]    = ['id', 'model_label', 'accuracy_score', 'documents', 'min_proba', 'status', 'actions'];\n    inter               : any;\n    clickedRow          : any;\n    offset              : number      = 0;\n    pageIndex           : number      = 0;\n    total               : number      = 0;\n    pageSize            : number      = 10;\n    modelsList          : any         = [];\n    prediction          : any         = [];\n    loading             : boolean     = true;\n    showResponse        : boolean     = false;\n    isPredicting        : boolean     = false;\n    fileControl         : FormControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension([\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveModels();\n    }\n\n    retrieveModels(offset?: number, size?: number, inter = false) {\n        this.http.get(environment['url'] + '/ws/ai/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.modelsList = data['models'];\n                for (let i = 0; i < this.modelsList.length; i++) {\n                    let tmp_doc = \"\";\n\n                    if (this.modelsList[i].status === \"training\") {\n                        if (!inter) {\n                            this.inter = interval(5000).subscribe(() => {\n                                this.retrieveModels(this.offset, this.pageSize, true);\n                                let model_training = false;\n                                this.modelsList.forEach((model: any) => {\n                                    if (model.status === \"training\") {\n                                        model_training = true;\n                                    }\n                                });\n                                if (!model_training) {\n                                    this.inter.unsubscribe();\n                                }\n                            });\n                        }\n                    }\n\n                    for (let j = 0; j < this.modelsList[i].documents.length; j++) {\n                        tmp_doc += this.modelsList[i].documents[j].folder + \", \";\n                        if (j === this.modelsList[i].documents.length - 1) {\n                            tmp_doc = tmp_doc.slice(0, -2);\n                        }\n                    }\n                    this.modelsList[i].documents = [tmp_doc];\n                }\n\n                this.total = this.modelsList.length;\n                if (offset !== undefined && size !== undefined) {\n                    this.modelsList = this.modelsList.slice(offset, offset + size);\n                } else {\n                    this.modelsList = this.modelsList.slice(0, 10);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.modelsList.slice();\n        if (!sort.active || sort.direction === '') {\n            this.modelsList = data;\n            return;\n        }\n\n        this.modelsList = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'model_path': return this.compare(a.path, b.path, isAsc);\n                case 'train_time': return this.compare(a.train_time, b.train_time, isAsc);\n                case 'type': return this.compare(a.type, b.type, isAsc);\n                case 'accuracy_score': return this.compare(a.accuracy, b.accuracy, isAsc);\n                case 'doc_types': return this.compare(a.doctypes, b.doctypes, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                case 'min_proba': return this.compare(a.min_proba, b.min_proba, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    selectRow(row : object) {\n        this.clickedRow = row;\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (![\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"].includes(fileExtension.toLowerCase())) {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    deleteConfirmDialog(modelId: number, model: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ARTIFICIAL-INTELLIGENCE.confirm_delete', {\"model\": model}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteModel(modelId);\n            }\n        });\n    }\n\n    deleteModel(modelId: number) {\n        if (modelId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/ai/splitter/delete/' + modelId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.retrieveModels();\n                    this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.retrieveModels(this.offset, this.pageSize);\n    }\n\n    onSubmit() {\n        this.showResponse = false;\n        const formData = new FormData();\n        const disp = Object.values(this.clickedRow)[2];\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        this.isPredicting = true;\n        this.http.post(environment['url'] + '/ws/ai/splitter/testModel/' + disp, formData, {headers: this.authService.headers}).pipe(\n            tap((res) => this.onResponse(res)),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_not_found'));\n                this.isPredicting = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onResponse(res: any) {\n        this.prediction = res;\n        this.showResponse = true;\n        this.isPredicting = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!this.loading\">\n                <mat-table [dataSource]=\"modelsList\" matSort (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.id' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"model_label\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.model_label' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['model_label'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"accuracy_score\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.accuracy' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['accuracy_score'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"documents\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.doctypes' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['documents'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"min_proba\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.min_proba' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['min_proba'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"status\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.status' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"col-span-1 text-right\">\n                                <span *ngIf=\"element.status === 'training'\">\n                                    <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" style=\"--fa-animation-duration: 5s\"\n                                       matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training' | translate }}\"></i>\n                                    <span class=\"text-green-400 ml-2\">\n                                        {{ element['percentage'] }}\n                                    </span>\n                                </span>\n                                <i *ngIf=\"element.status === 'error'\" class=\"fas fa-triangle-exclamation fa-lg my-4 text-amber-500 cursor-pointer\"\n                                   matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.error' | translate }}\"></i>\n                                <i *ngIf=\"element.status === 'OK'\" class=\"fa-solid fa-check fa-lg my-4\"\n                                   matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training_done' | translate }}\"></i>\n                            </span>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <button [disabled]=\"element.status !== 'OK'\" (click)=\"$event.stopPropagation(); sidenav2.open(); this.selectRow(element)\"\n                                    matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-vial\"></i>\n                            </button>\n                            <button mat-icon-button\n                                    (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element['model_label'])\"\n                                    matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-trash text-lg\"></i>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/settings/splitter/ai/update/{{ row.id }}\"\n                             class=\"cursor-pointer hover:shadow-md transition-colors duration-300\">\n                    </mat-row>\n                </mat-table>\n                <mat-paginator [showFirstLastButtons]=\"true\"\n                               [length]=\"total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\" *ngIf=\"this.clickedRow\">\n            <mat-card class=\"w-full border-solid border-green-400 border rounded-lg transition duration-300\">\n                <mat-card-title class=\"p-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.model_selected'| translate }}\n                    {{ this.clickedRow['model_label'] }}\n                </mat-card-title>\n                <mat-card-actions class=\"block\">\n                    <div class=\"w-full\">\n                        <ngx-file-drag-drop\n                            [displayFileSize]=\"true\"\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            (valueChanged)=\"checkFile($event)\"\n                            [class.disabled]=\"this.isPredicting\"\n                            [class.pointer-events-none]=\"this.isPredicting\"\n                            [emptyPlaceholder]=\"'ARTIFICIAL-INTELLIGENCE.choose_file' | translate\">\n                        </ngx-file-drag-drop>\n                    </div>\n                    <div class=\"text-center\" [class.cursor-not-allowed]=\"this.isPredicting || this.fileControl.value!.length === 0\">\n                        <button mat-button (click)=\"onSubmit()\"\n                                [disabled]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                [class.bg-gray-400]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                class=\"w-3/5 valid_button\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.predict' | translate }}\n                        </button>\n                    </div>\n                </mat-card-actions>\n                <div *ngIf=\"showResponse\">\n                    <mat-divider></mat-divider>\n                    <mat-card-content class=\"pt-2\">\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.file' | translate }} : {{ prediction[0] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.prediction' | translate }} : {{ prediction[3] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.probability' | translate }} : {{ prediction[2]}} %</p>\n                    </mat-card-content>\n                </div>\n                <mat-card-footer>\n                    <mat-progress-bar *ngIf=\"isPredicting\" mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { lastValueFrom, of } from \"rxjs\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { environment } from \"../../../../env\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport {DocumentTypeComponent} from \"../../../../splitter/document-type/document-type.component\";\n\n@Component({\n  selector: 'app-update-model',\n  templateUrl: './update-ai-model.component.html',\n  styleUrls: ['./update-ai-model.component.scss']\n})\n\nexport class UpdateSplitterAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    forms               : any       = [];\n    AiModel             : any       = {\n        id             : 0,\n        trainFolders : [],\n        fields         : [\n            {\n                id: 'model_label',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_label\"),\n                type: 'text',\n                control: new FormControl('', Validators.required),\n                required: true\n            },\n            {\n                id: 'model_path',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_path\"),\n                type: 'text',\n                control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n                required: true\n            },\n            {\n                id: 'min_proba',\n                label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n                type: 'number',\n                control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit() {\n        this.serviceSettings.init();\n        this.AiModel.id = this.route.snapshot.params['id'];\n\n        this.AiModel.fields.forEach((element: any) => {\n            if (element.id === 'model_label') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes('/')) {\n                        element.control.setValue(value.replace('/', ''));\n                    }\n                });\n            }\n        });\n\n        await this.retrieveForms();\n        this.http.get(environment['url'] + '/ws/ai/getById/' + this.AiModel.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.AiModel.trainFolders = data.documents;\n                this.http.get(environment['url'] + '/ws/doctypes/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        data.doctypes.forEach((doctype: any) => {\n                            this.AiModel.trainFolders.forEach((trainFolder: any) => {\n                                if (trainFolder.doctype === doctype.key) {\n                                    trainFolder.doctype_label = doctype.label;\n                                }\n                            });\n                        });\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.loading = false;\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.setFormValue(this.AiModel.fields, 'model_label', data.model_label);\n                this.setFormValue(this.AiModel.fields, 'model_path', data.model_path);\n                this.setFormValue(this.AiModel.fields, 'min_proba', data.min_proba);\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/ai']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateModel() {\n        if (this.isValidForm(this.AiModel.fields)) {\n            const minProba = this.getValueFromForm(this.AiModel.fields, 'min_proba');\n            const modelPath = this.getValueFromForm(this.AiModel.fields, 'model_path');\n            const modelLabel = this.getValueFromForm(this.AiModel.fields, 'model_label');\n\n            if (this.AiModel.id !== undefined) {\n                this.http.post(environment['url'] + '/ws/ai/splitter/update/' + this.AiModel.id, {\n                        min_proba: minProba,\n                        model_path: modelPath,\n                        model_label: modelLabel,\n                        documents: this.AiModel['trainFolders']\n                    }, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_updated'));\n                        this.router.navigate(['/settings/splitter/ai']).then();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    setFormValue(form: any, fieldId: any, value: any) {\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                element.control.setValue(value);\n            }\n        });\n    }\n\n    async retrieveForms() {\n        const retrieve = this.http.get(environment['url'] + '/ws/forms/splitter/list',\n            {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        );\n        return await lastValueFrom(retrieve).then();\n    }\n\n    openDoctypeTree(trainDocument: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                selectedDoctype: {\n                    key: trainDocument.doctype ? trainDocument.doctype  : \"\",\n                    label: \"\"\n                },\n                formId: trainDocument.form\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                trainDocument.doctype = result.key;\n                trainDocument.doctype_label = result.label;\n            }\n        });\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\">\n                <div class=\"grid grid-cols-3 gap-6 m-10\">\n                    <ng-container *ngFor=\"let field of AiModel['fields']\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>\n                                {{ field.label | translate }}\n                            </mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'number'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">{{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}</mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"mx-10 my-2 grid grid-cols-{{ this.AiModel['trainFolders'].length }} gap-4 place-items-stretch\">\n                    <div *ngFor=\"let trainFolder of this.AiModel['trainFolders']\" class=\"text-center\">\n                        {{ trainFolder['folder'] }}\n                        <div class=\"mt-4\">\n                            <mat-form-field class=\"w-full\">\n                                <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"trainFolder['form']\">\n                                    <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">\n                                        {{ form.label }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <button class=\"max-w-full text-lg text-left hover:text-green-400\"\n                                *ngIf=\"trainFolder.form\" (click)=\"openDoctypeTree(trainFolder);\"\n                                [matTooltip]=\"'SPLITTER.click_to_select_doctype' | translate\">\n                            <div class=\"truncate\">\n                                <span *ngIf=\"!trainFolder['doctype_label']\">\n                                    {{ 'SPLITTER.click_to_select_doctype' | translate }} :\n                                </span>\n                                <span class=\"font-medium\">\n                                    <i class=\"fa-solid fa-file\"></i>\n                                    {{ trainFolder['doctype_label'] }}\n                                </span>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateModel()\" mat-button class=\"valid_button m-5\">\n                    <span class=\"block\">{{ \"ARTIFICIAL-INTELLIGENCE.update_model\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-folder-doc-type',\n  templateUrl: './create-folder-doctype.component.html',\n  styleUrls: ['./create-folder-doctype.component.scss']\n})\nexport class CreateFolderDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading             : boolean   = false;\n    noMasterFolder      : string    = '_NO_MASTER';\n    fields              : any       = [\n        {\n            id       : 'key',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.id'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false\n        },\n        {\n            id       : 'label',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.label'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false\n        }\n    ];\n    selectedFormId      : number | undefined;\n    form!               : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean;}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    addFolder() {\n        let newFolder = this.form.getRawValue();\n        const lastIndex = this.getLastFolderIndex(newFolder.folder);\n        newFolder = {\n            'key'       : newFolder.key,\n            'code'      : newFolder.folder !== this.noMasterFolder ? newFolder.folder + '.' + lastIndex : '0.' + lastIndex,\n            'label'     : newFolder.label,\n            'is_default': false,\n            'type'      : 'folder',\n            'form_id'   : this.selectedFormId\n        };\n        this.loading = true;\n        this.http.post(environment['url'] + '/ws/doctypes/add', newFolder, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.folder_added'));\n                this.form.reset();\n                this.form.controls['folder'].setValue(this.noMasterFolder);\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                if (this.selectedFormId) {\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [settings]=\"{'canFolderBeSelected': false}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_folder' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"form.valid && addFolder()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder['formId'] === selectedFormId\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                        <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                        <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'DOCTYPE.add' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-doc-type',\n  templateUrl: './create-doctype.component.html',\n  styleUrls: ['./create-doctype.component.scss']\n})\nexport class CreateDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    forms           : any[]   = [];\n    fields          : any     = [\n        {\n            id      : 'key',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.id'),\n            required: true\n        },\n        {\n            id      : 'label',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.label'),\n            required: true\n        },\n        {\n            id      : 'isDefault',\n            type    : 'slide',\n            value   : false,\n            label   : this.translate.instant('DOCTYPE.default_doctype'),\n            required: false\n        }\n    ];\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean; value: any;}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value: field.value, disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl({value:\"\", disabled: false}, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n            if (docType.code.startsWith(codeSelected)\n                && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                const currentIdx = Number(docType.code.split('.').pop());\n                lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n            }\n        });\n        return lastIndex + 1;\n    }\n\n    addDocType() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        newDocType = {\n            'key'           : newDocType.key,\n            'code'          : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'         : newDocType.label,\n            'is_default'    : newDocType['isDefault'],\n            'type'          : 'document',\n            'form_id'       : this.selectedFormId\n        };\n        this.http.post(environment['url'] + '/ws/doctypes/add', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_added'));\n                if (this.selectedFormId) {\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                }\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [settings]=\"{'canFolderBeSelected': false, 'allowImportExport': true}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\"></app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n            <form (ngSubmit)=\"form.valid && addDocType()\" [formGroup]=\"form\">\n                <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                    <mat-form-field>\n                        <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                        <mat-select id='folder' [formControlName]=\"'folder'\" [required]=\"true\">\n                            <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                                <mat-option *ngIf=\"folder.type === 'folder' && folder['formId'] === selectedFormId\"\n                                            [value]=\"folder.code\">\n                                    {{ folder.label }}\n                                </mat-option>\n                            </div>\n                        </mat-select>\n                        <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <ng-container *ngFor=\"let field of fields\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                                   [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                            <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                            <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                        </mat-form-field>\n                        <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                            <mat-slide-toggle [formControlName]=\"field.id\">\n                                {{ field.label | translate }}\n                            </mat-slide-toggle>\n                        </div>\n                    </ng-container>\n                    <button type=\"submit\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" mat-button>\n                        {{ 'DOCTYPE.add' | translate }}\n                    </button>\n                </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-list-doc-type',\n    templateUrl: './list-doctype.component.html',\n    styleUrls: ['./list-doctype.component.scss']\n})\nexport class ListDoctypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    noMasterFolder  : string  = '_NO_MASTER';\n    fields          : any     = [\n        {\n            id        : 'key',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.id'),\n            required  : true,\n            disabled  : true\n        },\n        {\n            id        : 'label',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.label'),\n            required  : true,\n            disabled  : false\n        },\n        {\n            id       : 'isDefault',\n            type     : 'slide',\n            label    : this.translate.instant('DOCTYPE.default_doctype'),\n            required : false,\n            disabled : false\n        }\n    ];\n    selectedDoctype : any     = {\n        label   : '',\n        key     : '',\n        code    : ''\n    };\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean;}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    update() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        if (newDocType.folder === '_NO_MASTER') {\n            newDocType.folder = \"0\";\n        }\n        newDocType = {\n            'key'       : newDocType.key,\n            'code'      : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'     : newDocType.label,\n            'is_default': newDocType.isDefault,\n            'form_id'   : this.selectedFormId,\n            'status'    : 'OK'\n        };\n        this.updateDoctype(newDocType);\n    }\n\n    getOutPut($event: any) {\n        this.selectedDoctype = $event;\n        const code = this.selectedDoctype.code.split('.');\n        code.pop();\n        this.form.controls['folder'].setValue(code.join('.'));\n        this.form.controls['key'].setValue(this.selectedDoctype.key);\n        this.form.controls['label'].setValue(this.selectedDoctype.label);\n        this.form.controls['isDefault'].setValue(this.selectedDoctype.isDefault);\n        this.selectedDoctype.type === 'document' ? this.form.controls['isDefault'].enable() : this.form.controls['isDefault'].disable();\n    }\n\n    deleteDoctype() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('DOCTYPE.confirm_delete', {\"doctypeLabel\": this.selectedDoctype.label}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                const updateValue = {\n                    'key'       : this.form.controls['key'].value,\n                    'code'      : this.form.controls['folder'].value,\n                    'label'     : this.form.controls['label'].value,\n                    'is_default': this.form.controls['isDefault'].value,\n                    'form_id'   : this.selectedFormId,\n                    'status'    : 'DEL'\n                };\n                this.updateDoctype(updateValue);\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n            }\n        });\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx : lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    updateDoctype(newDocType: any) {\n        this.http.post(environment['url'] + '/ws/doctypes/update', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_edited'));\n                if (this.selectedFormId) {\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                }\n                this.selectedDoctype.code = newDocType.code;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory\n            [settings]=\"{'canFolderBeSelected': true}\"\n            (selectedFormOutput)=\"getSelectedForm($event)\"\n            (selectedDoctypeOutput)=\"getOutPut($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.edit_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"update()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of this.documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                        [disabled]=\"!this.selectedDoctype.key || folder.code.startsWith(this.selectedDoctype.code + '.')\n                                                        || folder.key === this.selectedDoctype.key\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of this.fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\" [readonly]=\"!this.selectedDoctype.key\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button [disabled]=\"!this.selectedDoctype.key\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'GLOBAL.edit' | translate }}\n                </button>\n                <button [disabled]=\"!this.selectedDoctype.key\" (click)=\"deleteDoctype()\" class=\"m-auto w-7/12 border-solid border-red-400 border bg-red-400 text-white\" type='button' mat-button>\n                    {{ 'GLOBAL.delete' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\n\nimport { environment } from \"../../../../env\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { DocumentTypeComponent } from \"../../../../splitter/document-type/document-type.component\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html'\n})\nexport class SplitterFormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    outputs                 : any[]     = [];\n    metadataMethods         : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'default_form': {\n            'control': new FormControl()\n        }\n    };\n    formSettings            : any       = {\n        'metadata_method': {\n            'control': new FormControl()\n        },\n        'export_zip_file': {\n            'control': new FormControl()\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    formId                  : any;\n    creationMode            : boolean   = true;\n    labelType               : any []    = [\n        marker('TYPES.text'),\n        marker('TYPES.regex'),\n        marker('TYPES.textarea'),\n        marker('TYPES.date'),\n        marker('TYPES.select'),\n        marker('TYPES.checkbox'),\n        marker('VERIFIER.field_settings'),\n        marker('FORMS.delete_field'),\n        marker('FORMS.update_label'),\n        marker('FORMS.select_doctypes')\n    ];\n    fieldCategories         : any []    = [\n        {\n            'id'    : 'batch_metadata',\n            'label' : marker('SPLITTER.batch_metadata')\n        },\n        {\n            'id'    : 'document_metadata',\n            'label' : marker('SPLITTER.document_metadata')\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id'    : 'custom_fields',\n            'label' : marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    fields                  : any       = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n    classList               : any []    = [\n        {\n            'id'    : 'w-full',\n            'label' : '1'\n        },\n        {\n            'id'    : 'w-1/2',\n            'label' : '1/2'\n        },\n        {\n            'id'    : 'w-30',\n            'label' : '1/3'\n        },\n        {\n            'id'    : 'w-1/3',\n            'label' : '1/33'\n        },\n        {\n            'id'    : 'w-1/4',\n            'label' : '1/4'\n        },\n        {\n            'id'    : 'w-1/5',\n            'label' : '1/5'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id'    : 'simple',\n            'label' : marker('DISPLAY.simple'),\n            'icon'  : 'fa-solid fa-file-alt'\n        },\n        {\n            'id'    : 'multi',\n            'label' : marker('DISPLAY.multi'),\n            'icon'  : 'fa-solid fa-layer-group'\n        }\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('MANDATORY.required'),\n            'icon'  : 'fa-solid fa-star'\n        },\n        {\n            'id'    : false,\n            'label' : marker('MANDATORY.not_required'),\n            'icon'  : 'far fa-star'\n        }\n    ];\n    disabledList            : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('DISABLED.disabled'),\n            'icon'  : 'fa-solid fa-ban'\n        },\n        {\n            'id'    : false,\n            'label' : marker('DISABLED.not_disabled'),\n            'icon'  : ''\n        }\n    ];\n    fieldMetadata           : any []    = [\n        {\n            'id'            : 'searchMask',\n            'placeholder'   : marker('FIELD_METADATA.search_mask'),\n            'control'       : new FormControl(),\n            'types'         : ['text']\n        },\n        {\n            'id'            : 'resultMask',\n            'placeholder'   : marker('FIELD_METADATA.result_mask'),\n            'control'       : new FormControl(),\n            'types'         : ['text']\n        },\n        {\n            'id'            : 'defaultValue',\n            'placeholder'   : marker('FIELD_METADATA.default_value'),\n            'control'       : new FormControl(),\n            'types'         : ['text', 'textarea', 'select', 'date', 'checkbox']\n        },\n        {\n            'id'            : 'validationMask',\n            'placeholder'   : marker('FIELD_METADATA.validation_mask'),\n            'control'       : new FormControl(),\n            'types'         : ['text', 'textarea']\n        },\n        {\n            'id'            : 'validationMask',\n            'placeholder'   : marker('FIELD_METADATA.validation_mask'),\n            'control'       : new FormControl(),\n            'types'         : ['text', 'textarea']\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputs = data.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/splitter/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) {\n                                        this.form[field].control.setValue(data[field]);\n                                    }\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) {\n                                    this.outputForm[0].control.setValue(data.outputs[0]);\n                                }\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) {\n                                            this.addOutput();\n                                        }\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }), catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/metadataMethods', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadataMethods.forEach((option: any) => {\n                    this.metadataMethods.push({\n                        id      : option.id,\n                        label   : option.label\n                    });\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if (data.customFields[field].module === 'splitter' && data.customFields[field].enabled) {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id                   : 'custom_' + data.customFields[field].id,\n                                                type                 : data.customFields[field].type,\n                                                format               : data.customFields[field].type,\n                                                label                : data.customFields[field].label,\n                                                settings             : data.customFields[field].settings,\n                                                required             : data.customFields[field].required,\n                                                label_short          : data.customFields[field].label_short,\n                                                metadata_key         : data.customFields[field].metadata_key,\n                                                conditioned_fields   : [],\n                                                conditioned_doctypes : [],\n                                                invert_fields        : [],\n                                                unit                 : 'custom',\n                                                class                : \"w-1/3\",\n                                                class_label          : \"1/33\"\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.fields) {\n                        if (data.fields.batch_metadata) {\n                            this.fields.batch_metadata = data.fields.batch_metadata;\n                        }\n                        if (data.fields.document_metadata) {\n                            this.fields.document_metadata = data.fields.document_metadata;\n                        }\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    changeDisabled(fieldId: any, newDisabled: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.disabled = newDisabled;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(event: any, previousIndex: any, category:any, unit: any) {\n        if (unit === 'addresses') {\n            unit = 'supplier';\n        }\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        const outputs: any[]    = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) {\n                outputs.push(element.control.value);\n            }\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/splitter/updateFields/' + this.formId, this.fields,\n                        {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else if (!label && outputs.length === 0) {\n            this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n        } else if (!label) {\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        } else if (outputs.length === 0) {\n            this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n        }\n    }\n\n    createForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        const outputs: any[]    = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) {\n                outputs.push(element.control.value);\n            }\n        });\n        if (label) {\n            this.http.post(environment['url'] + '/ws/forms/splitter/create',\n                {\n                    'args': {\n                        'label'         : label,\n                        'outputs'       : outputs,\n                        'default_form'  : isDefault,\n                        'module'        : \"splitter\",\n                        'settings'      : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/splitter/updateFields/' + data.id, this.fields,\n                        {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/splitter/forms').then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        }\n    }\n\n    hasCheckboxConditionField(category: string, targetField: any): boolean {\n        return this.fields[category].some((field: any) => {\n            return (field['type'] === 'checkbox' && targetField['label_short'] !== field['label_short']);\n        });\n    }\n\n    changeFieldConditions(field: any, formField: any) {\n        if (field['conditioned_fields'].includes(formField['label_short'])) {\n            field['conditioned_fields'].splice(field['conditioned_fields'].indexOf(formField['label_short']), 1);\n        } else {\n            field['conditioned_fields'].push(formField['label_short']);\n        }\n    }\n\n    changeFieldInvert(field: any, formField: any) {\n        if (field['invert_fields'].includes(formField['label_short'])) {\n            field['invert_fields'].splice(field['invert_fields'].indexOf(formField['label_short']), 1);\n        } else {\n            field['invert_fields'].push(formField['label_short']);\n        }\n    }\n\n    openDoctypeTree(field: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                allowImportExport : false,\n                formId            : this.formId,\n                selectedDoctype   : {\n                    key   : \"\",\n                    label : \"\"\n                }\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result && !field['conditioned_doctypes'].includes(result.key)) {\n                field['conditioned_doctypes'].push(result.key);\n            }\n        });\n    }\n\n    removeDoctype(field: any, doctype: any) {\n        field['conditioned_doctypes'].splice(field['conditioned_doctypes'].indexOf(doctype), 1);\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-auto h-full-overflow\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field>\n                    <mat-label>{{ \"HEADER.choose_metadata_method\" | translate }}</mat-label>\n                    <mat-select [formControl]=\"this.formSettings['metadata_method'].control\">\n                        <mat-option *ngFor=\"let option of this.metadataMethods\" value=\"{{ option.id }}\">\n                            {{ option.label }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-gray-900 z-50\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.export_zip_file\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.formSettings['export_zip_file'].control\">\n                    <mat-hint class=\"text-gray-600\">{{ \"FORMS.export_zip_file_hint\" | translate }}</mat-hint>\n                </mat-form-field>\n            </div>\n            <ng-container *ngFor=\"let category of fieldCategories; let i = index\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem;\" [style]=\"'width:calc(3% + ' + this.translate.instant(category['label']).length + '%)'\">\n                    {{ category['label'] | translate }}\n                </div>\n                <div class=\"border-green-400 border rounded-lg mx-6 m-7\">\n                    <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" id=\"{{ category['id'] }}\"\n                         class=\"flex flex-wrap cursor-pointer w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.fields[category['id']]; let index = index\" class=\"flex items-center px-3 overflow-hidden\" [class]=\"field.class\"\n                             ngSortGridGroup=\"{{ category['id'] }}\" ngSortgridItem [ngSortGridItems]=\"fields[category['id']]\" (sorted)=\"storeNewOrder($event, category['id'])\">\n                            <mat-form-field class=\"right-0 w-full form-builder\">\n                                <i cdkDrag class=\"fa-solid fa-trash z-10\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\">\n                                    <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                    <strong>{{ field.label | translate }}</strong>\n                                    <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'TYPES.' + field.format | translate }})</span>\n                                    <span *ngIf=\"field.type === 'select'\"> ({{ 'TYPES.select' | translate }})</span>\n                                    <span *ngIf=\"field.type === 'textarea'\"> ({{ 'TYPES.textarea' | translate }})</span>\n                                </span>\n                                <input *ngIf=\"field['type'] !== 'checkbox'\" class=\"cursor-pointer\" matInput type=\"{{ field['type']}}\" readonly>\n                                <div class=\"absolute top-0 -right-4\">\n                                    <button mat-button [matMenuTriggerFor]=\"menu\"\n                                            [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\"\n                                            matTooltipPosition=\"above\">\n                                        <mat-icon class=\"field_settings text-md\">more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                            {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">{{ field.class_label }}</small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type === 'select'\">\n                                            {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.display_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                            {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"disabled\">\n                                            {{ \"FORMS.disable\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"inputMetadata\" *ngIf=\"field['type'] !== 'checkbox'\">\n                                            {{ \"FORMS.input_metadata\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"disabledCondition\">\n                                            {{ \"FORMS.conditioned_by\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"invertFields\" *ngIf=\"field['type'] === 'checkbox'\">\n                                            {{ \"FORMS.invert_fields\" | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #size=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _class of classList\"\n                                                (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                            <span [class.text-green-400]=\"_class.id === field.class\">\n                                                {{ _class.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_class.id === field.class\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #display=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _display of displayList\"\n                                                (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"_display.id === field.display\">\n                                                {{ _display.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_display.id === field.display\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #required=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let required of mandatoryList\"\n                                                (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"required.id === field.required\">\n                                                {{ required.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"required.id === field.required\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #disabled=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let disabled of disabledList\"\n                                                (click)=\"changeDisabled(field.id, disabled.id, disabled.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"disabled.id === field.disabled\">\n                                                {{ disabled.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"disabled.id === field.disabled\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #inputMetadata=\"matMenu\" class=\"pt-5\">\n                                        <div *ngFor=\"let fieldMetadataItem of fieldMetadata\">\n                                            <mat-form-field class=\"w-64 mx-2 text-base\" (click)=\"$event.stopPropagation()\"\n                                            *ngIf=\"fieldMetadataItem['types'].indexOf(field['type']) !== -1\">\n                                                <mat-label>{{ fieldMetadataItem.placeholder | translate }}</mat-label>\n                                                <input matInput [(ngModel)]=\"field[fieldMetadataItem['id']]\" type=\"text\">\n                                            </mat-form-field>\n                                        </div>\n                                    </mat-menu>\n                                    <mat-menu #disabledCondition=\"matMenu\">\n                                        <span mat-menu-item [disabled]=\"true\" class=\"ml-0 font-medium bg-slate-200\"> {{ \"FORMS.condition_doctypes\" | translate }}</span>\n                                        <button mat-menu-item class=\"text-lg text-left hover:text-green-400\"\n                                                (click)=\"$event.stopPropagation(); openDoctypeTree(field);\">\n                                            <div class=\"font-medium truncate\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                                {{ \"FORMS.select_doctypes\"  | translate }}\n                                            </div>\n                                        </button>\n                                        <div>\n                                            <span *ngIf=\"field['conditioned_doctypes'].length === 0\" class=\"m-4 block text-center text-gray-400\">\n                                                {{ 'FORMS.no_doctype_added' | translate }}\n                                            </span>\n                                            <span *ngFor=\"let doctype of field['conditioned_doctypes']\">\n                                                <mat-chip class=\"m-1\" color=\"primary\" selected=\"true\">\n                                                    <span class=\"font-medium\">{{ doctype }}</span>\n                                                    <i class=\"ml-2 fa-solid fa-xmark fa-lg cursor-pointer text-white hover:text-green-400\" (click)=\"$event.stopPropagation(); removeDoctype(field, doctype)\"></i>\n                                                </mat-chip>\n                                            </span>\n                                        </div>\n                                        <span mat-menu-item [disabled]=\"true\" class=\"font-medium bg-slate-200\"> {{ \"FORMS.condition_fields\" | translate }}</span>\n                                        <div *ngFor=\"let formField of this.fields[category['id']]\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    (click)=\"$event.stopPropagation(); changeFieldConditions(field, formField)\"\n                                                    *ngIf=\"field['label_short'] !== formField['label_short'] && formField['type'] === 'checkbox'\">\n                                                <span [class.text-green-400]=\"field['conditioned_fields'].includes(formField['label_short'])\">\n                                                    {{ formField['label'] | translate }}\n                                                </span>\n                                                <span *ngIf=\"field['conditioned_fields'].includes(formField['label_short'])\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 mx-2 my-4\"></i>\n                                                </span>\n                                            </button>\n                                        </div>\n                                        <div *ngIf=\"!hasCheckboxConditionField(category['id'], field)\" class=\"m-4 font-medium text-gray-400\">\n                                            {{ \"FORMS.no_condition_fields\" | translate }}\n                                        </div>\n                                    </mat-menu>\n                                    <mat-menu #invertFields=\"matMenu\">\n                                        <div *ngFor=\"let formField of this.fields[category['id']]\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    (click)=\"$event.stopPropagation(); changeFieldInvert(field, formField)\"\n                                                    *ngIf=\"field['label_short'] !== formField['label_short'] && formField['type'] === 'checkbox'\">\n                                                <span [class.text-green-400]=\"field['invert_fields'].includes(formField['label_short'])\">\n                                                    {{ formField['label'] | translate }}\n                                                </span>\n                                                <span *ngIf=\"field['invert_fields'].includes(formField['label_short'])\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </div>\n                                        <div *ngIf=\"!hasCheckboxConditionField(category['id'], field)\" class=\"m-4 font-medium text-gray-400\">\n                                            {{ \"FORMS.no_condition_fields\" | translate }}\n                                        </div>\n                                    </mat-menu>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <div class=\"flex justify-center items-center\">\n                <button *ngIf=\"creationMode\" (click)=\"createForm()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"FORMS.create\" | translate }}</span>\n                </button>\n                <button *ngIf=\"!creationMode\" (click)=\"updateForm()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"FORMS.modify\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!this.loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text' || field.type === 'regex'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\">\n                                <div>\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-checkbox *ngIf=\"field['type'] === 'checkbox'\" class=\"cursor-pointer top-0.5\" readonly labelPosition=\"before\">\n                                        {{ \"TYPES.\" + field.type | translate }}\n                                </mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class SplitterFormListComponent implements OnInit {\n    loading: boolean            = true;\n    columnsToDisplay: string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/splitter/forms') || lastUrl === '/') {\n            if (this.sessionStorageService.get('formsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('formsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('formsPageIndex');\n        }\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.sessionStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) {\n                    this.total = data.forms[0].total;\n                }\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteForm(formId);\n            }\n        });\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/splitter/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/splitter/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/splitter/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [matSortDisableClear]=\"true\" [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"default_form\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                        <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"enabled\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/splitter/forms/builder/edit/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"this.pageSize\"\n                           [pageIndex]=\"this.pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-create-output',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class SplitterCreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                }\n            ],\n            required: false\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/getOutputsTypes', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data['outputs_types'];\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') ||\n                (element.required && element.control.value == null)) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/splitter/create',\n                {\n                    'args': {\n                        'output_type_id': outputTypeId,\n                        'output_label'  : outputLabel,\n                        'compress_type' : compressType,\n                        'module'        : 'splitter',\n                        'ocrise'        : ocrise\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.router.navigate(['/settings/splitter/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/splitter/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option['output_type_id']\">\n                                    {{ option['output_type_label'] }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') &&\n                         (this.selectedOutputType === 'export_pdf' || this.selectedOutputType === 'export_cmis' || this.selectedOutputType === 'export_openads')\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"createOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.create\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\n\n@Component({\n  selector: 'app-splitter-output-list',\n  templateUrl: './output-list.component.html',\n  styleUrls: ['./output-list.component.scss']\n})\nexport class SplitterOutputListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('outputs/') || lastUrl === '/') {\n            if (this.sessionStorageService.get('outputsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('outputsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('outputsPageIndex');\n        }\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) {\n                    this.total = data.outputs[0].total;\n                }\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.sessionStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/splitter/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/splitter/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"output_type_id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"output_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                                matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/splitter/outputs/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class SplitterUpdateOutputComponent implements OnInit {\n    headers               : HttpHeaders   = this.authService.headers;\n    loading               : boolean       = true;\n    loadingCustomFields   : boolean       = true;\n    connection            : boolean       = false;\n    outputsTypes          : any[]         = [];\n    outputsTypesForm      : any[]         = [];\n    output                : any;\n    outputId              : any;\n    selectedOutputType    : any;\n    originalOutputType    : any;\n    toHighlight           : string        = '';\n    allowedPath           : string        = '';\n    showPassword            : { [key: string]: boolean; } = {};\n    outputForm            : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                }\n            ],\n            required: false\n        }\n    ];\n    availableFields       : any           = [\n        {\n            \"labelShort\"    : 'HEADER.id',\n            'label'         : marker('HEADER.label')\n        },\n        {\n            \"labelShort\"    : 'date',\n            'label'         : marker('TYPES.date')\n        },\n        {\n            \"labelShort\"    : 'id',\n            'label'         : marker('SPLITTER.batch_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_identifier',\n            'label'         : marker('SPLITTER.document_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_index',\n            'label'         : marker('SPLITTER.document_index')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_lastname')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_firstname')\n        },\n        {\n            \"labelShort\"    : 'doctype',\n            'label'         : marker('SETTINGS.document_type')\n        },\n        {\n            \"labelShort\"    : 'random',\n            'label'         : marker('OUTPUT.random')\n        },\n        {\n            \"labelShort\"    : 'filename',\n            'label'         : marker('OUTPUT.filename')\n        },\n        {\n            \"labelShort\"    : 'documents_count',\n            'label'         : marker('OUTPUT.documents_count')\n        },\n        {\n            \"labelShort\"    : 'fileIndex',\n            'label'         : marker('OUTPUT.file_index')\n        },\n        {\n            \"labelShort\"    : 'format',\n            'label'         : marker('OUTPUT.format')\n        },\n        {\n            \"labelShort\"    : 'zip_filename',\n            'label'         : marker('OUTPUT.compressed_filename')\n        }\n    ];\n    testConnectionMapping : any           = {\n        'export_openads'   : \"testOpenadsConnection()\",\n        'export_mem' : \"testMEMConnection()\",\n        'export_cmis'   : \"testCmisConnection()\"\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/splitter/allowedPath', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.allowedPath = data.allowedPath;\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/outputs/splitter/getOutputsTypes', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.outputsTypes = data['outputs_types'];\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'parameters' : []\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        if (option.id === 'folder_out' && this.allowedPath) {\n                                            option.placeholder = (this.allowedPath + '/output').replace(/\\/\\//g, '/');\n                                            option.hint = this.translate.instant('GLOBAL.allowed_path', {allowedPath: this.allowedPath});\n                                        }\n\n                                        if (option.type == 'password') {\n                                            this.showPassword[option.id] = false;\n                                        }\n\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                this.output.data.options[category].forEach((outputElement: any) => {\n                                    if (element.id === outputElement.id) {\n                                        if (outputElement.value) {\n                                            if (outputElement.webservice) {\n                                                element.values = [outputElement.value];\n                                            }\n                                            element.control.setValue(outputElement.value);\n                                        }\n                                    }\n                                });\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => {this.loading = false;}),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/splitter/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        /**\n         * Get custom fields\n         **/\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newField;\n                data['customFields'].forEach((field: {\n                        id: any\n                        label_short: string\n                        module: string\n                        label: string\n                        type: string\n                        enabled: boolean\n                    }) => {\n                        newField = {\n                            'id': field.id,\n                            'labelShort': field.label_short,\n                            'label': field.label,\n                            'enabled': field.enabled\n                        };\n                        if (field.enabled) {\n                            this.availableFields.push(newField);\n                        }\n                    }\n                );\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any) {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType]['parameters']) {\n            const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** CMIS Webservices call ****/\n    testCmisConnection() {\n        const args = this.getCmisConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/cmis/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.cmis_connection_ok'));\n                    this.connection = true;\n                } else {\n                    this.notify.error(this.translate.instant('OUTPUT.cmis_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCmisConnectionInfo() {\n        return {\n            'cmis_ws': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'cmis_ws'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n            'folder': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'folder')\n        };\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                } else {\n                    this.notify.error(this.translate.instant('OUTPUT.mem_connection_ko') + ' : ' + status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getOpenadsConnectionInfo() {\n        return {\n            'openads_api': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'openads_api'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    /**** OpenADS Webservices call ****/\n    testOpenadsConnection() {\n        const args = this.getOpenadsConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/openads/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.openads_connection_ok'));\n                    this.connection = true;\n                } else {\n                    this.notify.error(this.translate.instant('OUTPUT.openads_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.users) {\n                    const data = _return.users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt]['serialId'],\n                            'value': data[cpt]['entity_label'],\n                            'extra': data[cpt]['entity_id']\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt]['type_id'],\n                            'value': data[cpt].description,\n                            'extra': data[cpt]['type_id']\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['priorities']) {\n                    const data = _return['priorities'];\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['statuses']) {\n                    const data = _return['statuses'];\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt]['label_status'],\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['indexingModels']) {\n                    const data = _return['indexingModels'];\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                if (field.isJson) {\n                    try {\n                        JSON.parse(field.control.value);\n                    } catch (error) {\n                        field.control.setErrors({'json_error': true});\n                        this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                        return;\n                    }\n                }\n\n                _array['data']['options'][category].push({\n                    id: field.id,\n                    type: field.type,\n                    webservice: field.webservice,\n                    value: field.value === undefined ? field.control.value : field.value\n                });\n            }\n        }\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/splitter/update/' + this.outputId, {'args': _array}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any) {\n        this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') &&\n                            (this.selectedOutputType === 'export_pdf' || this.selectedOutputType === 'export_cmis' || this.selectedOutputType === 'export_openads')\">                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"selectedOutputType && outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_auth_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-3 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number' \">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"this.showPassword[field.id] ? 'text' : 'password'\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                        <mat-icon matSuffix (click)=\"this.showPassword[field.id] = !this.showPassword[field.id]\"\n                                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword[field.id]\" [class.fa-eye]=\"this.showPassword[field.id]\"></i>\n                                        </mat-icon>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\" mat-button class=\"valid_button mb-2\">\n                                <span (click)=\"testConnection()\">{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field.webservice\" class=\"col-span-4\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field['required']\"  rows=\"16\" spellcheck=\"false\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain h-full-overflow\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.labelShort | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { OnInit, Component } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../services/settings.service\";\n\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-separator',\n    templateUrl: './separator.component.html',\n    styleUrls: ['./separator.component.scss']\n})\nexport class SeparatorComponent implements OnInit {\n    private selectedDoctype: any;\n    public separator: any      = {\n        'total'      : 0,\n        'current'    : 0,\n        'fileUrl'    : '',\n        'thumbnails' : []\n    };\n    loading           : boolean = false;\n    loadingSeparator  : boolean = false;\n    selectedSeparator : string  = \"bundleSeparator\";\n    separators        : any[]   = [\n        {\n            id          : 'bundleSeparator',\n            name        : this.translate.instant(\"SPLITTER.bundle_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'documentSeparator',\n            name        : this.translate.instant(\"SPLITTER.document_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'docTypeSeparator',\n            name        : this.translate.instant(\"SPLITTER.doc_type_separator\"),\n            disabled    : true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.generateSeparator( {\n            'id'    : undefined,\n            'type'  : 'bundleSeparator'\n        });\n    }\n\n    onChangeType() {\n        let args;\n        if (this.selectedSeparator === \"bundleSeparator\") {\n            args = {\n                'id'   : undefined,\n                'type' : 'bundleSeparator'\n            };\n        }\n        else if (this.selectedSeparator === \"documentSeparator\") {\n            args = {\n                'id'   : undefined,\n                'type' : 'documentSeparator'\n            };\n        }\n        else {\n            args = {\n                'id'   : this.selectedDoctype.id ? this.selectedDoctype.id : null,\n                'type' : 'docTypeSeparator'\n            };\n        }\n        this.generateSeparator(args);\n    }\n\n    getOutPut($event: any) {\n        this.selectedSeparator  = 'docTypeSeparator';\n        this.selectedDoctype    = $event;\n        this.generateSeparator({\n            'type' : 'docTypeSeparator',\n            'id'   : this.selectedDoctype.id\n        });\n    }\n\n    generateSeparator(args: any) {\n        this.loadingSeparator = true;\n        this.http.post(environment['url'] + '/ws/doctypes/generateSeparator', args, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.separator.total      = data.total;\n                this.separator.fileUrl    = data.encoded_file;\n                this.separator.thumbnails = data.encoded_thumbnails;\n                this.separator.current    = 1;\n                this.loadingSeparator     = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loadingSeparator = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    downloadSeparator() {\n        const fileName = this.selectedSeparator + (this.selectedDoctype ? '_' + this.selectedDoctype.key : '');\n        this.downloadPdf(this.separator.fileUrl, fileName);\n    }\n\n    downloadPdf(base64String: any, fileName:any) {\n        const link = document.createElement(\"a\");\n        link.href = base64String;\n        link.download = `${fileName}.pdf`;\n        link.click();\n    }\n\n    moveCurrentThumbnail(step: number) {\n        if (this.separator.current + step <= this.separator.total && this.separator.current + step > 0) {\n            this.separator.current += step;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [ngClass]=\"{'pointer-events-none opacity-50': loadingSeparator}\"\n                                   [settings]=\"{'canFolderBeSelected': false, 'showFoldersSeparatorBtn': true, 'allowImportExport': false, 'allowUniqueDocType' : false }\"\n                                   (selectedDoctypeOutput)=\"getOutPut($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"overflow-hidden w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.download_separator' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full grid grid-cols-2 m-2 mt-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>{{ 'DOCTYPE.separator_choice '| translate }}</mat-label>\n                <mat-select [disabled]=\"loadingSeparator\" [(ngModel)]=\"selectedSeparator\" (ngModelChange)=\"onChangeType()\">\n                    <mat-option *ngFor=\"let separator of separators\" [id]=\"separator.id\" [value]=\"separator.id \" [disabled]=\"separator.disabled\">\n                        {{ separator.name| translate }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"text-right\">\n                <button mat-button [matTooltip]=\"'DOCTYPE.download_separator' | translate\" [disabled]=\"loadingSeparator\" (click)=\"downloadSeparator()\" class=\"w-10 h-12\">\n                    <i class=\"fa-solid fa-file-arrow-down fa-2x\"></i>\n                </button>\n            </div>\n        </div>\n        <div *ngIf=\"loadingSeparator\" class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 230px)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-qrcode fa-4x fa-beat-fade w-full mb-1\"></i>\n                <span class=\"w-full\">\n                    {{ 'DOCTYPE.generating_separator' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!loadingSeparator\" class=\"text-center text-gray-400 object-contain\">\n            <img class=\"m-auto w-11/12\" [src]=\"separator.thumbnails[separator.current - 1]\" alt=\"Separator thumbnail\">\n            <button mat-button [matTooltip]=\"'DOCTYPE.previous_page' | translate\" [disabled]=\"loadingSeparator\"\n                    (click)=\"moveCurrentThumbnail(-1)\" class=\"hover:text-green-400\">\n                <i class=\"fa-solid fa-arrow-left fa-lg\"></i>\n            </button>\n            {{separator.current}} / {{separator.total}}\n            <button mat-button [matTooltip]=\"'DOCTYPE.next_page' | translate\" [disabled]=\"loadingSeparator\"\n                    (click)=\"moveCurrentThumbnail(1)\" class=\"hover:text-green-400\">\n                <i class=\"fa-solid fa-arrow-right fa-lg\"></i>\n            </button>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { of } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"../../../env\";\nimport { FormControl } from \"@angular/forms\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n  selector: 'app-status-update-splitter',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.scss']\n})\nexport class SplitterUpdateStatusComponent implements OnInit {\n  loading           : boolean     = false;\n  identifierControl : FormControl = new FormControl<any>('');\n  statusControl     : FormControl = new FormControl<any>('');\n  identifiers       : number[]    = [];\n  status            : any[]       = [];\n\n  constructor(\n      public router: Router,\n      private http: HttpClient,\n      public userService: UserService,\n      private authService: AuthService,\n      private notify:NotificationService,\n      public translate: TranslateService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n  ) { }\n\n  ngOnInit(): void {\n    this.serviceSettings.init();\n    this.http.get(environment['url'] + '/ws/status/splitter/list',\n        {headers: this.authService.headers}).pipe(\n        tap((data: any) => {\n          this.status = data.status;\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.handleErrors(err);\n          return of(false);\n        })\n    ).subscribe();\n  }\n\n  addIdentifier() {\n    if (this.identifierControl.value && this.identifiers.indexOf(this.identifierControl.value) === -1) {\n      this.identifiers.push(this.identifierControl.value);\n    }\n    this.identifierControl.setValue('');\n  }\n\n  removeIdentifier(identifier: number) {\n    this.identifiers = this.identifiers.filter((id) => id !== identifier);\n  }\n\n  updateStatus() {\n    const data = {'ids': this.identifiers, 'status': this.statusControl.value};\n    this.http.put(environment['url'] + '/ws/splitter/status', data,\n        {headers: this.authService.headers}).pipe(\n        tap(() => {\n            this.identifiers = [];\n            this.notify.success(this.translate.instant('STATUS.UPDATE_SUCCESS'));\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.error(err.error.message);\n          return of(false);\n        })\n    ).subscribe();\n  }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <mat-card class=\"w-5/6 mt-6 mx-auto\">\n            <mat-card-header>\n                <mat-card-title class=\"text-base\">{{ 'SPLITTER.change_by_identifier' | translate }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"h-56 mx-6\">\n                <div class=\"flex justify-center gap-4\">\n                    <mat-form-field class=\"mt-4 w-3/12\" appearance=\"outline\">\n                        <mat-label>{{ 'STATUS.update_status_to' | translate }}</mat-label>\n                        <mat-select [formControl]=\"statusControl\" [disabled]=\"this.loading\">\n                            <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                {{ option['label'] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"w-3/12 mt-4\" appearance=\"outline\">\n                        <mat-label>{{ 'SPLITTER.batch_identifier' | translate }}</mat-label>\n                        <input type=\"number\" matInput [formControl]=\"identifierControl\">\n                    </mat-form-field>\n                    <button mat-button class=\"rounded border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 mt-4\"\n                            (click)=\"addIdentifier()\" [matTooltip]=\"'STATUS.add_identifier' | translate\" style=\"padding: 1.65rem !important\">\n                        <i class=\"fa-solid fa-plus text-lg\"></i>\n                    </button>\n                </div>\n                <div class=\"h-12 w-full border-solid border-2 border-gray-100 rounded bg-slate-50\">\n                <span *ngIf=\"identifiers.length === 0\" class=\"mt-4 block text-center text-gray-400\">\n                    {{ 'STATUS.no_identifier_added' | translate }}\n                </span>\n                <span *ngFor=\"let identifier of identifiers\">\n                    <mat-chip class=\"m-1\" color=\"primary\" selected=\"true\">\n                        <span class=\"font-medium\">{{ identifier }}</span>\n                        <i class=\"ml-2 fa-solid fa-xmark fa-lg cursor-pointer text-white hover:text-green-400\" (click)=\"removeIdentifier(identifier)\"></i>\n                    </mat-chip>\n                </span>\n                </div>\n                <div class=\"flex justify-center items-center mt-4\">\n                    <button (click)=\"updateStatus()\" mat-button\n                            class=\"p-6 border-solid border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [ngClass]=\"(identifiers.length === 0 || !statusControl.value) ? 'border-gray-400 bg-gray-400' : 'bg-green-400 border-green-400'\"\n                            [disabled]=\"(identifiers.length === 0 || !statusControl.value)\">\n                        <span class=\"block\">{{ \"STATUS.update\" | translate }}</span>\n                    </button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\n\n@Component({\n    selector: 'app-workflow-builder-splitter',\n    templateUrl: './workflow-builder.component.html',\n    styleUrls: ['./workflow-builder.component.scss'],\n    providers: [\n        {\n            provide: STEPPER_GLOBAL_OPTIONS,\n            useValue: {displayDefaultIndicatorType: false}\n        }\n    ]\n})\nexport class WorkflowBuilderSplitterComponent implements OnInit {\n    loading         : boolean       = true;\n    creationMode    : boolean       = true;\n    useInterface    : boolean       = false;\n    separationMode  : string        = 'no_sep';\n    workflowId      : any;\n    stepValid       : any           = {\n        input: false,\n        process: false,\n        separation: false,\n        output: false\n    };\n    oldFolder       : string        = '';\n    idControl       : FormControl   = new FormControl('', Validators.required);\n    nameControl     : FormControl   = new FormControl('', Validators.required);\n\n    form_outputs     : any          = [];\n    workflow_outputs : any          = [];\n\n    fields          : any           = {\n        input : [\n            {\n                id: 'input_folder',\n                show: true,\n                label: this.translate.instant('WORKFLOW.input_folder'),\n                type: 'text',\n                control: new FormControl(),\n                placeholder: \"/var/share/\" + environment['customId'] + \"/input\",\n                required: true\n            },\n            {\n                id: 'customer_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.associated_customer'),\n                type: 'select',\n                control: new FormControl(),\n                required: false\n            },\n            {\n                id: 'ai_model_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.ai_model_id'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                hint: this.translate.instant('WORKFLOW.ai_model_id_hint')\n            },\n            {\n                id: 'apply_process',\n                show: true,\n                label: this.translate.instant('WORKFLOW.apply_process'),\n                type: 'boolean',\n                control: new FormControl(true)\n            },\n            {\n                id: 'splitter_method_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.splitter_method'),\n                type: 'select',\n                control: new FormControl(),\n                required: true,\n                values: []\n            },\n            {\n                id: 'separate_by_document_number_value',\n                show: true,\n                label: this.translate.instant('WORKFLOW.separate_by_document_number_value'),\n                type: 'number',\n                control: new FormControl(2),\n                required: false\n            },\n            {\n                id: 'remove_blank_pages',\n                show: true,\n                label: this.translate.instant('WORKFLOW.remove_blank_pages'),\n                type: 'boolean',\n                control: new FormControl()\n            }\n        ],\n        process: [\n            {\n                id: 'use_interface',\n                show: true,\n                label: this.translate.instant('WORKFLOW.use_interface'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                id: 'allow_automatic_validation',\n                label: this.translate.instant('WORKFLOW.allow_automatic_validation'),\n                hint: this.translate.instant('WORKFLOW.allow_automatic_validation_hint'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'delete_documents',\n                label: this.translate.instant('WORKFLOW.delete_documents'),\n                hint: this.translate.instant('WORKFLOW.delete_documents_hint'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'form_id',\n                multiple: false,\n                label: this.translate.instant('POSITIONS-MASKS.form_associated'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: false,\n                values: []\n            },\n            {\n                id: 'rotation',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.rotation'),\n                type: 'select',\n                control: new FormControl(),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'no_rotation',\n                        'label': this.translate.instant('WORKFLOW.no_rotation')\n                    },\n                    {\n                        'id': 90,\n                        'label': this.translate.instant('WORKFLOW.rotate_90')\n                    },\n                    {\n                        'id': 180,\n                        'label': this.translate.instant('WORKFLOW.rotate_180')\n                    },\n                    {\n                        'id': 270,\n                        'label': this.translate.instant('WORKFLOW.rotate_270')\n                    }\n                ]\n            }\n        ],\n        output: [\n            {\n                id: 'outputs_id',\n                label: this.translate.instant('WORKFLOW.choose_output'),\n                type: 'select',\n                multiple: true,\n                control: new FormControl(['']),\n                required: true\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        this.workflowId = this.route.snapshot.params['id'];\n        if (this.workflowId) {\n            this.creationMode = false;\n            this.http.get(environment['url'] + '/ws/workflows/splitter/getById/' + this.workflowId, {headers: this.authService.headers}).pipe(\n                tap((workflow: any) => {\n                    this.idControl.setValue(workflow.workflow_id);\n                    this.nameControl.setValue(workflow.label);\n                    Object.keys(this.fields).forEach((parent: any) => {\n                        this.fields[parent].forEach((field: any) => {\n                            let value = workflow[parent][field.id];\n                            if (parseInt(value) && !Array.isArray(value)) {\n                                value = parseInt(value);\n                            }\n                            if (value === 'true' || value === 'false' ) {\n                                value = value === 'true';\n                            }\n                            if (field.id === 'splitter_method_id') {\n                                this.setSeparationMode(value);\n                            }\n                            if (field.id === 'use_interface') {\n                                this.setUseInterface(value);\n                            }\n                            if (field.id === 'input_folder') {\n                                this.oldFolder = value;\n                            }\n                            if (field.id === 'outputs_id') {\n                                this.workflow_outputs = value;\n                            }\n                            field.control.setValue(value);\n                        });\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/splitter', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.name;\n                        });\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/ai/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((aiModel: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'ai_model_id') {\n                        element.values = aiModel.models;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.model_label;\n                        });\n                        element.values = [{'id': 0, 'label': this.translate.instant('WORKFLOW.no_ai_model_associated')}].concat(element.values);\n                        if (aiModel.models.length === 1) {\n                            element.control.setValue(aiModel.models[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['process'].forEach((element: any) => {\n                    data.forms.forEach((form: any) => {\n                        if (this.form_outputs.filter((f: any) => f.form_id === form.id).length === 0) {\n                            this.form_outputs.push({\n                                'form_id': form.id,\n                                'outputs': form.outputs.map(Number)\n                            });\n                        }\n                    });\n                    if (element.id === 'form_id') {\n                        element.values = data.forms;\n                        if (data.forms.length === 1) {\n                            element.control.setValue(data.forms[0].id);\n                        }\n                    }\n                });\n                if (this.useInterface) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'form_id' && element.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === element.control.value) {\n                                    this.fields['output'].forEach((_element: any) => {\n                                        if (_element.id === 'outputs_id') {\n                                            _element.control.setValue(form.outputs.map(Number));\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/splitMethods', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.splitMethods.forEach((method: any) => {\n                    this.fields['input'].forEach((element: any) => {\n                        if (element.id === 'splitter_method_id') {\n                            element.values.push(method);\n                        }\n                    });\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/outputs/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['output'].forEach((element: any) => {\n                    if (element.id === 'outputs_id') {\n                        element.values = data.outputs;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.output_label;\n                        });\n                        if (data.outputs.length === 1) {\n                            element.control.setValue(data.outputs[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setSeparationMode(value: any) {\n        this.separationMode = value;\n    }\n\n    setUsedOutputs() {\n        if (this.useInterface) {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'form_id' && elem.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === elem.control.value) {\n                                    element.control.setValue(form.outputs);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        else {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    element.control.setValue(this.workflow_outputs);\n                }\n            });\n        }\n    }\n\n    setUseInterface(value: any) {\n        this.useInterface = value;\n        this.fields['process'].forEach((element: any) => {\n            if (element.id === 'form_id' || element.id === 'allow_automatic_validation') {\n                element.show = this.useInterface;\n                if (element.id !== 'allow_automatic_validation') {\n                    element.required = this.useInterface;\n                }\n            }\n        });\n        this.setUsedOutputs();\n    }\n\n    checkFolder(field: any) {\n        if (field && field.control.value && field.control.value !== this.oldFolder) {\n            this.http.post(environment['url'] + '/ws/workflows/splitter/verifyInputFolder',\n                {'input_folder': field.control.value}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    field.control.setErrors();\n                    this.notify.success(this.translate.instant('WORKFLOW.input_folder_ok'));\n                    this.oldFolder = field.control.value;\n                }),\n                catchError((err: any) => {\n                    field.control.setErrors({'folder_not_found': true});\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    isStepValid(step: any) {\n        let valid = true;\n        this.fields[step].forEach((element: any) => {\n            if ((element.required && !element.control.value) || element.control.errors) {\n                valid = false;\n            }\n        });\n        this.stepValid[step] = valid;\n        return valid;\n    }\n\n    updateWorkflow(step: any) {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n\n        Object.keys(this.fields).forEach((parent: any) => {\n            this.fields[parent].forEach((field: any) => {\n                workflow[parent][field.id] = field.control.value;\n            });\n        });\n\n        if (step === 'input') {\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/splitter/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/workflows/splitter/update/' + this.workflowId, {'args': workflow}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('WORKFLOW.workflow_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createWorkflow() {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n        if (this.idControl.value && this.nameControl.value) {\n            Object.keys(this.fields).forEach((parent: any) => {\n                this.fields[parent].forEach((field: any) => {\n                    workflow[parent][field.id] = field.control.value;\n                });\n            });\n\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/splitter/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/workflows/splitter/create', {'args': workflow}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.router.navigate(['/settings/splitter/workflows']).then();\n                            this.notify.success(this.translate.instant('WORKFLOW.workflow_created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('WORKFLOW.workflow_id_and_name_required'));\n        }\n    }\n\n    updateOutputs(value: any) {\n        if (value) {\n            this.form_outputs.forEach((form: any) => {\n                if (form.form_id === value) {\n                    this.fields['output'].forEach((element: any) => {\n                        if (element.id === 'outputs_id') {\n                            element.control.setValue(form.outputs);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div>\n                <i *ngIf=\"!this.creationMode\" class=\"fa-solid fa-2x fa-save mr-4 cursor-pointer\"\n                   (click)=\"updateWorkflow('input')\" [matTooltip]=\"'WORKFLOW.update' | translate \"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"my-4 w-full p-2\">\n                    <span class=\"inline-block p-2 w-4/12\" [class.cursor-not-allowed]=\"!this.creationMode\">\n                        <mat-form-field class=\"w-full\" [class.pointer-events-none]=\"!this.creationMode\">\n                            <mat-label>{{ 'WORKFLOW.id' | translate }}</mat-label>\n                            <input [class.text-gray-400]=\"!this.creationMode\" matInput [formControl]=\"this.idControl\" type=\"text\" [readonly]=\"!this.creationMode\">\n                        </mat-form-field>\n                    </span>\n                    <mat-form-field class=\"p-2 w-8/12\">\n                        <mat-label>{{ 'WORKFLOW.label' | translate }}</mat-label>\n                        <input matInput [formControl]=\"this.nameControl\" type=\"text\">\n                    </mat-form-field>\n                </div>\n            <mat-stepper orientation=\"horizontal\" class=\"text-center\">\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.input' | translate\">\n                    <div class=\"mt-2 grid grid-cols-2 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['input']\">\n                            <div *ngIf=\"field.type === 'boolean'\">\n                                <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\">\n                                    <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-6 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"mt-4 grid grid-cols-3 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['input']\">\n                            <mat-form-field *ngIf=\"field.type === 'text' && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                       [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                                <button mat-icon-button matSuffix *ngIf=\"field.id === 'input_folder'\"\n                                        (click)=\"checkFolder(field)\" [matTooltip]=\"'WORKFLOW.test_input_folder' | translate\">\n                                    <i class=\"fa-solid fa-check text-green-400\"></i>\n                                </button>\n                            </mat-form-field>\n                            <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                            (selectionChange)=\"field.id === 'splitter_method_id' ? setSeparationMode($event.value) : ''\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n                    <div [class.cursor-not-allowed]=\"!this.isStepValid('input')\">\n                        <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                [disabled]=\"!this.stepValid['input']\"\n                                [class.bg-gray-400]=\"!this.stepValid['input']\"\n                                [class.bg-green-400]=\"this.stepValid['input']\"\n                                (click)=\"!this.creationMode ? this.updateWorkflow('input') : ''\">\n                            {{ 'WORKFLOW.next' | translate }}\n                        </button>\n                    </div>\n                </mat-step>\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.process' | translate\">\n                    <app-hint [specificClass]=\"'w-3/5'\" [message]=\"'WORKFLOW.process_hint' | translate\"></app-hint>\n\n                    <div class=\"mt-6 grid grid-cols-2 gap-6\" [class.grid-cols-3]=\"this.useInterface\">\n                        <ng-container *ngFor=\"let field of this.fields['process']\">\n                            <div *ngIf=\"field.type === 'boolean' && field.show\">\n                                <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\"\n                                                  (change)=\"field.id === 'use_interface' ? setUseInterface($event.checked) : field.id === 'form_id' ? setUsedOutputs(): ''\">\n                                    <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-6 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"mt-6 grid grid-cols-3 gap-6\">\n                        <ng-container *ngFor=\"let field of this.fields['process']\">\n                            <mat-form-field *ngIf=\"field.type === 'text'\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                       [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                            <mat-form-field *ngIf=\"field.type === 'select' && field.show\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                            (selectionChange)=\"field.id === 'form_id' ? updateOutputs($event.value) : ''\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n\n                    <button matStepperPrevious mat-button class=\"gray_button\">\n                        {{ \"WORKFLOW.back\" | translate }}\n                    </button>\n                    <span [class.cursor-not-allowed]=\"!this.isStepValid('process')\">\n                        <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                [disabled]=\"!this.stepValid['process']\"\n                                [class.bg-gray-400]=\"!this.stepValid['process']\"\n                                [class.bg-green-400]=\"this.stepValid['process']\"\n                                (click)=\"!this.creationMode ? this.updateWorkflow('process') : ''\">\n                            {{ 'WORKFLOW.next' | translate }}\n                        </button>\n                    </span>\n                </mat-step>\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.output' | translate\">\n                    <div class=\"mt-2 w-full\">\n                        <ng-container *ngFor=\"let field of this.fields['output']\">\n                            <mat-form-field *ngIf=\"field.type === 'select'\" class=\"w-full\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [disabled]=\"this.useInterface\" [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n\n                    <button matStepperPrevious mat-button class=\"gray_button\">\n                        {{ \"WORKFLOW.back\" | translate }}\n                    </button>\n                    <button mat-button class=\"valid_button\" (click)=\"!this.creationMode ? this.updateWorkflow('output') : this.createWorkflow()\">\n                        <span *ngIf=\"this.creationMode\">\n                            {{ 'WORKFLOW.create' | translate }}\n                        </span>\n                        <span *ngIf=\"!this.creationMode\">\n                            {{ 'WORKFLOW.update' | translate }}\n                        </span>\n                    </button>\n                </mat-step>\n            </mat-stepper>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-workflow-list-splitter',\n    templateUrl: './workflow-list.component.html',\n    styleUrls: ['./workflow-list.component.scss']\n})\nexport class WorkflowListSplitterComponent implements OnInit {\n    headers          : HttpHeaders   = this.authService.headers;\n    columnsToDisplay : string[]      = ['id', 'workflow_id', 'label', 'input_folder', 'actions'];\n    loading          : boolean       = false;\n    pageSize         : number        = 10;\n    pageIndex        : number        = 0;\n    total            : number        = 0;\n    offset           : number        = 0;\n    workflows        : any           = [];\n    allWorkflows     : any           = [];\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/splitter/workflows') || lastUrl === '/') {\n            if (this.sessionStorageService.get('workflowsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('workflowsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('workflowsPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allWorkflows = data.workflows;\n                this.loadWorkflows();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadWorkflows() {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.workflows[0]) {\n                    this.total = data.workflows[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadWorkflows();\n                }\n                this.workflows = data.workflows;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('workflowsPageIndex', event.pageIndex);\n        this.loadWorkflows();\n    }\n\n    deleteConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('WORKFLOW.confirm_delete', {\"workflow\": workflow}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteWorkflow(workflowId);\n            }\n        });\n    }\n\n    deleteWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/workflows/splitter/delete/' + workflowId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('WORKFLOW.confirm_duplicate', {\"workflow\": workflow}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateWorkflow(workflowId);\n            }\n        });\n    }\n\n    duplicateWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.post(environment['url'] + '/ws/workflows/splitter/duplicate/' + workflowId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allWorkflows.slice();\n        if (!sort.active || sort.direction === '') {\n            this.workflows = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.workflows = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n        this.workflows = this.workflows.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"workflows\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"workflow_id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element['workflow_id'] }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"input_folder\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'WORKFLOW.input_folder_header' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element?.input['input_folder'] }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'WORKFLOW.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/splitter/workflows/builder/edit/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-create-model',\n  templateUrl: './create-ai-model.component.html',\n  styleUrls: ['./create-ai-model.component.scss']\n})\n\nexport class CreateVerifierAiModelComponent implements OnInit {\n    totalChecked        : number        = 0;\n    docs                : any           = [];\n    doctypes            : any           = [];\n    docStatus           : any           = [];\n    controls            : any           = [];\n    listModels          : any           = [];\n    workflows           : any           = [];\n    chosenWorkflow      : any           = [];\n    chosenDocs          : any           = [];\n    loading             : boolean       = true;\n    formControl         : FormControl   = new FormControl('');\n    modelForm           : any[]         = [\n        {\n            id: 'model_label',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            placeholder: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name_placeholder\"),\n            type: 'text',\n            control: new FormControl(''),\n            required: true\n        },\n        {\n            id: 'min_proba',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        this.modelForm.forEach((element: any) => {\n            if (element.id === 'model_label') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes('/')) {\n                        element.control.setValue(value.replace('/', ''));\n                    }\n                });\n            }\n        });\n\n        this.retrieveModels();\n        this.retrieveDoctypes();\n        this.retrieveOCDoctypes();\n        this.retrieveForms();\n    }\n\n    retrieveDoctypes() {\n        this.http.get(environment['url'] + '/ws/ai/verifier/getTrainDocuments', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.docs = data;\n                this.docStatus.splice(0);\n                for (const element of this.docs) {\n                    this.docStatus.push({\n                        doc: element,\n                        isSelected: false,\n                        linked_doctype: \"\",\n                        linked_workflow: \"\"\n                    });\n                    this.controls.push(new FormControl(''));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkSelectedBatch(cpt: number, current_doc: any) {\n        this.totalChecked = this.docStatus.filter((a: { isSelected: boolean; }) => a.isSelected).length;\n        this.onWorkflowSelect({value: this.workflows[0].workflow_id}, cpt, current_doc);\n    }\n\n    retrieveOCDoctypes() {\n        this.doctypes = [];\n        this.http.get(environment['url'] + '/ws/ai/list/' + 'document', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: any) => {\n                    newDoctype = {\n                        'id': doctype.id,\n                        'key': doctype.key,\n                        'type': doctype.type,\n                        'code': doctype.code,\n                        'label': doctype.label,\n                        'status': doctype.status,\n                        'formId': doctype.form_id,\n                        'isDefault': doctype.is_default\n                    };\n                    this.doctypes.push(newDoctype);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    onWorkflowSelect(event: any, index: number, doc: string) {\n        const val = event.value;\n        for (const element of this.workflows) {\n            if (element.id === val) {\n                this.chosenWorkflow[index] = element.workflow_id;\n                this.chosenDocs[index] = this.doctypes.filter((a: { formId: number; }) => a.formId === this.chosenWorkflow[index]);\n            }\n        }\n        const match = this.docStatus.find((a: { doc: string; }) => a.doc === doc);\n        match.linked_workflow = this.chosenWorkflow[index];\n    }\n\n    createModel() {\n        let start_training = true;\n        if (this.isValidForm(this.modelForm) && this.totalChecked > 1 && this.isValidForm2(this.controls)) {\n            const doctypes = [];\n            const minProba = this.getValueFromForm(this.modelForm, 'min_proba');\n            const label = this.getValueFromForm(this.modelForm, 'model_label');\n            const modelName = label.toLowerCase().replace(/ /g, \"_\") + '.sav';\n            const matches = this.docStatus.filter((a: { isSelected: boolean; }) => a.isSelected);\n            for (let i = 0; i < this.totalChecked; i = i + 1) {\n                const fold = matches[i].doc;\n                const workflow_id = matches[i].linked_workflow;\n                doctypes.push({\n                    workflow_id: workflow_id,\n                    folder: fold\n                });\n            }\n\n            for (const element of this.listModels) {\n                const exists = Object.values(element).includes(modelName);\n                if (exists) {\n                    this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.already_existing_model'));\n                    start_training = false;\n                    break;\n                }\n            }\n            if (start_training) {\n                this.http.post(environment['url'] + '/ws/ai/verifier/trainModel/' + modelName,\n                    {label: label, docs: doctypes, min_proba: minProba},\n                    {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.created'));\n                this.router.navigate(['/settings/verifier/ai']).then();\n            }\n        } else if (this.totalChecked < 2) {\n            this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.not_enough_checked'));\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    isValidForm2(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.status !== 'DISABLED' && element.status !== 'VALID') || element.value == null) {\n                state = false;\n            }\n            element.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveModels() {\n        this.http.get(environment['url'] + '/ws/ai/verifier/list?limit=', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.listModels = data['models'];\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    retrieveForms() {\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((workflows: any) => {\n               this.workflows = workflows.workflows;\n               if (this.workflows.length === 1) {\n                   this.formControl.setValue(this.workflows[0].workflow_id);\n               }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\">\n                <div class=\"mx-10 mt-10 mb-5 grid grid-cols-2 gap-4 place-items-stretch\">\n                    <ng-container *ngFor=\"let field of modelForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_label'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                                   [placeholder]=\"field.placeholder | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}, format : \"model_name.sav\"\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'doc_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of doctypes\" [value]=\"option.key\">\n                                    {{ option.label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, modelForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'min_proba'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\"\n                                   [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n                <h2 class=\"text-center m-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.choose_documents' | translate }}\n                </h2>\n                <mat-list class=\"mx-10 my-2 grid grid-cols-{{ this.docStatus.length }} gap-4 place-items-stretch text-center\">\n                    <div *ngFor=\"let item of this.docStatus, let i=index\">\n                        <mat-checkbox [(ngModel)]=\"item['isSelected']\" (change)=\"checkSelectedBatch(i, item['doc']);\"\n                                      [ngModelOptions]=\"{standalone: true}\"\n                                      class=\"w-lg h-lg accent-green-400 checkBox_list cursor-pointer pr-4 pb-2\">\n                            {{ item['doc'] }}\n                        </mat-checkbox>\n                        <div>\n                            <mat-form-field *ngIf=\"item['isSelected']\" class=\"w-full\">\n                                <mat-label>{{ \"MONITORING.workflow_associated\" | translate }}</mat-label>\n                                <mat-select [formControl]=\"formControl\" (selectionChange)=\"onWorkflowSelect($event, i, item['doc'])\">\n                                    <mat-option *ngFor=\"let option of workflows\" [value]=\"option.id\">\n                                        {{ option.label }}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"formControl.hasError('required')\">\n                                    {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </mat-list>\n            </div>\n            <div class=\"flex justify-center items-center mb-2 py-4\">\n                <button mat-button (click)=\"createModel()\" class=\"valid_button\">\n                    <span class=\"block\">\n                        {{ 'ARTIFICIAL-INTELLIGENCE.train_a_model' | translate }}\n                    </span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport {catchError, interval, of, tap} from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\n\n@Component({\n  selector: 'app-list-ai',\n  templateUrl: './list-ai-model.component.html',\n  styleUrls: ['./list-ai-model.component.scss']\n})\n\nexport class ListVerifierAiModelComponent implements OnInit {\n    displayedColumns    : string[]    = ['id', 'model_label', 'accuracy_score', 'documents', 'min_proba', 'status', 'actions'];\n    inter               : any;\n    clickedRow          : any;\n    offset              : number      = 0;\n    pageIndex           : number      = 0;\n    total               : number      = 0;\n    pageSize            : number      = 10;\n    prediction          : any         = [];\n    modelsList          : any         = [];\n    loading             : boolean     = true;\n    showResponse        : boolean     = false;\n    isPredicting        : boolean     = false;\n    splitterOrVerifier  : any         = 'verifier';\n    fileControl         : FormControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension([\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        if (this.router.url.includes('/verifier/')) {\n            this.splitterOrVerifier = 'verifier';\n        } else if (this.router.url.includes('/splitter/')) {\n            this.splitterOrVerifier = 'splitter';\n        }\n        this.serviceSettings.init();\n        this.retrieveModels();\n    }\n\n    retrieveModels(offset?: number, size?: number, inter = false) {\n        this.http.get(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.modelsList = data['models'];\n                for (let i = 0; i < this.modelsList.length; i++) {\n                    let tmp_doc = \"\";\n                    if (this.modelsList[i].status === \"training\") {\n                        if (!inter) {\n                            this.inter = interval(5000).subscribe(() => {\n                                this.retrieveModels(this.offset, this.pageSize, true);\n                                let model_training = false;\n                                this.modelsList.forEach((model: any) => {\n                                    if (model.status === \"training\") {\n                                        model_training = true;\n                                    }\n                                });\n                                if (!model_training) {\n                                    this.inter.unsubscribe();\n                                }\n                            });\n                        }\n                    }\n\n                    for (let j = 0; j < this.modelsList[i].documents.length; j++) {\n                        tmp_doc += this.modelsList[i].documents[j].folder + \", \";\n                        if (j === this.modelsList[i].documents.length - 1) {\n                            tmp_doc = tmp_doc.slice(0, -2);\n                        }\n                    }\n                    this.modelsList[i].documents = [tmp_doc];\n                }\n\n                this.total = this.modelsList.length;\n                if (offset !== undefined && size !== undefined) {\n                    this.modelsList = this.modelsList.slice(offset, offset + size);\n                } else {\n                    this.modelsList = this.modelsList.slice(0, 10);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.modelsList.slice();\n        if (!sort.active || sort.direction === '') {\n            this.modelsList = data;\n            return;\n        }\n\n        this.modelsList = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'model_path': return this.compare(a.path, b.path, isAsc);\n                case 'train_time': return this.compare(a.train_time, b.train_time, isAsc);\n                case 'type': return this.compare(a.type, b.type, isAsc);\n                case 'accuracy_score': return this.compare(a.accuracy, b.accuracy, isAsc);\n                case 'doc_types': return this.compare(a.doctypes, b.doctypes, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                case 'min_proba': return this.compare(a.min_proba, b.min_proba, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    selectRow(row : object) {\n        this.clickedRow = row;\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (![\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"].includes(fileExtension.toLowerCase())) {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    deleteConfirmDialog(modelId: number, model: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ARTIFICIAL-INTELLIGENCE.confirm_delete', {\"model\": model}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteModel(modelId);\n            }\n        });\n    }\n\n    deleteModel(modelId: number) {\n        if (modelId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/delete/' + modelId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.retrieveModels();\n                    this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.retrieveModels(this.offset, this.pageSize);\n    }\n\n    onSubmit() {\n        this.showResponse = false;\n        const formData = new FormData();\n        const disp = Object.values(this.clickedRow)[2];\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        this.isPredicting = true;\n        this.http.post(environment['url'] + '/ws/ai/' + this.splitterOrVerifier + '/testModel/' + disp, formData, {headers: this.authService.headers}).pipe(\n            tap((res) => this.onResponse(res)),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_not_found'));\n                this.isPredicting = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onResponse(res: any) {\n        this.prediction = res;\n        this.showResponse = true;\n        this.isPredicting = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!this.loading\">\n                <mat-table [dataSource]=\"modelsList\" matSort (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.id' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"model_label\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.model_label' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['model_label'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"accuracy_score\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.accuracy' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['accuracy_score'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"documents\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.doctypes' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['documents'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"min_proba\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.min_proba' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element['min_proba'] }} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"status\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.status' | translate }} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <span class=\"col-span-1 text-right\">\n                                <span *ngIf=\"element.status === 'training'\">\n                                    <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" style=\"--fa-animation-duration: 5s\"\n                                       matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training' | translate }}\"></i>\n                                    <span class=\"text-green-400 ml-2\">\n                                        {{ element['percentage'] }}\n                                    </span>\n                                </span>\n                                <i *ngIf=\"element.status === 'error'\" class=\"fas fa-triangle-exclamation fa-lg my-4 text-amber-500 cursor-pointer\"\n                                   matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.error' | translate }}\"></i>\n                                <i *ngIf=\"element.status === 'OK'\" class=\"fa-solid fa-check fa-lg my-4\"\n                                   matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.training_done' | translate }}\"></i>\n                            </span>\n                        </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                            <button [disabled]=\"element.status !== 'OK'\" (click)=\"$event.stopPropagation(); sidenav2.open(); this.selectRow(element)\"\n                                    matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\" mat-icon-button\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-vial\"></i>\n                            </button>\n                            <button mat-icon-button\n                                    (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element['model_label'])\"\n                                    matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                    class=\"inline-block align-text-top\">\n                                <i class=\"fa-solid fa-trash text-lg\"></i>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/settings/verifier/ai/update/{{ row.id }}\"\n                             class=\"cursor-pointer hover:shadow-md transition-colors duration-300\">\n                    </mat-row>\n                </mat-table>\n                <mat-paginator [showFirstLastButtons]=\"true\"\n                               [length]=\"total\"\n                               [pageSize]=\"pageSize\"\n                               [pageIndex]=\"pageIndex\"\n                               [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                               (page)=\"onPageChange($event)\">\n                </mat-paginator>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\" *ngIf=\"this.clickedRow\">\n            <mat-card class=\"w-full border-solid border-green-400 border rounded-lg transition duration-300\">\n                <mat-card-title class=\"p-4\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.model_selected'| translate }}\n                    {{ this.clickedRow['model_label'] }}\n                </mat-card-title>\n                <mat-card-actions class=\"block\">\n                    <div class=\"w-full\">\n                        <ngx-file-drag-drop\n                            [displayFileSize]=\"true\"\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            (valueChanged)=\"checkFile($event)\"\n                            [class.disabled]=\"this.isPredicting\"\n                            [class.pointer-events-none]=\"this.isPredicting\"\n                            [emptyPlaceholder]=\"'ARTIFICIAL-INTELLIGENCE.choose_file' | translate\">\n                        </ngx-file-drag-drop>\n                    </div>\n                    <div class=\"text-center\" [class.cursor-not-allowed]=\"this.isPredicting || this.fileControl.value!.length === 0\">\n                        <button mat-button (click)=\"onSubmit()\"\n                                [disabled]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                [class.bg-gray-400]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                class=\"w-3/5 valid_button\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.predict' | translate }}\n                        </button>\n                    </div>\n                </mat-card-actions>\n                <div *ngIf=\"showResponse\">\n                    <mat-divider></mat-divider>\n                    <mat-card-content class=\"pt-2\">\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.file' | translate }} : {{ prediction[0] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.prediction' | translate }} : {{ prediction[1] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.probability' | translate }} : {{ prediction[2]}} %</p>\n                    </mat-card-content>\n                </div>\n                <mat-card-footer>\n                    <mat-progress-bar *ngIf=\"isPredicting\" mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { lastValueFrom, of } from \"rxjs\";\n\n@Component({\n  selector: 'app-update-model',\n  templateUrl: './update-ai-model.component.html',\n  styleUrls: ['./update-ai-model.component.scss']\n})\n\nexport class UpdateVerifierAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    modelId             : number    = 0;\n    doc_types           : any       = [];\n    workflows           : any       = [];\n    worklowById         : any       = [];\n    workflowsFormControl: any       = [];\n    tableData           : any       = [];\n    choseWorkflow       : any       = [];\n    chosenDocs          : any       = [];\n    documents           : any       = [];\n    len                 : number    = 0;\n    modelForm           : any[]     = [\n        {\n            id: 'model_label',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            type: 'text',\n            control: new FormControl(''),\n            required: true\n        },\n        {\n            id: 'model_path',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_path\"),\n            type: 'text',\n            control: new FormControl(''),\n            required: true\n        },\n        {\n            id: 'min_proba',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl(''),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    async ngOnInit() {\n        this.modelForm.forEach((element: any) => {\n            if (element.id === 'model_path') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes('/')) {\n                        element.control.setValue(value.replace('/', ''));\n                    }\n                });\n            }\n        });\n\n        this.serviceSettings.init();\n        this.modelId = this.route.snapshot.params['id'];\n        await this.retrieveWorkflows();\n        this.http.get(environment['url'] + '/ws/ai/getById/' + this.modelId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.documents = data.documents;\n                this.len = this.documents.length;\n                for (let i = 0; i < this.len; i++) {\n                    for (const doc of this.documents) {\n                        if (doc.workflow_id) {\n                            this.worklowById.push(doc.workflow_id);\n                        }\n                    }\n                    this.workflowsFormControl.push(new FormControl(this.worklowById[i], [Validators.required]));\n                    this.tableData.push({Documents: this.documents[i].folder, Formulaires: this.worklowById[i], id: i});\n                }\n\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.modelForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/ai']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateModel() {\n        if (this.isValidForm(this.modelForm)) {\n            const minProba = this.getValueFromForm(this.modelForm, 'min_proba');\n            const modelPath = this.getValueFromForm(this.modelForm, 'model_path');\n            const modelLabel = this.getValueFromForm(this.modelForm, 'model_label');\n            const documents = [];\n            for (let i = 0; i < this.len; i++) {\n                const fold = this.documents[i].folder;\n                const workflow_id = this.workflowsFormControl[i].value;\n                documents.push({\n                    folder: fold,\n                    workflow_id: workflow_id\n                });\n            }\n            if (this.modelId !== undefined) {\n                this.http.post(environment['url'] + '/ws/ai/verifier/update/' + this.modelId, {\n                    model_path: modelPath, model_label: modelLabel, min_proba: minProba, documents: documents }, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_updated'));\n                        this.router.navigate(['/settings/verifier/ai']).then();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    async retrieveWorkflows() {\n        const retrieve = this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((workflows: any) => {\n                this.workflows = workflows.workflows;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        );\n        return await lastValueFrom(retrieve).then();\n    }\n\n    onWorkflowSelect(event: any, index: number) {\n        const val = event.value;\n        for (const element of this.workflows) {\n            if (element.id === val) {\n                this.choseWorkflow[index] = element.workflow_id;\n                this.chosenDocs[index] = this.doc_types.filter((a: { workflowId: number; }) => a.workflowId === this.choseWorkflow[index]);\n            }\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\">\n                <div class=\"grid grid-cols-3 gap-6 m-10 w-full\">\n                    <ng-container *ngFor=\"let field of modelForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text' && field.id !== 'min_proba'\">\n                            <mat-label>\n                                {{ field.label | translate }}\n                            </mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'min_proba'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <mat-divider class=\"w-1/2 m-auto border-green-400 mb-8\"></mat-divider>\n                <div class=\"mx-10 my-2 grid grid-cols-{{ this.tableData.length }} gap-4 place-items-stretch\">\n                    <div *ngFor=\"let item of this.tableData, let i=index\" class=\"text-center\">\n                        {{ item['Documents'] }}\n                        <div class=\"mt-4\">\n                            <mat-form-field class=\"w-full\">\n                                <mat-label>{{ \"MONITORING.workflow_associated\" | translate }}</mat-label>\n                                <mat-select [formControl]=\"workflowsFormControl[item.id]\"\n                                            (selectionChange)=\"onWorkflowSelect($event, item.id)\">\n                                    <mat-option *ngFor=\"let option of workflows\" [value]=\"option['workflow_id']\">\n                                        {{ option.label }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateModel()\" mat-button class=\"valid_button m-5\">\n                    <span class=\"block\">{{ \"ARTIFICIAL-INTELLIGENCE.update_model\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {environment} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.scss']\n})\nexport class FormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    updateFormLoading       : boolean   = false;\n    creationMode            : boolean   = true;\n    modalOpen               : boolean   = false;\n    selectedFields          : any       = [];\n    formLabels              : any       = {};\n    formId                  : any;\n    formSettingId           : any;\n    outputs                 : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'default_form': {\n            'control': new FormControl()\n        }\n    };\n    formSettings            : any       = {\n        'supplier_verif': {\n            'control': new FormControl()\n        },\n        'allow_learning': {\n            'control': new FormControl(true)\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    fields                  : any       = {\n        'supplier': [],\n        'lines': [],\n        'facturation': [],\n        'other': []\n    };\n    fieldCategories         : any []    = [\n        {\n            'id': 'supplier',\n            'label': marker('FORMS.supplier'),\n            'edit': false\n        },\n        {\n            'id': 'lines',\n            'label': marker('FACTURATION.lines'),\n            'edit': false\n        },\n        {\n            'id': 'facturation',\n            'label': marker('FACTURATION.facturation'),\n            'edit': false\n        },\n        {\n            'id': 'other',\n            'label': marker('FORMS.other'),\n            'edit': false\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'accounts_fields',\n            'label': marker('ACCOUNTS.supplier'),\n            'values': [\n                {\n                    id: 'name',\n                    label: marker('ACCOUNTS.supplier_name'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'white',\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'siret',\n                    label: marker('ACCOUNTS.siret'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'siren',\n                    label: marker('ACCOUNTS.siren'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'lime',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'vat_number',\n                    label: marker('ACCOUNTS.vat_number'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'olive',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'iban',\n                    label: marker('ACCOUNTS.iban'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'duns',\n                    label: marker('ACCOUNTS.duns'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'bic',\n                    label: marker('ACCOUNTS.bic'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'rccm',\n                    label: marker('ACCOUNTS.rccm'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'email',\n                    label: marker('FORMATS.email'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'email',\n                    format_icon:'fa-solid fa-at',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'address1',\n                    label: marker('ADDRESSES.address_1'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'address2',\n                    label: marker('ADDRESSES.address_2'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'postal_code',\n                    label: marker('ADDRESSES.postal_code'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'city',\n                    label: marker('ADDRESSES.city'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'country',\n                    label: marker('ADDRESSES.country'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'lines_fields',\n            'label': this.translate.instant('FACTURATION.lines'),\n            'values': [\n                {\n                    id: 'description',\n                    label: marker('FACTURATION.description'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'quantity',\n                    label: marker('FACTURATION.quantity'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'unit_price',\n                    label: marker('FACTURATION.unit_price'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'line_ht',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'line_vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'lines',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/5\",\n                    class_label: \"1/5\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'silver',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'red',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'orange',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'yellow',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'blue',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'firstname',\n                    label: marker('FACTURATION.firstname'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'orange',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'lastname',\n                    label: marker('FACTURATION.lastname'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'orange',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'pink',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'fuschia',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'purple',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'accounting_plan',\n                    label: marker('FACTURATION.accounting_plan'),\n                    unit: 'facturation',\n                    type: 'select',\n                    required: false,\n                    format: 'select',\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group'\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: '',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt'\n                }\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    classList               : any []    = [\n        {\n            'id': 'w-full',\n            'label': '1'\n        },\n        {\n            'id': 'w-1/2',\n            'label': '1/2'\n        },\n        {\n            'id': 'w-30',\n            'label': '1/3'\n        },\n        {\n            'id': 'w-1/3',\n            'label': '1/33'\n        },\n        {\n            'id': 'w-1/4',\n            'label': '1/4'\n        },\n        {\n            'id': 'w-1/5',\n            'label': '1/5'\n        },\n        {\n            'id': 'w-1/6',\n            'label': '1/6'\n        }\n    ];\n    colorsList              : any []    = [\n        {\n            'id': 'yellow',\n            'label': marker('COLORS.yellow')\n        },\n        {\n            'id': 'pink',\n            'label': marker('COLORS.pink')\n        },\n        {\n            'id': 'red',\n            'label': marker('COLORS.red')\n        },\n        {\n            'id': 'blue',\n            'label': marker('COLORS.blue')\n        },\n        {\n            'id': 'orange',\n            'label': marker('COLORS.orange')\n        },\n        {\n            'id': 'purple',\n            'label': marker('COLORS.purple')\n        },\n        {\n            'id': 'black',\n            'label': marker('COLORS.black')\n        },\n        {\n            'id': 'white',\n            'label': marker('COLORS.white')\n        },\n        {\n            'id': 'aqua',\n            'label': marker('COLORS.aqua')\n        },\n        {\n            'id': 'maroon',\n            'label': marker('COLORS.maroon')\n        },\n        {\n            'id': 'teal',\n            'label': marker('COLORS.teal')\n        },\n        {\n            'id': 'navy',\n            'label': marker('COLORS.navy')\n        },\n        {\n            'id': 'fuchsia',\n            'label': marker('COLORS.fuchsia')\n        },\n        {\n            'id': 'silver',\n            'label': marker('COLORS.silver')\n        },\n        {\n            'id': 'gray',\n            'label': marker('COLORS.gray')\n        },\n        {\n            'id': 'lime',\n            'label': marker('COLORS.lime')\n        },\n        {\n            'id': 'green',\n            'label': marker('COLORS.green')\n        }\n    ];\n    formatList              : any []    = [\n        {\n            'id': 'date',\n            'label': marker('FORMATS.date'),\n            'icon': 'fa-solid fa-calendar-day'\n        },\n        {\n            'id': 'number_float',\n            'label': marker('FORMATS.number_float'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'number_int',\n            'label': marker('FORMATS.number_int'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'char',\n            'label': marker('FORMATS.char'),\n            'icon': 'fa-solid fa-font'\n        },\n        {\n            'id': 'alphanum',\n            'label': marker('FORMATS.alphanum'),\n            'icon': 'fa-solid fa-hashtag'\n        },\n        {\n            'id': 'alphanum_extended',\n            'label': marker('FORMATS.alphanum_extended'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'alphanum_extended_with_accent',\n            'label': marker('FORMATS.alphanum_extended_with_accent'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'email',\n            'label': marker('FORMATS.email'),\n            'icon': 'fa-solid fa-alt'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id': 'simple',\n            'label': marker('DISPLAY.simple'),\n            'icon': 'fa-solid fa-file-alt'\n        },\n        {\n            'id': 'multi',\n            'label': marker('DISPLAY.multi'),\n            'icon': 'fa-solid fa-layer-group'\n        }\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id': true,\n            'label': marker('MANDATORY.required'),\n            'icon': 'fa-solid fa-star'\n        },\n        {\n            'id': false,\n            'label': marker('MANDATORY.not_required'),\n            'icon': 'far fa-star'\n        }\n    ];\n    availableFields         : any       = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'only_ocr',\n            'label': marker('FORMS.only_ocr')\n        },\n        {\n            \"id\": 'supplier',\n            'label': 'ACCOUNTS.supplier'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date',\n            'label': marker('FACTURATION.document_date')\n        },\n        {\n            \"id\": 'footer',\n            'label': marker('FACTURATION.footer')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((res_outputs: any) => {\n                this.outputs = res_outputs.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/verifier/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.formLabels = data.labels;\n                            this.formSettingId = data.module_settings_id;\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) {\n                                        this.form[field].control.setValue(data[field]);\n                                    }\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) {\n                                    this.outputForm[0].control.setValue(data.outputs[0]);\n                                }\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) {\n                                            this.addOutput();\n                                        }\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }), catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['customFields']) {\n                    for (const field in data['customFields']) {\n                        this.availableFields.push({\n                            'id': 'custom_' + data['customFields'][field].id,\n                            'label': data['customFields'][field].label\n                        });\n                        for (const parent in this.availableFieldsParent) {\n                                if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                    this.availableFieldsParent[parent].values.push({\n                                        id: 'custom_' + data['customFields'][field].id,\n                                        label: data['customFields'][field].label,\n                                        unit: 'custom',\n                                        type: data['customFields'][field].type,\n                                        required: data['customFields'][field].required,\n                                        autocomplete: data['customFields'][field].autocomplete,\n                                        class: \"w-1/3\",\n                                        class_label: \"1/33\"\n                                    });\n\n                                    let format = '';\n                                    if (data['customFields'][field].type === 'regex') {\n                                        format = data['customFields'][field].settings['regex']['format'];\n                                    } else if (data['customFields'][field].type === 'text') {\n                                        format = 'char';\n                                    } else if (data['customFields'][field].type === 'select') {\n                                        format = 'select';\n                                    } else if (data['customFields'][field].type === 'textarea') {\n                                        format = 'char';\n                                    } else {\n                                        format = data['customFields'][field].type;\n                                    }\n                                    this.availableFieldsParent[parent].values[this.availableFieldsParent[parent].values.length - 1]['format'] = format;\n                                }\n                            }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.fields) {\n                        Object.keys(data.fields).forEach((category: any) => {\n                            if (data.fields[category]) {\n                                this.fields[category] = data.fields[category];\n                            }\n                        });\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    updateLabel(category: any, label:any) {\n        category.edit = !category.edit;\n        if (label) {\n            category.label = label;\n            this.formLabels[category.id] = label;\n            if (!this.creationMode) {\n                this.http.put(environment['url'] + '/ws/forms/updateLabel/' + this.formId + '/' + category.id,\n                    {label: category.label}, {headers: this.authService.headers}).pipe(\n                    tap(()=> {\n                        this.notify.success(this.translate.instant('FORMS.label_updated_successfully'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    focusInput(category_id: any) {\n        setTimeout(() => {\n            document.getElementById(category_id)!.focus();\n        }, 200);\n    }\n\n    getCategoryLabel(category: any) {\n        return this.formLabels[category.id] ? this.formLabels[category.id] : this.translate.instant(category.label);\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeFormat(fieldId: any, newFormat: any, formatIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.format = newFormat;\n                element.format_icon = formatIcon;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    changeColor(fieldId: any, newColor: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.color = newColor;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            if (event.container.data) {\n                moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n            }\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(previousIndex: any, category: any, unit: any) {\n        if (unit === 'addresses' || unit === 'supplier') {\n            unit = 'accounts';\n        }\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    updateValue(event: any, field: any) {\n        const value = event.target ? event.target.value : event.value;\n        if (value) {\n            field.label = value;\n        }\n        field['edit_name'] = false;\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        this.updateFormLoading = true;\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) {\n                outputs.push(element.control.value);\n            }\n        });\n\n        const settings: any = {};\n        Object.keys(this.formSettings).forEach((element: any) => {\n            settings[element] = this.formSettings[element].control.value;\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : settings\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/verifier/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.updateFormLoading = false;\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                finalize(() => this.updateFormLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.updateFormLoading = false;\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) {\n                this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            } else if (!label) {\n                this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            } else if (outputs.length === 0) {\n                this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n            }\n            this.updateFormLoading = false;\n        }\n    }\n\n    selectForLine(event: any, field: any) {\n        if (event.ctrlKey) {\n            field.lineSelected = !field.lineSelected;\n            if (field.lineSelected) {\n                this.selectedFields.push({'id': field.id, 'class': field.class});\n            } else {\n                this.selectedFields.forEach((element: any, index: number) => {\n                    if (element.id === field.id) {\n                        this.selectedFields.splice(index, 1);\n                        field.fullSize = false;\n                    }\n                });\n            }\n            let size = 0;\n            this.selectedFields.forEach((element: any) => {\n                const currentNumber = element.class.replace('w-', '');\n                if (currentNumber !== 'full') {\n                    const currentSize = new Function(\"return \" + element.class.replace('w-', ''))();\n                    size += currentSize;\n                } else {\n                    size = 1;\n                }\n            });\n            if (Math.round((size * 10)) / 10 % 1 === 0 && field.lineSelected) {\n                field.fullSize = true;\n            }\n        }\n    }\n\n    createForm() {\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        let supplierVerif = this.formSettings.supplier_verif.control.value;\n        let allowLearning = this.formSettings.allow_learning.control.value;\n        if (!supplierVerif) {\n            supplierVerif = false;\n        }\n\n        if (!allowLearning) {\n            allowLearning = false;\n        }\n\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) {\n                outputs.push(element.control.value);\n            }\n        });\n        if (label !== '' && outputs.length >= 1) {\n            this.http.post(environment['url'] + '/ws/forms/verifier/create', {\n                    'args': {\n                        'module'       : 'verifier',\n                        'label'        : label,\n                        'outputs'      : outputs,\n                        'default_form' : isDefault,\n                        'settings'     : {\n                            \"supplier_verif\" : supplierVerif,\n                            \"allow_learning\" : allowLearning\n                        }\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/verifier/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/verifier/forms').then();\n                    Object.keys(this.formLabels).forEach((category: any) => {\n                        this.http.put(environment['url'] + '/ws/forms/updateLabel/' + data.id + '/' + category,\n                            {label: this.formLabels[category]}, {headers: this.authService.headers}).pipe(\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) {\n                this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            } else if (!label) {\n                this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            } else if (outputs.length === 0) {\n                this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n            }\n            this.updateFormLoading = false;\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field class=\"\">\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label']['control']\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form']['control']\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['supplier_verif']['control']\">\n                        {{ \"FORMS.supplier_verif\" | translate }}\n                        <span class=\"text-gray-600 cursor-help relative\" [matTooltip]=\"'FORMS.supplier_verif_hint' | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['allow_learning']['control']\">\n                        {{ \"FORMS.allow_learning\" | translate }}\n                        <span class=\"text-gray-600 cursor-help relative\" [matTooltip]=\"'FORMS.allow_learning_hint' | translate\">\n                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                        </span>\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-gray-900 z-40\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-4 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n            </div>\n            <div class=\"form-container\">\n                <ng-container *ngFor=\"let category of this.fieldCategories; let i = index\">\n                    <span class=\"relative text-xl tracking-wider px-1.5 bg-white left-10\" style=\"top: 1.125rem\">\n                        <span *ngIf=\"!category['edit']\">\n                            {{ getCategoryLabel(category) }}\n                            <span (click)=\"category.edit = !category['edit']; focusInput('label_' + category['id'])\"\n                                  *ngIf=\"category['id'] !== 'lines'\">\n                                <i class=\"fa-solid fa-edit cursor-pointer mx-1 text-green-400\"></i>\n                            </span>\n                        </span>\n                        <span *ngIf=\"category['edit']\">\n                            <input class=\"border border-gray-900 rounded px-1.5\" #labelInput\n                                   [id]=\"'label_' + category.id\" matInput [value]=\"getCategoryLabel(category) | translate\"\n                                   (focusout)=\"updateLabel(category, labelInput.value)\">\n                            <span (click)=\"updateLabel(category, labelInput.value);\">\n                                <i class=\"fa-solid fa-check cursor-pointer mx-1 text-green-400\"></i>\n                            </span>\n                        </span>\n                    </span>\n                    <div class=\"border-green-400 border rounded-lg pt-4 mx-6 my-1\">\n                        <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" [id]=\"category['id']\"\n                             class=\"flex flex-wrap cursor-pointer w-full my-3 px-1\" style=\"min-height: 50px;\">\n                            <div *ngFor=\"let field of this.fields[category['id']]; let index = index\"\n                                 class=\"flex items-center overflow-hidden\" [class]=\"field['class']\"\n                                 [ngSortGridItems]=\"fields[category['id']]\" ngSortgridItem\n                                 [ngSortGridGroup]=\"category['id']\" (sorted)=\"storeNewOrder($event, category['id'])\"\n                                 [class.-mt-4]=\"field['lineSelected']\">\n                                <mat-form-field class=\"right-0 form-builder mt-1 rounded-md\"\n                                                [class.bg-opacity-30]=\"field['lineSelected']\"\n                                                [class.px-3]=\"!field['lineSelected']\" [class.px-6]=\"field['lineSelected']\"\n                                                [class.pb-0]=\"field['lineSelected']\" [class.pt-5]=\"field['lineSelected']\"\n                                                [ngClass]=\"{'w-full': !field['lineSelected'], 'w-11/12': field['lineSelected']}\"\n                                                [class.bg-gray-900]=\"field['lineSelected']\"\n                                                (click)=\"selectForLine($event, this.fields[category['id']][index])\">\n                                    <i cdkDrag class=\"fa-solid fa-trash z-10 text-red-500\"\n                                       *ngIf=\"!field['edit_name']\" (click)=\"deleteField(index, category['id'], field.unit)\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <i cdkDrag class=\"fa-solid fa-edit z-10 ml-6 text-green-400\"\n                                       *ngIf=\"!field['edit_name']\" (click)=\"field['edit_name'] = true\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.update_label')\"></i>\n                                    <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block\n                                                overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\"\n                                          *ngIf=\"!field['edit_name']\">\n                                        <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                        <strong>{{ field.label | translate }}</strong>\n                                        <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                        <span *ngIf=\"field.type === 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                        <span *ngIf=\"field.type === 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                    </span>\n                                    <span class=\"flex w-full\" *ngIf=\"field['edit_name']\">\n                                        <mat-form-field appearance=\"outline\" class=\"edit_input w-full -mt-3.5\">\n                                            <input matInput [value]=\"field.label | translate\" class=\"relative top-1 h-2\"\n                                                   (keyup.enter)=\"updateValue($event, field)\" (focusout)=\"updateValue($event, field)\">\n                                        </mat-form-field>\n                                        <button matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button class=\"-top-3.5\">\n                                            <i class=\"fa-solid fa-check visible opacity-100 text-lg\"></i>\n                                        </button>\n                                    </span>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                    <div class=\"absolute top-0 -right-4 z-10\" *ngIf=\"!field['edit_name']\">\n                                        <button mat-button [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                                [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\">\n                                            <i class=\"fa-solid fa-ellipsis-vertical text-lg\"></i>\n                                        </button>\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item [matMenuTriggerFor]=\"colors\"\n                                                    *ngIf=\"field.type !== 'select'\"\n                                                    [style]=\"'background-color:' + field.color\"\n                                                    [class.text-white]=\"field.color === 'black' || field.color === 'navy'\">\n                                                {{ \"VERIFIER.colors\" | translate }}\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                                {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">\n                                                    {{ field['class_label'] }}\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"format\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.format\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['format_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['display_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                                {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field['required_icon'] }}\"></i>\n                                                </small>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #size=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\" *ngFor=\"let _class of classList\"\n                                                    (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                                <span [class.text-green-400]=\"_class.id === field['class']\">\n                                                    {{ _class.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_class.id === field['class']\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #colors=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _color of colorsList\"\n                                                    (click)=\"changeColor(field.id, _color.id, category['id'])\"\n                                                    [style]=\"'background-color:' + _color.id\"\n                                                    [class.text-white]=\"_color.id === 'black' || _color.id === 'navy'\">\n                                                {{ _color.label | translate }}\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #format=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _format of formatList\"\n                                                    (click)=\"changeFormat(field.id, _format.id, _format.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_format.id === field.format\">\n                                                    {{ _format.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_format.id === field.format\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #display=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _display of displayList\"\n                                                    (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_display.id === field.display\">\n                                                    {{ _display.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_display.id === field.display\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #required=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let required of mandatoryList\"\n                                                    (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"required.id === field.required\">\n                                                    {{ required.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"required.id === field.required\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </mat-form-field>\n                                <div *ngIf=\"field.fullSize\">\n                                    <i class=\"fa-solid fa-layer-group -m-2 -right-4 relative\"\n                                       [class.text-green-400]=\"field.fullSizeSelected\" matTooltipPosition=\"above\"\n                                       [matTooltip]=\"field.fullSizeSelected ? ('VERIFIER.full_line' | translate) :\n                                                                              ('VERIFIER.make_line' | translate)\"\n                                       (click)=\"field.fullSizeSelected = !field.fullSizeSelected\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"flex justify-center items-center mb-2 mt-4\">\n                <button mat-button class=\"w-56 valid_button\"\n                        (click)=\"createForm()\" *ngIf=\"this.creationMode\">\n                        {{ \"FORMS.create\" | translate }}\n                </button>\n                <button mat-button class=\"min-w-56 valid_button\" (click)=\"updateForm()\" *ngIf=\"!this.creationMode\">\n                    <span *ngIf=\"!this.updateFormLoading\">{{ \"FORMS.modify\" | translate }}</span>\n                    <i *ngIf=\"this.updateFormLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n            </div>\n            <div class=\"absolute overflow-y-auto overflow-x-hidden z-40 w-full md:inset-0 grid\n                 place-items-center h-screen\" *ngIf=\"this.modalOpen\">\n                <div class=\"relative w-full max-w-2xl h-full md:h-auto border border-green-400\">\n                    <div class=\"relative bg-white shadow\">\n                        <div class=\"flex justify-between items-start p-4 border-b bg-green-400\">\n                            <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n                                {{ \"FORMS.available_fields\" | translate }}\n                            </h3>\n                            <button type=\"button\" class=\"text-gray-900 bg-transparent ml-auto inline-flex items-center\"\n                                    style=\"padding-top: 0.9rem\" (click)=\"this.modalOpen = false\">\n                                <i class=\"fa-solid fa-xmark fa-2x\"></i>\n                            </button>\n                        </div>\n                        <div class=\"p-6 space-y-6\">\n                            <div class=\"overflow-x-hidden overflow-y-auto h-96\">\n                                <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                                    <span>\n                                        {{ field.label | translate }}\n                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                                        <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngIf=\"availableFields['id'] === 'lines_fields'\">\n                        <app-hint [specificClass]=\"'w-11/12'\" [message]=\"'FACTURATION.only_facturx' | translate\"></app-hint>\n                    </div>\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text' || field.type === 'regex'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }} </mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" disabled>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class FormListComponent implements OnInit {\n    columnsToDisplay    : string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    loading             : boolean   = true;\n    pageSize            : number    = 10;\n    pageIndex           : number    = 0;\n    total               : number    = 0;\n    offset              : number    = 0;\n    forms               : any       = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/forms') || lastUrl === '/') {\n            if (this.sessionStorageService.get('formsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('formsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('formsPageIndex');\n        }\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) {\n                    this.total = data.forms[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadForms();\n                }\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async getWorkflows(formId: any) {\n        return await this.http.get(environment['url'] + '/ws/workflows/verifier/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async deleteConfirmDialog(formId: number, form: string) {\n        const workflows: any = await this.getWorkflows(formId);\n        if (workflows.length !== 0) {\n            const forms = this.forms;\n            forms.forEach((form: any, cpt: number) => {\n                if (form.id === formId) {\n                    forms.splice(cpt, 1);\n                }\n            });\n            const workflowList: any = [];\n            const workflowListLabel: any = [];\n            workflows.forEach((workflow: any) => {\n                workflowList.push({'id': workflow.id, 'label': workflow.label, process: workflow.process, input: workflow.input, output: workflow.output});\n                workflowListLabel.push(workflow.label);\n            });\n\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.new_workflow_link'),\n                    confirmText         : this.translate.instant('FORMS.workflows_list_already_linked', {\"workflowsList\": workflowListLabel.join('<br>')}),\n                    selectValues        : forms,\n                    selectLabel         : this.translate.instant('FORMS.choose_form'),\n                    confirmButton       : this.translate.instant('GLOBAL.delete_form_and_reassign_workflow'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.updateWorkflowsDefaultForm(result, workflowList);\n                    this.deleteForm(formId);\n                }\n            });\n        } else {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                    confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                    confirmButton       : this.translate.instant('GLOBAL.delete'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.deleteForm(formId);\n                }\n            });\n        }\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/verifier/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    updateWorkflowsDefaultForm(newFormId: number, workflows: any) {\n        if (newFormId !== undefined) {\n            for (const cpt in workflows) {\n                workflows[cpt]['process'].form_id = newFormId;\n                this.http.put(environment['url'] + '/ws/workflows/verifier/update/' + workflows[cpt].id, {'args': workflows[cpt]}, {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/verifier/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/verifier/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [matSortDisableClear]=\"true\" [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"default_form\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                        <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"enabled\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                                *ngIf=\"this.forms.length > 1\"\n                                matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/verifier/forms/builder/edit/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'create-output',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class CreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                }\n            ],\n            required: false\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/getOutputsTypes', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data['outputs_types'];\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') ||\n                (element.required && element.control.value == null)) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/verifier/create',\n                {'args': {\n                    'output_type_id': outputTypeId,\n                    'output_label'  : outputLabel,\n                    'compress_type' : compressType,\n                    'ocrise'        : ocrise,\n                    'module'        : 'verifier'\n                }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.router.navigate(['/settings/verifier/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of this.outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [id]=\"field.id\" [name]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field['required']\">\n                                <mat-option *ngFor=\"let option of this.outputsTypes\" [value]=\"option['output_type_id']\">\n                                    {{ option['output_type_label'] }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"createOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.create\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-output-list',\n    templateUrl: './outputs-list.component.html',\n    styleUrls: ['./outputs-list.component.scss']\n})\nexport class OutputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/outputs') || lastUrl === '/') {\n            if (this.sessionStorageService.get('outputsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('outputsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('outputsPageIndex');\n        }\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) {\n                    this.total = data.outputs[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadOutputs();\n                }\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/verifier/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/verifier/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"output_type_id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"output_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                                matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/verifier/outputs/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit, PipeTransform, Pipe } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search:any): string {\n        const pattern = search\n            .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n            .split(' ')\n            .filter((t:any) => t.length > 0)\n            .join('|');\n        const regex = new RegExp(pattern, 'gi');\n        return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n}\n\n@Component({\n    selector: 'update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class UpdateOutputComponent implements OnInit {\n    headers                 : HttpHeaders   = this.authService.headers;\n    loading                 : boolean       = true;\n    loadingCustomFields     : boolean       = true;\n    connection              : boolean       = false;\n    outputId                : any;\n    output                  : any;\n    selectedOutputType      : any;\n    originalOutputType      : any;\n    outputsTypes            : any[]         = [];\n    outputsTypesForm        : any[]         = [];\n    oldFolder               : string        = '';\n    toHighlight             : string        = '';\n    allowedPath             : string        = '';\n    showPassword            : { [key: string]: boolean; } = {};\n    outputForm              : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                }\n            ],\n            required: false\n        }\n    ];\n    availableFields         : any           = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'name',\n            'label': 'ACCOUNTS.supplier_name'\n        },\n        {\n            \"id\": 'vat_number',\n            'label': 'ACCOUNTS.vat_number'\n        },\n        {\n            \"id\": 'siret',\n            'label': 'ACCOUNTS.siret'\n        },\n        {\n            \"id\": 'siren',\n            'label': 'ACCOUNTS.siren'\n        },\n        {\n            \"id\": 'rccm',\n            'label': 'ACCOUNTS.rccm'\n        },\n        {\n            \"id\": 'duns',\n            'label': 'ACCOUNTS.duns'\n        },\n        {\n            \"id\": 'bic',\n            'label': 'ACCOUNTS.bic'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date_year',\n            'label': marker('FACTURATION.document_date_year')\n        },\n        {\n            \"id\": 'total_ht',\n            'label': marker('FACTURATION.total_ht')\n        },\n        {\n            \"id\": 'total_ttc',\n            'label': marker('FACTURATION.total_ttc')\n        },\n        {\n            \"id\": 'total_vat',\n            'label': marker('FACTURATION.total_vat')\n        },\n        {\n            \"id\": 'document_date_month',\n            'label': marker('FACTURATION.document_date_month')\n        },\n        {\n            \"id\": 'document_date_day',\n            'label': marker('FACTURATION.document_date_day')\n        },\n        {\n            \"id\": 'register_date_year',\n            'label': marker('FACTURATION.register_date_year')\n        },\n        {\n            \"id\": 'register_date_month',\n            'label': marker('FACTURATION.register_date_month')\n        },\n        {\n            \"id\": 'register_date_day',\n            'label': marker('FACTURATION.register_date_day')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        }\n    ];\n    testConnectionMapping   : any           = {\n        'export_mem' : \"testMEMConnection()\"\n    };\n\n    /**\n     * Pour ajouter une nouvelle chaine sortante (e.g : Alfresco)\n     * Rajouter une nouvelle ligne dans le tableau testConnectionMapping() contenant l'id de la nouvelle chaine et le nom de la fonction permettant de verifier la connection\n     * Dans le JSON présent dans la table output_types, en se basant sur celui existant (export_mem), créer vos champs par défaut\n     * Attention à bien garder les clé \"auth\" et \"parameters\" présentes\n     * Si un champs \"parameters\" à besoin de récupérer des données depuis un WS de la solution cible (e.g récupération des utilisateurs MEM Courrier)\n     * Rajouter une ligne dans le JSON 'webservice' avec un nom de fonction (sans mettre les parenthèses)\n     * Créer cette fonction et faites le process permettant de récupérer les données\n     * Les données doivent être formatés comme suit : {'id': XX, 'value': XX} et être mise dans la clé \"values\" du champ\n     * Regarder la fonction getUsersMEM() pour voir le fonctionnement\n     * Du côté des webservices permettant l'execution des chaînes sortantes, il faut créer un WS dans le fichier rest/verifier.py\n     * La route doit être : verifier/documents/<int:document_id>/output_type_id (e.g : verifier/documents/<int:document_id>/export_mem)\n    **/\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/verifier/allowedPath', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.allowedPath = data.allowedPath;\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n                this.http.get(environment['url'] + '/ws/outputs/verifier/getOutputsTypes', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                data['customFields'].forEach((field: any) => {\n                                    this.availableFields.push({\n                                        'id': 'custom_' + field.id,\n                                        'label': field.label\n                                    });\n                                });\n                            }),\n                            finalize(() => this.loadingCustomFields = false),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.outputsTypes = data['outputs_types'];\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'links' : [],\n                                'parameters' : []\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        if (option.id === 'folder_out' && this.allowedPath) {\n                                            option.placeholder = (this.allowedPath + '/output').replace(/\\/\\//g, '/');\n                                            option.hint = this.translate.instant('GLOBAL.allowed_path', {allowedPath: this.allowedPath});\n                                        }\n\n                                        if (option.type == 'password') {\n                                            this.showPassword[option.id] = false;\n                                        }\n\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice\n                                        });\n                                    }\n                                } else if (category === 'links') {\n                                    delete this.outputsTypesForm[_output.output_type_id].links;\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                if (this.output.data.options[category]) {\n                                    this.output.data.options[category].forEach((outputElement: any) => {\n                                        if (element.id === outputElement.id) {\n                                            if (outputElement.value) {\n                                                if (outputElement.webservice) {\n                                                    element.values = [outputElement.value];\n                                                }\n                                                element.control.setValue(outputElement.value);\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/verifier/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any, category: string = 'parameters') {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n            const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status[0];\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                } else {\n                    this.notify.error('<strong>' + this.translate.instant('OUTPUT.mem_connection_ko') + '</strong> : ' + data.status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password')\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return[0].users) {\n                    const data = _return[0].users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt]['serialId'],\n                            'value': data[cpt]['entity_label'],\n                            'extra': data[cpt]['entity_id']\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['customFields']) {\n                    const data = _return['customFields'];\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getContactsCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getContactsCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['customFields']) {\n                    const data = _return['customFields'];\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt]['type_id'],\n                            'value': data[cpt].description,\n                            'extra': data[cpt]['type_id']\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['priorities']) {\n                    const data = _return['priorities'];\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['statuses']) {\n                    const data = _return['statuses'];\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt]['label_status'],\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return['indexingModels']) {\n                    const data = _return['indexingModels'];\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt]['category']\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"links\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            if (this.outputsTypesForm[this.selectedOutputType][category]) {\n                for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                    const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                    if (field.isJson) {\n                        try {\n                            JSON.parse(field.control.value);\n                        } catch (error) {\n                            field.control.setErrors({'json_error': true});\n                            this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                            return;\n                        }\n                    }\n\n                    _array.data.options[category].push({\n                        id: field.id,\n                        type: field.type,\n                        webservice: field.webservice,\n                        value: field.value === undefined ? field.control.value : field.value\n                    });\n                }\n            }\n        }\n        if (_array.data.options['links'].length === 0) {\n            delete _array.data.options.links;\n        }\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/verifier/update/' + this.outputId, {'args': _array}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any, category: string = 'parameters') {\n        this.outputsTypesForm[this.selectedOutputType][category][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n\n    checkFolder(field: any, fromUser = false) {\n        if (fromUser || (field && field.control.value && field.control.value !== this.oldFolder)) {\n            this.http.post(environment['url'] + '/ws/outputs/verifier/verifyFolderOut',\n                {'folder_out': field.control.value}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    field.control.setErrors();\n                    this.notify.success(this.translate.instant('OUTPUT.folder_out_ok'));\n                    this.oldFolder = field.control.value;\n                }),\n                catchError((err: any) => {\n                    field.control.setErrors({'folder_not_found': true});\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100vh - 6rem) !important\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.label | translate\" [required]=\"field['required']\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"updateOutput()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"this.selectedOutputType && this.outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\" [selectedIndex]=\"this.outputsTypesForm[selectedOutputType]['auth'].length === 0 ? 1 : 0 \">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                            <span *ngIf=\"this.outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_auth_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-3 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of this.outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"this.showPassword[field.id] ? 'text' : 'password'\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}\n                                        </mat-error>\n                                        <mat-icon matSuffix (click)=\"this.showPassword[field.id] = !this.showPassword[field.id]\"\n                                                  class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                            <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword[field.id]\" [class.fa-eye]=\"this.showPassword[field.id]\"></i>\n                                        </mat-icon>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\"\n                                    (click)=\"testConnection()\" mat-button\n                                    class=\"valid_button\">\n                                <span>{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\" style=\"height: 50vh;\">\n                            <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-3 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field['webservice']\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-0.5 cursor-help\" [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-xs\"></i>\n                                        </span>\n                                        <button mat-icon-button matSuffix *ngIf=\"field.id === 'folder_out'\"\n                                                (click)=\"checkFolder(field, true)\" [matTooltip]=\"'OUTPUT.test_folder_out' | translate\">\n                                            <i class=\"fa-solid fa-check text-green-400\"></i>\n                                        </button>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field['webservice']\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea [cdkTextareaAutosize]=\"true\" [cdkAutosizeMinRows]=\"1\" matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field['control']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field['required']\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field['webservice']\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field['webservice'] && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field['webservice'] && !this.connection\">\n                                            {{ 'OUTPUT.check_connection_before' | translate }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option['extra'] }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.links' | translate\" *ngIf=\"outputsTypesForm[selectedOutputType]['links']\">\n                            <app-hint [message]=\"'OUTPUT.links_hint' | translate\" [specificClass]=\"'w-3/4'\"></app-hint>\n                            <div class=\"flex justify-center m-10\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-slide-toggle *ngIf=\"field.type === 'boolean'\" [formControl]=\"field['control']\">\n                                        {{ field.label | translate }}\n                                    </mat-slide-toggle>\n                                </ng-container>\n                            </div>\n                            <div class=\"grid grid-cols-2 gap-x-4 gap-y-10 m-8\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field['webservice']\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field['control']\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                               [required]=\"field['required']\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['links']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id, 'links')\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field['webservice']\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field['control']\" [type]=\"field.type\"\n                                               [readonly]=\"field['webservice'] && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field['required']\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field['webservice'] && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'create-positions-mask',\n    templateUrl: './create-positions-mask.component.html',\n    styleUrls: ['./create-positions-mask.component.scss']\n})\nexport class CreatePositionsMaskComponent implements OnInit {\n    loading             : boolean   = true;\n    suppliers           : any       = [];\n    forms               : any       = [];\n    form                : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'supplier_id': {\n            'control': new FormControl()\n        },\n        'form_id': {\n            'control': new FormControl()\n        }\n    };\n    toHighlight         : string = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    async ngOnInit(): Promise <void> {\n        this.serviceSettings.init();\n        this.suppliers = await this.retrieveSuppliers('', 1000);\n        this.suppliers = this.suppliers.suppliers;\n        this.forms = await this.retrieveForms();\n        this.forms = this.forms.forms;\n        this.loading = false;\n    }\n\n    async retrieveForms(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveSuppliers(name: string = '', limit: number = 0): Promise<any> {\n        if (limit == 0) {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&name=' + name, {headers: this.authService.headers}).toPromise();\n        } else {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&limit=' + limit, {headers: this.authService.headers}).toPromise();\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        for (const key in form) {\n            if ((form[key].control.status !== 'DISABLED' && form[key].control.status !== 'VALID') || form[key].control.value == null) {\n                state = false;\n            }\n            form[key].control.markAsTouched();\n        }\n        return state;\n    }\n\n    createPositionsMask() {\n        if (this.isValidForm(this.form)) {\n            this.loading = true;\n            const label = this.form['label'].control.value;\n            const supplierName = this.form['supplier_id'].control.value;\n            const formId = this.form['form_id'].control.value;\n            let supplierId = '';\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    supplierId = element.id;\n                }\n            });\n            this.http.post(environment['url'] + '/ws/positions_masks/add',\n                {'args': {\n                        'label': label,\n                        'supplier_id': supplierId,\n                        'form_id': formId\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.created'));\n                    this.router.navigate(['/settings/verifier/positions-mask/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.loading = false;\n                    this.notify.handleErrors(err, '/settings/verifier/positions-mask');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error : any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    async filterSupplier(value: any) {\n        if (!value) {\n            this.suppliers = await this.retrieveSuppliers('', 1000);\n            this.suppliers = this.suppliers.suppliers;\n            return;\n        } else if (value.length < 3) {\n            return;\n        }\n\n        this.toHighlight = value;\n        this.suppliers = await this.retrieveSuppliers(value);\n        this.suppliers = this.suppliers.suppliers;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div *ngIf=\"!loading\" class=\"overflow-auto\">\n                <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                    <mat-form-field>\n                        <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                        <input matInput [formControl]=\"this.form['label']['control']\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"right-0 w-full\">\n                        <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                            {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                        </mat-label>\n                        <input matInput type=\"text\" [required]=\"true\" ngModel (ngModelChange)=\"filterSupplier($event)\"\n                               [formControl]=\"this.form['supplier_id']['control']\" [matAutocomplete]=\"auto\">\n                        <mat-autocomplete #auto=\"matAutocomplete\">\n                            <mat-option *ngFor=\"let option of this.suppliers\" [value]=\"option.name\" [id]=\"option.id\">\n                                <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\">\n                        <mat-label>\n                            {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                        </mat-label>\n                        <mat-select [formControl]=\"this.form['form_id']['control']\" [required]=\"true\">\n                            <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button (click)=\"createPositionsMask()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"POSITIONS-MASKS.create\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'positions-mask-list',\n    templateUrl: './positions-mask-list.component.html',\n    styleUrls: ['./positions-mask-list.component.scss']\n})\nexport class PositionsMaskListComponent implements OnInit {\n    columnsToDisplay: string[]      = ['id', 'label', 'supplier_name', 'form_label', 'enabled', 'actions'];\n    loading         : boolean       = true;\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n    positionsMasks  : any           = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/positions-mask') || lastUrl === '/') {\n            if (this.sessionStorageService.get('positionMaskPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('positionMaskPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('positionMaskPageIndex');\n        }\n        this.loadPositionMask().then();\n    }\n\n    async loadPositionMask() {\n        this.loading = true;\n        const suppliers = await this.retrieveSuppliers();\n        this.http.get(environment['url'] + '/ws/positions_masks/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['positions_masks'].length > 0) {\n                    if (data['positions_masks'][0]['total']) {\n                        this.total = data['positions_masks'][0]['total'];\n                    } else if (this.pageIndex !== 0) {\n                        this.pageIndex = this.pageIndex - 1;\n                        this.offset = this.pageSize * (this.pageIndex);\n                        this.loadPositionMask();\n                    }\n                    this.positionsMasks = data['positions_masks'];\n                    suppliers.suppliers.forEach((element: any) => {\n                        this.positionsMasks.forEach((mask: any) => {\n                            if (element.id === mask.supplier_id) {\n                                mask.supplier_name = element.name;\n                            }\n                        });\n                    });\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('positionMaskPageIndex', event.pageIndex);\n        this.loadPositionMask().then();\n    }\n\n    deleteConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_delete', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletePositionMask(positionMaskId);\n            }\n        });\n    }\n\n    duplicateConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_duplicate', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicatePositionMask(positionMaskId);\n            }\n        });\n    }\n\n    disableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_disable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    enableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_enable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    deletePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/positions_masks/delete/' + positionsMaskId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.positions_mask_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicatePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.post(environment['url'] + '/ws/positions_masks/duplicate/' + positionsMaskId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/disable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/enable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.positionsMasks.slice();\n        if (!sort.active || sort.direction === '') {\n            this.positionsMasks = data;\n            return;\n        }\n\n        this.positionsMasks = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [matSortDisableClear]=\"true\" [dataSource]=\"positionsMasks\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"form_label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.form' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.form_label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"supplier_name\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.supplier_name' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.supplier_name }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"enabled\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                        <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"element.enabled\"\n                                (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'POSITIONS-MASKS.disable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-pause text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"!element.enabled\"\n                                (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'POSITIONS-MASKS.enable' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-play text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'POSITIONS-MASKS.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                        <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'POSITIONS-MASKS.delete' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/verifier/positions-mask/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit, SecurityContext} from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { environment } from  \"../../../../env\";\nimport { of } from \"rxjs\";\n\ndeclare const $: any;\n\n@Component({\n    selector: 'update-positions-mask',\n    templateUrl: './update-positions-mask.component.html',\n    styleUrls: ['./update-positions-mask.component.scss']\n})\nexport class UpdatePositionsMaskComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingFields           : boolean   = true;\n    ocrFromUser             : boolean   = false;\n    launchOnInit            : boolean   = false;\n    ratio                   : any;\n    positionMaskId          : any;\n    positionsMask           : any;\n    documentImageWidth      : any;\n    documentImageNbPages     : any;\n    currentPage             : number    = 1;\n    suppliers               : any       = [];\n    forms                   : any       = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl()\n        },\n        'supplier_id': {\n            'control': new FormControl()\n        },\n        'form_id': {\n            'control': new FormControl()\n        }\n    };\n    toHighlight             : string    = '';\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'silver',\n                    regex: ''\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'red',\n                    regex: ''\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'orange',\n                    regex: ''\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'yellow',\n                    regex: ''\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'blue',\n                    regex: ''\n                },\n                {\n                    id: 'firstname',\n                    label: marker('FACTURATION.firstname'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'orange',\n                    regex: ''\n                },\n                {\n                    id: 'lastname',\n                    label: marker('FACTURATION.lastname'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'orange',\n                    regex: ''\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'pink',\n                    regex: ''\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'fuschia',\n                    regex: ''\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'purple',\n                    regex: ''\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'white',\n                    regex: ''\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'green',\n                    regex: ''\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'lime',\n                    regex: ''\n                }\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        }\n    ];\n    imageDocument           : any;\n    documentImageSrc        : any;\n    documentImageName       : any;\n    lastId                  : any;\n    lastColor               : string    = '';\n    lastLabel               : string    = '';\n    fileControl             = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.serviceSettings.init();\n        this.launchOnInit = true;\n        this.positionMaskId = this.route.snapshot.params['id'];\n        this.positionsMask = await this.getPositionMask();\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                for (const key in this.positionsMask.regex) {\n                    if (key === element.id) {\n                        element.regex = this.positionsMask.regex[key];\n                    }\n                }\n            });\n        }\n        if (this.positionsMask.filename) {\n            this.documentImageName = this.positionsMask.filename;\n            this.documentImageNbPages = this.positionsMask.nb_pages;\n            this.documentImageWidth = this.positionsMask.width;\n            this.imageDocument = $('#document_src');\n            const thumbB64 : any = await this.getThumb(this.positionsMask.filename);\n            this.documentImageSrc = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/jpeg;base64, ' + thumbB64.file);\n        }\n        this.suppliers = await this.retrieveSuppliers('', 1000);\n        this.suppliers = this.suppliers.suppliers;\n        if (this.imageDocument) {\n            this.ratio = this.documentImageWidth / this.imageDocument.width();\n            this.ocr({\n                'target' : {\n                    'id': ''\n                }\n            }, true, '', false);\n        }\n        this.form['label'].control.setValue(this.positionsMask.label);\n        this.form['form_id'].control.setValue(this.positionsMask.form_id);\n\n        this.suppliers.forEach((element: any ) => {\n            if (element.id === this.positionsMask.supplier_id) {\n                this.form['supplier_id'].control.setValue(element.name);\n            }\n        });\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['customFields']) {\n                    for (const field in data['customFields']) {\n                        if (data['customFields'].hasOwnProperty(field)) {\n                            if (data['customFields'][field].module === 'verifier') {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id: 'custom_' + data['customFields'][field].id,\n                                                label: data['customFields'][field].label,\n                                                type: data['customFields'][field].type,\n                                                color: data['customFields'][field].color,\n                                                regex: ''\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.drawPositions();\n            this.loading = false;\n            this.launchOnInit = false;\n        }, 500);\n\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n    }\n\n    async getPositionMask(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/positions_masks/getById/' + this.positionMaskId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveSuppliers(name: string = '', limit: number = 0): Promise<any> {\n        if (limit == 0) {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&name=' + name, {headers: this.authService.headers}).toPromise();\n        } else {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&limit=' + limit, {headers: this.authService.headers}).toPromise();\n        }\n    }\n\n    drawPositions() {\n        if (this.positionsMask) {\n            for (const field in this.positionsMask.positions) {\n                const position = this.positionsMask.positions[field];\n                const page = this.getPage(field);\n                if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                    this.lastId = field;\n                    for (const cpt in this.availableFieldsParent) {\n                        this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                            if (field === element.id) {\n                                this.lastLabel = this.translate.instant(element.label);\n                                this.lastColor = element.color;\n                            }\n                        });\n                    }\n                    $('#' + field).focus();\n\n                    if (this.ratio === Infinity) {\n                        this.ratio = this.documentImageWidth / this.imageDocument.width();\n                    }\n\n                    const newArea = {\n                        x: position.x / this.ratio,\n                        y: position.y / this.ratio,\n                        width: position.width / this.ratio,\n                        height: position.height / this.ratio\n                    };\n\n                    const triggerEvent = $('.trigger');\n                    triggerEvent.hide();\n                    triggerEvent.trigger('mousedown');\n                    triggerEvent.trigger('mouseup', [newArea]);\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any) {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        this.lastColor = field.color;\n        $('#' + field.id).focus();\n        const newArea = {\n            x: position.x / this.ratio,\n            y: position.y / this.ratio,\n            width: position.width / this.ratio,\n            height: position.height / this.ratio\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    updatePositionsMask() {\n        const _array = {\n            'label': this.form['label'].control.value,\n            'form_id': this.form['form_id'].control.value,\n            'regex': {}\n        };\n        if (_array['label'] && _array['form_id']) {\n            const supplierName = this.form['supplier_id'].control.value;\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    Object.assign(_array, {'supplier_id': element.id});\n                }\n            });\n\n            for (const cpt in this.availableFieldsParent) {\n                this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                    if (element.regex) {\n                        Object.assign(_array['regex'], {[element.id]: element.regex});\n                    }\n                });\n            }\n\n            if (_array['regex']) {\n                _array['regex'] = JSON.stringify(_array['regex']);\n            }\n\n            this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId, {'args': _array}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            this.loading = true;\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    this.loading = false;\n                    return;\n                } else {\n                    const formData: FormData = new FormData();\n                    if (data) {\n                        formData.append(data[0].name, data[0]);\n                    }\n\n                    this.http.post(environment['url'] + '/ws/positions_masks/getImageFromPdf/' + this.positionMaskId, formData, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.documentImageSrc = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/jpeg;base64, ' + data.file);\n                            this.documentImageName = data.filename;\n                            this.documentImageWidth = data.width;\n                            this.imageDocument = $('#document_src');\n                            setTimeout(() => {\n                                this.ratio = this.documentImageWidth / this.imageDocument.width();\n                            }, 500);\n                            this.documentImageNbPages = data['nb_pages'];\n                            this.fileControl.setValue([]);\n                            this.ocr({\n                                'target' : {\n                                    'id': ''\n                                }\n                            }, true, '', false);\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }\n        }\n    }\n\n    deleteImage() {\n        this.documentImageSrc = '';\n        this.imageDocument = undefined;\n        this.positionsMask.positions = {};\n        this.positionsMask.pages = {};\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                element.value = '';\n                const input = $('.input_' + element.id);\n                const background = $('.background_' + element.id);\n                const outline = $('.outline_' + element.id);\n                input.remove();\n                background.remove();\n                outline.remove();\n            });\n        }\n        const imageContainer = $('.image-container');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId,\n            {'args': {'filename': '', 'positions': '{}', 'pages': '{}'}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/verifier/positions-mask');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    ocr(event: any, enable: boolean, color = 'green', removeClass = true) {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        const lastLabel = $('#label_' + this.lastId);\n        this.lastLabel = lastLabel.length !== 0 ? lastLabel[0].innerText : '';\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        deleteArea.addClass('pointer-events-auto');\n        backgroundArea.addClass('pointer-events-auto');\n        resizeArea.addClass('pointer-events-auto');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable && this.imageDocument) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            if (removeClass) {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageDocument.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageDocument.width(), this.imageDocument.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        _this.ocr_process(img, cpt, selection);\n                    }\n                },\n                onDeleted(img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    _this.deletePosition(inputId);\n                    _this.deletePage(inputId);\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (page === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n            }\n\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n\n            if (this.imageDocument && !this.launchOnInit) {\n                const _selection = this.getSelectionByCpt(selection, cpt);\n                this.savePosition(_selection);\n                this.savePage(this.currentPage);\n            }\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt) {\n                return selection[index];\n            }\n        }\n    }\n\n    getPage(fieldId: any) {\n        let page: number = this.currentPage;\n        if (this.positionsMask.pages) {\n            Object.keys(this.positionsMask.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.positionsMask.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    checkIfObjectIsEqual(object1: any, object2: any) {\n        if (!object1 || !object2) {\n            return false;\n        }\n\n        const aProps = Object.getOwnPropertyNames(object1);\n        const bProps = Object.getOwnPropertyNames(object2);\n\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (let i = 0; i < aProps.length; i++) {\n            const propName = aProps[i];\n            if (object1[propName] !== object2[propName]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    savePosition(position: any) {\n        position = {\n            height: position.height * this.ratio,\n            width: position.width * this.ratio,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio\n        };\n        if (!this.checkIfObjectIsEqual(position, this.positionsMask.positions[this.lastId])) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePositions/' + this.positionMaskId,\n                {'args': {[this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.positions[this.lastId] = position;\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    savePage(page: any) {\n        if (page !== this.positionsMask.pages[this.lastId]) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePages/' + this.positionMaskId,\n                {'args': {[this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.pages[this.lastId] = page;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePosition(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePosition',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.positions[this.lastId] = '';\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePage(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePage',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.pages[this.lastId] = '';\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async nextPage() {\n        if (this.currentPage < this.documentImageNbPages) {\n            this.currentPage = this.currentPage + 1;\n            await this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            await this.changeImage(1, this.documentImageNbPages);\n        }\n    }\n\n    async previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            await this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            await this.changeImage(this.documentImageNbPages, this.currentPage);\n        }\n    }\n\n    async changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.documentImageName.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n\n            const newFilename = this.documentImageName.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.documentImageName = newFilename;\n            const thumbB64: any = await this.getThumb(newFilename);\n            this.documentImageSrc = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/jpeg;base64, ' + thumbB64.file);\n            this.currentPage = pageToShow;\n            for (const parentCpt in this.availableFieldsParent) {\n                for (const cpt in this.availableFieldsParent[parentCpt]['values']) {\n                    const field = this.availableFieldsParent[parentCpt]['values'][cpt];\n                    const position = this.positionsMask.positions[field.id];\n                    const page = this.positionsMask.pages[field.id];\n                    if (position) {\n                        const input = $('.input_' + field.id);\n                        const background = $('.background_' + field.id);\n                        const outline = $('.outline_' + field.id);\n                        input.remove();\n                        background.remove();\n                        outline.remove();\n                        if (page === this.currentPage) {\n                            this.drawPositionByField(field, position);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    async getThumb(filename:string) {\n        return await this.http.post(environment['url'] + '/ws/verifier/getThumb', {\n            'args': {\n                'type': 'positions_masks',\n                'filename': filename\n            }\n        }, {headers: this.authService.headers}).toPromise();\n    }\n\n    async filterSupplier(value: any) {\n        if (value.length < 3) {\n            return;\n        }\n        this.toHighlight = value;\n        this.suppliers = await this.retrieveSuppliers(value);\n        this.suppliers = this.suppliers.suppliers;\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-auto h-full-overflow\">\n            <div class=\"flex justify-center items-center mt-5\">\n                <button (click)=\"updatePositionsMask()\" mat-button class=\"valid_button\">\n                    <span class=\"block\">{{ \"POSITIONS-MASKS.modify\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\" ngModel (ngModelChange)=\"filterSupplier($event)\"\n                           [formControl]=\"this.form['supplier_id']['control']\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of this.suppliers\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                            <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">\n                                {{ option['vat_number'] }}\n                            </span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>\n                        {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                    </mat-label>\n                    <mat-select [formControl]=\"this.form['form_id'].control\" [required]=\"true\">\n                        <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <span class=\"cursor-pointer text-sm col-span-3 flex justify-center m-auto w-1/6 -mt-8\"\n                      *ngIf=\"documentImageSrc\" (click)=\"deleteImage()\">\n                    {{ 'POSITIONS-MASKS.reset_image' | translate }}\n                </span>\n            </div>\n            <div id=\"document_image\">\n                <div class=\"relative ml-4 z-50 text-xl text-left py-2\">\n                    <ng-container *ngIf=\"!this.loading && this.documentImageSrc && this.documentImageNbPages > 1\">\n                        <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n                        {{ 'VERIFIER.page' | translate }}\n                        {{ this.currentPage }}\n                        {{ 'VERIFIER.on' | translate }}\n                        {{ this.documentImageNbPages }}\n                        <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n                    </ng-container>\n                </div>\n                <div *ngIf=\"!documentImageSrc\">\n                    <ngx-file-drag-drop\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            [multiple]=\"false\"\n                            [accept]=\"'pdf'\"\n                            [displayFileSize]=\"true\"\n                            [emptyPlaceholder]=\"'POSITIONS-MASKS.placeholder' | translate\"\n                            [class]=\"'max-w-3xl h-56 mt-10 mb-10'\"\n                            (valueChanged)=\"checkFile($event)\">\n                    </ngx-file-drag-drop>\n                </div>\n                <div class=\"image-container px-4\" [class.hidden]=\"!this.imageDocument\">\n                    <img id=\"document_src\" [src]=\"documentImageSrc\" alt=\"Open-Capture Verifier src\">\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group class=\"h-full-overflow\" *ngIf=\"!loadingFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div class=\"min-w-full overflow-x-hidden\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div class=\"flex flex-row items-center justify-between m-5\">\n                            <ng-container>\n                                <div class=\"relative -top-3\" [id]=\"'label_' + field.id\">\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-6/12\">\n                                    <mat-label>{{ 'POSITIONS-MASKS.regex_associated' | translate }}</mat-label>\n                                    <input [id]='field.id' (focusin)=\"ocr($event, true, field.color)\"\n                                           (click)=\"this.ocrFromUser = true;\" [(ngModel)]=\"field.regex\"\n                                           (focusout)=\"ocr($event, false)\" matInput type=\"text\">\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n  selector: 'app-status-update',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.scss']\n})\nexport class VerifierStatusUpdateComponent implements OnInit {\n  loading           : boolean     = false;\n  identifierControl : FormControl = new FormControl<any>('');\n  statusControl     : FormControl = new FormControl<any>('');\n  identifiers       : number[]    = [];\n  status            : any[]       = [];\n\n  constructor(\n      public router: Router,\n      public userService: UserService,\n      public translate: TranslateService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService,\n      private http: HttpClient,\n      private authService: AuthService,\n      private notify:NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.serviceSettings.init();\n    this.http.get(environment['url'] + '/ws/status/verifier/list', {headers: this.authService.headers}).pipe(\n        tap((data: any) => {\n          this.status = data.status;\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.handleErrors(err);\n          return of(false);\n        })\n    ).subscribe();\n  }\n\n  addIdentifier() {\n    if (this.identifierControl.value && this.identifiers.indexOf(this.identifierControl.value) === -1) {\n      this.identifiers.push(this.identifierControl.value);\n    }\n    this.identifierControl.setValue('');\n  }\n\n  removeIdentifier(identifier: number) {\n    this.identifiers = this.identifiers.filter((id) => id !== identifier);\n  }\n\n  updateStatus() {\n    const data = {'ids': this.identifiers, 'status': this.statusControl.value};\n    this.http.put(environment['url'] + '/ws/verifier/status', data,\n        {headers: this.authService.headers}).pipe(\n        tap(() => {\n          this.identifiers = [];\n          this.notify.success(this.translate.instant('STATUS.UPDATE_SUCCESS'));\n        }),\n        catchError((err: any) => {\n          console.debug(err);\n          this.notify.error(err.error.message);\n          return of(false);\n        })\n    ).subscribe();\n  }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <mat-card class=\"w-5/6 mt-6 mx-auto\">\n            <mat-card-header>\n                <mat-card-title class=\"text-base\">{{ 'SPLITTER.change_by_identifier' | translate }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"h-56 mx-6\">\n                <div class=\"flex justify-center gap-4\">\n                    <mat-form-field class=\"mt-4 w-3/12\" appearance=\"outline\">\n                        <mat-label>{{ 'STATUS.update_status_to' | translate }}</mat-label>\n                        <mat-select [formControl]=\"statusControl\" [disabled]=\"this.loading\">\n                            <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                {{ option['label'] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"w-3/12 mt-4\" appearance=\"outline\">\n                        <mat-label>{{ 'SPLITTER.batch_identifier' | translate }}</mat-label>\n                        <input type=\"number\" matInput [formControl]=\"identifierControl\">\n                    </mat-form-field>\n                    <button mat-button class=\"rounded border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 mt-4\"\n                            (click)=\"addIdentifier()\" [matTooltip]=\"'STATUS.add_identifier' | translate\" style=\"padding: 1.65rem !important\">\n                        <i class=\"fa-solid fa-plus text-lg\"></i>\n                    </button>\n                </div>\n                <div class=\"h-12 w-full border-solid border-2 border-gray-100 rounded bg-slate-50\">\n                <span *ngIf=\"identifiers.length === 0\" class=\"mt-4 block text-center text-gray-400\">\n                    {{ 'STATUS.no_identifier_added' | translate }}\n                </span>\n                <span *ngFor=\"let identifier of identifiers\">\n                    <mat-chip class=\"m-1\" color=\"primary\" selected=\"true\">\n                        <span class=\"font-medium\">{{ identifier }}</span>\n                        <i class=\"ml-2 fa-solid fa-xmark fa-lg cursor-pointer text-white hover:text-green-400\" (click)=\"removeIdentifier(identifier)\"></i>\n                    </mat-chip>\n                </span>\n                </div>\n                <div class=\"flex justify-center items-center mt-4\">\n                    <button (click)=\"updateStatus()\" mat-button\n                            class=\"p-6 border-solid border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                            [ngClass]=\"(identifiers.length === 0 || !statusControl.value) ? 'border-gray-400 bg-gray-400' : 'bg-green-400 border-green-400'\"\n                            [disabled]=\"(identifiers.length === 0 || !statusControl.value)\">\n                        <span class=\"block\">{{ \"STATUS.update\" | translate }}</span>\n                    </button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-various-settings-list',\n    templateUrl: './various-settings.component.html',\n    styleUrls: ['./various-settings.component.scss']\n})\nexport class VariousSettingsVerifierComponent implements OnInit {\n    loading                     : boolean       = true;\n    loadingCustomFields         : boolean       = true;\n    formLoaded                  : boolean       = false;\n    formLoadedUnique            : boolean       = false;\n    forms                       : any           = [];\n    availableFieldsTmp          : any           = [];\n    currentForm                 : any           = {};\n    formInput                   : any           = {\n        control: new FormControl(),\n        values:[]\n    };\n    changeFormControl           : FormControl   = new FormControl(true);\n    createSupplierControl       : FormControl   = new FormControl(true);\n    updateSupplierControl       : FormControl   = new FormControl(true);\n    validateDocumentControl     : FormControl   = new FormControl(true);\n    refuseDocumentControl       : FormControl   = new FormControl(true);\n    uniqueURlExpirationControl  : FormControl   = new FormControl(7);\n    allowSupplierAutoControl    : FormControl   = new FormControl(true);\n    availableFields             : any           = [\n        {\n            'id': 'document_id',\n            'label': marker('VERIFIER.document_id')\n        },\n        {\n            'id': 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            'id': 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            'id': 'document_date',\n            'label': 'FACTURATION.document_date'\n        },\n        {\n            'id': 'date',\n            'label': 'VERIFIER.register_date'\n        },\n        {\n            'id': 'bic',\n            'label': 'ACCOUNTS.bic'\n        },\n        {\n            'id': 'vat_number',\n            'label': 'ACCOUNTS.vat_number'\n        },\n        {\n            'id': 'rccm',\n            'label': 'ACCOUNTS.rccm'\n        },\n        {\n            'id': 'duns',\n            'label': 'ACCOUNTS.duns'\n        },\n        {\n            'id': 'firstname',\n            'label': 'FACTURATION.firstname'\n        },\n        {\n            'id': 'lastname',\n            'label': 'FACTURATION.lastname'\n        },\n        {\n            'id': 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        },\n        {\n            'id': 'form_label',\n            'label': 'ACCOUNTS.form'\n        },\n        {\n            'id': 'original_filename',\n            'label': marker('VERIFIER.original_file')\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: any) => {\n                    this.availableFields.push({\n                        'id': 'custom_' + field.id,\n                        'label': field.label\n                    });\n                });\n                this.availableFields.forEach((element: any) => {\n                    this.availableFieldsTmp.push(element);\n                });\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.formInput.values = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadUniqueUrl(event: any) {\n        this.loading = true;\n        const form_id = event.value;\n        this.forms.forEach((element: any) => {\n            if (element.id === form_id) {\n                this.formLoadedUnique = true;\n                this.currentForm = element;\n\n                if (this.currentForm.settings.unique_url) {\n                    this.uniqueURlExpirationControl.setValue(this.currentForm.settings.unique_url.expiration);\n                    this.changeFormControl.setValue(this.currentForm.settings.unique_url.change_form);\n                    this.refuseDocumentControl.setValue(this.currentForm.settings.unique_url.refuse_document);\n                    this.validateDocumentControl.setValue(this.currentForm.settings.unique_url.validate_document);\n                    this.createSupplierControl.setValue(this.currentForm.settings.unique_url.create_supplier);\n                    this.updateSupplierControl.setValue(this.currentForm.settings.unique_url.update_supplier);\n                    this.allowSupplierAutoControl.setValue(this.currentForm.settings.unique_url.allow_supplier_autocomplete);\n                } else {\n                    this.uniqueURlExpirationControl.setValue(7);\n                    this.changeFormControl.setValue(true);\n                    this.refuseDocumentControl.setValue(true);\n                    this.validateDocumentControl.setValue(true);\n                    this.createSupplierControl.setValue(true);\n                    this.updateSupplierControl.setValue(true);\n                    this.allowSupplierAutoControl.setValue(true);\n                }\n            }\n        });\n        this.loading = false;\n    }\n\n    resetSelectedForm() {\n        this.currentForm = {};\n        this.formLoaded = false;\n        this.formLoadedUnique = false;\n        this.formInput.control.setValue('');\n    }\n\n    loadDisplay(event: any) {\n        this.loading = true;\n        this.availableFieldsTmp = [];\n        this.availableFields.forEach((element: any) => {\n            this.availableFieldsTmp.push(element);\n        });\n        const form_id = event.value;\n        this.forms.forEach((element: any) => {\n            if (element.id === form_id) {\n                this.formLoaded = true;\n                this.currentForm = element;\n                if (this.currentForm.settings.display) {\n                   this.currentForm.settings.display.subtitles.forEach((subtitle: any) => {\n                        this.availableFieldsTmp.forEach((item: any, index: number, object: any) => {\n                            if (subtitle.id === item.id) {\n                                object.splice(index, 1);\n                            }\n                        });\n                    });\n                }\n            }\n        });\n        this.loading = false;\n    }\n\n    updateLabel(event: any, subtitle: any) {\n        subtitle['label'] = event.target.value;\n        subtitle['updateMode'] = false;\n    }\n\n    updateUniqueUrl() {\n        this.loading = true;\n        this.currentForm.settings.unique_url  = {\n            change_form: this.changeFormControl.value,\n            refuse_document: this.refuseDocumentControl.value,\n            create_supplier: this.createSupplierControl.value,\n            update_supplier: this.updateSupplierControl.value,\n            expiration: this.uniqueURlExpirationControl.value,\n            validate_document: this.validateDocumentControl.value,\n            allow_supplier_autocomplete: this.allowSupplierAutoControl.value\n        };\n\n        this.http.put(environment['url'] + '/ws/forms/updateUniqueUrl/' + this.currentForm.id, {\n                'args': this.currentForm.settings.unique_url\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('FORMS.unique_url_updated_success'));\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDisplay() {\n        this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            delete element['updateMode'];\n        });\n\n        this.http.put(environment['url'] + '/ws/forms/updateDisplay/' + this.currentForm.id, {\n                'args': this.currentForm.settings.display\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('FORMS.display_updated_success'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLine(id: any, cpt: number) {\n       this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            if (id === element.id) {\n               this.currentForm.settings.display.subtitles.splice(cpt, 1);\n                this.loadDisplay({value: this.currentForm.id});\n            }\n        });\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex,\n            );\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\" *ngIf=\"availableFieldsTabGroup.selectedIndex == 0\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto h-full-overflow\">\n            <mat-tab-group (selectedTabChange)=\"availableFieldsTabGroup.selectedIndex == 0 ? sidenav2.open() : sidenav2.close(); resetSelectedForm()\" #availableFieldsTabGroup>\n                <mat-tab [label]=\"'FORMS.batch_display' | translate\">\n                    <app-hint [message]=\"'FORMS.display_hint' | translate\"></app-hint>\n                    <div class=\"w-1/3 m-auto mt-4\">\n                        <mat-form-field class=\"block\">\n                            <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n                            <mat-select [formControl]=\"this.formInput.control\" (selectionChange)=\"loadDisplay($event)\">\n                                <mat-option *ngFor=\"let option of this.formInput.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"this.formLoaded\" class=\"m-auto w-1/2 xl:w-1/3\">\n                        <mat-card class=\"p-0 mb-0\">\n                            <label class=\"p-5 absolute\">\n                                <input [disabled]=\"true\" class=\"w-5 h-5 checkBox_list\" type=\"checkbox\">\n                            </label>\n                            <div class=\"absolute right-0 pt-4 pr-5\">\n                                <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                            </div>\n                            <div class=\"h-60 bg-gradient-to-br from-green-400 to-gray-600\"></div>\n                            <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-4 pr-4\">\n                                <mat-card-title class=\"break-all\">\n                                    <span class=\"leading-5 text-lg\">\n                                        {{ 'ACCOUNTS.supplier_name' | translate }}\n                                    </span>\n                                    <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\">\n                                        0 <i class=\"far fa-file-alt ml-1\"></i>\n                                    </span>\n                                </mat-card-title>\n                                <mat-card-subtitle class=\"subtitles mt-2 mb-2\">\n                                    <div cdkDropList (cdkDropListDropped)=\"drop($event)\"\n                                         [cdkDropListData]=\"this.currentForm.settings.display['subtitles']\">\n                                        <div cdkDrag class=\"cursor-move mt-1 flex align-center items-center\"\n                                             *ngFor=\"let subtitle of this.currentForm.settings.display['subtitles']; let cpt = index\">\n                                            <strong *ngIf=\"!subtitle['updateMode']\">{{ subtitle['label'] | translate }}</strong>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"subtitle['updateMode']\">\n                                                <input matInput [value]=\"subtitle['label'] | translate\" class=\"relative -top-2.5\"\n                                                       (focusout)=\"updateLabel($event, subtitle)\">\n                                            </mat-form-field>\n                                            &nbsp;:\n                                            <span class=\"ml-2 w-4/12 h-3 bg-gradient-to-br from-green-400 to-gray-600\"></span>\n                                            <i class=\"fa-solid fa-edit text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                               (click)=\"subtitle['updateMode'] = true\" *ngIf=\"!subtitle['updateMode']\"></i>\n                                            <i class=\"fa-solid fa-check text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                               *ngIf=\"subtitle['updateMode']\"></i>\n                                            <i class=\"fa-solid fa-trash text-red-500 cursor-pointer absolute right-2 mt-1\"\n                                               (click)=\"removeLine(subtitle['id'], cpt)\"></i>\n                                        </div>\n                                    </div>\n                                </mat-card-subtitle>\n                            </mat-card-header>\n                        </mat-card>\n                    </div>\n                    <div class=\"flex justify-center items-center mt-4\" *ngIf=\"this.formLoaded\">\n                        <button mat-button class=\"valid_button\" (click)=\"this.updateDisplay()\">\n                            <span class=\"block\">{{ \"FORMS.modify_display\" | translate }}</span>\n                        </button>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'FORMS.unique_url' | translate\">\n                    <app-hint [message]=\"'FORMS.unique_url_hint' | translate\"></app-hint>\n                    <div class=\"w-1/3 m-auto mt-4\">\n                        <mat-form-field class=\"block\">\n                            <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n                            <mat-select [formControl]=\"this.formInput.control\" (selectionChange)=\"loadUniqueUrl($event)\">\n                                <mat-option *ngFor=\"let option of this.formInput.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"this.formLoadedUnique\" class=\"m-auto text-center mt-8 w-1/2 xl:w-1/3 grid grid-rows-1 gap-8\">\n                        <mat-form-field class=\"m-auto w-1/2 -mb-4\">\n                            <mat-label>{{ 'FORMS.link_expiration_in_days' | translate }}</mat-label>\n                            <input matInput type=\"number\" [formControl]=\"this.uniqueURlExpirationControl\">\n                        </mat-form-field>\n                        <mat-slide-toggle [formControl]=\"this.createSupplierControl\">\n                            {{ 'FORMS.create_supplier_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.updateSupplierControl\">\n                            {{ 'FORMS.update_supplier_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.refuseDocumentControl\">\n                            {{ 'FORMS.refuse_document_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.allowSupplierAutoControl\">\n                            {{ 'FORMS.supplier_autocomplete_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.validateDocumentControl\">\n                            {{ 'FORMS.validate_document_enabled' | translate }}\n                        </mat-slide-toggle>\n                        <mat-slide-toggle [formControl]=\"this.changeFormControl\">\n                            {{ 'FORMS.change_form_enabled' | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                    <div class=\"flex justify-center items-center mt-8\" *ngIf=\"this.formLoadedUnique\" (click)=\"this.updateUniqueUrl()\">\n                        <button mat-button class=\"valid_button\">\n                            <span class=\"block\">{{ \"FORMS.modify_unique_url\" | translate }}</span>\n                        </button>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" [opened]=\"true\" position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto h-full-overflow\"\n             cdkDropList [cdkDropListData]=\"this.availableFieldsTmp\" (cdkDropListDropped)=\"drop($event)\"\n             [cdkDropListDisabled]=\"!this.formLoaded\">\n            <div *ngFor=\"let field of this.availableFieldsTmp; let cpt = index\"\n                 class=\"my-8 ml-2 text-base\" cdkDrag>\n                <span class=\"cursor-move\">\n                    {{ field.label | translate }}\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../../../../env\";\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { CodeEditorComponent } from \"../../../../../services/code-editor/code-editor.component\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport {ConfigService} from \"../../../../../services/config.service\";\n\n@Component({\n    selector: 'app-workflow-builder',\n    templateUrl: './workflow-builder.component.html',\n    styleUrls: ['./workflow-builder.component.scss'],\n    providers: [{\n        provide: STEPPER_GLOBAL_OPTIONS,\n        useValue: {\n            displayDefaultIndicatorType: false\n        }\n    }]\n})\n\nexport class WorkflowBuilderComponent implements OnInit {\n    workflowId       : any;\n    form_outputs     : any           = [];\n    workflow_outputs : any           = [];\n    loading          : boolean       = true;\n    creationMode     : boolean       = true;\n    outputAllowed    : boolean       = true;\n    processAllowed   : boolean       = true;\n    useInterface     : boolean       = false;\n    allowWFScripting : boolean       = false;\n    inputFolderOk    : boolean       = false;\n    separationMode   : string        = 'no_sep';\n    stepValid        : any           = {\n        input: false,\n        process: false,\n        output: false\n    };\n    oldFolder        : string        = '';\n    idControl        : FormControl   = new FormControl('', Validators.required);\n    nameControl      : FormControl   = new FormControl('', Validators.required);\n    fields           : any           = {\n        input : [\n            {\n                id: 'input_folder',\n                show: true,\n                label: this.translate.instant('WORKFLOW.input_folder'),\n                type: 'text',\n                control: new FormControl(),\n                placeholder: \"/var/share/\" + environment['customId'] + \"/input\",\n                required: true\n            },\n            {\n                id: 'customer_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.associated_customer'),\n                type: 'select',\n                control: new FormControl(),\n                required: false\n            },\n            {\n                id: 'ai_model_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.ai_model_id'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                hint: this.translate.instant('WORKFLOW.ai_model_id_hint')\n            },\n            {\n                id: 'apply_process',\n                show: true,\n                label: this.translate.instant('WORKFLOW.apply_process'),\n                type: 'boolean',\n                control: new FormControl(true)\n            },\n            {\n                id: 'facturx_only',\n                show: true,\n                label: this.translate.instant('WORKFLOW.facturx_only'),\n                hint: this.translate.instant('WORKFLOW.facturx_only_hint'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                id: 'splitter_method_id',\n                show: true,\n                label: this.translate.instant('WORKFLOW.splitter_method'),\n                type: 'select',\n                control: new FormControl('no_sep'),\n                required: true,\n                values: [\n                    {\n                        'id': 'no_sep',\n                        'label': this.translate.instant('WORKFLOW.no_separation')\n                    },\n                    {\n                        'id': 'qr_code_OC',\n                        'label': this.translate.instant('WORKFLOW.qr_code_separation')\n                    },\n                    {\n                        'id': 'c128_OC',\n                        'label': this.translate.instant('WORKFLOW.c128_separation')\n                    },\n                    {\n                        'id': 'separate_by_document_number',\n                        'label': this.translate.instant('WORKFLOW.separate_by_document_number')\n                    }\n                ]\n            },\n            {\n                id: 'separate_by_document_number_value',\n                show: false,\n                label: this.translate.instant('WORKFLOW.separate_by_document_number_value'),\n                type: 'number',\n                control: new FormControl(2),\n                required: false\n            },\n            {\n                id: 'rotation',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.rotation'),\n                type: 'select',\n                control: new FormControl('no_rotation'),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'no_rotation',\n                        'label': this.translate.instant('WORKFLOW.no_rotation')\n                    },\n                    {\n                        'id': 90,\n                        'label': this.translate.instant('WORKFLOW.rotate_90')\n                    },\n                    {\n                        'id': 180,\n                        'label': this.translate.instant('WORKFLOW.rotate_180')\n                    },\n                    {\n                        'id': 270,\n                        'label': this.translate.instant('WORKFLOW.rotate_270')\n                    }\n                ]\n            },\n            {\n                id: 'remove_blank_pages',\n                label: this.translate.instant('WORKFLOW.remove_blank_pages'),\n                type: 'boolean',\n                control: new FormControl()\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ],\n        process: [\n            {\n                id: 'use_interface',\n                label: this.translate.instant('WORKFLOW.use_interface'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'allow_automatic_validation',\n                label: this.translate.instant('WORKFLOW.allow_automatic_validation'),\n                hint: this.translate.instant('WORKFLOW.allow_automatic_validation_hint'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'override_supplier_form',\n                label: this.translate.instant('WORKFLOW.override_supplier_form'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'api_only',\n                label: this.translate.instant('WORKFLOW.api_only'),\n                hint: this.translate.instant('WORKFLOW.api_only_hint'),\n                type: 'boolean',\n                show: false,\n                control: new FormControl()\n            },\n            {\n                id: 'delete_documents',\n                label: this.translate.instant('WORKFLOW.delete_documents'),\n                hint: this.translate.instant('WORKFLOW.delete_documents_hint'),\n                type: 'boolean',\n                show: true,\n                control: new FormControl()\n            },\n            {\n                id: 'form_id',\n                multiple: false,\n                label: this.translate.instant('POSITIONS-MASKS.form_associated'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: false,\n                values: []\n            },\n            {\n                id: 'system_fields',\n                multiple: true,\n                label: this.translate.instant('WORKFLOW.system_fields_to_search'),\n                type: 'select',\n                control: new FormControl(['name', 'invoice_number', 'quotation_number', 'document_date', 'document_due_date', 'footer']),\n                required: false,\n                show: true,\n                values: [\n                    {\n                        'id': 'name',\n                        'label': this.translate.instant('FORMS.supplier')\n                    },\n                    {\n                        'id': 'invoice_number',\n                        'label': this.translate.instant('FACTURATION.invoice_number')\n                    },\n                    {\n                        'id': 'quotation_number',\n                        'label': this.translate.instant('FACTURATION.quotation_number')\n                    },\n                    {\n                        'id': 'delivery_number',\n                        'label': this.translate.instant('FACTURATION.delivery_number')\n                    },\n                    {\n                        'id': 'document_date',\n                        'label': this.translate.instant('FACTURATION.document_date')\n                    },\n                    {\n                        'id': 'document_due_date',\n                        'label': this.translate.instant('FACTURATION.document_due_date')\n                    },\n                    {\n                        'id': 'firstname_lastname',\n                        'label': this.translate.instant('FACTURATION.firstname_lastname')\n                    },\n                    {\n                        'id': 'footer',\n                        'label': this.translate.instant('WORKFLOW.footer')\n                    }\n                ]\n            },\n            {\n                id: 'custom_fields',\n                multiple: true,\n                label: this.translate.instant('WORKFLOW.custom_fields_to_search'),\n                type: 'select',\n                control: new FormControl(),\n                required: false,\n                show: true\n            },\n            {\n                id: 'tesseract_function',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.tesseract_function'),\n                hint: this.translate.instant('WORKFLOW.tesseract_function_hint'),\n                type: 'select',\n                control: new FormControl('line_box_builder'),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'line_box_builder',\n                        'label': this.translate.instant('WORKFLOW.line_box_builder')\n                    },\n                    {\n                        'id': 'text_builder',\n                        'label': this.translate.instant('WORKFLOW.text_builder')\n                    }\n                ]\n            },\n            {\n                id: 'convert_function',\n                multiple: false,\n                label: this.translate.instant('WORKFLOW.convert_function'),\n                hint: this.translate.instant('WORKFLOW.convert_function_hint'),\n                type: 'select',\n                control: new FormControl('pdf2image'),\n                required: true,\n                show: true,\n                values: [\n                    {\n                        'id': 'pdf2image',\n                        'label': 'pdf2image'\n                    },\n                    {\n                        'id': 'imagemagick',\n                        'label': 'ImageMagick'\n                    }\n                ]\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ],\n        output: [\n            {\n                id: 'outputs_id',\n                label: this.translate.instant('WORKFLOW.choose_output'),\n                type: 'select',\n                multiple: true,\n                control: new FormControl(['']),\n                required: true\n            },\n            {\n                'id': 'script',\n                'required': false,\n                'control': new FormControl(),\n                'show': false\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        const config = this.configService.getConfig()[0];\n        this.allowWFScripting = config['GLOBAL']['allowwfscripting'];\n        this.allowWFScripting = this.allowWFScripting.toString().toLowerCase() === 'true';\n\n        this.workflowId = this.route.snapshot.params['id'];\n        if (this.workflowId) {\n            this.creationMode = false;\n            this.http.get(environment['url'] + '/ws/workflows/verifier/getById/' + this.workflowId, {headers: this.authService.headers}).pipe(\n                tap((workflow: any) => {\n                    this.idControl.setValue(workflow.workflow_id);\n                    this.nameControl.setValue(workflow.label);\n                    Object.keys(this.fields).forEach((parent: any) => {\n                        this.fields[parent].forEach((field: any) => {\n                            let value = workflow[parent][field.id];\n                            if (parseInt(value) && !Array.isArray(value)) {\n                                value = parseInt(value);\n                            }\n                            if (value === 'true' || value === 'false' ) {\n                                value = value === 'true';\n                            }\n                            if (field.id === 'splitter_method_id') {\n                                this.setSeparationMode(value);\n                            }\n                            if (field.id === 'use_interface') {\n                                this.setUseInterface(value);\n                            }\n                            if (field.id === 'input_folder') {\n                                this.oldFolder = value;\n                            }\n                            if (field.id === 'outputs_id') {\n                                this.workflow_outputs = value;\n                            }\n                            field.control.setValue(value);\n\n                            if (field.id === 'input_folder') {\n                                this.checkFolder(field, true, true);\n                            }\n                        });\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.name;\n                        });\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/ai/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((aiModel: any) => {\n                this.fields['input'].forEach((element: any) => {\n                    if (element.id === 'ai_model_id') {\n                        element.values = aiModel.models;\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.model_label;\n                        });\n                        element.values = [{'id': 0, 'label': this.translate.instant('WORKFLOW.no_ai_model_associated')}].concat(element.values);\n                        if (element.values.length === 1) {\n                            element.control.setValue(element.values[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['process'].forEach((element: any) => {\n                    data.forms.forEach((form: any) => {\n                        if (this.form_outputs.filter((f: any) => f.form_id === form.id).length === 0) {\n                            this.form_outputs.push({\n                                'form_id': form.id,\n                                'outputs': form.outputs.map(Number)\n                            });\n                        }\n                    });\n                    if (element.id === 'form_id') {\n                        element.values = data.forms;\n                        if (data.forms.length === 1) {\n                            element.control.setValue(data.forms[0].id);\n                        }\n                    }\n                });\n                if (this.useInterface) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'form_id' && element.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === element.control.value) {\n                                    this.fields['output'].forEach((_element: any) => {\n                                        if (_element.id === 'outputs_id') {\n                                            _element.control.setValue(form.outputs.map(Number));\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/outputs/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.fields['output'].forEach((element: any) => {\n                    if (element.id === 'outputs_id') {\n                        element.values = data.outputs;\n                        element.values.unshift({\n                            \"id\": 0,\n                            \"output_label\": this.translate.instant(\"WORKFLOW.no_output\"),\n                            \"output_type_id\": \"no_output\"\n                        });\n                        element.values.forEach((elem: any) => {\n                            elem.label = elem.output_label;\n                        });\n                        if (data.outputs.length === 1) {\n                            element.control.setValue(data.outputs[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data['customFields']) {\n                    this.fields['process'].forEach((element: any) => {\n                        if (element.id === 'custom_fields') {\n                            element.values = data['customFields'];\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.fields['input'].forEach((element: any) => {\n            if (element.id === 'apply_process') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.processAllowed = value;\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'use_interface') {\n                            if (value === false) {\n                                this.outputAllowed = true;\n                            }\n                            if (value && elem.control.value) {\n                                this.outputAllowed = false;\n                            }\n                        }\n\n                        if (!this.processAllowed) {\n                            elem.control.disable();\n                        } else {\n                            elem.control.enable();\n                        }\n                    });\n                });\n            }\n            if (element.id === 'facturx_only') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    this.fields['input'].forEach((elem: any) => {\n                        if (elem.id === 'ai_model_id') {\n                            elem.show = !value;\n                        }\n                    });\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'system_fields') {\n                            if (value) {\n                                elem.values.push({'id': 'facturx', 'label': 'Lignes de détails Factur-X'});\n                                elem.control.value.push('facturx');\n                            } else {\n                                elem.values = elem.values.filter((elem: any) => elem.id !== 'facturx');\n                                elem.control.value = elem.control.value.filter((elem: any) => elem !== 'facturx');\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    openCodeEditor(step: string) {\n        let codeContent = '';\n        this.fields[step].forEach((element: any) => {\n            if (element.id === 'script' && element.control.value) {\n                codeContent = element.control.value;\n            }\n        });\n\n        const dialogRef = this.dialog.open(CodeEditorComponent, {\n            data: {\n                testScriptButton    : this.translate.instant('WORKFLOW.test_script'),\n                confirmButton       : this.translate.instant('WORKFLOW.save_script'),\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                step                : step,\n                input_folder        : this.fields['input'].find((element: any) => element.id === 'input_folder').control.value,\n                codeContent         : codeContent\n            },\n            width: \"80vw\",\n            height: \"calc(100vh - 5rem)\",\n            disableClose: true\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== false) {\n                this.fields[step].push({\n                    'show': false,\n                    'id': 'script',\n                    'required': false,\n                    'control': new FormControl(result, Validators.required)\n                });\n\n                if (!this.creationMode) {\n                    this.updateWorkflow(step);\n                }\n            }\n        });\n    }\n\n    setSeparationMode(value: any) {\n        this.separationMode = value;\n        this.fields['input'].forEach((element: any) => {\n            if (element.id === 'separate_by_document_number_value') {\n                element.show = value === 'separate_by_document_number';\n            }\n        });\n    }\n\n    setUsedOutputs() {\n        if (this.useInterface) {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    this.fields['process'].forEach((elem: any) => {\n                        if (elem.id === 'form_id' && elem.control.value) {\n                            this.form_outputs.forEach((form: any) => {\n                                if (form.form_id === elem.control.value) {\n                                    element.control.setValue(form.outputs);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        else {\n            this.fields['output'].forEach((element: any) => {\n                if (element.id === 'outputs_id') {\n                    element.control.setValue(this.workflow_outputs);\n                }\n            });\n        }\n    }\n\n    setUseInterface(value: any) {\n        this.useInterface = value;\n        if (this.processAllowed) {\n            this.outputAllowed = !value;\n        }\n\n        this.fields['process'].forEach((element: any) => {\n            if (this.processAllowed) {\n                element.control.enable();\n            } else {\n                element.control.disable();\n            }\n\n            if (element.id === 'form_id' || element.id === 'allow_automatic_validation' || element.id === 'override_supplier_form') {\n                element.show = this.useInterface;\n                if (!this.useInterface) {\n                    element.control.disable(false);\n                }\n                if (element.type !== 'boolean') {\n                    element.required = this.useInterface;\n                }\n            }\n        });\n        this.setUsedOutputs();\n    }\n\n    checkFolder(field: any, fromUser = false, auto = false) {\n        if (fromUser || (field && field.control.value && field.control.value !== this.oldFolder)) {\n            this.http.post(environment['url'] + '/ws/workflows/verifier/verifyInputFolder',\n                {'input_folder': field.control.value}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.inputFolderOk = true;\n                    field.control.setErrors();\n                    if (!auto) {\n                        this.notify.success(this.translate.instant('WORKFLOW.input_folder_ok'));\n                    }\n                    this.oldFolder = field.control.value;\n                }),\n                catchError((err: any) => {\n                    this.inputFolderOk = false;\n                    field.control.setErrors({'folder_not_found': true});\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    isStepValid(step: any) {\n        let valid = true;\n        this.fields[step].forEach((element: any) => {\n            if ((element.required && !element.control.value) || (element.control.errors && element.id !== 'script')) {\n                valid = false;\n            }\n\n            if (element.id == 'input_folder' && !this.inputFolderOk) {\n                valid = false;\n            }\n        });\n        this.stepValid[step] = valid;\n        return valid;\n    }\n\n    updateWorkflow(step: any) {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n\n        Object.keys(this.fields).forEach((parent: any) => {\n            this.fields[parent].forEach((field: any) => {\n                workflow[parent][field.id] = field.control.value;\n            });\n        });\n\n        if (step === 'input') {\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/verifier/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/workflows/verifier/update/' + this.workflowId, {'args': workflow}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('WORKFLOW.workflow_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    createWorkflow() {\n        const workflow: any = {\n            workflow_id: this.idControl.value,\n            label: this.nameControl.value,\n            input: {},\n            process: {},\n            output: {}\n        };\n        if (this.idControl.value && this.nameControl.value) {\n            Object.keys(this.fields).forEach((parent: any) => {\n                this.fields[parent].forEach((field: any) => {\n                    workflow[parent][field.id] = field.control.value;\n                });\n            });\n\n            const data = workflow['input'];\n            data['workflow_id'] = this.idControl.value;\n            data['workflow_label'] = this.nameControl.value;\n            this.http.post(environment['url'] + '/ws/workflows/verifier/createScriptAndWatcher', {'args': data}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    delete data['workflow_id'];\n                    delete data['workflow_label'];\n                    this.http.post(environment['url'] + '/ws/workflows/verifier/create', {'args': workflow}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.router.navigate(['/settings/verifier/workflows']).then();\n                            this.notify.success(this.translate.instant('WORKFLOW.workflow_created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('WORKFLOW.workflow_id_and_name_required'));\n        }\n    }\n\n    updateOutputs(value: any) {\n        if (value) {\n            this.form_outputs.forEach((form: any) => {\n                if (form.form_id === value) {\n                    this.fields['output'].forEach((element: any) => {\n                        if (element.id === 'outputs_id') {\n                            element.control.setValue(form.outputs);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div>\n                <i *ngIf=\"!this.creationMode\" class=\"fa-solid fa-2x fa-save mr-4 cursor-pointer\"\n                   (click)=\"updateWorkflow('input')\" [matTooltip]=\"'WORKFLOW.update' | translate \"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <div class=\"my-4 w-full p-2\">\n                <span class=\"inline-block p-2 w-4/12\" [class.cursor-not-allowed]=\"!this.creationMode\">\n                    <mat-form-field class=\"w-full\" [class.pointer-events-none]=\"!this.creationMode\">\n                        <mat-label>{{ 'WORKFLOW.id' | translate }}</mat-label>\n                        <input [class.text-gray-400]=\"!this.creationMode\" matInput [formControl]=\"this.idControl\" type=\"text\" [readonly]=\"!this.creationMode\">\n                    </mat-form-field>\n                </span>\n                <mat-form-field class=\"p-2 w-8/12\">\n                    <mat-label>{{ 'WORKFLOW.label' | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.nameControl\" type=\"text\">\n                </mat-form-field>\n            </div>\n            <mat-stepper orientation=\"horizontal\" class=\"text-center\">\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.input' | translate\">\n                    <div>\n                        <div class=\"mt-2 grid grid-cols-3 gap-6\">\n                            <ng-container *ngFor=\"let field of this.fields['input']\">\n                                <div *ngIf=\"field.type === 'boolean'\">\n                                    <mat-slide-toggle [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\">\n                                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div class=\"mt-2 grid grid-cols-3 gap-6\">\n                            <ng-container *ngFor=\"let field of this.fields['input']\">\n                                <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && field.show\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\" [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                    <button mat-icon-button matSuffix *ngIf=\"field.id === 'input_folder'\"\n                                            (click)=\"checkFolder(field, true)\" [matTooltip]=\"'WORKFLOW.test_input_folder' | translate\">\n                                        <i class=\"fa-solid fa-check text-green-400\"></i>\n                                    </button>\n                                </mat-form-field>\n                                <mat-form-field *ngIf=\"field.type === 'select'\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <mat-select [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\" [disabled]=\"!field.show\"\n                                                (selectionChange)=\"field.id === 'splitter_method_id' ? setSeparationMode($event.value) : ''\">\n                                        <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                            {{ option.label | translate }}\n                                        </mat-option>\n                                    </mat-select>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <div [class.cursor-not-allowed]=\"!this.isStepValid('input')\">\n                        <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                [disabled]=\"!this.stepValid['input']\"\n                                [class.bg-gray-400]=\"!this.stepValid['input']\"\n                                [class.bg-green-400]=\"this.stepValid['input']\"\n                                (click)=\"!this.creationMode ? this.updateWorkflow('input') : ''\">\n                            {{ 'WORKFLOW.next' | translate }}\n                        </button>\n                        <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\" *ngIf=\"this.allowWFScripting\"\n                           [matTooltip]=\"'WORKFLOW.input_scripting' | translate\" (click)=\"openCodeEditor('input')\"></i>\n                    </div>\n                </mat-step>\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.process' | translate\">\n                    <div>\n                        <app-hint [specificClass]=\"'w-3/5'\" [message]=\"'WORKFLOW.process_hint' | translate\"></app-hint>\n                        <div class=\"mt-6 grid grid-cols-3 gap-6\">\n                            <ng-container *ngFor=\"let field of this.fields['process']\">\n                                <div *ngIf=\"field.type === 'boolean'\">\n                                    <mat-slide-toggle [disabled]=\"!field.show\" [formControl]=\"field['control']\" class=\"relative top-4 mb-10 col-span-2\"\n                                                      (change)=\"field.id === 'use_interface' ? setUseInterface($event.checked) : field.id === 'form_id' ? setUsedOutputs(): ''\">\n                                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-4 -right-4 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-slide-toggle>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div class=\"mt-6 grid grid-cols-3 gap-6\">\n                            <ng-container *ngFor=\"let field of this.fields['process']\">\n                                <mat-form-field *ngIf=\"field.type === 'text'\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                           [type]=\"field.type\" [placeholder]=\"field.placeholder\">\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-form-field>\n                                <mat-form-field *ngIf=\"field.type === 'select'\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <mat-select [disabled]=\"!this.processAllowed || !field.show\" [(value)]=\"field.control.value\" [required]=\"field['required']\" [multiple]=\"field.multiple\"\n                                                (selectionChange)=\"field.id === 'form_id' ? updateOutputs($event.value) : ''\">\n                                        <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                            {{ option.label | translate }}\n                                        </mat-option>\n                                    </mat-select>\n                                    <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                        <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                    </span>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <div>\n                        <button matStepperPrevious mat-button class=\"gray_button\">\n                            {{ \"WORKFLOW.back\" | translate }}\n                        </button>\n                        <span [class.cursor-not-allowed]=\"!this.isStepValid('process')\">\n                            <button matStepperNext mat-button class=\"min-w-56 p-6 border-solid border-green-400 border text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    [disabled]=\"!this.stepValid['process']\"\n                                    [class.bg-gray-400]=\"!this.stepValid['process']\"\n                                    [class.bg-green-400]=\"this.stepValid['process']\"\n                                    (click)=\"!this.creationMode ? this.updateWorkflow('process') : ''\">\n                                {{ 'WORKFLOW.next' | translate }}\n                            </button>\n                            <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\"\n                               *ngIf=\"this.processAllowed && this.allowWFScripting\"\n                               [matTooltip]=\"'WORKFLOW.process_scripting' | translate\" (click)=\"openCodeEditor('process')\"></i>\n                        </span>\n                    </div>\n                </mat-step>\n                <mat-step [aria-labelledby]=\"'disabled_step'\" [label]=\"'WORKFLOW.output' | translate\">\n                    <div class=\"mt-2 w-full\">\n                        <ng-container *ngFor=\"let field of this.fields['output']\">\n                            <mat-form-field *ngIf=\"field.type === 'select'\" class=\"w-full\">\n                                <mat-label>{{ field.label | translate }}</mat-label>\n                                <mat-select [(value)]=\"field.control.value\" [disabled]=\"this.useInterface\" [required]=\"field['required']\" [multiple]=\"field.multiple\">\n                                    <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                        {{ option.label | translate }}\n                                    </mat-option>\n                                </mat-select>\n                                <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\" [matTooltip]=\"field.hint | translate\">\n                                    <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n                    <div>\n                        <button matStepperPrevious mat-button class=\"gray_button\">\n                            {{ \"WORKFLOW.back\" | translate }}\n                        </button>\n                        <button mat-button class=\"valid_button\" (click)=\"!this.creationMode ? this.updateWorkflow('output') : this.createWorkflow()\">\n                            <span *ngIf=\"this.creationMode\">\n                                {{ 'WORKFLOW.create' | translate }}\n                            </span>\n                            <span *ngIf=\"!this.creationMode\">\n                                {{ 'WORKFLOW.update' | translate }}\n                            </span>\n                        </button>\n                        <i class=\"fa-solid fa-scroll float-right fa-3x mr-4 text-green-400 cursor-pointer\" *ngIf=\"this.allowWFScripting\"\n                           [matTooltip]=\"'WORKFLOW.output_scripting' | translate\" (click)=\"openCodeEditor('output')\"></i>\n                    </div>\n                </mat-step>\n            </mat-stepper>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { SessionStorageService } from \"../../../../../services/session-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-workflow-list',\n    templateUrl: './workflow-list.component.html',\n    styleUrls: ['./workflow-list.component.scss']\n})\nexport class WorkflowListComponent implements OnInit {\n    headers          : HttpHeaders   = this.authService.headers;\n    columnsToDisplay : string[]      = ['id', 'workflow_id', 'label', 'input_folder', 'actions'];\n    loading          : boolean       = false;\n    pageSize         : number        = 10;\n    pageIndex        : number        = 0;\n    total            : number        = 0;\n    offset           : number        = 0;\n    workflows        : any           = [];\n    allWorkflows     : any           = [];\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/workflows') || lastUrl === '/') {\n            if (this.sessionStorageService.get('workflowsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('workflowsPageIndex') as string);\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('workflowsPageIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allWorkflows = data.workflows;\n                this.loadWorkflows();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadWorkflows() {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.workflows[0]) {\n                    this.total = data.workflows[0].total;\n                } else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadWorkflows();\n                }\n                this.workflows = data.workflows;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('workflowsPageIndex', event.pageIndex);\n        this.loadWorkflows();\n    }\n\n    deleteConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('WORKFLOW.confirm_delete', {\"workflow\": workflow}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteWorkflow(workflowId);\n            }\n        });\n    }\n\n    deleteWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/workflows/verifier/delete/' + workflowId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(workflowId: number, workflow: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('WORKFLOW.confirm_duplicate', {\"workflow\": workflow}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateWorkflow(workflowId);\n            }\n        });\n    }\n\n    duplicateWorkflow(workflowId: number) {\n        if (workflowId !== undefined) {\n            this.http.post(environment['url'] + '/ws/workflows/verifier/duplicate/' + workflowId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadWorkflows();\n                    this.notify.success(this.translate.instant('WORKFLOW.workflow_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allWorkflows.slice();\n        if (!sort.active || sort.direction === '') {\n            this.workflows = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.workflows = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n        this.workflows = this.workflows.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"settings-menu-nav\" [class.w-20]=\"this.serviceSettings.minimizeSideNav\">\n        <app-settings-menu [minimizeSideNav]=\"this.serviceSettings.minimizeSideNav\"></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"this.serviceSettings.minimizeSideNav = !this.serviceSettings.minimizeSideNav;\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden h-full-overflow\">\n            <mat-table matSort [dataSource]=\"workflows\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"workflow_id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element['workflow_id'] }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"input_folder\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'WORKFLOW.input_folder_header' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element?.input['input_folder'] }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'WORKFLOW.duplicate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-clone text-lg\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         routerLink=\"/settings/verifier/workflows/builder/edit/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator [showFirstLastButtons]=\"true\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, EventEmitter, Injectable, Input, OnInit, Output } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject, of } from \"rxjs\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\nimport { SessionStorageService } from \"../../../services/session-storage.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {ExportDialogComponent} from \"../../../services/export-dialog/export-dialog.component\";\nimport {ImportDialogComponent} from \"../../../services/import-dialog/import-dialog.component\";\n\n@Injectable()\nexport class ChecklistDatabase {\n    doctypeData : any[]     = [];\n    loading     : boolean   = true;\n    dataChange              = new BehaviorSubject<TreeItemNode[]>([]);\n\n    get data(): TreeItemNode[] { return this.dataChange.value; }\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    loadTree(formId: number) {\n        if (formId) {\n            this.retrieveDocTypes(formId);\n            this.initialize();\n        }\n    }\n\n    retrieveDocTypes(formId: number) {\n        this.loading      = true;\n        this.doctypeData  = [];\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: {\n                        id          : number\n                        key         : string\n                        code        : string\n                        label       : string\n                        type        : string\n                        status      : string\n                        is_default  : boolean\n                        form_id     : boolean\n                    }) => {\n                        newDoctype = {\n                            'id'        : doctype.id,\n                            'key'       : doctype.key,\n                            'code'      : doctype.code,\n                            'label'     : doctype.label,\n                            'type'      : doctype.type,\n                            'status'    : doctype.status,\n                            'formId'    : doctype.form_id,\n                            'isDefault' : doctype.is_default,\n                            'padding'   : doctype.code.split('.').length - 2\n                        };\n                        this.doctypeData.push(newDoctype);\n                    }\n                );\n            }),\n            finalize(() => {\n                this.initialize();\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initialize() {\n        /** Build the tree nodes from Database. The result is a list of `DocumentItemNode` with nested\n         * file node as children.\n         */\n        this.loading = true;\n        const data    = this.buildFileTree(this.doctypeData, '0');\n        // Notify the change.\n        this.dataChange.next(data);\n        const lastSearchValue = this.sessionStorageService.get('doctype_last_search_value') || '';\n        if (lastSearchValue) {\n            this.filter(lastSearchValue);\n        }\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `DocumentItemNode`.\n     */\n\n    buildFileTree(obj: any[], level: string): TreeItemNode[] {\n        return obj.filter(o =>\n            (o.code as string).startsWith(level + '.')\n            && (o.code.match(/\\./g) || []).length === (level.match(/\\./g) || []).length + 1\n        )\n            .map(o => {\n                const node      = new TreeItemNode();\n                node.id         = o.id;\n                node.key        = o.key;\n                node.label      = o.label;\n                node.code       = o.code;\n                node.type       = o.type;\n                node.padding    = o.padding;\n                node.isDefault  = o.isDefault;\n                const children  = obj.filter(so => (so.code as string).startsWith(level + '.'));\n                if (children && children.length > 0) {\n                    node.children = this.buildFileTree(children, o.code);\n                }\n                return node;\n            });\n    }\n\n    public _normalizeValue(value: string): string {\n        return value.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    }\n\n    public filter(filterText: string) {\n        let filteredTreeData: any[];\n        if (filterText) {\n            filteredTreeData = this.doctypeData.filter(d =>\n                this._normalizeValue(d.label).indexOf(this._normalizeValue(filterText))\n                > -1 && d.code.lastIndexOf('.') === 1\n            );\n            Object.assign([], filteredTreeData).forEach(ftd => {\n                const code = (ftd['code'] as string);\n                filteredTreeData = filteredTreeData.concat(this.doctypeData.filter(d =>\n                    d.code.startsWith(code + \".\") && d.code !== code\n                ));\n            });\n        } else {\n            filteredTreeData = this.doctypeData;\n        }\n        const data = this.buildFileTree(filteredTreeData, '0');\n        this.dataChange.next(data);\n    }\n}\n\nexport class TreeItemNode {\n    id!         : number;\n    key!        : string;\n    code!       : string;\n    type!       : string;\n    label!      : string;\n    padding!    : number;\n    isDefault!  : boolean;\n    children!   : TreeItemNode[];\n}\n\n/** Flat item node with expandable and level information */\nexport class TreeItemFlatNode {\n    id!         : number;\n    key!        : string;\n    type!       : string;\n    code!       : string;\n    label!      : string;\n    level!      : number;\n    padding!    : number;\n    isDefault!  : boolean;\n    expandable! : boolean;\n}\n\n@Component({\n    selector: 'app-document-type-factory',\n    templateUrl: './document-type-factory.component.html',\n    styleUrls: ['./document-type-factory.component.scss'],\n    providers: [ChecklistDatabase]\n})\nexport class DocumentTypeFactoryComponent implements OnInit {\n    loading: boolean                     = false;\n    searchText: string                   = this.sessionStorageService.get('doctype_last_search_value') || '';\n\n    @Input() selectedDoctypeInput: any   = {\n        'key': undefined,\n        'id': undefined\n    };\n    @Input() settings: any               = {\n        'allowImportExport': false,\n        'canFolderBeSelected': false,\n        'formId': undefined\n    };\n\n    @Output() selectedDoctypeOutput: any = new EventEmitter < string > ();\n    @Output() selectedFormOutput: any    = new EventEmitter < string > ();\n\n    selectFormControl: FormControl       = new FormControl();\n    toggleControl: FormControl           = new FormControl(false);\n    forms: any[]                         = [];\n\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n    flatNodeMap    = new Map<TreeItemFlatNode, TreeItemNode>();\n\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n    nestedNodeMap  = new Map<TreeItemNode, TreeItemFlatNode>();\n    treeControl!   : FlatTreeControl<TreeItemFlatNode>;\n    treeFlattener! : MatTreeFlattener<TreeItemNode, TreeItemFlatNode>;\n    dataSource!    : MatTreeFlatDataSource<TreeItemNode, TreeItemFlatNode>;\n\n    constructor(\n        public router: Router,\n        public dialog: MatDialog,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings  : SettingsService,\n        public treeDataObj : ChecklistDatabase,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private sessionStorageService: SessionStorageService\n    ) {\n    }\n\n    getLevel      = (node: TreeItemFlatNode)                  => node.level;\n    isExpandable  = (node: TreeItemFlatNode)                  => node.expandable;\n    getChildren   = (node: TreeItemNode): TreeItemNode[]      => node.children;\n    hasChild      = (_: number, _nodeData: TreeItemFlatNode)  => _nodeData.type === 'folder';\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.treeFlattener  = new MatTreeFlattener(this.transformer, this.getLevel,\n            this.isExpandable, this.getChildren);\n        this.treeControl    = new FlatTreeControl<TreeItemFlatNode>(this.getLevel, this.isExpandable);\n        this.dataSource     = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.treeDataObj.dataChange.subscribe(data => {\n            this.dataSource.data = data;\n            const collapseTree = this.sessionStorageService.get('is_doctypes_tree_collapsed') &&\n                this.sessionStorageService.get('is_doctypes_tree_collapsed') === 'true';\n            if (collapseTree) {\n                this.treeControl.collapseAll();\n            }\n            else {\n                this.treeControl.expandAll();\n            }\n        });\n        this.selectFormControl.valueChanges.subscribe(formId => {\n            this.sessionStorageService.save('doctypeFormId', formId);\n            this.treeDataObj.loadTree(formId);\n            this.selectedFormOutput.emit({'formId': formId});\n        });\n        this.settings.hasOwnProperty('formId') ? this.treeDataObj.loadTree(this.settings.formId) : this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                if (this.forms.length > 0) {\n                    const defaultFormId = this.sessionStorageService.get('doctypeFormId') ?\n                        this.sessionStorageService.get('doctypeFormId') : this.forms[0].id;\n                    this.selectFormControl.setValue(Number(defaultFormId));\n                } else {\n                    this.notify.handleErrors(this.translate.instant('FORMS.no_form_available'));\n                }\n                const selectedForm  = this.forms.find( form => form.id === this.selectFormControl.value );\n                this.toggleControl.setValue(selectedForm.settings.unique_doc_type);\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.loading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /**\n     * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n     */\n    transformer = (node: TreeItemNode, level: number) => {\n        const existingNode = this.nestedNodeMap.get(node);\n        const flatNode = existingNode && existingNode.label === node.label\n            ? existingNode\n            : new TreeItemFlatNode();\n        flatNode.id         = node.id;\n        flatNode.label      = node.label;\n        flatNode.level      = level;\n        flatNode.type       = node.type;\n        flatNode.code       = node.code;\n        flatNode.key        = node.key;\n        flatNode.padding    = node.padding;\n        flatNode.isDefault  = node.isDefault;\n        flatNode.expandable = (node.type === 'folder');\n        this.flatNodeMap.set(flatNode, node);\n        this.nestedNodeMap.set(node, flatNode);\n        return flatNode;\n    };\n\n    filterChanged() {\n        this.sessionStorageService.save('doctype_last_search_value', this.searchText);\n        this.treeDataObj.filter(this.searchText);\n        if (this.searchText)\n        {\n            this.treeControl.expandAll();\n        } else {\n            this.treeControl.collapseAll();\n        }\n        this.treeControl.expandAll();\n    }\n\n    selectNode(node: any, isDblClick:boolean) {\n        this.selectedDoctypeInput = node;\n        this.selectedDoctypeInput.isDblClick = isDblClick;\n        this.selectedDoctypeOutput.emit(this.selectedDoctypeInput);\n    }\n\n    selectFolder(node: any) {\n        if (this.settings.canFolderBeSelected) {\n            this.selectedDoctypeInput = node;\n            this.selectedDoctypeOutput.emit(this.selectedDoctypeInput);\n        }\n    }\n\n    cloneFormDoctypes(sourceFormId: number, destFormId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('DOCTYPE.confirm_doctypes_clone'),\n                confirmButton       : this.translate.instant('DOCTYPE.clone_doctypes'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                this.treeDataObj.loading = true;\n                this.http.get(environment['url'] + '/ws/doctypes/clone/' + sourceFormId + '/' + destFormId,\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.treeDataObj.retrieveDocTypes(this.selectFormControl.value);\n                        this.notify.success(this.translate.instant('DOCTYPE.doctypes_clone_success'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.treeDataObj.loading = false;\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    highlight(text: string) {\n        return text.replace(this.searchText, `<span class=\"p-1 rounded font-bold bg-green-400\">${this.searchText}</span>`);\n    }\n\n    cleanSearchText() {\n        this.searchText = '';\n        this.filterChanged();\n    }\n\n    exportDoctypes() {\n        const selectedColumns: any [] = [\n            {\n                id: 'label',\n                label: this.translate.instant('HEADER.label')\n            },\n            {\n                id: 'type',\n                label: this.translate.instant('DOCTYPE.type')\n            },\n            {\n                id: 'key',\n                label: this.translate.instant('HEADER.id')\n            },\n            {\n                id: 'form_id',\n                label: this.translate.instant('DOCTYPE.form_identifier')\n            },\n            {\n                id: 'code',\n                label: this.translate.instant('DOCTYPE.code')\n            }\n        ];\n        const availableColumns: any [] = [\n            {\n                id: 'status',\n                label: this.translate.instant('HEADER.status')\n            },\n            {\n                id: 'isDefault',\n                label: this.translate.instant('DOCTYPE.default_doctype')\n            }\n        ];\n\n        const dialogRef = this.dialog.open(ExportDialogComponent, {\n            data: {\n                selectedColumns: selectedColumns,\n                availableColumns: availableColumns,\n                title : this.translate.instant('DOCTYPE.export')\n            },\n            width: \"900px\"\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const args = {\n                    'formId': this.selectFormControl.value,\n                    'columns': result.selectedColumns,\n                    'delimiter': result.delimiter,\n                    'extension': result.extension\n                };\n                this.http.post(environment['url'] + '/ws/doctypes/export', {'args': args}, {headers: this.authService.headers},\n                ).pipe(\n                    tap((data: any) => {\n                        const csvContent = atob(data.encoded_file);\n                        const blob = new Blob([csvContent], {type: \"data:application/octet-stream;base64\"});\n                        const url  = window.URL.createObjectURL(blob);\n                        const link = document.createElement(\"a\");\n                        link.href = url;\n                        link.download = `doctypes.${result.extension}`;\n                        link.click();\n                        this.notify.success(this.translate.instant('DOCTYPE.doctypes_export_success'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    importDoctypes() {\n        const dialogRef = this.dialog.open(ImportDialogComponent, {\n            data: {\n                rows: [],\n                extension: 'CSV',\n                skipHeader: false,\n                allowColumnsSelection : true,\n                title : this.translate.instant('DOCTYPE.import'),\n                availableColumns : [ 'key', 'label', 'type', 'code', 'form_id'],\n                selectedColumns : [ 'key', 'label', 'type', 'code', 'form_id']\n            },\n            width: \"900px\"\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const formData: FormData = new FormData();\n                for (let i = 0; i < result.fileControl.value!.length; i++) {\n                    if (result.fileControl.status === 'VALID') {\n                        formData.append(result.fileControl.value![i]['name'], result.fileControl.value![i]);\n                    } else {\n                        this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                        return;\n                    }\n                }\n                formData.set('selectedColumns', result.selectedColumns);\n                formData.set('skipHeader', result.skipHeader);\n\n                this.http.post(environment['url'] + '/ws/doctypes/csv/import', formData, {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.treeDataObj.retrieveDocTypes(this.selectFormControl.value);\n                        this.notify.success(this.translate.instant('DOCTYPE.doctypes_import_success'));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    expandAll() {\n        this.treeControl.expandAll();\n        this.sessionStorageService.save('is_doctypes_tree_collapsed', false);\n    }\n    changeDocType() {\n        const dataSelectForm = this.forms.find(item => item.id === this.selectFormControl.value);\n        const uniqueDocType = this.toggleControl.value;\n        const label             = dataSelectForm.label;\n        const isDefault         = dataSelectForm.default_form;\n        const metadataMethod    = dataSelectForm.metadata_method;\n        const exportZipFile     = dataSelectForm.export_zip_file;\n        const outputs = dataSelectForm.outputs;\n        this.http.put(environment['url'] + '/ws/forms/splitter/update/' + dataSelectForm.id, {\n            'args': {\n                'label'        : label,\n                'default_form' : isDefault,\n                'outputs'      : outputs,\n                'settings'     : {\n                    'metadata_method' : metadataMethod,\n                    'export_zip_file' : exportZipFile,\n                    'unique_doc_type' : uniqueDocType\n                }\n            }\n        }, {headers: this.authService.headers},\n        ).pipe(\n            tap( ()=>{\n                this.notify.success(this.translate.instant('DOCTYPE.unique_doctype_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            }))\n        .subscribe();\n    }\n    collapseAll() {\n        this.treeControl.collapseAll();\n        this.sessionStorageService.save('is_doctypes_tree_collapsed', true);\n    }\n}\n","<div class=\"w-full mx-4 mt-4\">\n    <mat-form-field class=\"w-60\">\n        <mat-label>{{ 'SPLITTER.search_folder' | translate }}</mat-label>\n        <input matInput [(ngModel)]=\"searchText\" (input)=\"filterChanged()\">\n    </mat-form-field>\n    <button class=\"text-gray-400 ml-4 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"cleanSearchText()\"\n            [matTooltip]=\"'DOCTYPE.clean_search_text' | translate\">\n        <i class=\"fa-solid fa-eraser text-lg\"></i>\n    </button>\n    <button class=\"text-gray-400 ml-4 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"collapseAll()\"\n            [matTooltip]=\"'DOCTYPE.minimize_tree' | translate\">\n        <i class=\"fa-solid fa-minimize text-lg\"></i>\n    </button>\n    <button class=\"text-gray-400 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"expandAll()\"\n            [matTooltip]=\"'DOCTYPE.maximize_tree' | translate\">\n        <i class=\"fa-solid fa-maximize text-lg\"></i>\n    </button>\n    <mat-slide-toggle *ngIf=\"!this.settings.hasOwnProperty('allowUniqueDocType') || this.settings.allowUniqueDocType\" class=\"mx-2 my-4\" [formControl]=\"toggleControl\" (click)=\"changeDocType()\" [matTooltip]=\"'DOCTYPE.unique_doctype_field_explanation' | translate\">{{ 'DOCTYPE.unique_doctype' | translate }}</mat-slide-toggle>\n    <mat-form-field *ngIf=\"!settings.hasOwnProperty('formId')\" class=\"float-right w-60 mr-8\">\n        <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n        <mat-select id='folder' [formControl]=\"selectFormControl\">\n            <div *ngFor=\"let form of forms\">\n                <mat-option [value]=\"form.id\">\n                    <span>{{ form.label | translate }}</span>\n                    <button *ngIf=\"form.id !== selectFormControl.value\" [matTooltip]=\"'DOCTYPE.clone_doctypes' | translate\"\n                        (click)=\"$event.stopPropagation(); cloneFormDoctypes(form.id, selectFormControl.value)\"\n                        class=\"hover:text-green-400 fa fa-clone absolute right-0 mr-2\"></button>\n                </mat-option>\n            </div>\n        </mat-select>\n    </mat-form-field>\n    <div class=\"mr-4 my-4 float-right\"\n         *ngIf=\"!this.settings.hasOwnProperty('allowImportExport') || this.settings.allowImportExport\">\n        <button class=\"text-gray-400 hover:text-green-400 hover:cursor-pointer mx-2\"\n                (click)=\"importDoctypes()\"\n                [matTooltip]=\"'DOCTYPE.import' | translate\">\n            <i class=\"fa-solid fa-file-import fa-2x\"></i>\n        </button>\n        <button class=\"text-gray-400 hover:text-green-400 hover:cursor-pointer mx-2\"\n                (click)=\"exportDoctypes()\"\n                [matTooltip]=\"'DOCTYPE.export' | translate\">\n            <i class=\"fa-solid fa-file-export fa-2x\"></i>\n        </button>\n    </div>\n</div>\n<mat-card class=\"overflow-auto mx-4\" style=\"height: calc(100% - 11rem) !important\">\n    <div *ngIf=\"this.treeDataObj.loading\">\n        <app-loader></app-loader>\n    </div>\n    <div *ngIf=\"treeDataObj.doctypeData.length === 0 || dataSource.data.length === 0\" class=\"text-gray-400 p-4\">\n        {{ 'DOCTYPE.no_doctype_to_show' | translate }}\n    </div>\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"m-2\">\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding=\"{{ node.padding }}\">\n            <button class=\"whitespace-nowrap p-1 rounded hover:text-slate-100 hover:bg-green-400 font-normal\"\n                    (click)=\"selectNode(node, false)\"\n                    (dblclick)=\"selectNode(node, true)\"\n                    [ngClass]=\"selectedDoctypeInput.key === node.key ? 'bg-green-400 text-slate-100' : ''\">\n                    <i *ngIf=\"!node.isDefault\" class=\"fa-solid fa-file pr-1\"></i>\n                    <i *ngIf=\"node.isDefault\" class=\"fa-solid fa-file-circle-check pr-1\"></i>\n                    <span>{{ node.label }}</span>\n            </button>\n        </mat-tree-node>\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding=\"{{ node.padding }}\">\n            <button matTreeNodeToggle class=\"whitespace-nowrap p-1 rounded font-normal hover:bg-green-400 hover:text-slate-100\"\n                    [ngClass]=\"selectedDoctypeInput.key === node.key ? 'bg-green-400 text-slate-100' : ''\"\n                    [attr.aria-label]=\"'Toggle ' + node.label\"\n                    (click)=\"selectFolder(node)\">\n                    <i [ngClass]=\"treeControl.isExpanded(node) ? 'fa fa-minus-square' : 'fa fa-plus-square'\"></i>\n                    <span class=\"p-1\" *ngIf=\"!searchText\"> {{ node.label }}</span>\n                    <span class=\"p-1\" *ngIf=\"searchText\" [innerHTML]=\"highlight(node.label)\"></span>\n            </button>\n            <button mat-button *ngIf=\"settings.showFoldersSeparatorBtn\"  class=\"p-1 hover:text-green-400\"\n                    (click)=\"selectNode(node, false)\"\n                    [matTooltip]=\"'DOCTYPE.generate_folder_separators' | translate\">\n                <i class=\"fa-solid fa-folder-closed fa-lg\"></i>\n            </button>\n        </mat-tree-node>\n    </mat-tree>\n</mat-card>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, Inject } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-document-type',\n    templateUrl: './document-type.component.html',\n    styleUrls: ['./document-type.component.scss']\n})\nexport class DocumentTypeComponent {\n    constructor(\n        public router: Router,\n        private dialogRef: MatDialogRef<DocumentTypeComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    getOutPut($event: any) {\n        this.data.selectedDoctype = $event;\n        if (this.data.selectedDoctype.isDblClick) {\n            this.dialogRef.close(this.data.selectedDoctype);\n        }\n    }\n}\n","<div class=\"overflow-hidden\" style=\"height: 830px;\">\n    <button class=\"float-right\" [mat-dialog-close]=\"\">\n        <i class=\"fa fa-times fa-2x hover:text-green-400 m-4\"></i>\n    </button>\n    <app-document-type-factory\n        class=\"h-80\"\n        [selectedDoctypeInput]=\"data.selectedDoctype\"\n        (selectedDoctypeOutput)=\"getOutPut($event)\"\n        [settings]=\"{'canFolderBeSelected': false, 'formId': data.formId, 'allowImportExport': data.allowImportExport, 'allowUniqueDocType': data.allowUniqueDocType}\">\n    </app-document-type-factory>\n    <div class=\"text-gray-400 mt-1 mx-4\">\n        <i class=\"fa-solid fa-circle-info\"></i>\n        {{ 'SPLITTER.double_click_to_select_doctype' | translate }}\n    </div>\n    <div class=\"w-max mt-2 mx-auto\">\n        <button mat-button class=\"mx-auto h-12 w-48\"\n                [disabled]=\"!data.selectedDoctype.key\"\n                [mat-dialog-close]=\"data.selectedDoctype\"\n                [class]=\"data.selectedDoctype.key ? 'bg-green-400 text-white': 'bg-gray-200 text-gray-500'\">\n            {{ 'SPLITTER.select' | translate }}\n        </button>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport {Component, OnInit, SecurityContext} from '@angular/core';\nimport { SessionStorageService } from \"../../../services/session-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './splitter-list.component.html',\n    styleUrls: ['./splitter-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\n\nexport class SplitterListComponent implements OnInit {\n    batches          : any     = [];\n    isLoading        : boolean = true;\n    status           : any[]   = [];\n    page             : number  = 1;\n    selectedTab      : number  = 0;\n    searchText       : string  = \"\";\n    pageSize         : number  = 15;\n    pageIndex        : number  = 1;\n    offset           : number  = 0;\n    pageSizeOptions  : any []  = [5, 10, 15, 20, 30, 60];\n    total            : number  = 0;\n    totals           : any     = {};\n    batchList        : any[]   = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today')\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday')\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older')\n        }\n    ];\n    totalChecked        : number  = 0;\n    batchesSelected     : boolean = false;\n    currentStatus       : string  = 'NEW';\n    currentTime         : string  = 'today';\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private _sanitizer: DomSanitizer,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private routerExtService: LastUrlService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.sessionStorageService.save('splitter_or_verifier', 'splitter');\n        this.removeLockByUserId(this.userService.user.username);\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('splitter/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.sessionStorageService.get('splitterPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('splitterPageIndex') as string);\n            }\n\n            if (this.sessionStorageService.get('splitterTimeIndex')) {\n                this.selectedTab = parseInt(this.sessionStorageService.get('splitterTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('splitterPageIndex');\n            this.sessionStorageService.remove('splitterTimeIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/status/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadBatches();\n    }\n\n    removeLockByUserId(userId: any) {\n        this.http.put(environment['url'] + '/ws/splitter/removeLockByUserId/' + userId, {}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadBatches(): void {\n        this.isLoading = true;\n        this.batches   = [];\n        this.http.get(environment['url'] + '/ws/splitter/batches/user/' + this.userService.user.id + '/totals/'\n            + this.currentStatus, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n            'size'   : this.pageSize,\n            'search' : this.searchText,\n            'time'   : this.currentTime,\n            'page'   : this.pageIndex - 1,\n            'status' : this.currentStatus,\n            'userId' : this.userService.user.id\n        }, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        locked         : batch['locked'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        lockedBy       : batch['locked_by'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail'])\n                    })\n                );\n                this.total = data.count;\n            }),\n            finalize(() => this.isLoading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayBatchLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('SPLITTER.batch_locked'),\n                confirmText         : this.translate.instant('SPLITTER.batch_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\"\n        });\n    }\n\n    sanitize(url: string) {\n        return this._sanitizer.sanitize(SecurityContext.URL, 'data:image/jpg;base64,' + url);\n    }\n\n    checkSelectedBatch() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.batchesSelected = this.totalChecked !== 0;\n    }\n\n    mergeAllConfirmDialog(parentId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_merge_all_checked_batches'),\n                confirmButton       : this.translate.instant('SPLITTER.merge'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.mergeAllBatches(parentId);\n            }\n        });\n    }\n\n    isCheckboxChecked(batchId: number) {\n        let checked = false;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            const checkboxId = element.id.split('_')[0];\n            if (parseInt(checkboxId) === batchId) {\n                checked = true;\n            }\n        });\n        return checked;\n    }\n\n    mergeAllBatches(parentId: number) {\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        const listOfBatchToMerge: any[] = [];\n        const listOfBatchFormId: any[] = [];\n        Array.from(checkboxList).forEach((element: any) => {\n            if (element.checked) {\n                const batchId = element.id.split('_')[0];\n                if (batchId !== parentId.toString()) {\n                    listOfBatchToMerge.push(batchId);\n                }\n            }\n        });\n\n        this.batches.forEach((batch: any) => {\n            listOfBatchToMerge.forEach((batchId: any) => {\n                if (parseInt(batch.id) === parseInt(batchId)) {\n                    listOfBatchFormId.push(batch.form_id);\n                }\n            });\n            if (parentId === batch.id) {\n                listOfBatchFormId.push(batch.form_id);\n            }\n        });\n        const uniqueFormId = listOfBatchFormId.filter((item, i, ar) => ar.indexOf(item) === i);\n\n        if (uniqueFormId.length === 1) {\n            this.isLoading = true;\n            this.http.post(environment['url'] + '/ws/splitter/merge/' + parentId, {'batches': listOfBatchToMerge}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.loadBatches();\n                    this.notify.success(this.translate.instant('SPLITTER.merge_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('SPLITTER.merge_error_form_not_match'));\n        }\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_delete_all_batches'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllBatches();\n            }\n        });\n    }\n\n    onPageChange($event: PageEvent) {\n        this.batches = [];\n        this.pageIndex = $event.pageIndex + 1;\n        this.pageSize = $event.pageSize;\n        this.sessionStorageService.save('splitterPageIndex', $event.pageIndex);\n        this.loadBatches();\n    }\n\n    openConfirmDialog(id: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('SPLITTER.confirm_batch_delete'),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"400px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteBatches([id]);\n            }\n        });\n    }\n\n    selectOrUnselectAllBatches(event: any) {\n        const label = event.srcElement.textContent;\n        this.batchesSelected = !this.batchesSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllBatches() {\n        this.isLoading = true;\n        const deleteIds : number[] = [];\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any) => {\n            const batchId = element.id.split('_')[0];\n            deleteIds.push(Number(batchId));\n        });\n        this.deleteBatches(deleteIds);\n    }\n\n    deleteBatches(ids: number[]): void {\n        this.http.put(environment['url'] + '/ws/splitter/deleteBatches', {'ids': ids}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (ids.length === 1) {\n                    this.notify.success(this.translate.instant('SPLITTER.batch_deleted'));\n                } else {\n                    this.notify.success(this.translate.instant('SPLITTER.all_batches_checked_deleted'));\n                }\n                this.isLoading = false;\n                this.loadBatches();\n\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 1;\n        this.sessionStorageService.save('splitterPageIndex', this.pageIndex);\n    }\n\n    onTabChange(event: any) {\n        this.selectedTab = event.index;\n        this.sessionStorageService.save('splitterTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\" class=\"splitter_batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of this.batchList\" [id]=\"batch.id\" [disabled]=\"this.isLoading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"splitter-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <div class=\"ml-4\">\n                            <mat-form-field class=\"w-1/2\" appearance=\"outline\" >\n                                <mat-label>{{ 'SPLITTER.search_by_identifier' | translate }}</mat-label>\n                                <input matInput type=\"text\" [(ngModel)]=\"this.searchText\">\n                            </mat-form-field>\n                            <button mat-button class=\"rounded ml-2 mb-1 border-solid border-green-400 border bg-green-400\n                                            text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                    (click)=\"loadBatches()\" [matTooltip]=\"'SPLITTER.search' | translate\"\n                                    style=\"padding: 1.65rem !important\">\n                                <i class=\"fa-solid fa-magnifying-glass text-lg\"></i>\n                            </button>\n                        </div>\n                        <div class=\"w-full flex justify-center m-auto\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\" [disabled]=\"this.isLoading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <i class=\"fa-solid fa-sync-alt m-4 cursor-pointer text-xl hover:text-green-400\" (click)=\"loadBatches()\"\n                               [matTooltip]=\"'SPLITTER.reload_batches' | translate\"></i>\n                        </div>\n                        <span [class.hidden]=\"this.isLoading || this.total === 0\" class=\"relative right-0\">\n                            <mat-paginator [length] = \"this.total\"\n                                           [pageSize]=\"this.pageSize\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\"\n                                           (page)=\"onPageChange($event)\">\n                            </mat-paginator>\n                        </span>\n                    </div>\n                    <div class=\"z-40 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.batches.length > 1 && !this.isLoading\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllBatches($event)\"\n                              [innerHTML]=\"batchesSelected ? translate.instant('VERIFIER.unselect_all') : translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.batchesSelected\">\n                            <i class=\"fa-solid fa-trash ml-5 text-red-500 cursor-pointer\"\n                               (click)=\"$event.stopPropagation(); deleteAllConfirmDialog()\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n                    <div *ngIf=\"this.isLoading\">\n                        <app-loader></app-loader>\n                    </div>\n                    <div class=\"content mx-10 mt-3\" *ngIf=\"!this.isLoading\">\n                        <div *ngIf=\"this.batches.length === 0 && !this.isLoading\" class=\"text-gray-200 text-center absolute top-[55%] left-[50%]\" style=\"transform: translate(-50%, -50%);\">\n                            <i class=\"fa-regular fa-folder-open fa-10x w-full\"></i>\n                            <span class=\"text-4xl\">\n                                {{ 'GLOBAL.no_batch_found' | translate }}\n                            </span>\n                        </div>\n                        <div class=\"list grid 2xl:grid-cols-5 md:grid-cols-3 sm:grid-cols-2 grid-flow-row gap-6\">\n                            <mat-card class=\"batch-card cursor-pointer p-0 mb-0\" *ngFor=\"let batch of this.batches\">\n                                <label class=\"p-5 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ batch.id }}_checkbox\" type=\"checkbox\" (click)=\"checkSelectedBatch()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\">\n                                </label>\n                                <img [routerLink]=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? '/splitter/list' : '/splitter/viewer/' + currentTime + '/' + batch['id']\"\n                                     (click)=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? displayBatchLocked(batch['lockedBy']) : ''\"\n                                     class=\"m-auto p-4\" mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter thumbnail\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                                 [routerLink]=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? '/splitter/list' : '/splitter/viewer/' + currentTime + '/' + batch['id']\"\n                                                 (click)=\"batch['locked'] &&  batch['lockedBy'] !== this.userService.user.username ? displayBatchLocked(batch['lockedBy']) : ''\">\n                                    <mat-card-title class=\"break-all\">\n                                        <span class=\"w-1/3\">\n                                            {{ batch['fileName'] }}\n                                            <i [matTooltip]=\"'SPLITTER.batch_locked' | translate\"\n                                               class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"\n                                               *ngIf=\"batch.locked\"></i>\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              matTooltip=\"{{ 'OUTPUT.documents_count' | translate }} : {{ batch['documentsCount'] }}\">\n                                            {{ batch['documentsCount'] }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                                        <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                                        <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                                        <strong>{{ 'SPLITTER.form_label' | translate }}</strong> : {{ batch['formLabel'] }}<br>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4\">\n                                    <i class=\"fa-solid fa-trash cursor-pointer text-red-500 pl-2\"\n                                       (click)=\"$event.stopPropagation();openConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography\">{{ 'GLOBAL.delete' | translate }}</span>\n                                    </i>\n                                    <i class=\"fa-solid fa-circle-info text-gray-400 absolute right-4\"\n                                       matTooltip=\"{{ 'ACCOUNTS.customer_name' | translate }} : {{ batch['customerName'] }}\">\n                                    </i>\n                                    <i *ngIf=\"this.totalChecked >= 2 && isCheckboxChecked(batch['id'])\"\n                                       class=\"fa-solid fa-object-group cursor-pointer text-green-400 relative float-right\"\n                                       (click)=\"$event.stopPropagation();mergeAllConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography float-left mr-3 relative bottom-1\">\n                                            {{ 'SPLITTER.merge' | translate }} {{ this.totalChecked }} {{ 'SPLITTER.batches' | translate }}\n                                        </span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport * as moment from \"moment\";\nimport {remove} from 'remove-accents';\nimport {environment} from \"../../env\";\n\nimport {UserService} from \"../../../services/user.service\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {LocaleService} from \"../../../services/locale.service\";\nimport {HistoryService} from \"../../../services/history.service\";\nimport {SessionStorageService} from \"../../../services/session-storage.service\";\nimport {DocumentTypeComponent} from \"../document-type/document-type.component\";\nimport {NotificationService} from \"../../../services/notifications/notifications.service\";\nimport {ConfirmDialogComponent} from \"../../../services/confirm-dialog/confirm-dialog.component\";\n\nimport {HttpClient} from \"@angular/common/http\";\nimport {of, ReplaySubject, Subject} from \"rxjs\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatCheckboxChange} from \"@angular/material/checkbox\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Component, HostListener, OnDestroy, OnInit, SecurityContext, ViewChild} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {catchError, debounceTime, delay, filter, finalize, map, takeUntil, tap} from \"rxjs/operators\";\n\nexport interface Field {\n    id                   : number\n    settings             : any\n    type                 : string\n    label                : string\n    class                : string\n    required             : boolean\n    disabled             : boolean\n    resultMask           : string\n    searchMask           : string\n    validationMask       : string\n    metadata_key         : string\n    label_short          : string\n    invert_fields        : string[]\n    conditioned_fields   : string[]\n    conditioned_doctypes : string[]\n}\n\n@Component({\n    selector: 'app-viewer',\n    templateUrl: './splitter-viewer.component.html',\n    styleUrls: ['./splitter-viewer.component.scss']\n})\nexport class SplitterViewerComponent implements OnInit, OnDestroy {\n    @HostListener('window:beforeunload', ['$event'])\n    beforeunloadHandler($event: any) {\n        if (this.hasUnsavedChanges) {\n            $event.returnValue = true;\n        }\n        this.removeLockByBatchId();\n    }\n    @ViewChild(`cdkStepper`) cdkDropList: CdkDragDrop<any> | undefined;\n\n    loading                     : boolean       = true;\n    showZoomPage                : boolean       = false;\n    isBatchOnDrag               : boolean       = false;\n    batchesLoading              : boolean       = false;\n    validateLoading             : boolean       = false;\n    downloadLoading             : boolean       = false;\n    saveInfosLoading            : boolean       = false;\n    documentsLoading            : boolean       = false;\n    hasUnsavedChanges           : boolean       = false;\n    addDocumentLoading          : boolean       = false;\n    isMouseInDocumentList       : boolean       = false;\n    batchMetadataOpenState      : boolean       = true;\n    documentMetadataOpenState   : boolean       = false;\n    batchForm                   : FormGroup     = new FormGroup({});\n    batches                     : any[]         = [];\n    forms                       : any[]         = [];\n    status                      : any[]         = [];\n    metadata                    : any[]         = [];\n    documents                   : any[]         = [];\n    movedPages                  : any[]         = [];\n    deletedPagesIds             : number[]      = [];\n    deletedDocumentsIds         : number[]      = [];\n    DropListDocumentsIds        : string[]      = [];\n    batchMetadataValues         : any           = {};\n    inputMode                   : string        = \"Manual\";\n    currentTime                 : string        = \"\";\n    toolSelectedOption          : string        = \"\";\n    timeLabels                  : any           = {\n        'today'     : marker('BATCH.today'),\n        'yesterday' : marker('BATCH.yesterday'),\n        'older'     : marker('BATCH.older')\n    };\n    defaultDoctype              : any           = {\n        label       : null,\n        key         : null\n    };\n    zoomPage                    : any           = {\n        thumbnail   : \"\",\n        rotation    : 0\n    };\n    currentBatch                : any           = {\n        id                  : -1,\n        formId              : -1,\n        inputId             : -1,\n        pageIdInLoad        : -1,\n        previousFormId      : -1,\n        outputs             : [],\n        status              : '',\n        progress            : 100,\n        maxSplitIndex       : 0,\n        selectedPagesCount  : 0,\n        selectedDocument    : {\n            id              : '',\n            displayOrder    : -1\n        }\n    };\n    fieldsCategories            : any           = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n\n    configurations              : any = {\n        'enableSplitterProgressBar': true\n    };\n\n    /** indicate search operation is in progress */\n    public searching        : boolean   = false;\n\n    /** list of banks filtered after simulating server side search */\n    public filteredServerSideMetadata: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\n\n    /** Subject that emits when the component has been destroyed. */\n    protected _onDestroy = new Subject<void>();\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private _sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public localeService: LocaleService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.sessionStorageService.save('splitter_or_verifier', 'splitter');\n        this.userService.user   = this.userService.getUserFromLocal();\n        this.currentBatch.id    = this.route.snapshot.params['id'];\n        this.currentTime        = this.route.snapshot.params['currentTime'];\n        this.getConfigurations();\n        this.loadSelectedBatch();\n        this.updateBatchLock();\n        this.translate.get('HISTORY-DESC.viewer_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n            this.historyService.addHistory('splitter', 'viewer', translated);\n        });\n    }\n\n    onScreenClick(event: MouseEvent) {\n        const clickedElement = event.target as HTMLElement;\n        const zoomPageElement = document.getElementById('zoom-image');\n\n        if (zoomPageElement && !zoomPageElement.contains(clickedElement)) {\n            this.showZoomPage = false;\n        }\n    }\n\n    setValuesFromSavedMetadata(autocompletionValue: any): void {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field['label_short'])) {\n                const savedValue = this.currentBatch.customFieldsValues[field['label_short']];\n                if (autocompletionValue.hasOwnProperty(field['label_short'])\n                    && autocompletionValue[field['label_short']] !== savedValue) {\n                    this.batchMetadataValues[field['label_short']] = savedValue;\n                    this.batchForm.controls[field['label_short']].setValue(savedValue);\n                }\n            }\n        }\n    }\n\n    updateBatchLock() {\n        this.http.post(environment['url'] + '/ws/splitter/lockBatch', {\n            'batchId' : this.currentBatch.id,\n            'lockedBy': this.userService.user.username\n        }, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadSelectedBatch(): void {\n        this.defaultDoctype = {};\n        this.documents      = [];\n        this.loadBatchById();\n    }\n\n    loadBatchById(): void {\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n                'batchId': this.currentBatch.id,\n                'userId': this.userService.user.id\n            },\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.currentBatch = {\n                    id                  : data.batches[0]['id'],\n                    status              : data.batches[0]['status'],\n                    formId              : data.batches[0]['form_id'],\n                    previousFormId      : data.batches[0]['form_id'],\n                    customFieldsValues  : data.batches[0]['data'].hasOwnProperty('custom_fields') ? data.batches[0]['data']['custom_fields'] : {},\n                    selectedPagesCount  : 0,\n                    outputs             : [],\n                    progress            : 100,\n                    maxSplitIndex       : 0,\n                    selectedPageId      : 0,\n                    selectedDocument    : {\n                        id           : '',\n                        displayOrder : -1\n                    }\n                };\n                this.loadForms();\n                this.loadBatches();\n                this.loadStatus();\n                this.loadFormFields();\n                this.loadDefaultDocType();\n                this.loadOutputsData();\n                this.loadReferentialOnView();\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getStatusLabel(statusId: string) {\n        const statusFound = this.status.find(status => status.id === statusId);\n        return statusFound ? statusFound.label : undefined;\n    }\n\n    loadStatus(): void {\n        this.http.get(environment['url'] + '/ws/status/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadOutputsData(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/splitter/batch/' + this.currentBatch.id + '/outputs', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.currentBatch.outputs = data.outputs;\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadBatches(): void {\n        this.batchesLoading = true;\n        this.batches        = [];\n        this.loading        = true;\n\n        this.http.post(environment['url'] + '/ws/splitter/batches/list', {\n            'page': 0,\n            'size': 10,\n            'time': this.currentTime,\n            'userId': this.userService.user.id,\n            'status': this.currentBatch.status\n        }, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail'])\n                    })\n                );\n\n                // Move current batch to the top of the list\n                const currentBatchIndex = this.batches.findIndex((batch: any) => batch.id === this.currentBatch.id);\n                if (currentBatchIndex > -1) {\n                    this.batches.unshift(this.batches.splice(currentBatchIndex, 1)[0]);\n                } else {\n                    this.batches.unshift({\n                        id             : this.currentBatch.id,\n                        inputId        : this.currentBatch.inputId,\n                        fileName       : this.currentBatch.fileName,\n                        formLabel      : this.currentBatch.formLabel,\n                        date           : this.currentBatch.date,\n                        customerName   : this.currentBatch.customerName,\n                        documentsCount : this.currentBatch.documentsCount,\n                        thumbnail      : this.sanitize(this.currentBatch.thumbnail)\n                    });\n                }\n\n                this.batchesLoading = false;\n            }),\n            catchError((err: any) => {\n                this.batchesLoading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadDocuments(): void {\n        this.documentsLoading = true;\n        this.http.get(environment['url'] + '/ws/splitter/documents/' + this.currentBatch.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (let documentIndex = 0; documentIndex < data['documents'].length; documentIndex++) {\n                    // -- Add documents metadata --\n                    this.documents[documentIndex] = {\n                        id                 : \"document-\" + data['documents'][documentIndex]['id'],\n                        doctypeLabel       : data['documents'][documentIndex]['doctype_label'] ? data['documents'][documentIndex]['doctype_label'] : (this.defaultDoctype.label || \"\"),\n                        doctypeKey         : data['documents'][documentIndex]['doctype_key'] ? data['documents'][documentIndex]['doctype_key'] : (this.defaultDoctype.label || \"\"),\n                        displayOrder       : data['documents'][documentIndex]['display_order'],\n                        splitIndex         : data['documents'][documentIndex]['split_index'],\n                        status             : data['documents'][documentIndex]['status'],\n                        pages              : [],\n                        class              : \"\",\n                        customFieldsValues : {}\n                    };\n\n                    // -- Get max split index, used when adding a new document --\n                    if (this.documents[documentIndex].splitIndex > this.currentBatch.maxSplitIndex) {\n                        this.currentBatch.maxSplitIndex = this.documents[documentIndex].splitIndex;\n                    }\n                    if (data['documents'][documentIndex]['data'].hasOwnProperty('custom_fields')) {\n                        this.documents[documentIndex].customFieldsValues = data['documents'][documentIndex]['data']['custom_fields'];\n                    }\n\n                    // -- Add document forms --\n                    this.documents[documentIndex].form = this.getFormForDocument(documentIndex);\n\n                    // -- Add documents pages --\n                    for (const page of data['documents'][documentIndex]['pages']) {\n                        this.documents[documentIndex].pages.push({\n                            id             : page['id'],\n                            showZoomButton : false,\n                            checkBox       : false,\n                            rotation       : page['rotation'],\n                            sourcePage     : page['source_page'],\n                            thumbnail      : this.sanitize(page['thumbnail'])\n                        });\n                    }\n                }\n                this.selectDocument(this.documents[0]);\n                this.enableFieldsByDoctypeCondition();\n                this.documentsLoading = false;\n            }),\n            catchError((err: any) => {\n                this.notify.handleErrors(err);\n                console.debug(err);\n                this.documentsLoading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDocumentDisplayOrder() {\n        const updatedDocuments = [];\n        for (const document of this.documents) {\n            const currentDisplayOrder   = document.displayOrder;\n            const newDisplayOrder       = currentDisplayOrder + 1;\n            if (currentDisplayOrder > this.currentBatch.selectedDocument.displayOrder) {\n                document.displayOrder = newDisplayOrder;\n                updatedDocuments.push({\n                    'id': Number(document.id.split('-').pop()),\n                    'displayOrder': newDisplayOrder\n                });\n            }\n        }\n        return updatedDocuments;\n    }\n\n    sortDocumentsByDisplayOrder() {\n        this.documents.sort((a:any, b:any) => (a.displayOrder > b.displayOrder) ? 1 : -1);\n    }\n\n    createDocument() {\n        if (this.addDocumentLoading) { return; }\n        this.hasUnsavedChanges = true;\n        const documentDisplayOrder  = this.updateDocumentDisplayOrder();\n        this.addDocumentLoading = true;\n        this.http.post(environment['url'] + '/ws/splitter/addDocument',\n            {\n                'batchId'           : this.currentBatch.id,\n                'splitIndex'        : this.currentBatch.maxSplitIndex + 1,\n                'displayOrder'      : this.currentBatch.selectedDocument.displayOrder + 1,\n                'updatedDocuments'  : documentDisplayOrder\n            },\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const newId = `document-${data.newDocumentId}`;\n                this.documents.push({\n                    id                 : newId,\n                    doctypeLabel       : \"\",\n                    doctypeKey         : \"\",\n                    class              : \"\",\n                    pages              : [],\n                    customFieldsValues : {},\n                    status             : \"NEW\",\n                    splitIndex         : this.currentBatch.maxSplitIndex + 1,\n                    displayOrder       : this.currentBatch.selectedDocument.displayOrder + 1\n                });\n                this.documents[this.documents.length - 1].form = this.getFormForDocument(this.documents.length - 1);\n                this.sortDocumentsByDisplayOrder();\n                this.currentBatch.maxSplitIndex++;\n                this.addDocumentLoading = false;\n                this.notify.success(this.translate.instant('SPLITTER.document_added_with_success'));\n            }),\n            catchError((err: any) => {\n                this.addDocumentLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormForDocument(documentIndex: number) {\n        const newForm = new FormGroup({});\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const control = field.required ? new FormControl('', Validators.required) : new FormControl('');\n            const labelShort = field.label_short;\n\n            if (this.documents[documentIndex]['customFieldsValues'].hasOwnProperty(labelShort)) {\n                control.setValue(this.documents[documentIndex]['customFieldsValues'][labelShort]);\n                control.valueChanges.subscribe(value => {\n                    this.documents[documentIndex]['customFieldsValues'][labelShort] = value;\n                });\n            }\n\n            newForm.addControl(labelShort, control);\n            if (field.metadata_key) { // used to control autocomplete search fields\n                const controlSearch = new FormControl('');\n                newForm.addControl(\"search_\" + labelShort, controlSearch);\n            }\n        }\n        return newForm;\n    }\n\n    getZoomPage(page: any) {\n        this.currentBatch.pageIdInLoad = page.id;\n        this.http.get(environment['url'] + '/ws/splitter/pages/' + (page.id).toString() + '/fullThumbnail', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.showZoomPage = true;\n                this.zoomPage = {\n                    pageId    : page.id,\n                    rotation  : page.rotation,\n                    thumbnail : this.sanitize(data['fullThumbnail'])\n                };\n                this.currentBatch.pageIdInLoad = -1;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.currentBatch.pageIdInLoad = -1;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /* -- Metadata -- */\n    loadDefaultDocType() {\n        this.loading      = true;\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (this.currentBatch.formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.doctypes.forEach((doctype: {\n                        id         : any\n                        key        : string\n                        type       : string\n                        label      : string\n                        is_default : boolean\n                    }) => {\n                        if (doctype.is_default && doctype.type === 'document') {\n                            this.defaultDoctype = {\n                                'id'        : doctype.id,\n                                'key'       : doctype.key,\n                                'label'     : doctype.label,\n                                'type'      : doctype.type,\n                                'isDefault' : doctype.is_default\n                            };\n                        }\n                    }\n                );\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getPlaceholderFromResultMask(mask: string, metadata: any) {\n        const maskVariables = mask ? mask.split('#') : [];\n        const result        = [];\n        for (const maskVariable of maskVariables!) {\n            result.push(metadata.hasOwnProperty(maskVariable) ? metadata[maskVariable] : maskVariable);\n        }\n        return result.join(' ');\n    }\n\n    getPlaceholderFromSearchMask(mask: string, label: string) {\n        return mask ? mask.replace('#label', label) : label;\n    }\n\n    fillDataValues(data: any): void {\n        this.hasUnsavedChanges = true;\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            if (key && this.batchForm.get(key)) {\n                this.batchForm.get(key)?.setValue(newValue);\n            }\n        }\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            for (const document of this.documents) {\n                if (key && document.form.get(key)) {\n                    document.form.get(key)?.setValue(newValue);\n                }\n            }\n        }\n    }\n\n    loadReferentialOnView(): void {\n        this.http.get(environment['url'] + `/ws/splitter/metadataMethods/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.metadataMethods[0].callOnSplitterView) {\n                    this.loadReferential(false, false);\n                }\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadReferentialWithConfirmation(refreshAfterLoad: boolean): void {\n        this.metadata = [];\n        this.http.get(environment['url'] + `/ws/splitter/loadReferential/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadata.forEach((metadataItem: any) => {\n                    metadataItem.data['metadataId'] = metadataItem['external_id'] ? metadataItem['external_id'] : metadataItem['id'];\n                    for (const field of this.fieldsCategories['batch_metadata']) {\n                        const metadataKey = field['metadata_key'];\n                        if (metadataKey && !(metadataKey in metadataItem.data)) {\n                            metadataItem.data[metadataKey] = '';\n                        }\n                    }\n                    this.metadata.push(metadataItem.data);\n                });\n                if (this.currentBatch.customFieldsValues.hasOwnProperty('metadataId')) {\n                    const autocompletionValue = this.metadata.filter(item => item.metadataId === this.currentBatch.customFieldsValues.metadataId);\n                    if (autocompletionValue.length > 0) {\n                        this.filteredServerSideMetadata.next(autocompletionValue);\n                        this.fillData((autocompletionValue[0]));\n                        this.setValuesFromSavedMetadata(autocompletionValue[0]);\n                    }\n                }\n                if (refreshAfterLoad) {\n                    this.loadSelectedBatch();\n                }\n                this.notify.success(this.translate.instant('SPLITTER.referential_updated'));\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadReferential(refreshAfterLoad: boolean, saveModificationsBeforeReload: boolean): void {\n        if (saveModificationsBeforeReload) {\n            this.saveModifications();\n        }\n        this.loadReferentialWithConfirmation(refreshAfterLoad);\n    }\n\n    setValueChange(key: string, value: string) {\n        this.hasUnsavedChanges = true;\n        this.batchMetadataValues[key] = value;\n        this.updateProgressBar();\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    fillData(selectedMetadata: any) {\n        this.batchMetadataValues = selectedMetadata;\n        const optionId = this.batchMetadataValues['metadataId'];\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field['metadata_key']) {\n                if (field.type === 'select' && selectedMetadata[field['metadata_key']]) {\n                    this.batchForm.get(field['metadata_key'])?.setValue(selectedMetadata[field['metadata_key']]);\n                } else {\n                    this.batchForm.get(field['metadata_key'])?.setValue(optionId);\n                    this.batchMetadataValues[field['label_short']] = selectedMetadata[field['metadata_key']];\n                }\n            }\n        }\n    }\n\n    loadForms() {\n        this.forms = [];\n        this.http.get(environment['url'] + '/ws/forms/splitter/list?user_id=' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onFormChange(newFormId: number): void {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('GLOBAL.confirm_form_change'),\n                confirmButton      : this.translate.instant('GLOBAL.confirm_modification'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.http.post(environment['url'] + '/ws/splitter/changeForm',\n                    {\n                        'batchId' : this.currentBatch.id,\n                        'formId'  : newFormId\n                    },\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('SPLITTER.barch_form_change_success'));\n                        this.translate.get('HISTORY-DESC.change_batch_form',\n                            {\n                                batch_id : this.currentBatch.id,\n                                form_id  : newFormId\n                            })\n                            .subscribe((translated: string) => {\n                                this.historyService.addHistory('splitter', 'viewer', translated);\n                            });\n                        this.loadSelectedBatch();\n                    }),\n                    catchError((err: any) => {\n                        this.loading = false;\n                        this.notify.handleErrors(err);\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.currentBatch.formId = this.currentBatch.previousFormId;\n            }\n        });\n    }\n\n    loadFormFields(): void {\n        this.inputMode = 'Manual';\n        this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.currentBatch.formId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (const fieldCategory in this.fieldsCategories) {\n                    this.fieldsCategories[fieldCategory] = [];\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            this.fieldsCategories[fieldCategory].push({\n                                'id'                   : field.id,\n                                'type'                 : field.type,\n                                'label'                : field.label,\n                                'class'                : field.class,\n                                'disabled'             : field.disabled,\n                                'settings'             : field.settings,\n                                'required'             : field.required,\n                                'searchMask'           : field.searchMask,\n                                'resultMask'           : field.resultMask,\n                                'label_short'          : field.label_short,\n                                'metadata_key'         : field.metadata_key,\n                                'validationMask'       : field.validationMask,\n                                'invert_fields'        : field.invert_fields,\n                                'conditioned_fields'   : field.conditioned_fields,\n                                'conditioned_doctypes' : field.conditioned_doctypes\n                            });\n                            if (fieldCategory === 'batch_metadata' && field.metadata_key &&\n                                !field.metadata_key.includes(\"SEPARATOR_META\")) {\n                                this.inputMode = 'Auto';\n                            }\n                        });\n                    }\n                }\n                this.batchForm = this.toBatchFormGroup();\n                this.updateProgressBar();\n\n                // listen for search field value changes\n                for (const fieldCategory in this.fieldsCategories) {\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            if (field.metadata_key && this.batchForm.get('search_' + field.label_short)) {\n                                this.batchForm.get('search_' + field.label_short)?.valueChanges\n                                    .pipe(\n                                        filter((search: string) => !!search),\n                                        takeUntil(this._onDestroy),\n                                        debounceTime(200),\n                                        map(search => {\n                                            if (!this.metadata || search.length < 3) {\n                                                return [];\n                                            }\n                                            this.searching = true;\n                                            return this.metadata.filter(\n                                                metadataItem => remove(metadataItem[field.label_short].toString())\n                                                    .toLowerCase()\n                                                    .indexOf(remove(search.toString().toLowerCase())) > -1\n                                            );\n                                        }),\n                                        delay(500)\n                                    )\n                                    .subscribe(filteredMetadata => {\n                                        this.filteredServerSideMetadata.next(filteredMetadata);\n                                        this.searching = false;\n                                    }, () => {\n                                        this.searching = false;\n                                    });\n                            }\n                        });\n                    }\n                }\n                this.loadDocuments();\n            }), finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormFieldsValues() {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if ((this.batchForm.get(field.label_short) && !field.metadata_key) || this.inputMode != 'Auto') {\n                this.batchMetadataValues[field.label_short] = this.batchForm.get(field.label_short)?.value;\n                if (field.type === 'date') {\n                    this.batchMetadataValues[field.label_short] = moment(this.batchMetadataValues[field.label_short]).format('L');\n                }\n            }\n        }\n    }\n\n    toBatchFormGroup():FormGroup {\n        const group: any = {};\n        const format = moment().localeData().longDateFormat('L');\n        this.fieldsCategories['batch_metadata'].forEach((field: Field) => {\n            group[field.label_short] = field.required ?\n                new FormControl({value: '', disabled: field.disabled}, Validators.required) :\n                new FormControl({value: '', disabled: field.disabled});\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field.label_short)) {\n                const value = field.type !== 'date' ? this.currentBatch.customFieldsValues[field.label_short] :\n                    moment(this.currentBatch.customFieldsValues[field.label_short], format);\n                group[field.label_short].setValue(value);\n            }\n            if (field.metadata_key) {\n                group['search_' + field.label_short] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n\n    b64toBlob(b64Data: string, contentType = '', sliceSize = 512) {\n        const byteCharacters = atob(b64Data);\n        const byteArrays = [];\n\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n            const byteNumbers = new Array(slice.length);\n            for (let i = 0; i < slice.length; i++) {\n                byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            const byteArray = new Uint8Array(byteNumbers);\n            byteArrays.push(byteArray);\n        }\n\n        return new Blob(byteArrays, {type: contentType});\n    }\n\n    downloadOriginalFile(): void {\n        this.downloadLoading = true;\n        this.http.get(environment['url'] + '/ws/splitter/batch/' + this.currentBatch.id + '/file',\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const blob = this.b64toBlob(data['encodedFile'], 'application/pdf');\n                const blobUrl = URL.createObjectURL(blob);\n                const newWindow = window.open();\n                newWindow!.document.write(`<iframe style=\"width: 100%;height: 100%;margin: 0;padding: 0;\" src=\"${blobUrl}\" allowfullscreen></iframe>`);\n                newWindow!.document.title = data['filename'];\n            }),\n            finalize(() => this.downloadLoading = false),\n            catchError((err: any) => {\n                this.downloadLoading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onCheckBoxChange(checkboxField: any, $event: MatCheckboxChange) {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field['conditioned_fields'].includes(checkboxField['label_short'])) {\n                if ($event.checked) {\n                    this.batchForm.controls[field['label_short']].enable();\n                } else {\n                    this.batchForm.controls[field['label_short']].setValue(\"\");\n                    this.batchForm.controls[field['label_short']].disable();\n                }\n            }\n            if (field['type'] === 'checkbox' && field['invert_fields'].includes(checkboxField['label_short'])) {\n                if ($event.checked) {\n                    this.batchForm.controls[field['label_short']].setValue(false);\n                }\n            }\n        }\n        this.updateProgressBar();\n    }\n\n    enableFieldsByDoctypeCondition() {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field['conditioned_doctypes'].length > 0) {\n                let shouldDisable = true;\n                for (const document of this.documents) {\n                    if (field['conditioned_doctypes'].includes(document.doctypeKey)) {\n                        this.batchForm.controls[field['label_short']].enable();\n                        shouldDisable = false;\n                        break;\n                    }\n                }\n                if (shouldDisable) {\n                    this.batchForm.controls[field['label_short']].setValue(\"\");\n                    this.batchForm.controls[field['label_short']].disable();\n                }\n            }\n        }\n    }\n\n    getConfigurations() {\n        for (const config in this.configurations) {\n            this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/' + config,\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.configurations[config] = data.configuration[0].data.value;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n    /* -- End Metadata -- */\n\n    /* -- Begin documents control -- */\n    addDocumentIdToDropList(id: string): string {\n        if (!this.DropListDocumentsIds.includes(id)) {\n            this.DropListDocumentsIds.push(id);\n        }\n        return id;\n    }\n\n    sanitize(url: string): any {\n        return this._sanitizer.sanitize(SecurityContext.URL, 'data:image/jpg;base64,' + url);\n    }\n\n    dropPage(event: CdkDragDrop<any[]>, document: any): void {\n        this.hasUnsavedChanges = true;\n        let pageId;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n            pageId = event.container.data[event.currentIndex].id;\n        } else {\n            transferArrayItem(event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n            pageId = event.container.data[event.currentIndex].id;\n            this.movedPages.push({\n                'pageId'        : pageId,\n                'newDocumentId' : Number(document['id'].split('-')[1])\n            });\n        }\n        this.setPageSelection(pageId, false);\n    }\n\n    dropDocument(event: CdkDragDrop<string[]>): void {\n        this.hasUnsavedChanges = true;\n        moveItemInArray(this.documents, event.previousIndex, event.currentIndex);\n        this.OrderDisplayDocumentValues();\n    }\n\n    OrderDisplayDocumentValues(): void {\n        let cpt = 1;\n        for (const document of this.documents) {\n            document.displayOrder = cpt;\n            cpt++;\n        }\n    }\n\n    openDoctypeTree(document: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '860px',\n            data    : {\n                allowImportExport : false,\n                allowUniqueDocType : false,\n                formId            : this.currentBatch.formId,\n                selectedDoctype   : {\n                    key     : document.doctypeKey  ? document.doctypeKey  : \"\",\n                    label   : document.doctypeLabel  ? document.doctypeLabel  : \"\"\n                }\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                document.doctypeLabel   = result.label;\n                document.doctypeKey     = result.key;\n                this.hasUnsavedChanges  = true;\n                this.enableFieldsByDoctypeCondition();\n            }\n        });\n    }\n\n    selectDocument(document: any): void {\n        this.currentBatch.selectedDocument = {'id': document.id, 'displayOrder': document.displayOrder};\n    }\n\n    deleteDocument(documentIndex: number): void {\n        const pagesCount = this.documents[documentIndex].pages.length;\n        const confirmMessage = pagesCount > 0 ?\n            this.translate.instant('SPLITTER.confirm_delete_document_not_empty', {\"pagesCount\": pagesCount}) :\n            this.translate.instant('SPLITTER.confirm_delete_document_empty');\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : confirmMessage,\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletedDocumentsIds.push(this.documents[documentIndex].id);\n                this.documents = this.deleteItemFromList(this.documents, documentIndex);\n                this.hasUnsavedChanges = true;\n                this.saveModifications();\n            }\n        });\n    }\n\n    onBatchDrop(batchIdToMerge: number) {\n        this.isBatchOnDrag = false;\n        if (!this.isMouseInDocumentList) {\n            return;\n        }\n        if (this.isMouseInDocumentList && this.currentBatch.id === batchIdToMerge) {\n            this.notify.error(this.translate.instant('SPLITTER.can_not_merge_same_batch'));\n            return;\n        }\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmButton       : this.translate.instant('SPLITTER.merge'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_merge_batches')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.mergeBatches(batchIdToMerge);\n            }\n        });\n    }\n\n    mergeBatches(batchIdToMerge: number) {\n        this.http.post(environment['url'] + '/ws/splitter/merge/' + this.currentBatch.id, {'batches': [batchIdToMerge]}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.loadSelectedBatch();\n                this.notify.success(this.translate.instant('SPLITTER.merge_success'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    dropBatch(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.batches, event.previousIndex, event.currentIndex);\n    }\n\n    updateProgressBar() {\n        if (!this.configurations['enableSplitterProgressBar']) {\n            return;\n        }\n        this.currentBatch.progress = 100;\n        let batchFieldsCount = Object.keys(this.batchForm.controls).length;\n        for (const key of Object.keys(this.batchForm.controls)) {\n            if (this.batchForm.controls[key].disabled) {\n                batchFieldsCount = batchFieldsCount - 1;\n                if (batchFieldsCount <= 0) {\n                    return;\n                }\n            }\n        }\n        for (const key of Object.keys(this.batchForm.controls)) {\n            if (!this.batchForm.controls[key].value && !this.batchForm.controls[key].disabled) {\n                this.currentBatch.progress = this.currentBatch.progress - (100 /  batchFieldsCount);\n            }\n        }\n    }\n    /* -- End documents control -- */\n\n    /* -- Begin toolbar -- */\n    deleteItemFromList(list: any[], index: number): any[] {\n        delete list[index];\n        list = list.filter((x: any): x is any => x !== null);\n        return list;\n    }\n\n    selectPage(page: any) {\n        page['checkBox'] = !page['checkBox'];\n        this.countSelectedPages();\n    }\n\n    countSelectedPages(): void {\n        let selectedPageCount = 0;\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                if (page.checkBox) {\n                    selectedPageCount++;\n                }\n            }\n        }\n        this.currentBatch.selectedPagesCount = selectedPageCount;\n    }\n\n    deleteSelectedPages(): void {\n        if (this.currentBatch.selectedPagesCount === 0) {\n            return;\n        }\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_delete_pages', {\"pagesCount\": this.currentBatch.selectedPagesCount}),\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                for (const document of this.documents) {\n                    for (let pageIndex = 0; pageIndex < document.pages.length; pageIndex++) {\n                        if (document.pages[pageIndex].checkBox) {\n                            this.deletedPagesIds.push(document.pages[pageIndex].id);\n                            document.pages = this.deleteItemFromList(document.pages, pageIndex);\n                            pageIndex--;\n                        }\n                    }\n                }\n                this.hasUnsavedChanges = true;\n            }\n        });\n    }\n\n    setPageSelection(pageId: number, check: boolean): void {\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                if (page.id === pageId) {\n                    page.checkBox = check;\n                }\n            }\n        }\n        this.countSelectedPages();\n    }\n\n    setAllPagesTo(check: boolean): void {\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                this.setPageSelection(page.id, check);\n            }\n        }\n    }\n\n    rotatePage(documentIndex: number, pageIndex: number): void {\n        const currentDegree = this.documents[documentIndex].pages[pageIndex].rotation;\n        this.hasUnsavedChanges = true;\n        switch (currentDegree) {\n            case -90: {\n                this.documents[documentIndex].pages[pageIndex].rotation = 0;\n                break;\n            }\n            case 180: {\n                this.documents[documentIndex].pages[pageIndex].rotation = -90;\n                break;\n            }\n            default: {\n                this.documents[documentIndex].pages[pageIndex].rotation += 90;\n                break;\n            }\n        }\n\n        if (this.zoomPage.pageId === this.documents[documentIndex].pages[pageIndex].id) {\n            this.zoomPage.rotation = this.documents[documentIndex].pages[pageIndex].rotation;\n        }\n    }\n\n    rotateSelectedPages(): void {\n        for (let documentIndex = 0; documentIndex < this.documents.length; documentIndex++) {\n            for (let pageIndex = 0; pageIndex < this.documents[documentIndex].pages.length; pageIndex++) {\n                if (this.documents[documentIndex].pages[pageIndex].checkBox) {\n                    this.rotatePage(documentIndex, pageIndex);\n                }\n            }\n        }\n    }\n\n    sendSelectedPages(): void {\n        const selectedDoc = this.documents.filter((doc: any) => doc.id === this.toolSelectedOption);\n        if (!selectedDoc) {\n            return;\n        }\n        const selectedDocIndex = this.documents.indexOf(selectedDoc[0]);\n        for (const document of this.documents) {\n            for (let pageIndex = 0; pageIndex < document.pages.length; pageIndex++) {\n                if (document.pages[pageIndex].checkBox) {\n                    const newPosition = this.documents[selectedDocIndex].pages.length;\n                    transferArrayItem(document.pages,\n                        this.documents[selectedDocIndex].pages, pageIndex,\n                        newPosition);\n                    pageIndex = pageIndex - 1;\n                    const pageId = this.documents[selectedDocIndex].pages[newPosition].id;\n                    this.movedPages.push({\n                        'pageId'        : pageId,\n                        'newDocumentId' : Number(this.documents[selectedDocIndex].id.split('-')[1])\n                    });\n                    this.setPageSelection(pageId, false);\n                }\n            }\n        }\n        this.hasUnsavedChanges = true;\n    }\n\n    changeBatch(id: number): void {\n        this.loading = true;\n        this.batchMetadataValues = {};\n        this.fieldsCategories['batch_metadata'] = [];\n        this.fillDataValues({});\n        this.router.navigate(['splitter/viewer/' + this.currentTime + '/' + id]).then();\n        this.currentBatch.id = id;\n        this.loadSelectedBatch();\n        this.hasUnsavedChanges = false;\n    }\n\n    cancelBatchModification(): void {\n        if (this.hasUnsavedChanges) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data:{\n                    confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                    confirmText        : this.translate.instant('SPLITTER.quit_without_saving_modifications'),\n                    confirmButton      : this.translate.instant('SPLITTER.quit_without_saving'),\n                    confirmButtonColor : \"warn\",\n                    cancelButton       : this.translate.instant('GLOBAL.cancel')\n                },\n                width: \"600px\"\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.router.navigate([\"/splitter/list\"]).then();\n                }\n            });\n        }\n        else {\n            this.router.navigate([\"/splitter/list\"]).then();\n        }\n    }\n\n    validateWithConfirmation(): void {\n        const doctypeKeys = new Set<string>();\n        const selectedForm = this.forms.find( form => form.id === this.currentBatch.formId );\n        for (const document of this.documents) {\n            if (doctypeKeys.has(document.doctypeKey) && selectedForm.settings.unique_doc_type) {\n                this.notify.error(this.translate.instant('SPLITTER.error_duplicate_doctype'));\n                this.loading = false;\n                return;\n            }\n            else {\n                doctypeKeys.add(document.doctypeKey);\n            }\n        }\n        if (!this.batchForm.valid && this.inputMode === \"Manual\") {\n            this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n            this.loading = false;\n            return;\n        }\n        if (this.inputMode === 'Auto' && !this.batchMetadataValues.metadataId && this.fieldsCategories['batch_metadata'].length !== 0) {\n            this.notify.error(this.translate.instant('SPLITTER.error_autocomplete_value'));\n            return;\n        }\n        for (const document of this.documents) {\n            if (!document.form.valid) {\n                this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n                this.loading = false;\n                return;\n            }\n            if (!document.doctypeKey) {\n                document.class = \"text-red-500\";\n                this.notify.error(this.translate.instant('SPLITTER.error_no_doc_type'));\n                this.loading = false;\n                return;\n            } else {\n                document.class = \"\";\n            }\n        }\n        this.getFormFieldsValues();\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field.validationMask) {\n                if (!this.batchMetadataValues[field.label_short].match(field.validationMask)) {\n                    this.notify.error(this.translate.instant('SPLITTER.field_form_not_respected', {'field': field.label}));\n                    this.loading = false;\n                    return;\n                }\n            }\n        }\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_validate'),\n                confirmButton      : this.translate.instant('SPLITTER.validate_batch'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.validate();\n            }\n        });\n    }\n\n    validate(): void {\n        this.validateLoading = true;\n        this.notify.success(this.translate.instant('SPLITTER.batch_validate_processing'), 60000);\n\n        const batchMetadata             = this.batchMetadataValues;\n        batchMetadata['id']             = this.currentBatch.id;\n        batchMetadata['userName']       = this.userService.user['username'];\n        batchMetadata['userLastName']   = this.userService.user['lastname'];\n        batchMetadata['userFirstName']  = this.userService.user['firstname'];\n\n        // Build documents metadata arguments\n        const _documents: any[] = [];\n        for (const document of this.documents) {\n            const _document: any = {\n                id            : document['id'],\n                displayOrder  : document['displayOrder'],\n                doctypeKey    : document['doctypeKey'],\n                doctypeLabel  : document['doctypeLabel'],\n                metadata      : document.form.getRawValue(),\n                pages         : []\n            };\n            for (const page of document.pages) {\n                _document.pages.push({\n                    id         : page['id'],\n                    rotation   : page['rotation'],\n                    sourcePage : page['sourcePage']\n                });\n            }\n            _documents.push(_document);\n        }\n        this.http.post(environment['url'] + '/ws/splitter/export',\n            {\n                'documents'           : _documents,\n                'batchMetadata'       : batchMetadata,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n                'formId'              : this.currentBatch.formId\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.translate.get('HISTORY-DESC.validate_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n                    this.historyService.addHistory('splitter', 'viewer', translated);\n                });\n                this.notify.clear();\n                this.notify.success(this.translate.instant('SPLITTER.validate_batch_success'));\n                this.router.navigate(['splitter/list']).then();\n            }),\n            catchError((err: any) => {\n                this.validateLoading = false;\n                this.notify.clear();\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveModifications(): void {\n        this.saveInfosLoading   = true;\n        this.getFormFieldsValues();\n\n        const _documents        = [];\n        for (const document of this.documents) {\n            const _document         = Object.assign({}, document);\n            _document['metadata']   = document.form.getRawValue();\n            delete _document.class;\n            delete _document.form;\n            _documents.push(_document);\n\n        }\n        this.http.post(environment['url'] + '/ws/splitter/saveModifications',\n            {\n                'documents'           : _documents,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n                'batchMetadata'       : this.batchMetadataValues\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.saveInfosLoading   = false;\n                this.hasUnsavedChanges       = false;\n                this.notify.success(this.translate.instant('SPLITTER.batch_modification_saved'));\n            }),\n            catchError((err: any) => {\n                this.saveInfosLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getOutputsLabels(): string {\n        const outputsLabels = [];\n        for (const output of this.currentBatch.outputs) {\n            outputsLabels.push(output.label);\n        }\n        return outputsLabels.join(', ');\n    }\n    /* -- End toolbar -- */\n\n    removeLockByBatchId() {\n        if (this.currentBatch.id) {\n            this.http.put(environment['url'] + '/ws/splitter/removeLockByBatchId',\n                {'batch_id': this.currentBatch.id},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<div *ngIf=\"this.loading || this.documentsLoading || this.batchesLoading || this.validateLoading\">\n    <app-loader></app-loader>\n</div>\n<mat-drawer-container\n        [hasBackdrop]=\"false\"\n        *ngIf=\"!this.loading\"\n        (click)=\"onScreenClick($event)\"\n        [class.pointer-events-none]=\"validateLoading\"\n        class=\"w-full absolute top-16 bottom-0\">\n    <mat-drawer #drawer mode=\"side\" [opened]=\"true\" class=\"w-1/5\">\n        <div class=\"mt-1\">\n            <div [ngSwitch]=\"currentTime\" class=\"mt-2 w-full h-10 grid place-content-center\">\n                <div class=\"text-base text-slate-400\">\n                    {{ timeLabels[currentTime] | translate }}, {{ getStatusLabel(currentBatch.status) }}\n                </div>\n            </div>\n            <span *ngIf=\"batches.length === 0\" class=\"text-slate-400 w-full grid place-content-center\">\n                {{ 'GLOBAL.no_batch_found' | translate }}\n            </span>\n            <div cdkDropList  (cdkDropListDropped)=\"dropBatch($event)\">\n                <div class=\"cursor-move\" (cdkDragStarted)=\"this.isBatchOnDrag = true\" (cdkDragEnded)=\"onBatchDrop(batch.id)\"\n                     *ngFor=\"let batch of this.batches\" cdkDrag>\n                    <div *cdkDragPlaceholder class=\"drop-shadow-xl w-full h-40 text-center text-gray-500 bg-slate-50 grid place-content-center\">\n                        <i class=\"fa-solid fa-object-group fa-3x\"></i>\n                        {{ 'SPLITTER.selected_batch_for_merge' | translate }}\n                    </div>\n                    <mat-card class=\"mat-elevation-z4 my-2 cursor-move\" [ngClass]=\"{'border-4 border-green-400': this.currentBatch.id === batch.id}\">\n                        <a class=\"image-link\" (click)=\"changeBatch(batch['id'])\">\n                            <mat-card-header>\n                                <img mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter thumbnail\">\n                            </mat-card-header>\n                        </a>\n                        <mat-card-content>\n                            <span matTooltip=\"{{ 'SPLITTER.document_number' | translate }} : {{ batch['documentsCount'] }}\"\n                                  class=\"float-right text-green-400\">\n                                {{ batch['documentsCount'] }}\n                                <i class=\"far fa-file-alt\"></i>\n                            </span>\n                            <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                                <span class=\"leading-7 flex\">\n                                    {{ batch['fileName'] }}\n                                </span>\n                                <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                                <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                            </mat-card-subtitle>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </mat-drawer>\n    <mat-drawer-content class=\"flex flex-col items-start bg-white\">\n        <button class=\"btn-show-batches left-0 sticky min-h-full mt-0 top-0 left-0 w-2.5 min-w-0\"\n                mat-raised-button (click)=\"drawer.toggle()\">\n            <span>\n                <i *ngIf=\"drawer.opened\" class=\"fa-solid fa-angle-left\"></i>\n                <i *ngIf=\"!drawer.opened\" class=\"fa-solid fa-angle-right\"></i>\n            </span>\n        </button>\n        <div *ngIf=\"showZoomPage\" class=\"fixed z-20 w-4/12 h-5/6 grid justify-items-stretch right-0 top-20\">\n            <img id=\"zoom-image\" class=\"justify-self-end border-2\"\n                 mat-card-image\n                 [src]=\"zoomPage.thumbnail\"\n                 [ngClass]=\"\n                    (zoomPage['rotation'] === 0)   ? 'rotate-0 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === 90)  ? 'rotate-90 h-full w-4/5 mr-36':\n                    (zoomPage['rotation'] === 180) ? 'rotate-180 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === -90) ? '-rotate-90 h-full w-4/5 mr-36':\n                    ''\"\n                 alt=\"Zoom\"/>\n        </div>\n        <div class=\"w-10/12 absolute top-0 mx-32\" (mouseenter)=\"isMouseInDocumentList = true\" (mouseleave)=\"isMouseInDocumentList = false\">\n            <div *ngIf=\"isBatchOnDrag\" class=\"absolute h-full w-full bg-green-400 z-40 opacity-50 rounded\"\n                 [matTooltip]=\"'SPLITTER.drop_batch_to_merge' | translate\">\n                <div class=\"text-center m-auto sticky top-96\">\n                    <i class=\"fa-solid fa-object-group fa-4x w-full mb-1\"></i>\n                    <span class=\"text-2xl\"> {{ 'SPLITTER.drop_here' | translate }} </span>\n                </div>\n            </div>\n            <mat-accordion class=\"w-full\">\n                <mat-expansion-panel class=\"my-6\" [expanded]=\"true\" (opened)=\"batchMetadataOpenState = true\"\n                                     (closed)=\"batchMetadataOpenState = false\" #batchMetadata>\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"grid grid-cols-3 gap-3\">\n                            <div class=\"grid grid-cols-2 gap-2\">\n                                <span>\n                                    {{ 'SPLITTER.batch_metadata' | translate }}\n                                </span>\n                            </div>\n                            <div>\n                                <mat-form-field class=\"w-full p-4\" id=\"form-select-field\"\n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"{{ 'SPLITTER.edit_used_form' | translate }}\">\n                                    <i matPrefix class=\"fa-sharp fa-solid fa-caret-down text-green-400 fa-lg\"></i>\n                                    <mat-select (selectionChange)=\"onFormChange($event.value)\" [(ngModel)]=\"currentBatch.formId\">\n                                        <mat-option [value]=\"form.id\" *ngFor=\"let form of this.forms;\">\n                                            {{ form.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"text-right text-gray-400\">\n                                <span class=\"mx-2\" matTooltip=\"{{ 'HEADER.status' | translate }}\">\n                                    <i class=\"fa-solid fa-flag\"></i>\n                                    {{ getStatusLabel(currentBatch.status) }}\n                                </span>\n                                <span>\n                                    <i class=\"fa-solid fa-pipe\"></i>\n                                    {{ 'SPLITTER.identifier' | translate }} : {{ currentBatch.id }}\n                                </span>\n                            </div>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"text-gray-400 text-center w-full\" *ngIf=\"fieldsCategories['batch_metadata'].length === 0\">\n                        <i class=\"block fa-solid fa-check fa-3x\"></i>\n                        <span class=\"block\">{{ 'SPLITTER.no_metadata_required' | translate }}</span>\n                    </div>\n                    <form [formGroup]=\"batchForm\" (change)=\"updateProgressBar()\"  class=\"flex flex-wrap mx-8\">\n                        <div *ngFor=\"let field of fieldsCategories['batch_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                            <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>\n                                        <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                    </mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\" (change)=\"updateProgressBar()\">\n                                        <mat-option *ngIf=\"field.metadata_key\">\n                                            <ngx-mat-select-search\n                                                    [formControlName]=\"'search_' + field.label_short\"\n                                                    placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                    [searching]=\"searching\"\n                                                    noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                            </ngx-mat-select-search>\n                                        </mat-option>\n                                        <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                    [value]=\"metadata.metadataId\"\n                                                    (click)=\"fillData(metadata)\">\n                                            <span class=\"search-mask-result\"\n                                                    *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                  [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                            </span>\n                                            <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                {{ metadata[field.label_short] }}\n                                            </span>\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <textarea matInput formControlName=\"{{ field.label_short }}\"\n                                              (ngModelChange)=\"setValueChange(field.label_short, $event)\"></textarea>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"(field.type === 'text' || field.type === 'regex')  && (!field.metadata_key || inputMode === 'Manual')\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <input matInput formControlName=\"{{ field.label_short }}\">\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\"\n                                                (selectionChange)=\"setValueChange(field.label_short, $event.value)\">\n                                        <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                            {{ option.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"w-full\">\n                                    <input matInput [id]=\"field.id\" (dateChange)=\"updateProgressBar()\"\n                                           [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #datePicker></mat-datepicker>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\">\n                                <mat-checkbox formControlName=\"{{ field.label_short }}\"\n                                              (change)=\"onCheckBoxChange(field, $event)\">\n                                    {{ field.label }}\n                                </mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </form>\n                    <button mat-button (click)=\"downloadOriginalFile(); $event.stopPropagation();\"\n                            class=\"float-left mb-2\"\n                            matTooltip=\"{{ 'SPLITTER.show_original_file' | translate }}\">\n                        <i class=\"fa-solid fa-file-arrow-down fa-2x\" *ngIf=\"!downloadLoading\"></i>\n                        <i class=\"fas fa-circle-notch fa-spin fa-2x\" *ngIf=\"downloadLoading\"></i>\n                    </button>\n                    <button mat-button (click)=\"loadReferential(true, true); $event.stopPropagation();\"\n                            class=\"float-right mb-2\"\n                            matTooltip=\"{{ 'SPLITTER.load_referential' | translate }}\">\n                        <i class=\"fa-solid fa-sync fa-2x\"></i>\n                    </button>\n                    <mat-progress-bar\n                            class=\"overflow-hidden\"\n                            *ngIf=\"this.configurations['enableSplitterProgressBar']\"\n                            matTooltip=\"{{ 'SPLITTER.batch_metadata_progress_bar' | translate }}\"\n                            mode=\"determinate\"\n                            value=\"{{ this.currentBatch.progress }}\">\n                    </mat-progress-bar>\n                </mat-expansion-panel>\n            </mat-accordion>\n            <span *ngIf=\"documents.length === 0\" class=\"block align-text-top text-center text-red-600\">{{ 'SPLITTER.no_document_to_show' | translate }}</span>\n            <div cdkDropList (cdkDropListDropped)=\"dropDocument($event)\">\n                <mat-card class=\"document w-full shadow-lg mb-4 border-2 border-slate-200\"\n                          *ngFor=\"let document of documents; let documentIndex = index;\" (click)=\"selectDocument(document)\" cdkDrag>\n                    <div class=\"w-full h-40 border-dashed border-2 border-gray-400 bg-gray-200\" *cdkDragPlaceholder></div>\n                    <div class=\"drag-document absolute w-6 h-6 -left-2 -top-2 z-10 rounded-full text-gray-400 text-center\n                      align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                      \" matTooltip=\"{{ 'SPLITTER.change_document_position' | translate }}\" cdkDragHandle>\n                        <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                    </div>\n                    <div *cdkDragPreview class=\"mt-4 drop-shadow-xl w-4/6 h-40 text-center text-gray-500 bg-slate-50 grid place-content-center\">\n                        <div class=\"absolute w-8 h-8 -left-2 -top-2 z-10 rounded-full text-center\n                              align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                              grid place-content-center\" cdkDragHandle>\n                            <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                        </div>\n                        <i class=\"fa-solid fa-copy fa-3x\"></i>\n                        <span>{{ 'SPLITTER.drop_document_in_position' | translate }}</span>\n                    </div>\n                    <mat-card-title>\n                        <mat-accordion class=\"block mx-auto my-4\" style=\"width:98%;\">\n                            <mat-expansion-panel class=\"bg-gray-20\" [expanded]=\"fieldsCategories['document_metadata'].length !== 0\" (opened)=\"documentMetadataOpenState = true\"\n                                                 (closed)=\"documentMetadataOpenState = false\" #documentMetadata>\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title class=\"max-w-11/12\">\n                                        <button class=\"max-w-full text-lg text-left hover:text-green-400 {{ document['class'] }}\"\n                                                [ngClass]=\"!document['doctypeLabel'] ? 'text-red-500':''\"\n                                                (click)=\"documentMetadata.toggle(); openDoctypeTree(document);\"\n                                                matTooltip=\"{{ 'GLOBAL.edit' | translate }}\">\n                                            <div class=\"font-medium truncate\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                                {{ document['doctypeLabel'] }}\n                                                <span *ngIf=\"!document['doctypeLabel']\" class=\"mx-2\">{{ 'SPLITTER.no_selected_doctype' | translate }}</span>\n                                            </div>\n                                        </button>\n                                    </mat-panel-title>\n                                    <button mat-button class=\"absolute right-7\" (click)=\"deleteDocument(documentIndex); $event.stopPropagation();\"\n                                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\">\n                                        <i class=\"fa-solid fa-trash-alt text-lg\"></i>\n                                    </button>\n                                </mat-expansion-panel-header>\n                                <div class=\"text-gray-400 w-full\">\n                                    <span class=\"m-6 w-11/12\">{{ 'SPLITTER.document_metadata' | translate }}</span>\n                                    <mat-divider class=\"mx-6\" style=\"width: 96%;\"></mat-divider>\n                                    <div *ngIf=\"fieldsCategories['document_metadata'].length === 0\">\n                                        <i class=\"text-center block fa-solid fa-check fa-3x\"></i>\n                                        <span class=\"block text-center\" >\n                                            {{ 'SPLITTER.no_metadata_required' | translate }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <form [formGroup]=\"document.form\" class=\"flex flex-wrap mx-6 mt-4\">\n                                    <div *ngFor=\"let field of fieldsCategories['document_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                                        <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>\n                                                    <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                                </mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\">\n                                                    <mat-option *ngIf=\"field.metadata_key\">\n                                                        <ngx-mat-select-search\n                                                                [formControlName]=\"'search_' + field.label_short\"\n                                                                placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                                [searching]=\"searching\"\n                                                                noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                                        </ngx-mat-select-search>\n                                                    </mat-option>\n                                                    <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                                [value]=\"metadata.metadataId\">\n                                                        <span *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                              [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                                        </span>\n                                                        <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                            {{ metadata[field.label_short] }}\n                                                        </span>\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'textarea'\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <textarea matInput formControlName=\"{{ field.label_short }}\"></textarea>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"(field.type === 'text' || field.type === 'regex') && (!field.metadata_key || inputMode === 'Manual')\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <input matInput formControlName=\"{{ field.label_short }}\">\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'select'\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\">\n                                                    <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                                        {{ option.label }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'date'\">\n                                            <mat-form-field class=\"w-full\" >\n                                                <input matInput [id]=\"field.id\" [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                                <mat-datepicker #datePicker></mat-datepicker>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'checkbox'\" class=\"flex justify-center inline-block my-4\">\n                                            <mat-checkbox formControlName=\"{{ field.label_short }}\">{{ field.label }}</mat-checkbox>\n                                        </ng-container>\n                                    </div>\n                                </form>\n                            </mat-expansion-panel>\n                        </mat-accordion>\n                    </mat-card-title>\n                    <mat-card-content class=\"document-content w-full h-104\">\n                        <div cdkDropListOrientation=\"horizontal\" (click)=\"selectDocument(document)\"\n                             class=\"drop-list bg-white flex flex-row rounded w-full overflow-auto min-h-full\"\n                             style=\"background-image: url('assets/imgs/dots.jpg');\"\n                             [ngClass]=\"currentBatch.selectedDocument.id === document.id ? 'border-2 border-green-400':\n                             'border-2 border-gray-200 hover:cursor-pointer'\"\n                             (cdkDropListDropped)=\"dropPage($event, document)\" cdkDropList\n                             id=\"{{ addDocumentIdToDropList(document['id']) }}\" [cdkDropListData]=\"document['pages']\"\n                             [cdkDropListConnectedTo]=\"DropListDocumentsIds\">\n                            <div class=\"page m-1.5 bg-gray-200 rounded-md cursor-move w-60 p-1.5\"\n                                 *ngFor=\"let page of document['pages']; let pageIndex = index;\"\n                                 (click)=\"selectPage(page)\" cdkDrag>\n                                <div class=\"bg-gray-200 m-1.5 border-dashed border-2 border-gray-400 p-3\" *cdkDragPlaceholder></div>\n                                <div class=\"flex justify-between w-60 h-12\">\n                                    <mat-checkbox [(ngModel)]=\"page['checkBox']\"\n                                                  (click)=\"$event.stopPropagation();\"\n                                                  (change)=\"countSelectedPages();\"\n                                                  matTooltip=\"{{ 'SPLITTER.select' | translate }}\"\n                                                  class=\"page-check-box float-left mt-4\" id=\"page-check-box-{{ page['id'] }}\">\n                                    </mat-checkbox>\n                                    <button mat-button class=\"page-header-btn text-gray-400 mt-0\"\n                                            (click)=\"rotatePage(documentIndex, pageIndex); $event.stopPropagation()\"\n                                            matTooltip=\"{{ 'SPLITTER.pageRotated' | translate }} {{ ' ' + page['rotation'] + ' ' + ('SPLITTER.degrees' | translate)}}\">\n                                        <span *ngIf=\"page['rotation'] !== 0\">\n                                            {{ page['rotation'] }}\n                                        </span>\n                                        <i class=\"fa-solid fa-rotate-right\"></i>\n                                    </button>\n                                    <button mat-button class=\"page-header-btn float-right bg-gray-100 mr-4 mt-0\"\n                                            matTooltip=\"{{ 'SPLITTER.zoom' | translate }}\"\n                                            (click)=\"getZoomPage(page); $event.stopPropagation();\">\n                                        <i *ngIf=\"page.id !== this.currentBatch.pageIdInLoad\" class=\"fa-solid fa-search-plus\"></i>\n                                        <i *ngIf=\"page.id === this.currentBatch.pageIdInLoad\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"></i>\n                                    </button>\n                                </div>\n                                <img class=\"z-10\" [ngClass]=\"\n                                         (page['rotation'] === 0)   ? 'rotate-0 m-auto':\n                                         (page['rotation'] === 90)  ? 'rotate-90 m-auto scale-75 px-2':\n                                         (page['rotation'] === 180) ? 'rotate-180 m-auto':\n                                         (page['rotation'] === -90) ? '-rotate-90 m-auto scale-75 px-2':\n                                     ''\"\n                                     [src]=\"page['thumbnail']\"\n                                     title=\"{{ 'SPLITTER.moveToAnotherDoc' | translate }}\"\n                                     alt=\"Open-Capture Splitter thumbnail\"/>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <mat-card class=\"splitter-tools divide-x divide-green-500 border-gray-300 py-0 mb-8 z-10 sticky bottom-2.5\">\n                <mat-card-content style=\"overflow: auto;\" class=\"grid grid-rows-1 grid-cols-3\">\n                    <div class=\"absolute top-5 left-8 text-gray-500 px-2 border border-gray-600 rounded-lg bg-slate-50\"\n                         matTooltip=\"{{ currentBatch.selectedPagesCount }} {{ 'SPLITTER.selected_pages' | translate }}\">\n                        <span class=\"font-medium mx-1\">{{ currentBatch.selectedPagesCount }}</span>\n                        <i class=\"fa-solid fa-file\"></i>\n                    </div>\n                    <div class=\"bg-slate-50 border border-gray-600 rounded-lg flex col-span-2 my-4 overflow-x-auto overflow-y-hidden\">\n                        <div class=\"flex items-center\">\n                            <button mat-button (click)=\"deleteSelectedPages()\"\n                                    class=\"btn-icon w-8 ml-4 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.delete_selected_pages' | translate }}\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\">\n                                <i class=\"fas fa-trash-alt text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(true)\" class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.select_all' | translate }}\">\n                                <i class=\"fas fa-check-circle text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(false)\"\n                                    class=\"btn-icon border-r-2 border-black w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.unselect_all' | translate }}\">\n                                <i class=\"fas fa-ban text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"rotateSelectedPages()\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\"\n                                    class=\"btn-icon btn-rotate w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.rotatePage' | translate }}\">\n                                <i class=\"fas fa-rotate-right text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"createDocument()\"\n                                    matTooltip=\"{{ 'SPLITTER.add_document' | translate }}\">\n                                <i class=\"fas fa-plus-circle fa-lg\" *ngIf=\"!addDocumentLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"addDocumentLoading\"></i>\n                            </button>\n                            <mat-form-field class=\"w-64 pt-2\">\n                                <mat-label>{{ 'SPLITTER.move_selected_to' | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"toolSelectedOption\">\n                                    <mat-option *ngFor=\"let document of this.documents;\" [value]=\"document['id']\" class=\"w-full document_type_options\">\n                                        {{ document['doctypeLabel'] !== '' ? document['doctypeLabel'] : 'SPLITTER.no_selected_doctype' | translate }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <button (click)=\"sendSelectedPages()\" mat-button class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'GLOBAL.move' | translate }}\">\n                                <i class=\"fa fa-paper-plane text-lg\"></i>\n                            </button>\n                            <button (click)=\"saveModifications()\" mat-button class=\"w-8\"\n                                    matTooltip=\"{{ 'SPLITTER.save_changes' | translate }}\" [ngClass]=\"{'text-green-400': hasUnsavedChanges}\">\n                                <i class=\"fa fa-save fa-lg\" *ngIf=\"!saveInfosLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"saveInfosLoading\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"grid grid-cols-2 gap-4 text-gray-900 relative mt-6\">\n                        <button mat-button (click)=\"cancelBatchModification()\" type=\"submit\"\n                                class=\"ml-4 p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                            {{ 'GLOBAL.quit' | translate }}\n                        </button>\n                        <button mat-button (click)=\"validateWithConfirmation()\" type=\"submit\"\n                                [disabled]=\"this.currentBatch.outputs.length === 0 || this.currentBatch.status !== 'NEW' || documents.length === 0\"\n                                [ngClass]=\"this.currentBatch.outputs.length === 0 || this.currentBatch.status !== 'NEW' || documents.length === 0 ?\n                                'bg-gray-400 border-gray-400' : 'bg-green-400 border-green-400 hover:bg-transparent hover:text-gray-900 transition duration-300'\"\n                                class=\"p-6 border border-solid text-white\">\n                            <span *ngIf=\"!validateLoading\">{{ 'FORMS.validate' | translate }}</span>\n                            <span *ngIf=\"validateLoading\">\n                                <i class=\"fas fa-circle-notch fa-spin fa-xl\"></i>\n                            </span>\n                        </button>\n                        <div class=\"text-gray-400 -mt-2 col-start-2\">\n                            <span >{{ getOutputsLabels() }}</span>\n                            <span class=\"text-red-500\" *ngIf=\"this.currentBatch.outputs.length === 0\">{{ 'OUTPUT.no_output_configured' | translate }}</span>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-drawer-content>\n</mat-drawer-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan CHEVAL <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../env\";\nimport * as moment from \"moment/moment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\n\nexport class StatisticsComponent implements OnInit {\n    currentData         : any = [];\n    loading             : boolean = false;\n    options             : any = [\n        {\n            'id': 'verifier_documents_validated_per_user',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_user'),\n            'function': 'this.getUsersProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_validated_per_form',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_form'),\n            'function': 'this.getFormsProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded_per_worklow',\n            'label': this.translate.instant('STATISTICS.documents_uploaded_per_worklow'),\n            'function': 'this.getWorkflowUploadedDocumentVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded_per_user',\n            'label': this.translate.instant('STATISTICS.documents_uploaded_per_user'),\n            'function': 'this.getUserUploadedDocumentVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded_per_month',\n            'label': this.translate.instant('STATISTICS.verifier_documents_uploaded_per_month'),\n            'function': 'this.getDocumentsUploadedByMonthVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded_per_year',\n            'label': this.translate.instant('STATISTICS.verifier_documents_uploaded_per_year'),\n            'function': 'this.getDocumentsUploadedByYearVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded_per_worklow',\n            'label': this.translate.instant('STATISTICS.documents_uploaded_per_worklow'),\n            'function': 'this.getWorkflowUploadedDocumentSplitter',\n            'module': 'splitter',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded_per_user',\n            'label': this.translate.instant('STATISTICS.documents_uploaded_per_user'),\n            'function': 'this.getUserUploadedDocumentSlitter',\n            'module': 'splitter',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded_per_month',\n            'label': this.translate.instant('STATISTICS.splitter_documents_uploaded_per_month'),\n            'function': 'this.getDocumentsUploadedByMonthSplitter',\n            'module': 'splitter',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded_per_year',\n            'label': this.translate.instant('STATISTICS.splitter_documents_uploaded_per_year'),\n            'function': 'this.getDocumentsUploadedByYearSplitter',\n            'module': 'splitter',\n            'data': []\n        }\n    ];\n    diagramTypes        : any = [\n        {\n            'id': 'vertical-bar',\n            'label': marker('STATISTICS.diagram_vertical_bar'),\n            'logo': 'fa-chart-column'\n        },\n        {\n            'id': 'pie-chart',\n            'label': marker('STATISTICS.diagram_pie_chart'),\n            'logo': 'fa-chart-pie'\n        },\n        {\n            'id': 'pie-grid',\n            'label': marker('STATISTICS.diagram_pie_grid'),\n            'logo': 'fa-grip'\n        }\n\n    ];\n    modules             : any = [\n        {\n            'id': 'verifier',\n            'label': this.translate.instant('MONITORING.verifier')\n        },\n        {\n            'id': 'splitter',\n            'label': this.translate.instant('MONITORING.splitter')\n        }\n    ];\n    optionsByModule     : any;\n    selectedStatistic   : any;\n    selectedModule      : string = 'verifier';\n    selectedDiagramType : string = 'vertical-bar';\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.optionsByModule = this.options.filter((option: any) => option.module === this.selectedModule);\n    }\n\n    changeModule(event: any) {\n        this.selectedModule = event.value;\n        this.optionsByModule = this.options.filter((option: any) => option.module === this.selectedModule);\n    }\n\n    getDocumentsUploadedByMonthVerifier(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=verifier&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getDocumentsUploadedByYearVerifier(cpt: number) {\n        this.http.get(environment['url'] + '/ws/history/list?module=verifier&submodule=upload_file', {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const year = value.format('YYYY');\n                    if (!historyCpt[year]) {\n                        historyCpt[year] = 0;\n                    }\n                    historyCpt[year] += 1;\n                });\n\n                Object.keys(historyCpt).forEach((year: any) => {\n                    this.options[cpt].data.push({\n                        'name': year,\n                        'value': historyCpt[year]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getDocumentsUploadedByYearSplitter(cpt: number) {\n        this.http.get(environment['url'] + '/ws/history/list?module=splitter&submodule=upload_file', {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const year = value.format('YYYY');\n                    if (!historyCpt[year]) {\n                        historyCpt[year] = 0;\n                    }\n                    historyCpt[year] += 1;\n                });\n\n                Object.keys(historyCpt).forEach((year: any) => {\n                    this.options[cpt].data.push({\n                        'name': year,\n                        'value': historyCpt[year]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getDocumentsUploadedByMonthSplitter(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=splitter&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getUserUploadedDocumentVerifier(cpt: number) {\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=upload_file&module=verifier', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.users[data.users.length - 1] = {'id': 0, 'lastname': 'Upload', 'firstname': 'API'};\n                        data.users.forEach((user: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (user.id === _submodule.user_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': user.lastname + ' ' + user.firstname,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getUserUploadedDocumentSlitter(cpt: number) {\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=upload_file&module=splitter', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.users[data.users.length - 1] = {'id': 0, 'lastname': 'Upload', 'firstname': 'API'};\n                        data.users.forEach((user: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (user.id === _submodule.user_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': user.lastname + ' ' + user.firstname,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getWorkflowUploadedDocumentVerifier(cpt: number) {\n        this.http.get(environment['url'] + '/ws/workflows/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=upload_file&history_module=verifier', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.workflows.forEach((workflow: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (workflow.workflow_id === _submodule.workflow_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': workflow.label,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getWorkflowUploadedDocumentSplitter(cpt: number) {\n        this.http.get(environment['url'] + '/ws/workflows/splitter/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=upload_file&history_module=splitter', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.workflows.forEach((workflow: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (workflow.workflow_id === _submodule.workflow_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': workflow.label,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormsProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.forms.forEach((form: any) => {\n                    this.http.post(environment['url'] + '/ws/verifier/documents/list',\n                        {'status': 'END', 'form_id': form.id}, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.options[cpt].data.push({\n                                'name': form.label + ' (' + form.module + ')',\n                                'value': data.total\n                            });\n                            this.currentData = this.options[cpt].data;\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getUsersProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=document_validated', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.users.forEach((user: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (user.id === _submodule.user_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': user.lastname + ' ' + user.firstname,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    changeStatistic(event: any) {\n        if (event.value) {\n            this.options.forEach((option: any, cpt: number) => {\n                if (option.id === event.value) {\n                    this.selectedStatistic = option;\n                    if (option.data.length === 0) {\n                        this.currentData = [];\n                        this.loading = true;\n                        eval(option['function'] + '(' + cpt + ')');\n                    }\n                    else {\n                        this.currentData = option.data;\n                    }\n                }\n            });\n        }\n    }\n\n    changeDiagramType(event: any) {\n        if (event.value) {\n            this.diagramTypes.forEach((option: any) => {\n                if (option.id === event.value) {\n                    this.selectedDiagramType = option.id;\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center\">\n            <h3 class=\"text-center m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center h-full-overflow\">\n            <div class=\"w-full h-1 absolute text-center mt-2 z-50\">\n                <mat-form-field class=\"w-1/4\">\n                    <mat-select (selectionChange)=\"changeModule($event)\" [disabled]=\"this.loading\" [(value)]=\"this.selectedModule\"\n                                [placeholder]=\"'STATISTICS.choose_module' | translate\">\n                        <mat-option *ngFor=\"let option of modules\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"ml-4 w-1/4\">\n                    <mat-select (selectionChange)=\"changeStatistic($event)\" [disabled]=\"this.loading\"\n                                [placeholder]=\"'STATISTICS.choose_statistic_report' | translate\">\n                        <mat-option *ngFor=\"let option of optionsByModule\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"ml-4 w-1/4\">\n                    <mat-select [disabled]=\"!this.selectedStatistic || this.loading\"\n                                [ngModel]=\"this.selectedDiagramType\" (selectionChange)=\"changeDiagramType($event)\"\n                                [placeholder]=\"'STATISTICS.choose_diagram' | translate\">\n                        <mat-option *ngFor=\"let option of diagramTypes\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }} <i class=\"fa-solid {{ option['logo'] }} ml-2\"></i>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"relative mt-20 w-full\" *ngIf=\"!loading && this.selectedStatistic\">\n                <ngx-charts-bar-vertical *ngIf=\"this.selectedDiagramType === 'vertical-bar'\"\n                        [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"true\" [showYAxisLabel]=\"true\"\n                        [showXAxisLabel]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-bar-vertical>\n                <ngx-charts-pie-chart *ngIf=\"this.selectedDiagramType === 'pie-chart'\" [results]=\"currentData\"\n                                      [labels]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-pie-chart>\n                <ngx-charts-pie-grid *ngIf=\"this.selectedDiagramType === 'pie-grid'\" [results]=\"currentData\"></ngx-charts-pie-grid>\n                <ngx-charts-line-chart *ngIf=\"this.selectedDiagramType === 'line-charts'\" [showXAxisLabel]=\"true\"\n                        [showYAxisLabel]=\"true\" [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"false\">\n                </ngx-charts-line-chart>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { SessionStorageService } from \"../../services/session-storage.service\";\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class UploadComponent implements OnInit {\n    allowedExtensions           : string[]      = ['pdf', 'jpg', 'jpeg', 'png', 'heif', 'heic'];\n    headers                     : HttpHeaders   = this.authService.headers;\n    selectedWorkflow            : any           = '';\n    selectedWorkflowTechnicalId : any           = '';\n    workflows                   : any[]         = [];\n    loading                     : boolean       = true;\n    sending                     : boolean       = false;\n    error                       : boolean       = false;\n\n    constructor(\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public sessionStorageService: SessionStorageService\n    ) {}\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(this.allowedExtensions)\n        ]\n    );\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        const splitterOrVerifier: any = this.sessionStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier !== undefined || splitterOrVerifier !== '') {\n            this.getWorkflows(splitterOrVerifier);\n        }\n    }\n\n    getWorkflows(splitterOrVerifier: string): void {\n        this.http.get(environment['url'] + '/ws/workflows/' + splitterOrVerifier + '/list/user/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.workflows.forEach((element: any, index: number) => {\n                    let show = true;\n\n                    if (element.process && element.process['api_only']) {\n                        show = false\n                    }\n\n                    if (show) {\n                        this.workflows.push(element);\n                    }\n                });\n\n                if (this.workflows.length === 1) {\n                    this.selectedWorkflow = data.workflows[0].id;\n                    this.selectedWorkflowTechnicalId = data.workflows[0].workflow_id;\n                }\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkFile(data: any): void {\n        this.error = false;\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileExtension = data[i].name.split('.').pop();\n                if (this.allowedExtensions.indexOf(fileExtension.toLowerCase()) === -1) {\n                    this.error = true;\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                    return;\n                }\n            }\n        }\n    }\n\n    setWorkflow(workflowId: any) {\n        this.workflows.forEach((element: any) => {\n            if (element.id === workflowId) {\n                this.selectedWorkflowTechnicalId = element.workflow_id;\n            }\n        });\n        this.selectedWorkflow = workflowId;\n    }\n\n    uploadFile(): void {\n        this.sending = true;\n        const formData: FormData = new FormData();\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        let timeout = 2000;\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                timeout += this.fileControl.value![i]['size'] / 200;\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        formData.set('userId', this.userService.user.id);\n        formData.set('workflowId', this.selectedWorkflowTechnicalId);\n\n        const splitterOrVerifier = this.sessionStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier !== undefined || splitterOrVerifier !== '') {\n            this.http.post(\n                environment['url'] + '/ws/checkFileBeforeUpload', formData, {headers: new HttpHeaders({ timeout: `${timeout}` })},\n            ).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/' + splitterOrVerifier + '/upload', formData, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.sending = false;\n                            this.fileControl.setValue([]);\n                            this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                        }),\n                        catchError((err: any) => {\n                            this.sending = false;\n                            this.fileControl.setValue([]);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    this.sending = false;\n                    this.fileControl.setValue([]);\n                    this.notify.handleErrors(this.translate.instant('ERROR.permission_problem'));\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"2xl:w-96 xl:w-80 md:w-72 sm:w-64 w-32 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\">\n            {{ \"ACCOUNTS.choose_workflow_upload\" | translate }}\n        </h3>\n        <mat-divider></mat-divider>\n        <mat-list class=\"h-full-overflow overflow-auto\">\n            <mat-list-item *ngFor=\"let workflow of workflows\" class=\"cursor-pointer m-2 w-auto\" (click)=\"setWorkflow(workflow.id)\">\n                <span [class.text-green-400]=\"this.selectedWorkflow === workflow.id\" class=\"hover:text-green-400\"\n                      [matTooltip]=\"workflow.label\" [matTooltipDisabled]=\"workflow.label.replace(' ', '').length <= 20\">\n                    {{ workflow.label }}\n                </span>\n                <span *ngIf=\"this.selectedWorkflow === workflow.id\">\n                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\" class=\"absolute left-2 top-2 z-30\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <ngx-file-drag-drop\n                [class.pointer-events-none]=\"this.sending\"\n                [class.disabled]=\"this.sending\"\n                [formControl]=\"fileControl\"\n                [activeBorderColor]=\"'#97BF3D'\"\n                [multiple]=\"true\"\n                [accept]=\"'pdf'\"\n                [displayFileSize]=\"true\"\n                [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n                [class]=\"'max-w-3xl h-56 mt-24 mb-5'\"\n                (valueChanged)=\"checkFile($event)\">\n        </ngx-file-drag-drop>\n        <div class=\"text-center\" [class.cursor-not-allowed]=\"this.error || !(!this.sending && this.fileControl.value!.length !== 0)\">\n            <button mat-button\n                    [disabled]=\"this.error || this.sending || (this.selectedWorkflow === '') || this.fileControl.value!.length === 0\" (click)=\"uploadFile()\"\n                    [class.bg-opacity-100]=\"!this.error && !this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0\"\n                    [class.bg-green-400]=\"!this.error && !this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0\"\n                    [class.bg-gray-400]=\"this.error || !(!this.sending && this.selectedWorkflow && this.fileControl.value!.length !== 0)\"\n                    class=\"p-6 mr-4 border min-w-56 text-white transition border-solid duration-300 border-green-400 hover:text-gray-900 hover:bg-transparent\">\n                {{ 'UPLOAD.upload_file' | translate }}\n            </button>\n        </div>\n        <span *ngIf=\"this.selectedWorkflow === ''\" class=\"flex justify-center mt-4 text-red-500\">\n            {{ 'UPLOAD.please_select_workflow' | translate }}\n        </span>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit, SecurityContext} from '@angular/core';\nimport { SessionStorageService } from \"../../../services/session-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { FlatTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeFlatDataSource, MatTreeFlattener } from \"@angular/material/tree\";\nimport { UserService } from \"../../../services/user.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { FormControl } from \"@angular/forms\";\n\ninterface AccountsNode {\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    form_id: any\n    count: number\n    display: boolean\n    children: any\n}\n\ninterface FlatNode {\n    expandable: boolean\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    form_id: any\n    display: boolean\n    count: number\n    level: number\n    children: any\n}\n\n@Component({\n    selector: 'app-verifier-list',\n    templateUrl: './verifier-list.component.html',\n    styleUrls: ['./verifier-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }\n    ]\n})\nexport class VerifierListComponent implements OnInit {\n    config                   : any;\n    currentForm              : any               = '';\n    search                   : string            = '';\n    documentListThumb        : string            = '';\n    status                   : any[]             = [];\n    filteredForms            : any[]             = [];\n    documents                : any []            = [];\n    allowedCustomers         : any []            = [];\n    allowedSuppliers         : any []            = [];\n    TREE_DATA                : AccountsNode[]    = [];\n    loading                  : boolean           = true;\n    loadingCustomers         : boolean           = true;\n    currentStatus            : string            = 'NEW';\n    displayMode              : string            = 'grid';\n    currentTime              : string            = 'today';\n    forms                    : any[]             = [\n        {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n        {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n    ];\n    batchList                : any[]             = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today')\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday')\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older')\n        }\n    ];\n    pageSize                 : number            = 16;\n    pageIndex                : number            = 0;\n    pageSizeOptions          : any []            = [4, 8, 12, 16, 24, 48];\n    total                    : number            = 0;\n    offset                   : number            = 0;\n    selectedTab              : number            = 0;\n    totalChecked             : number            = 0;\n    totals                   : any               = {};\n    customersList            : any               = {};\n    searchLoading            : boolean           = false;\n    expanded                 : boolean           = false;\n    documentToDeleteSelected : boolean           = false;\n    customerFilterEmpty      : boolean           = false;\n    customerFilterEnabled    : boolean           = false;\n    customerFilter           : FormControl       = new FormControl('');\n\n    private _transformer = (node: AccountsNode, level: number) => ({\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        supplier_id: node.supplier_id,\n        id: node.id,\n        parent_id: node.parent_id,\n        form_id: node.form_id,\n        display: node.display,\n        count: node.count,\n        level: level,\n        children: node.children\n    });\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private routerExtService: LastUrlService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n    isLevelOne = (_: number, node: FlatNode) => node.level === 1;\n    isLevelTwo = (_: number, node: FlatNode) => node.level === 2;\n    isNotLevelOne = (_: number, node: FlatNode) => node.level !== 1;\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        if (localStorage.getItem('verifierListDisplayMode')) {\n            this.displayMode = localStorage.getItem('verifierListDisplayMode') as string;\n        }\n\n        marker('VERIFIER.nb_pages'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.expand_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.select_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.collapse_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.unselect_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.documents_settings'); // Needed to get the translation in the JSON file\n        this.sessionStorageService.save('splitter_or_verifier', 'verifier');\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('verifier/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.sessionStorageService.get('documentsPageIndex')) {\n                this.pageIndex = parseInt(this.sessionStorageService.get('documentsPageIndex') as string);\n            }\n            if (this.sessionStorageService.get('documentsTimeIndex')) {\n                this.selectedTab = parseInt(this.sessionStorageService.get('documentsTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.sessionStorageService.remove('documentsPageIndex');\n            this.sessionStorageService.remove('documentsTimeIndex');\n        }\n        this.removeLockByUserId();\n        this.http.get(environment['url'] + '/ws/status/verifier/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        setTimeout(() => {\n            this.loadForms();\n            this.loadCustomers();\n        }, 100);\n    }\n\n    loadForms() {\n        this.http.get(environment['url'] + '/ws/forms/verifier/list?totals=true&status=' + this.currentStatus + '&user_id=' + this.userService.user.id + '&time=' + this.currentTime, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.filteredForms = [];\n                this.forms = [\n                    {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n                    {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n                ];\n                data.forms.forEach((form: any) => {\n                    if (form.total > 0) {\n                        this.forms.push(form);\n                        this.filteredForms.push(form);\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLockByUserId() {\n        this.http.put(environment['url'] + '/ws/verifier/documents/removeLockByUserId/' + this.userService.user.username, {}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.TREE_DATA = [];\n        this.allowedCustomers.push(0); // 0 is used if for some reasons no customer was recover by OC process\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customersList = data.customers;\n                this.customersList.unshift({\n                    \"id\": 0,\n                    \"name\": this.translate.instant('ACCOUNTS.customer_not_specified')\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.get(environment['url'] + '/ws/verifier/customersCount/' + this.userService.user.id + '/' + this.currentStatus + '/' + this.currentTime, {headers: this.authService.headers}).pipe(\n            tap((customers_count: any) => {\n                customers_count.forEach((customer_count: any) => {\n                    this.allowedCustomers.push(customer_count.customer_id);\n                    const node : any = {\n                        name: customer_count.name ? customer_count.name : this.translate.instant('ACCOUNTS.customer_not_specified'),\n                        id: customer_count.customer_id,\n                        parent_id: '',\n                        supplier_id: '',\n                        display: true,\n                        count: customer_count.total,\n                        children: []\n                    };\n\n                    Object.keys(customer_count['suppliers']).forEach((key: any, index: number) => {\n                        node['children'].push({\n                            name: key,\n                            id: index,\n                            display: true,\n                            count: 0,\n                            children: []\n                        });\n                        customer_count['suppliers'][key].forEach((supplier: any) => {\n                            node['children'][index]['count'] += supplier.total;\n                            node['children'][index]['children'].push({\n                                name: supplier.name ? supplier.name : this.translate.instant('ACCOUNTS.supplier_unknow'),\n                                supplier_id: supplier.supplier_id,\n                                parent_id: customer_count.customer_id,\n                                form_id: supplier.form_id ? supplier.form_id : -1,\n                                count: supplier.total,\n                                display: true\n                            });\n                        });\n                    });\n                    node['children'].forEach((node_child: any, index: number) => {\n                        if (node_child.name === this.translate.instant('VERIFIER.no_form')) {\n                            node['children'].unshift(node_child);\n                            node['children'].splice(index + 1, 1);\n                        }\n                    });\n                    this.TREE_DATA.push(node);\n                });\n                this.dataSource.data = this.TREE_DATA;\n                this.filterCustomers();\n                this.loadDocuments().then();\n            }),\n            finalize(() => this.loadingCustomers = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async loadDocuments(loading = true) {\n        this.documentToDeleteSelected = false;\n        this.totalChecked = 0;\n        if (loading) {\n            this.documents = [];\n            this.loading = true;\n        }\n        this.loadingCustomers = true;\n        this.loadForms();\n        let url = environment['url'] + '/ws/verifier/documents/totals/' + this.currentStatus + '/' + this.userService.user.id;\n        if (this.currentForm !== '') {\n            url = environment['url'] + '/ws/verifier/documents/totals/' + this.currentStatus + '/' + this.userService.user.id + '/' + this.currentForm;\n        }\n        this.http.get(url, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.allowedCustomers = [... new Set(this.allowedCustomers)]\n\n        this.http.post(environment['url'] + '/ws/verifier/documents/list',\n            {\n                'allowedCustomers': this.allowedCustomers, 'status': this.currentStatus, 'limit': this.pageSize,\n                'allowedSuppliers': this.allowedSuppliers, 'form_id': this.currentForm, 'time': this.currentTime,\n                'offset': this.offset, 'search': this.search\n            },\n            {headers: this.authService.headers}\n        ).pipe(\n            tap((data: any) => {\n                if (data) {\n                    if (data.documents.length !== 0) {\n                        this.total = data.total;\n                    } else if (this.pageIndex !== 0) {\n                        this.pageIndex = this.pageIndex - 1;\n                        this.offset = this.pageSize * (this.pageIndex);\n                        this.loadDocuments();\n                    }\n\n                    if (this.total === 0) {\n                        this.customerFilter.disable();\n                    } else {\n                        this.customerFilter.enable();\n                    }\n\n                    this.documents = data.documents;\n                    console.log(this.documents)\n                    this.documents.forEach((document: any) => {\n                        if (document.document_id) {\n                            document['datas'].document_id = document.document_id;\n                        }\n                        if (!document.thumb.includes('data:image/jpeg;base64')) {\n                            document.thumb = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/jpeg;base64, ' + document.thumb);\n                        }\n                        if (document.form_label === null || document.form_label === '' || document.form_label === undefined) {\n                            document.form_label = this.translate.instant('VERIFIER.no_form');\n                        }\n                        if (!document.form_id) {\n                            document.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"ACCOUNTS.form\"}\n                                ]\n                            };\n                        } else {\n                            this.forms.forEach((form: any) =>  {\n                                if (form.id === document.form_id) {\n                                    if (form.settings.display) {\n                                        document.display = form.settings.display;\n                                    }\n                                }\n                            });\n                        }\n\n                        if (!document.display) {\n                            document.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"ACCOUNTS.form\"}\n                                ]\n                            };\n                        }\n\n                        const document_display_tmp = document.display.subtitles;\n                        document.display = {'subtitles': []};\n                        document_display_tmp.forEach((subtitle: any) => {\n                            let subtitle_data = '';\n                            if (document['datas'].hasOwnProperty(subtitle.id)) {\n                                subtitle_data = document['datas'][subtitle.id];\n                            } else if (document.hasOwnProperty(subtitle.id)) {\n                                subtitle_data = document[subtitle.id];\n                            }\n\n                            document.display.subtitles.push({\n                                'id': subtitle.id,\n                                'label': subtitle.label,\n                                'data': subtitle_data ? subtitle_data : ''\n                            });\n                        });\n                    });\n                }\n            }),\n            finalize(() => {\n                this.loading = false;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetSearchCustomer() {\n        this.customerFilter.setValue('');\n        this.filterCustomers();\n    }\n\n    filterCustomers() {\n        const tmpData = this.dataSource.data;\n        this.customerFilterEmpty = false;\n        let customerMatch = false;\n        tmpData.forEach((element: any) => {\n            if (element.name.toLowerCase().includes(this.customerFilter.value!.toLowerCase())) {\n                element.display = true;\n                customerMatch = true;\n            } else {\n                element.display = false;\n            }\n        });\n        if (!customerMatch) {\n            this.customerFilterEmpty = true;\n        }\n        this.dataSource.data = tmpData;\n    }\n\n    changeCustomer(customerId: number, documentId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + documentId + '/update',\n            {'args': {\"customer_id\": customerId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetDocuments();\n                    this.notify.success(this.translate.instant('VERIFIER.customer_changed_successfully'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    changeDocumentForm(formId: number, documentId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + documentId + '/update',\n            {'args': {\"form_id\": formId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetDocuments();\n                    this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    loadDocumentPerCustomer(node: any) {\n        const formId = node.form_id;\n        const parentId = node.parent_id;\n        const supplierId = node.supplier_id;\n        this.TREE_DATA.forEach((element: any) => {\n            if (element.id === parentId) {\n                const customerId = element.id;\n                this.customerFilterEnabled = true;\n                this.allowedCustomers = [customerId];\n                if (supplierId) {\n                    this.allowedSuppliers = [supplierId];\n                }\n                this.currentForm = formId;\n                this.resetPaginator();\n                this.loadDocuments().then();\n            }\n        });\n    }\n\n    resetDocuments() {\n        this.search = '';\n        this.loading = true;\n        this.currentForm = '';\n        this.allowedCustomers = [];\n        this.allowedSuppliers = [];\n        this.loadingCustomers = true;\n        this.customerFilterEnabled = false;\n        this.loadCustomers();\n        this.resetPaginator();\n        this.resetSearchCustomer();\n    }\n\n    selectOrUnselectAllDocuments(event: any) {\n        const label = event.srcElement.textContent;\n        this.documentToDeleteSelected = !this.documentToDeleteSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllDocuments() {\n        this.loading = true;\n        this.loadingCustomers = true;\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any) => {\n            const documentId = element.id.split('_')[0];\n            this.deleteDocument(documentId, true);\n        });\n        this.notify.success(this.translate.instant('VERIFIER.all_documents_checked_deleted'));\n        this.loadCustomers();\n    }\n\n    deleteDocument(documentId: number, batchDelete = false) {\n        this.http.delete(environment['url'] + '/ws/verifier/documents/delete/' + documentId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (!batchDelete) {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('VERIFIER.documents_deleted'));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkCheckedDocuments() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.documentToDeleteSelected = this.totalChecked !== 0;\n    }\n\n    deleteConfirmDialog(documentId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_document'),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.loadingCustomers = true;\n                this.deleteDocument(documentId);\n            }\n        });\n    }\n\n    displayDocumentLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('VERIFIER.document_locked'),\n                confirmText         : this.translate.instant('VERIFIER.document_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\"\n        });\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_all_documents'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel')\n            },\n            width: \"600px\"\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllDocuments();\n            }\n        });\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadCustomers();\n        this.loadDocuments().then();\n    }\n\n    changeForm(event: any) {\n        this.currentForm = event.value;\n        this.resetPaginator();\n        this.loadCustomers();\n        this.loadDocuments().then();\n    }\n\n    onTabChange(event: any) {\n        this.search = '';\n        this.currentForm = '';\n        this.allowedSuppliers = [];\n        this.selectedTab = event.index;\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.sessionStorageService.save('documentsTimeIndex', this.selectedTab);\n        this.resetPaginator();\n        this.loadCustomers();\n        this.loadDocuments().then();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.sessionStorageService.save('documentsPageIndex', event.pageIndex);\n        this.loadDocuments().then();\n    }\n\n    searchDocument(event: any) {\n        if (!this.searchLoading) {\n            this.searchLoading = true;\n            setTimeout(() => {\n                this.search = event.target.value;\n                this.loadDocuments(false).then();\n                this.searchLoading = false;\n            }, 1000);\n        }\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n        this.sessionStorageService.save('documentsPageIndex', this.pageIndex);\n    }\n\n    expandAll() {\n        if (!this.expanded) {\n            this.treeControl.expandAll();\n        } else {\n            this.treeControl.collapseAll();\n        }\n        this.expanded = !this.expanded;\n    }\n\n    switchDisplayMode() {\n        if (this.displayMode === 'grid') {\n            this.displayMode = 'list';\n        } else {\n            this.displayMode = 'grid';\n        }\n        localStorage.setItem('verifierListDisplayMode', this.displayMode);\n    }\n\n    showThumbnail(thumb_b64: any) {\n        this.documentListThumb = thumb_b64;\n    }\n\n    resetThumbnail() {\n        this.documentListThumb = '';\n    }\n}\n","<span class=\"absolute z-40 top-4 left-4 max-w-[30%] border border-gray-900\" *ngIf=\"this.documentListThumb\">\n    <img [src]=\"this.documentListThumb\" alt=\"Open-Capture thumbnail\">\n</span>\n<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\" [autosize]=\"true\">\n    <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\" class=\"2xl:w-96 xl:w-72 sm:w-64 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\" [class.pointer-events-none]=\"this.loading\">\n            <i class=\"fa-solid text-gray-900 fa-sync-alt mr-4 cursor-pointer transition-all duration-300\"\n               [ngClass]=\"{'text-green-400': this.customerFilter.value || this.customerFilterEnabled, 'fa-beat': this.customerFilter.value || this.customerFilterEnabled}\"\n               [matTooltip]=\"'VERIFIER.reset_document_list' | translate\" (click)=\"resetDocuments()\"></i>\n            {{ \"VERIFIER.suppliers_by_customer\" | translate }}\n            <i [class.fa-compress-arrows-alt]=\"this.expanded\" [class.fa-expand-arrows-alt]=\"!this.expanded\"\n               class=\"fa-solid ml-4 cursor-pointer\" (click)=\"expandAll()\"\n               [matTooltip]=\"!this.expanded ? this.translate.instant('VERIFIER.expand_all') : this.translate.instant('VERIFIER.collapse_all')\"></i>\n        </h3>\n        <mat-divider></mat-divider>\n        <div class=\"overflow-hidden\">\n            <div class=\"pb-6\">\n                <mat-form-field class=\"px-4 pt-4 -mb-6 w-full\" appearance=\"outline\">\n                    <mat-label>\n                        {{ 'VERIFIER.search_customer' | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [formControl]=\"this.customerFilter\" (keyup)=\"filterCustomers()\" autocomplete=\"off\">\n                    <button matSuffix class=\"text-gray-900 cursor-pointer\" (click)=\"resetSearchCustomer()\" *ngIf=\"this.customerFilter.value\">\n                        <i class=\"fa-solid fa-sync-alt text-xl relative mr-4\" [matTooltip]=\"'VERIFIER.reset_customers_search' | translate\"></i>\n                    </button>\n                </mat-form-field>\n            </div>\n            <div *ngIf=\"this.loadingCustomers\" class=\"loading_customers\">\n                <div class=\"m-auto text-center\">\n                    <i class=\"fa-solid fa-users fa-4x fa-beat-fade w-full mb-2\"></i>\n                    <span class=\"w-full\">\n                        {{ 'VERIFIER.loading_customers' | translate }}\n                    </span>\n                </div>\n            </div>\n            <div *ngIf=\"this.customerFilter.value && !this.loadingCustomers && this.customerFilterEmpty\"\n                 class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 10rem)\">\n                <div class=\"m-auto text-center\">\n                    <i class=\"fa-solid fa-ban fa-4x fa-beat-fade w-full mb-2\"></i>\n                    <span class=\"w-full\">\n                    {{ 'VERIFIER.no_customers_filter' | translate }}\n                </span>\n                </div>\n            </div>\n            <mat-tree *ngIf=\"!this.loadingCustomers\" [dataSource]=\"this.dataSource\" [treeControl]=\"this.treeControl\"\n                      class=\"overflow-x-hidden\" style=\"height: calc(100vh - 14rem)\">\n                <mat-tree-node style=\"min-height: 24px\" class=\"pl-12 cursor-pointer hover:bg-black hover:bg-opacity-20\" *matTreeNodeDef=\"let node; when:isLevelTwo;\" (click)=\"loadDocumentPerCustomer(node)\">\n                    <button mat-icon-button disabled>\n                        <i class=\"text-green-400 ml-4 text-base fa-solid fa-user pb-0.5\"></i>\n                    </button>\n                    <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                    <span class=\"float-right ml-auto select-none mr-6 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                        {{ node.count }}\n                    </span>\n                </mat-tree-node>\n                <mat-tree-node style=\"min-height: 24px\" class=\"parent cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                               *matTreeNodeDef=\"let node; when: hasChild; when:isNotLevelOne\" matTreeNodeToggle\n                               [class.hidden]=\"!node.display || (node.count === 0 && node.id === 0)\">\n                    <button mat-icon-button [class.hidden]=\"node.count === 0 && node.id === 0\">\n                        <mat-icon class=\"mat-icon-rtl-mirror text-gray-900\">\n                            {{ this.treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n                        </mat-icon>\n                    </button>\n                    <span class=\"select-none\" [class.pointer-events-none]=\"node.count === 0\" [class.hidden]=\"node.count === 0 && node.id === 0\">\n                        {{ node.name }}\n                    </span>\n                    <span *ngIf=\"!this.treeControl.isExpanded(node)\" [class.hidden]=\"node.count === 0 && node.id === 0\"\n                          class=\"float-right ml-auto select-none mr-4 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                        {{ node.count }}\n                    </span>\n                </mat-tree-node>\n                <mat-tree-node [class.hidden]=\"node.count === 0\" style=\"min-height: 24px\" matTreeNodeToggle\n                               class=\"child pl-6 cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                               *matTreeNodeDef=\"let node;when: isLevelOne;\">\n                    <button mat-icon-button>\n                        <i [class.fa-folder-open]=\"this.treeControl.isExpanded(node)\" class=\"text-gray-600 fa-solid fa-folder text-lg relative -top-0.5\"></i>\n                    </button>\n                    <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                    <span *ngIf=\"!this.treeControl.isExpanded(node)\" class=\"float-right ml-auto select-none mr-12 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                        {{ node.count }}\n                    </span>\n                </mat-tree-node>\n            </mat-tree>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\" class=\"absolute left-2 top-2 z-30\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\"\n               class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\" class=\"batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of batchList\"  [id]=\"batch.id\" [disabled]=\"this.loading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"verifier-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-2 z-30\">\n                        <mat-form-field class=\"mb-3 pt-3 ml-4 w-9/12\" appearance=\"outline\">\n                            <mat-label>{{ 'VERIFIER.search' | translate }}</mat-label>\n                            <input matInput type=\"text\" [(ngModel)]=\"search\" [disabled]=\"this.total === 0\" (keyup)=\"searchDocument($event)\">\n                        </mat-form-field>\n                        <div class=\"w-full m-auto grid grid-cols-2 gap-2\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\" [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'SETTINGS.list_forms' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentForm\" (selectionChange)=\"changeForm($event)\" [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">\n                                        {{ option['label'] | translate }}\n                                        <span *ngIf=\"this.currentForm !== option['id']\" style=\"font-size: 12px;\" class=\"text-green-400 ml-3 font-bold\">{{ option['total'] }}</span>\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div [class.hidden]=\"this.loading || this.total === 0\" class=\"pt-3 grid grid-cols-7 grid-flow-row\">\n                            <mat-paginator [length]=\"this.total\" [pageSize]=\"this.pageSize\" [pageIndex]=\"this.pageIndex\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\" (page)=\"onPageChange($event)\"\n                                           class=\"col-span-6\">\n                            </mat-paginator>\n                            <div class=\"mt-2.5\">\n                                <button mat-stroked-button class=\"min-w-10 text-gray-900\" (click)=\"switchDisplayMode()\">\n                                    <i *ngIf=\"this.displayMode == 'list'\" class=\"fa-solid fa-list text-xl\" [matTooltip]=\"'VERIFIER.switch_to_grid_view' | translate\"></i>\n                                    <i *ngIf=\"this.displayMode == 'grid'\" class=\"fa-solid fa-grip text-xl\" [matTooltip]=\"'VERIFIER.switch_to_list_view' | translate\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"z-30 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.documents.length > 1\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllDocuments($event)\"\n                              [innerHTML]=\"this.documentToDeleteSelected ? this.translate.instant('VERIFIER.unselect_all') : this.translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.documentToDeleteSelected\"\n                              (click)=\"$event.stopPropagation();deleteAllConfirmDialog()\">\n                            <i class=\"fa-solid fa-trash ml-2 text-red-500 cursor-pointer\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n\n                    <div *ngIf=\"this.documents.length === 0 && !this.loading\" class=\"text-gray-200 text-center absolute top-[55%] left-[50%]\" style=\"transform: translate(-50%, -50%);\">\n                        <i class=\"fa-regular fa-folder-open fa-10x w-full\"></i>\n                        <span class=\"text-4xl\">\n                            {{ 'GLOBAL.no_batch_found' | translate }}\n                        </span>\n                    </div>\n\n                    <div *ngIf=\"this.loading\">\n                        <app-loader></app-loader>\n                    </div>\n\n                    <div class=\"mx-5 mt-2\" *ngIf=\"!this.loading\">\n                        <div *ngIf=\"this.displayMode == 'grid' else listTemplate\" class=\"cards-list list grid md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 grid-flow-row gap-4\">\n                            <mat-card *ngFor=\"let document of this.documents;\" class=\"cursor-pointer p-0 mb-0\">\n                                <label class=\"p-4 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ document['document_id'] }}_checkbox\" (click)=\"checkCheckedDocuments()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\" type=\"checkbox\">\n                                </label>\n                                <div *ngIf=\"document['facturx']\" class=\"text-center text-gray-400 mt-2\" [matTooltip]=\"'VERIFIER.facturx_level' | translate : {level : document['facturx_level']}\">\n                                    {{ \"VERIFIER.facturx\" | translate }}\n                                </div>\n                                <div class=\"absolute right-0 pt-4 pr-5 z-40\">\n                                    <div [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                         [matTooltip]=\"this.translate.instant('VERIFIER.documents_settings')\">\n                                        <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                                    </div>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"customers\">\n                                            {{ \"WORKFLOW.associated_customer\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"formMenu\">\n                                            {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                                        </button>\n                                        <button mat-menu-item (click)=\"deleteConfirmDialog(document['document_id'])\">\n                                            {{ 'VERIFIER.delete_document' | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #customers=\"matMenu\">\n                                        <button mat-menu-item *ngFor=\"let customer of this.customersList\"\n                                                (click)=\"changeCustomer(customer.id, document['document_id'])\">\n                                            <span [class.text-green-400]=\"customer.id === document['customer_id']\">\n                                                {{ customer.name | translate }}\n                                            </span>\n                                            <span *ngIf=\"customer.id === document['customer_id']\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #formMenu=\"matMenu\">\n                                        <button mat-menu-item (click)=\"changeDocumentForm(form.id, document['document_id'])\"\n                                                *ngFor=\"let form of this.filteredForms\">\n                                            <span [class.text-green-400]=\"form.id === document['form_id']\">\n                                                {{ form.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"form.id === document['form_id']\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <img [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document['document_id']\"\n                                     mat-card-image class=\"m-auto p-4\" [src]=\"document['thumb']\" alt=\"Open-Capture thumbnail\"\n                                     (click)=\"document.locked ? displayDocumentLocked(document['locked_by']) : ''\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                        [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document['document_id']\"\n                                        (click)=\"document.locked ? displayDocumentLocked(document['locked_by']) : ''\">\n                                    <mat-card-title class=\"break-all truncate w-11/12\">\n                                        <span class=\"leading-7\">\n                                            <i [matTooltip]=\"'VERIFIER.document_locked' | translate\"\n                                               class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"\n                                               *ngIf=\"document.locked\"></i>\n                                            {{ document['supplier_name'] ? document['supplier_name'] : 'ACCOUNTS.supplier_unknow' | translate }}\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              [matTooltip]=\"this.translate.instant('VERIFIER.nb_pages') + ' : ' + document['nb_pages']\">\n                                            {{ document['nb_pages'] }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 mb-1\">\n                                        <div *ngFor=\"let subtitles of document.display['subtitles']\" class=\"-mb-1 text-base text-ellipsis overflow-hidden w-full inline-block\">\n                                            <strong>{{ subtitles['label'] | translate }}</strong>&nbsp;:&nbsp;{{ subtitles['data'] }}\n                                        </div>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                            </mat-card>\n                        </div>\n                        <ng-template #listTemplate>\n                            <mat-list>\n                                <div *ngFor=\"let document of this.documents;\" class=\"border border-grey-900 w-full p-0 mb-2 shadow-md hover:shadow-xl transition-shadow h-28 cursor-pointer rounded-xl\">\n                                    <div class=\"flex flex-wrap h-full\">\n                                        <div class=\"mx-6 flex items-center justify-center\">\n                                            <input id=\"{{ document['document_id'] }}_checkbox\" (click)=\"checkCheckedDocuments()\" class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\" type=\"checkbox\">\n                                        </div>\n                                        <div class=\"grow max-w-[20%] relative mt-2\" [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document['document_id']\"\n                                             (click)=\"document.locked ? displayDocumentLocked(document['locked_by']) : ''\">\n                                            <div class=\"font-bold text-xl break-all truncate w-11/12\" [matTooltip]=\"document['supplier_name']\">\n                                                <i [matTooltip]=\"'VERIFIER.document_locked' | translate\" *ngIf=\"document.locked\"\n                                                   class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"></i>\n                                                    {{ document['supplier_name'] ? document['supplier_name'] : 'ACCOUNTS.supplier_unknow' | translate }}\n                                                <span *ngIf=\"document['facturx']\" class=\"text-xs text-gray-400 relative bottom-0.5\" [matTooltip]=\"'VERIFIER.facturx_level' | translate : {level : document['facturx_level']}\">\n                                                    {{ \"VERIFIER.facturx\" | translate }}\n                                                </span>\n                                            </div>\n                                            <div *ngFor=\"let subtitles of document.display['subtitles'].slice(0, 3);\" class=\"opacity-75 -mb-1 text-sm truncate w-full inline-block\">\n                                                <strong class=\"text-gray-900\">{{ subtitles['label'] | translate }}</strong>&nbsp;:&nbsp;{{ subtitles['data'] }}\n                                            </div>\n                                        </div>\n                                        <div class=\"grow max-w-[20%] relative mt-4\" [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document['document_id']\"\n                                             (click)=\"document.locked ? displayDocumentLocked(document['locked_by']) : ''\">\n                                            <div *ngFor=\"let subtitles of document.display['subtitles'].slice(3, 7);\" class=\"opacity-75 -mb-1 text-sm truncate w-full inline-block\">\n                                                <strong class=\"text-gray-900\">{{ subtitles['label'] | translate }}</strong>&nbsp;:&nbsp;{{ subtitles['data'] }}\n                                            </div>\n                                        </div>\n                                        <div class=\"grow flex items-center ml-2\" [routerLink]=\"document.locked ? '/verifier/list' : '/verifier/viewer/' + document['document_id']\"\n                                             (click)=\"document.locked ? displayDocumentLocked(document['locked_by']) : ''\">\n                                            <div class=\"text-green-400 text-base badge badge-secondary badge-pill\"\n                                                 [matTooltip]=\"this.translate.instant('VERIFIER.nb_pages') + ' : ' + document['nb_pages']\">\n                                                {{ document['nb_pages'] }}<i class=\"far fa-file-alt ml-1\"></i>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-start-24 flex items-center justify-end\">\n                                            <div (mouseenter)=\"showThumbnail(document['thumb'])\" (mouseout)=\"resetThumbnail()\">\n                                                <i class=\"fa-solid fa-eye text-xl float-right text-gray-900 cursor-pointer z-50\"></i>\n                                            </div>\n                                            <div [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                                 [matTooltip]=\"this.translate.instant('VERIFIER.documents_settings')\">\n                                                <i class=\"fa-solid fa-ellipsis-vertical text-xl float-right ml-6 mr-6 cursor-pointer text-gray-900\"></i>\n                                            </div>\n                                            <mat-menu #menu=\"matMenu\">\n                                                <button mat-menu-item [matMenuTriggerFor]=\"customers\">\n                                                    {{ \"WORKFLOW.associated_customer\" | translate }}\n                                                </button>\n                                                <button mat-menu-item [matMenuTriggerFor]=\"formMenu\">\n                                                    {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                                                </button>\n                                                <button mat-menu-item (click)=\"deleteConfirmDialog(document['document_id'])\">\n                                                    {{ 'VERIFIER.delete_document' | translate }}\n                                                </button>\n                                            </mat-menu>\n                                            <mat-menu #customers=\"matMenu\">\n                                                <button mat-menu-item *ngFor=\"let customer of this.customersList\"\n                                                        (click)=\"changeCustomer(customer.id, document['document_id'])\">\n                                            <span [class.text-green-400]=\"customer.id === document['customer_id']\">\n                                                {{ customer.name | translate }}\n                                            </span>\n                                                    <span *ngIf=\"customer.id === document['customer_id']\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                                </button>\n                                            </mat-menu>\n                                            <mat-menu #formMenu=\"matMenu\">\n                                                <button mat-menu-item (click)=\"changeDocumentForm(form.id, document['document_id'])\"\n                                                        *ngFor=\"let form of this.filteredForms\">\n                                            <span [class.text-green-400]=\"form.id === document['form_id']\">\n                                                {{ form.label | translate }}\n                                            </span>\n                                                    <span *ngIf=\"form.id === document['form_id']\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                                </button>\n                                            </mat-menu>\n                                        </div>\n                                        <span class=\"relative text-xs right-2 text-gray-400\">\n                                            {{ document['document_id'] }}\n                                        </span>\n                                    </div>\n                                </div>\n                            </mat-list>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, HostListener, OnDestroy, OnInit, SecurityContext} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from  \"../../env\";\nimport { catchError, map, startWith, tap } from \"rxjs/operators\";\nimport { interval, of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { DatePipe } from '@angular/common';\nimport { SessionStorageService } from \"../../../services/session-storage.service\";\nimport * as moment from 'moment';\nimport { UserService } from \"../../../services/user.service\";\nimport { HistoryService } from \"../../../services/history.service\";\nimport { LocaleService } from \"../../../services/locale.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\ndeclare const $: any;\n\n@Component({\n    selector: 'verifier-viewer',\n    templateUrl: './verifier-viewer.component.html',\n    styleUrls: ['./verifier-viewer.component.scss'],\n    providers: [DatePipe]\n})\n\nexport class VerifierViewerComponent implements OnInit, OnDestroy {\n    imageDocument           : any;\n    documentId              : any;\n    document                : any;\n    fields                  : any;\n    fromTokenFormId         : any;\n    saveInfo                : boolean     = true;\n    loading                 : boolean     = true;\n    supplierExists          : boolean     = true;\n    deleteDataOnChangeForm  : boolean     = true;\n    formLoading             : boolean     = false;\n    allowAutocomplete       : boolean     = false;\n    processMultiDocument    : boolean     = false;\n    isOCRRunning            : boolean     = false;\n    processDone             : boolean     = false;\n    fromToken               : boolean     = false;\n    settingsOpen            : boolean     = false;\n    ocrFromUser             : boolean     = false;\n    accountingPlanEmpty     : boolean     = false;\n    getOnlyRawFooter        : boolean     = false;\n    disableOCR              : boolean     = false;\n    tokenINSEEError         : boolean     = false;\n    visualIsHide            : boolean     = false;\n    loadingSubmit           : boolean     = false;\n    formEmpty               : boolean     = false;\n    processInError          : boolean     = false;\n    imgLoading              : boolean     = false;\n    supplierformFound       : boolean     = false;\n    processErrorMessage     : string      = '';\n    processErrorIcon        : string      = '';\n    token                   : string      = '';\n    oldVAT                  : string      = '';\n    oldSIRET                : string      = '';\n    oldSIREN                : string      = '';\n    currentFilename         : string      = '';\n    lastLabel               : string      = '';\n    lastId                  : string      = '';\n    lastColor               : string      = '';\n    toHighlight             : string      = '';\n    toHighlightAccounting   : string      = '';\n    tokenINSEE              : string      = '';\n    imgSrc                  : any         = '';\n    ratio                   : number      = 0;\n    currentPage             : number      = 1;\n    customFields            : any         = {};\n    accountingPlan          : any         = {};\n    formSettings            : any         = {};\n    workflowSettings        : any         = {};\n    formList                : any         = {};\n    currentFormFields       : any         = {};\n    imgArray                : any         = {};\n    currentSupplier         : any         = {};\n    suppliers               : any         = [];\n    outputsLabel            : any         = [];\n    outputs                 : any         = [];\n    multiDocumentsData      : any         = [];\n    fieldCategories         : any[]       = [\n        {\n            id: 'supplier',\n            label: this.translate.instant('FORMS.supplier')\n        },\n        {\n            id: 'lines',\n            label: this.translate.instant('FACTURATION.lines')\n        },\n        {\n            id: 'facturation',\n            label: this.translate.instant('FACTURATION.facturation')\n        },\n        {\n            id: 'other',\n            label: this.translate.instant('FORMS.other')\n        }\n    ];\n    form                    : any         = {\n        supplier      : [],\n        lines         : [],\n        facturation   : [],\n        other         : []\n    };\n    pattern                 : any         = {\n        alphanum                        : '^[\\\\-?0-9a-zA-Z\\\\s\\']*$',\n        alphanum_extended               : '^[\\\\-?0-9a-zA-Z\\\\\\/#,\\\\.\\'\\\\s\\\\(\\\\)]*$',\n        alphanum_extended_with_accent   : '^[\\\\-?0-9a-zA-Z\\\\u00C0-\\\\u017F\\\\\\/#,\\'\\\\.\\\\s\\\\(\\\\)]*$',\n        number_int                      : '^[\\\\-?0-9]*$',\n        number_float                    : '^[\\\\-?0-9]*([.][0-9]*)*$',\n        char                            : '^[A-Za-z\\\\s]*$',\n        email                           : '^([A-Za-z0-9]+[\\\\.\\\\-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\\\.[A-Z|a-z]{2,})+$'\n    };\n    supplierNamecontrol     : FormControl = new FormControl();\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private sessionStorageService: SessionStorageService\n    ) {}\n\n    async ngOnInit(document_id_from_multi = false): Promise<void> {\n        this.sessionStorageService.save('splitter_or_verifier', 'verifier');\n        this.ocrFromUser = false;\n        this.saveInfo = true;\n\n        if (this.route.snapshot.params['token']) {\n            const token = this.route.snapshot.params['token'];\n            const res: any = await this.retrieveDocumentIdAndStatusFromToken(token);\n            this.fromToken = true;\n            this.token = res['token'];\n            if (res['status'] === 'wait') {\n                this.loading = false;\n                this.processErrorIcon = 'fa-clock fa-fade text-gray-400';\n                this.processErrorMessage = marker('VERIFIER.waiting');\n                await this.reloadPageWaitingFinish(token);\n                return;\n            } else if (res['status'] === 'running') {\n                this.loading = false;\n                this.processErrorIcon = 'fa-circle-notch fa-spin text-green-400';\n                this.processErrorMessage = marker('VERIFIER.processing');\n                await this.reloadPageWaitingFinish(token);\n                return;\n            } else if (res['status'] === 'error' || res['error']) {\n                this.loading = false;\n                this.processInError = true;\n                this.processErrorIcon = 'fa-xmark text-red-400';\n                this.processErrorMessage = this.translate.instant('VERIFIER.error', {reference: res['token']});\n                return;\n            } else {\n                this.processDone = true;\n                this.authService.headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n                if (res['document_ids'] && res['document_ids'].length  === 1) {\n                    this.documentId = res['document_ids'][0];\n                } else if (!document_id_from_multi) {\n                    this.loading = false;\n                    this.processMultiDocument = true;\n                    for (const cpt in res['document_ids']) {\n                        if (res['document_ids'].hasOwnProperty(cpt)) {\n                            const id = res['document_ids'][cpt];\n                            const tmp_thumb: any = await this.getThumbByDocumentId(id);\n                            const thumb = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/png;base64, ' + tmp_thumb['file']);\n                            const document: any = await this.getDocumentById(id);\n                            if (document['status'] === 'NEW') {\n                                this.multiDocumentsData.push({\n                                    id: id,\n                                    thumb: thumb\n                                });\n                            }\n                        }\n\n                        if (this.multiDocumentsData.length === 1) {\n                            this.loadDocument(this.multiDocumentsData[0].id);\n                        }\n                    }\n                    return;\n                } else {\n                    this.documentId = document_id_from_multi;\n                }\n            }\n        } else {\n            this.documentId = this.route.snapshot.params['id'];\n            if (!this.authService.headersExists) {\n                this.authService.generateHeaders();\n            }\n        }\n\n        this.translate.get('HISTORY-DESC.viewer', {document_id: this.documentId}).subscribe((translated: string) => {\n            this.translate.get('HISTORY.user').subscribe((firstname: string) => {\n                this.historyService.addHistory('verifier', 'viewer', translated, {\n                    'username': 'token_user',\n                    'lastname': 'Token',\n                    'firstname': firstname\n                });\n            });\n        });\n\n        this.updateDocument({\n            'locked': true,\n            'locked_by': this.userService.user.username\n        });\n        const customFields = await this.getCustomFields();\n        this.customFields = customFields.customFields;\n\n        this.document = await this.getDocument();\n\n        if (this.document.workflow_id) {\n            this.getWorkflow();\n        }\n        if (this.fromToken && (this.document.status === 'END' || this.document.status === 'ERR')) {\n            this.loading = false;\n            this.processDone = false;\n            this.processErrorIcon = 'fa-check text-green-400';\n            this.processErrorMessage = marker('VERIFIER.document_already_processed');\n            return;\n        }\n\n        this.currentFilename = this.document.full_jpg_filename;\n        await this.getThumb(this.document.full_jpg_filename);\n\n        if (this.fromTokenFormId) {\n            this.document.form_id = this.fromTokenFormId;\n        }\n\n        if (this.document.form_id) {\n            await this.generateOutputs(this.document.form_id);\n        }\n\n        this.formList = await this.getAllForm();\n        this.formList = this.formList.forms;\n        this.suppliers = await this.retrieveSuppliers('', 1000);\n        this.suppliers = this.suppliers.suppliers;\n\n        if (this.document.supplier_id) {\n            for (const element of this.suppliers) {\n                if (element.id === this.document.supplier_id) {\n                    this.currentSupplier = element;\n                    if (element.form_id) {\n                        this.supplierformFound = element.form_id;\n                    }\n                }\n            }\n        }\n\n        if (Object.keys(this.currentFormFields).length === 0) {\n            let defaultFormFound = false;\n            if (this.supplierformFound) {\n                await this.generateOutputs(this.supplierformFound);\n            } else {\n                for (const element of this.formList) {\n                    if (element.default_form) {\n                        defaultFormFound = element.id;\n                    }\n                }\n                if (defaultFormFound) {\n                    await this.generateOutputs(defaultFormFound);\n                }\n            }\n            if (defaultFormFound || this.supplierformFound) {\n                this.currentFormFields = await this.getForm();\n            } else {\n                this.notify.error(this.translate.instant('FORMS.no_form_available'));\n                await this.router.navigate(['/verifier/list']);\n            }\n        }\n        /*\n        * Enable library to draw rectangle on load (OCR ON FLY)\n        */\n        this.imageDocument = $('#document_image');\n        this.ratio = this.document['img_width'] / this.imageDocument.width();\n        setTimeout(() => {\n            this.ocr({\n                'target' : {\n                    'id': '',\n                    'labels': [\n                        {'textContent': ''}\n                    ]\n                }\n            }, true);\n        }, 500);\n        await this.fillForm(this.currentFormFields);\n        if (this.document.supplier_id) {\n            await this.getSupplierInfo(this.document.supplier_id, false, true);\n        }\n\n        setTimeout(() => {\n            this.drawPositions();\n            this.convertAutocomplete();\n            document.getElementById('image')!.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            document.getElementById('form')!.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            this.loading = false;\n        }, 1000);\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n\n        if (this.formSettings.settings.unique_url && this.formSettings.settings.unique_url.allow_supplier_autocomplete) {\n            this.allowAutocomplete = true;\n        }\n    }\n\n    async reloadPageWaitingFinish(token: any) {\n        interval(5000).subscribe(() => {\n            this.http.post(environment['url'] + '/ws/verifier/documents/getDocumentIdAndStatusByToken', {'token': token}).pipe(\n                tap((data: any) => {\n                    if (data['status'] === 'done') {\n                        window.location.reload();\n                    }\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    @HostListener('window:beforeunload')\n    ngOnDestroy() {\n        this.updateDocument({\n            'locked': false,\n            'locked_by': null\n        }, false);\n    }\n\n    loadDocument(documentId: any) {\n        this.loading = true;\n        this.processMultiDocument = false;\n        this.ngOnInit(documentId).then();\n    }\n\n    copyToken() {\n        navigator.clipboard.writeText(this.token).then(() => {\n            this.notify.success(this.translate.instant('CONFIGURATIONS.token_copied'));\n        });\n    }\n\n    async retrieveDocumentIdAndStatusFromToken(token: any) {\n        return await this.http.post(environment['url'] + '/ws/verifier/documents/getDocumentIdAndStatusByToken', {'token': token}).toPromise().catch((err: any) => {\n            this.notify.handleErrors(err);\n            this.authService.logout();\n        });\n    }\n\n    convertAutocomplete() {\n        this.outputs.forEach((output: any) => {\n            if (output.data.options.links && output.output_type_id === 'export_mem') {\n                const data = {\n                    \"host\": output.data.options.auth[0].value,\n                    \"login\": output.data.options.auth[1].value,\n                    \"password\": output.data.options.auth[2].value,\n                    \"autocompleteField\": '',\n                    \"memCustomField\": '',\n                    \"memClause\": '',\n                    \"vatNumberContactCustom\": '',\n                    \"enabled\": false,\n                    \"supplierCustomId\": ''\n                };\n\n                output.data.options.links.forEach((element: any) => {\n                    if (element.id === 'enabled' && element.value) {\n                        data['enabled'] = true;\n                    }\n                    if (element.id === 'openCaptureField' && element.value) {\n                        data['autocompleteField'] = element.value;\n                    } else if (element.id === 'memCustomField' && element.value) {\n                        data['memCustomField'] = element.value;\n                    } else if (element.id === 'memClause' && element.value) {\n                        data['memClause'] = element.value;\n                    } else if (element.id === 'vatNumberContactCustom' && element.value) {\n                        data['vatNumberContactCustom'] = element.value;\n                    }\n                });\n                if (data['enabled']) {\n                    this.form.supplier.forEach((supplier_element: any) => {\n                        if (supplier_element.id === 'vat_number' || supplier_element.id === 'siret') {\n                            data['supplierCustomId'] += supplier_element.control.value;\n                        }\n                    });\n\n                    this.form.facturation.forEach((element: any) => {\n                       if (element.id === data['autocompleteField']) {\n                           this.http.post(environment['url'] + '/ws/mem/getDocumentsWithContact', {'args': data}, {headers: this.authService.headers},\n                           ).pipe(\n                               tap((_return: any) => {\n                                   element.type = 'autocomplete';\n                                   if (_return && _return.count > 0) {\n                                       element.autocomplete_values = element.control.valueChanges.pipe(\n                                           startWith(''),\n                                           map(option => option ? this._filter_data(option, _return['resources']) : _return['resources'].slice())\n                                       );\n                                   }\n                               }),\n                               catchError((err: any) => {\n                                   console.debug(err);\n                                   this.notify.handleErrors(err);\n                                   return of(false);\n                               })\n                           ).subscribe();\n                       }\n                    });\n                }\n            }\n        });\n    }\n\n    async generateOutputs(formId: any) {\n        this.currentFormFields = await this.getFormFieldsById(formId);\n        this.formSettings = await this.getFormById(formId);\n\n        if (this.formSettings && this.formSettings.outputs.length !== 0) {\n            for (const outputId in this.formSettings.outputs) {\n                const output = await this.getOutputs(this.formSettings.outputs[outputId]);\n                this.outputs.push(output);\n                this.outputsLabel.push(output.output_label);\n            }\n        }\n\n        if (!this.fromToken && this.formSettings && !this.formSettings.settings.unique_url) {\n            this.formSettings.settings.unique_url = {\n                \"expiration\": 7,\n                \"change_form\": true,\n                \"create_supplier\": true,\n                \"enable_supplier\": true,\n                \"refuse_document\": true,\n                \"validate_document\": true\n            };\n        }\n\n        if (this.formSettings && this.formSettings.settings.supplier_verif && !this.tokenINSEE) {\n            const token: any = await this.generateTokenInsee();\n            if (token['token']) {\n                if (token['token'].includes('ERROR')) {\n                    this.tokenINSEEError = true;\n                    this.tokenINSEE = token['token'].replace('ERROR : ', '');\n                } else {\n                    this.tokenINSEEError = false;\n                    this.tokenINSEE = token['token'];\n                }\n            }\n        }\n    }\n\n    async generateTokenInsee() {\n        return await this.http.get(environment['url'] + '/ws/verifier/getTokenINSEE', {headers: this.authService.headers}).toPromise();\n    }\n\n    getCategoryLabel(category: any) {\n        return this.formSettings.labels[category.id] ? this.formSettings.labels[category.id] : this.translate.instant(category.label);\n    }\n\n    async getThumbByDocumentId(documentId: any) {\n        return this.http.post(environment['url'] + '/ws/verifier/getThumbByDocumentId', {'documentId': documentId}, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getThumb(filename:string) {\n        const cpt = filename.split('-')[filename.split('-').length - 1].split('.')[0];\n        if (this.imgArray[cpt]) {\n            this.imgSrc = this.imgArray[cpt];\n        } else {\n            this.imgLoading = true;\n            this.http.post(environment['url'] + '/ws/verifier/getThumb',\n                {'args': {'type': 'full', 'filename': filename, 'registerDate': this.document['register_date'], 'documentId': this.documentId}},\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.imgLoading = false;\n                    this.imgSrc = this.sanitizer.sanitize(SecurityContext.URL, 'data:image/jpeg;base64, ' + data.file);\n                    this.imgArray[cpt] = this.imgSrc;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n        return this.imgSrc;\n    }\n\n    private _filter_data(value: any, data: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        return data.filter((element: any) => element.data.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    updateFilteredOption(event: any, control: any) {\n        let value = '';\n        if (event.target.value) {\n            value = event.target.value;\n        } else if (control.value) {\n            value = control.value;\n        }\n        control.patchValue(value);\n    }\n\n    getFieldInfo(fieldId: any) {\n        for (const parent in this.fields) {\n            for (const cpt in this.form[parent]) {\n                const field = this.form[parent][cpt];\n                if (field.id === fieldId) {\n                    return field;\n                }\n            }\n        }\n    }\n\n    async drawPositions(): Promise<any> {\n        for (const fieldId in this.document['datas']) {\n            const page = this.getPage(fieldId);\n            const position = this.document.positions[fieldId];\n            if (position && Object.keys(position).length > 0 && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                const splittedFieldId = fieldId.split('_');\n                const field = this.getFieldInfo(fieldId);\n                let cpt = '0';\n                if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                    cpt = splittedFieldId[splittedFieldId.length - 1];\n                }\n                if (field) {\n                    this.drawPositionByField(field, position, cpt);\n                    $('#' + field.id).blur();\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any, cpt = '0') {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n\n        if (cpt !== '0') {\n            this.lastLabel += ' ' + parseInt(cpt);\n        }\n\n        this.lastColor = field.color;\n        this.disableOCR = true;\n        const newArea = {\n            x: position.ocr_from_user ? position.x / this.ratio : position.x / this.ratio - ((position.x / this.ratio) * 0.005),\n            y: position.ocr_from_user ? position.y / this.ratio : position.y / this.ratio - ((position.y / this.ratio) * 0.003),\n            width: position.ocr_from_user ? position.width / this.ratio : position.width / this.ratio + ((position.width / this.ratio) * 0.05),\n            height: position.ocr_from_user ? position.height / this.ratio : position.height / this.ratio + ((position.height / this.ratio) * 0.6)\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    getPage(fieldId: any) {\n        let page: number = 1;\n        if (this.document.pages) {\n            Object.keys(this.document.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.document.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    async retrieveSuppliers(name: string = '', limit: number = 0): Promise<any> {\n        if (limit == 0) {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&name=' + name, {headers: this.authService.headers}).toPromise();\n        } else {\n            return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC&limit=' + limit, {headers: this.authService.headers}).toPromise();\n        }\n    }\n\n    async getDocument(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/verifier/documents/' + this.documentId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getCustomFields(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getDocumentById(id: any): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/verifier/documents/' + id, {headers: this.authService.headers}).toPromise();\n    }\n\n    getWorkflow() {\n        this.http.get(environment['url'] + '/ws/workflows/verifier/getById/' + this.document.workflow_id,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.workflowSettings = data;\n            })\n        ).subscribe();\n    }\n\n    async getForm(): Promise<any> {\n        if (this.document.form_id) {\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.document.form_id, {headers: this.authService.headers}).toPromise();\n        }\n        if (this.document.supplier_id) {\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getBySupplierId/' + this.document.supplier_id, {headers: this.authService.headers}).toPromise();\n        }\n        else {\n            return await this.http.get(environment['url'] + '/ws/forms/getDefault/verifier', {headers: this.authService.headers}).toPromise();\n        }\n    }\n\n    async getAllForm(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/verifier/list', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormFieldsById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/verifier/getById/' + formId, {headers: this.authService.headers}).toPromise().catch(()=> {\n            this.notify.error(this.translate.instant('FORMS.form_not_found'));\n            this.router.navigate(['/verifier/list']);\n        });\n    }\n\n    async fillForm(data: any): Promise<any> {\n        this.form = {\n            'supplier': [],\n            'lines': [],\n            'facturation': [],\n            'other': []\n        };\n        this.fields = data.fields;\n        for (const category in this.fields) {\n            for (const cpt in this.fields[category]) {\n                const field = this.fields[category][cpt];\n                this.form[category].push({\n                    id: field.id,\n                    label: field.label,\n                    required: field.required,\n                    control: new FormControl(),\n                    type: field.type,\n                    pattern: this.getPattern(field.format),\n                    color: field.color,\n                    unit: field.unit,\n                    class: field.class,\n                    format: field.format,\n                    display: field.display,\n                    format_icon: field.format_icon,\n                    display_icon: field.display_icon,\n                    class_label: field.class_label,\n                    cpt: 0,\n                    values: '',\n                    lineSelected: field.lineSelected,\n                    fullSizeSelected: field.fullSizeSelected\n                });\n\n                const _field = this.form[category][this.form[category].length - 1];\n                if (field.id === 'accounting_plan') {\n                    let array : any = {};\n                    if (this.document.customer_id && this.document.customer_id !== 0) {\n                        array = await this.retrieveAccountingPlan();\n                    }\n                    this.accountingPlanEmpty = Object.keys(array).length === 0;\n                    if (this.accountingPlanEmpty) {\n                        array = await this.retrieveDefaultAccountingPlan();\n                    }\n                    this.accountingPlan = this.sortArray(array);\n                    _field.values = this.form[category][cpt].control.valueChanges\n                        .pipe(\n                            startWith(''),\n                            map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                        );\n                }\n\n                if (this.document.datas[field.id] !== undefined && this.document.datas[field.id] !== null && this.document.datas[field.id] !== '') {\n                    let value = this.document.datas[field.id];\n                    if (field.format === 'date' && field.id !== '' && field.id !== undefined && value && typeof value === 'string') {\n                        value = value.replaceAll('.', '/');\n                        value = value.replaceAll(',', '/');\n                        value = value.replaceAll(' ', '/');\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    _field.control.setValue(value);\n                    _field.control.markAsTouched();\n\n                    if (field.id === 'siret' || field.id === 'siren') {\n                        this.checkSirenOrSiret(field.id, value);\n                    }\n                    if (field.id === 'vat_number') {\n                        this.checkVAT(field.id, value);\n                    }\n                }\n\n                if (field.id === 'name' && category === 'supplier') {\n                    this.supplierNamecontrol = this.form[category][cpt].control;\n                }\n\n                if (field.id.includes('custom_') && field.type === 'select') {\n                    const custom_id = parseInt(field.id.replace('custom_', ''));\n                    const customField = this.customFields.filter((field: any) => field.id === custom_id);\n                    if (customField) {\n                        _field.values = customField[0].settings.options;\n                    }\n                }\n\n                if (!field.lineSelected && !field.fullSizeSelected) {\n                    this.findChildren(field.id, _field, category);\n                } else if (field.fullSizeSelected) {\n                    for (const field_data in this.document.datas) {\n                        if (field_data.includes(field.id + '_')) {\n                            this.duplicateLine(field.id, category, true);\n                        }\n                    }\n                }\n            }\n        }\n        if (this.form.facturation.length === 0 && this.form.supplier.length === 0 && this.form.other.length === 0) {\n            this.formEmpty = true;\n        }\n    }\n\n    async getOutputs(outputId: any): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + outputId, {headers: this.authService.headers}).toPromise();\n    }\n\n    private _filter_accounting(array: any, value: any): string[] {\n        this.toHighlightAccounting = value;\n        const filterValue = value.toLowerCase();\n        return array.filter((option: any) => option.compte_lib.toLowerCase().indexOf(filterValue) !== -1 || option.compte_num.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    checkConditional(field_id: any, option: any) {\n        let _return = true;\n        if (field_id.includes('custom_')) {\n            this.customFields.forEach((customField: any) => {\n                if ('conditional' in customField.settings && customField.settings.conditional) {\n                    if (customField.id === parseInt(field_id.replace('custom_', ''))) {\n                        customField.settings.options.forEach((customFieldOption: any) => {\n                            if (customFieldOption.id === option.id) {\n                                const conditionalCustomId = customFieldOption.conditional_custom_field;\n                                const conditionalCustomfield = this.getFieldInfo('custom_' + conditionalCustomId);\n                                if (conditionalCustomfield && conditionalCustomfield.control) {\n                                    const conditionalCustomValue = conditionalCustomfield.control.value;\n                                    _return = conditionalCustomValue === customFieldOption.conditional_custom_value;\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        }\n        return _return;\n    }\n\n    sortArray(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.compte_num, y = b.compte_num;\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    async retrieveAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getAccountingPlan/' + this.document.customer_id, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveDefaultAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getDefaultAccountingPlan', {headers: this.authService.headers}).toPromise();\n    }\n\n    hideVisuals() {\n        this.visualIsHide = !this.visualIsHide;\n        const visuals = document.getElementsByClassName('select-areas-background-area');\n        Array.from(visuals).forEach((element: any) => {\n            const cpt = element.id.match(/(\\d+)/)[0];\n            if (this.visualIsHide) {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'none';\n            } else {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'block';\n            }\n        });\n    }\n\n    downloadOriginalFile() {\n        this.http.post(environment['url'] + '/ws/verifier/getOriginalFile/' + this.document.id, {},\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const mimeType = data['mime'];\n                const referenceFile = 'data:' + mimeType + ';base64, ' + data['file'];\n                const link = document.createElement(\"a\");\n                link.href = referenceFile;\n                let splitted_filename = this.document['original_filename'].split('.');\n                let filename = splitted_filename[0].split('_')\n                link.download = filename.splice(0, filename.length - 1).join('_') + '.' + splitted_filename[1];\n                link.click();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    findChildren(parentId: any, parent: any, categoryId: any) {\n        for (const field in this.document['datas']) {\n            if (field.includes(parentId + '_')) {\n                parent.cpt += 1;\n                const splitted = field.split('_');\n                const cpt = parseInt(splitted[splitted.length - 1]) + 1;\n                this.form[categoryId].push({\n                    id: field,\n                    label: parent.label,\n                    required: parent.required,\n                    control: new FormControl(),\n                    type: parent.type,\n                    pattern: this.getPattern(parent.format),\n                    color: parent.color,\n                    unit: parent.unit,\n                    class: parent.class,\n                    format: parent.format,\n                    display: 'simple',\n                    format_icon: parent.format_icon,\n                    display_icon: parent.display_icon,\n                    class_label: parent.class_label,\n                    cpt: cpt\n                });\n                const value = this.document['datas'][field];\n                const _field = this.form[categoryId][this.form[categoryId].length - 1];\n                _field.control.setValue(value);\n            }\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt) {\n                return selection[index];\n            }\n        }\n    }\n\n    ocr(event: any, enable: boolean, color = 'green') {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        this.lastLabel = event.target.labels[0].textContent.replace('*', '').trim();\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        if (this.document.status !== 'END') {\n            deleteArea.addClass('pointer-events-auto');\n            backgroundArea.addClass('pointer-events-auto');\n            resizeArea.addClass('pointer-events-auto');\n        }\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            this.scrollToElement();\n            if (this.document.status !== 'END') {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageDocument.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageDocument.width(), this.imageDocument.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        if (_this.lastId) {\n                            if ($('#select-area-label_' + cpt).length > 0) {\n                                const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                                if (inputId.trim() !== _this.lastId.trim()) {\n                                    _this.lastId = inputId;\n                                    _this.lastLabel = $('#select-area-label_' + cpt).text();\n                                }\n                            }\n                            _this.ocr_process(img, cpt, selection);\n                        }\n                    }\n                },\n                onDeleted(_img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    if (inputId) {\n                        _this.updateFormValue(inputId, '');\n                        delete _this.document.positions[inputId.trim()];\n                        if (_this.deleteDataOnChangeForm) {\n                            _this.deleteData(inputId);\n                            _this.deletePosition(inputId);\n                            _this.deletePage(inputId);\n                        }\n                    }\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    scrollToElement() {\n        if (this.document.pages[this.lastId]) {\n            this.changeImage(this.document.pages[this.lastId], this.currentPage);\n        }\n        if (this.document.positions[this.lastId]) {\n            const currentHeight = window.innerHeight;\n            if (document.getElementsByClassName('input_' + this.lastId).length > 0) {\n                const position = document.getElementsByClassName('input_' + this.lastId)![0]!.getBoundingClientRect().top;\n                if (position >= currentHeight || position <= currentHeight) {\n                    document.getElementById('image')!.scrollTo({\n                        top: position - 200,\n                        behavior: 'smooth'\n                    });\n                }\n            }\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        // Write the label of the input above the selection rectangle\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (parseInt(String(page)) === this.currentPage || page === 0)) {\n            if (document.getElementById('select-area-label_' + cpt) === null) {\n                const outline = document.getElementById('select-areas-outline_' + cpt);\n                const backgroundArea = document.getElementById(\"select-areas-background-area_\" + cpt);\n                const deleteContainer = document.getElementById('select-areas-delete_' + cpt);\n                const resizeHandler = document.getElementsByClassName('select-areas-resize-handler_' + cpt)[0];\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n\n                backgroundArea!.style.backgroundColor = this.lastColor;\n                outline!.classList.add('outline_' + this.lastId);\n                backgroundArea!.classList.add('background_' + this.lastId);\n                resizeHandler.classList.add('resize_' + this.lastId);\n                deleteContainer!.classList.add('delete_' + this.lastId);\n                if (this.document.status === 'END') {\n                    outline!.classList.add('pointer-events-none');\n                    backgroundArea!.classList.add(\"pointer-events-none\");\n                    resizeHandler!.classList.add('pointer-events-none');\n                    deleteContainer!.classList.add('pointer-events-none');\n                }\n            }\n            // End write\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n            if (!this.isOCRRunning && !this.loading && this.saveInfo) {\n                this.isOCRRunning = true;\n                let lang = this.localeService.currentLang;\n                if (Object.keys(this.currentSupplier).length !== 0) {\n                    lang = this.currentSupplier['document_lang'];\n                }\n                this.http.post(environment['url'] + '/ws/verifier/ocrOnFly',\n                    {\n                        selection: this.getSelectionByCpt(selection, cpt),\n                        fileName: this.currentFilename, lang: lang,\n                        thumbSize: {width: img.currentTarget.width, height: img.currentTarget.height},\n                        registerDate: this.document['register_date']\n                    }, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.isOCRRunning = false;\n                            let oldPosition = {\n                                x: 0,\n                                y: 0,\n                                width: 0,\n                                height: 0\n                            };\n                            if (this.document.positions[inputId.trim()]) {\n                                oldPosition = {\n                                    x: this.document.positions[inputId.trim()].x / this.ratio - ((this.document.positions[inputId.trim()].x / this.ratio) * 0.005),\n                                    y: this.document.positions[inputId.trim()].y / this.ratio - ((this.document.positions[inputId.trim()].y / this.ratio) * 0.003),\n                                    width: this.document.positions[inputId.trim()].width / this.ratio + ((this.document.positions[inputId.trim()].width / this.ratio) * 0.05),\n                                    height: this.document.positions[inputId.trim()].height / this.ratio + ((this.document.positions[inputId.trim()].height / this.ratio) * 0.6)\n                                };\n                            }\n\n                            const newPosition = this.getSelectionByCpt(selection, cpt);\n                            if (newPosition.x !== oldPosition.x && newPosition.y !== oldPosition.y &&\n                                newPosition.width !== oldPosition.width && newPosition.height !== oldPosition.height) {\n                                this.updateFormValue(inputId, data.result);\n                                const res = this.saveData(data.result, this.lastId, true);\n                                if (res) {\n                                    const allowLearning = this.formSettings.settings.allow_learning;\n                                    if (allowLearning == true || allowLearning == undefined) {\n                                        this.savePosition(newPosition);\n                                        this.savePages(this.currentPage).then();\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n            }\n            this.saveInfo = true;\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    updateFormValue(inputId: string, value: any) {\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.id.trim() === inputId.trim()) {\n                    if (value && (input.format === 'number_int' || input.format === 'number_float')) {\n                        value = value.replace(/[A-Za-z€%$]/g, '');\n                    }\n                    if (input.type === 'date' && value) {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    input.control.setValue(value);\n                    input.control.markAsTouched();\n                }\n            });\n        }\n    }\n\n    savePosition(position: any) {\n        position = {\n            ocr_from_user: true,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio,\n            height: position.height * this.ratio,\n            width: position.width * this.ratio\n        };\n\n        if (this.document.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.document.supplier_id + '/updatePosition',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updatePosition',\n            {'args': {[this.lastId]: position}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.positions[this.lastId] = position;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async savePages(page: any) {\n        if (this.document.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.document.supplier_id + '/updatePage',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updatePage',\n            {'args': {[this.lastId]: page}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.pages[this.lastId] = page;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveData(data: any, fieldId: any = false, showNotif: boolean = false) {\n        if (this.document.status !== 'END') {\n            const oldData = data;\n            if (fieldId) {\n                const field = this.getField(fieldId);\n                if (Object.keys(field).length !== 0) {\n                    if (field.unit === 'addresses' || field.unit === 'supplier') {\n                        showNotif = false;\n                    }\n                    if (field.control.errors || this.document['datas'][fieldId] === data) {\n                        return false;\n                    }\n\n                    data = {[fieldId]: data};\n                    this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                        {'args': data},\n                        {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.document['datas'][fieldId] = oldData;\n                            if (showNotif) {\n                                this.notify.success(this.translate.instant('DOCUMENTS.position_and_data_updated', {\"input\": this.lastLabel}));\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    createSupplier() {\n        const addressData: any = {};\n        const supplierData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n            if (element.unit === 'supplier') {\n                supplierData[element.id] = field.control.value;\n            }\n            if (element.unit === 'addresses') {\n                addressData[element.id] = field.control.value;\n            }\n\n            this.saveData(field.control.value, element.id);\n        });\n        this.formLoading = true;\n        this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                supplierData['address_id'] = data.id;\n                this.http.post(environment['url'] + '/ws/accounts/suppliers/create?fromViewer=true', {'args': supplierData}, {headers: this.authService.headers},\n                ).pipe(\n                    tap(async (supplier_data: any) => {\n                        this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                        this.updateDocument({'supplier_id': supplier_data['id']});\n                        this.document.supplier_id = supplier_data['id'];\n                        this.suppliers = await this.retrieveSuppliers();\n                        this.suppliers = this.suppliers.suppliers;\n                        this.supplierExists = true;\n                        for (const element of this.suppliers) {\n                            if (element.id === this.document.supplier_id) {\n                                this.currentSupplier = element;\n                            }\n                        }\n                        this.formLoading = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.formLoading = false;\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    editSupplier() {\n        const supplierData: any = {};\n        const addressData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n\n            if (element.unit === 'supplier') {\n                supplierData[element.id] = field.control.value;\n            }\n            if (element.unit === 'addresses') {\n                addressData[element.id] = field.control.value;\n            }\n\n            this.saveData(field.control.value, element.id);\n        });\n\n        this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.document.supplier_id, {'args': supplierData}, {headers: this.authService.headers},\n        ).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.put(environment['url'] + '/ws/accounts/addresses/updateBySupplierId/' + this.document.supplier_id, {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDocument(data: any, showError: boolean = true) {\n        if (this.documentId) {\n            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.documentId + '/update',\n                {'args': data},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    if (showError) {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                    }\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getField(fieldId: any) {\n        let _field : any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((field: any) => {\n                if (field.id.trim() === fieldId.trim()) {\n                    _field = field;\n                }\n            });\n        }\n        return _field;\n    }\n\n    deleteData(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deleteData',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCUMENTS.data_deleted', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePosition(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deletePosition',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.document.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.document.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.document.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.document.supplier_id + '/deletePosition',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePage(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deletePage',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.document.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.document.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.document.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.document.supplier_id + '/deletePage',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getPattern(format: any) {\n        let pattern = '';\n        for (const cpt in this.pattern) {\n            if (cpt === format) {\n                pattern = this.pattern[cpt];\n            }\n        }\n        return pattern;\n    }\n\n    duplicateLine(fieldId: any, categoryId: any, neededValue: boolean = false) {\n        const listOfNewField: any = {};\n        const listOfNewFieldData: any = {};\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const newField = Object.assign({}, this.form[categoryId][i]);\n                        this.form[categoryId][i].cpt += 1;\n                        newField.id = newField.id + '_' + this.form[categoryId][i].cpt;\n                        newField.cpt = this.form[categoryId][i].cpt;\n                        newField.display = 'simple';\n                        newField.deleteLine = this.form[categoryId][i].fullSizeSelected;\n                        newField.lineSelected = true;\n                        newField.fullSizeSelected = false;\n                        newField.control = new FormControl();\n                        if (this.document.datas[newField.id]) {\n                            let value = this.document.datas[newField.id];\n                            if (newField.format === 'date' && newField.id !== '' && newField.id !== undefined && value && typeof value === 'string') {\n                                value = value.replaceAll('.', '/');\n                                value = value.replaceAll(',', '/');\n                                value = value.replaceAll(' ', '/');\n                                const format = moment().localeData().longDateFormat('L');\n                                value = moment(value, format);\n                                value = new Date(value._d);\n                            }\n                            newField.control.setValue(value);\n                            newField.control.markAsTouched();\n                            listOfNewFieldData[newField.id] = value;\n                        } else {\n                            listOfNewField[newField.id] = '';\n                            listOfNewFieldData[newField.id] = '';\n                        }\n\n                        if (this.form[categoryId][i].cpt > 1 ) {\n                            this.form[categoryId].splice(i + (parseInt(numberOfField) * parseInt(this.form[categoryId][i].cpt)), 0, newField);\n                        } else {\n                            this.form[categoryId].splice(i + parseInt(numberOfField), 0, newField);\n                        }\n\n                        if (newField.id === 'accounting_plan') {\n                            this.form[categoryId][cpt + field.cpt].values = this.form[categoryId][cpt].control.valueChanges.pipe(\n                                startWith(''),\n                                map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                            );\n                        }\n                    }\n                }\n            }\n        });\n\n        if (!neededValue) {\n            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                {'args': listOfNewField}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            let lineEmpty = true;\n            Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                if (listOfNewFieldData[newFieldId]) {\n                    lineEmpty = false;\n                }\n            });\n\n            if (lineEmpty) {\n                Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                    this.form[categoryId].forEach((element: any, cpt: number) => {\n                        if (newFieldId === element.id) {\n                            const parentId = element.id.split('_').slice(0, -1).join('_');\n                            this.form[categoryId].splice(cpt, 1);\n                            this.form[categoryId].forEach((parent_field: any) => {\n                                if (parent_field.id.trim() === parentId.trim()) {\n                                    parent_field.cpt = parent_field.cpt - 1;\n                                }\n                            });\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    duplicateField(fieldId: any, categoryId: any) {\n        for (const category in this.form) {\n            if (category === categoryId) {\n                this.form[category].forEach((field: any, cpt: number) => {\n                    if (field.id.trim() === fieldId.trim()) {\n                        const newField = Object.assign({}, field);\n                        newField.id = newField.id + '_' + field.cpt;\n                        field.cpt += 1;\n                        newField.cpt = field.cpt;\n                        newField.display = 'simple';\n                        newField.control = new FormControl();\n                        this.form[category].splice(cpt + field.cpt, 0, newField);\n                        this.saveData('', newField.id);\n                        this.notify.success(this.translate.instant('DOCUMENTS.field_duplicated', {\"input\": this.translate.instant(field.label)}));\n                    }\n                });\n            }\n        }\n    }\n\n    removeDuplicateLine(fieldId: any, categoryId: any) {\n        const listOfFieldToDelete: any[] = [];\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const parentId = this.form[categoryId][i].id.split('_').slice(0, -1).join('_');\n                        listOfFieldToDelete.push(this.form[categoryId][i].id);\n                        this.form[categoryId].forEach((parent_field: any) => {\n                            if (parent_field.id.trim() === parentId.trim()) {\n                                parent_field.cpt = parent_field.cpt - 1;\n                            }\n                        });\n                    }\n                    this.form[categoryId].splice((cpt + 1) - numberOfField, numberOfField);\n                }\n            }\n        });\n        this.deleteData(listOfFieldToDelete, true);\n        this.deletePosition(listOfFieldToDelete, true);\n        this.deletePage(listOfFieldToDelete, true);\n    }\n\n    removeDuplicateField(fieldId: any, categoryId: any) {\n        const parentId = fieldId.split('_').slice(0, -1).join('_');\n        this.form[categoryId].forEach((field: any, cpt:number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                this.deleteData(field.id);\n                this.deletePosition(field.id);\n                this.deletePage(field.id);\n                this.form[categoryId].splice(cpt, 1);\n            } else if (field.id.trim() === parentId.trim()) {\n                field.cpt = field.cpt - 1;\n            }\n        });\n    }\n\n    isChildField(fieldId: any) {\n        const splittedId = fieldId.split('_');\n        return Number.isInteger(parseInt(splittedId[splittedId.length - 1])) && !fieldId.includes('custom_');\n    }\n\n    async getSupplierInfo(supplierId: any, showNotif = false, launchOnInit = false) {\n        let tmpSupplier: any = [];\n        if (this.supplierformFound) {\n            tmpSupplier = this.suppliers\n        } else {\n            tmpSupplier = await this.retrieveSuppliers();\n            tmpSupplier = tmpSupplier.suppliers;\n        }\n\n        tmpSupplier.forEach((supplier: any) => {\n            if (supplier.id === supplierId) {\n                if (!supplier.address_id) {\n                    supplier.address_id = 0;\n                }\n                this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + supplier.address_id, {headers: this.authService.headers}).pipe(\n                    tap((address: any) => {\n                        const supplierData : any = {\n                            'name': supplier.name,\n                            'address1': address.address1,\n                            'address2': address.address2,\n                            'city': address.city,\n                            'country': address.country,\n                            'postal_code': address.postal_code,\n                            'siret': supplier.siret,\n                            'siren': supplier.siren,\n                            'iban': supplier.iban,\n                            'bic': supplier.bic,\n                            'email': supplier.email,\n                            'vat_number': supplier.vat_number\n                        };\n                        this.getOnlyRawFooter = supplier['get_only_raw_footer'];\n                        for (const column in supplierData) {\n                            this.updateFormValue(column, supplierData[column]);\n                        }\n\n                        if (!launchOnInit) {\n                            this.updateDocument({'supplier_id': supplierId});\n                            this.saveData(supplierData);\n                            this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n                                {'args': supplierData},\n                                {headers: this.authService.headers}).pipe(\n                                tap(() => {\n                                    this.document.supplier_id = supplierId;\n                                    for (const element of this.suppliers) {\n                                        if (element.id === this.document.supplier_id) {\n                                            this.currentSupplier = element;\n                                        }\n                                    }\n                                    if (showNotif) {\n                                        this.notify.success(this.translate.instant('DOCUMENTS.supplier_infos_updated'));\n                                    }\n                                    this.supplierExists = true;\n                                }),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    // Function used to verify SIRET or SIREN using the Luhn algorithm\n    verify(value: any, size: any, isVAT = false) {\n        if (isVAT) {\n            return value.length === size;\n        }\n\n        if (isNaN(value) || value.length !== size) {\n            return false;\n        }\n        let bal     = 0;\n        let total   = 0;\n        for (let i = size - 1; i >= 0; i--) {\n            const step = (value.charCodeAt(i) - 48) * (bal + 1);\n            total += (step > 9) ? step - 9 : step;\n            bal = 1 - bal;\n        }\n        return total % 10 === 0;\n    }\n\n    getErrorMessage(field: any, category: any) {\n        let error: any;\n        this.form[category].forEach((element: any) => {\n            if (element.id === field) {\n                if (element.control.errors) {\n                    const required = element.control.errors.required;\n                    const pattern = element.control.errors.pattern;\n                    const datePickerPattern = element.control.errors.matDatepickerParse;\n                    const siret_error = element.control.errors.siret_error;\n                    const siren_error = element.control.errors.siren_error;\n                    const vat_error = element.control.errors.vat_error;\n                    if (pattern) {\n                        if (pattern.requiredPattern === this.getPattern('alphanum')) {\n                            error = this.translate.instant('ERROR.alphanum_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('alphanum_extended')) {\n                            error = this.translate.instant('ERROR.alphanum_extended_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_int')) {\n                            error = this.translate.instant('ERROR.number_int_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_float')) {\n                            error = this.translate.instant('ERROR.number_float_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('char')) {\n                            error = this.translate.instant('ERROR.char_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('email')) {\n                            error = this.translate.instant('ERROR.email_pattern');\n                        }\n                    } else if (datePickerPattern) {\n                        error = this.translate.instant('ERROR.date_pattern');\n                    } else if (required) {\n                        error = this.translate.instant('ERROR.field_required');\n                    } else if (siret_error) {\n                        error = siret_error;\n                    } else if (siren_error) {\n                        error = siren_error;\n                    } else if (vat_error) {\n                        error = vat_error;\n                    } else if (this.tokenINSEEError) {\n                        error = this.tokenINSEE;\n                    } else {\n                        error = this.translate.instant('ERROR.unknow_error');\n                    }\n                }\n            }\n        });\n        return error;\n    }\n\n    setAutocompleteDefaultValue(event: any) {\n        if (event.isUserInput) {\n            this.form.facturation.forEach((element: any) => {\n                if (element.autocomplete_values) {\n                    element.autocomplete_id = event.source.id;\n                }\n            });\n        }\n    }\n\n    validateForm() {\n        this.loadingSubmit = true;\n        let valid = true;\n        const arrayData: any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.control.value) {\n                    let value = input.control.value;\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = value.format(format);\n                    }\n                    Object.assign(arrayData, {[input.id] : value});\n                }\n                if (input.control.errors) {\n                    valid = false;\n                    input.control.markAsTouched();\n                    this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n                }\n            });\n        }\n\n        if (!valid) {\n            this.loadingSubmit = false;\n            return;\n        }\n\n        const countLines = {\n            ['lines_count']: 0,\n            ['taxes_count']: 0\n        };\n        this.form['lines'].forEach((element: any) => {\n            const cpt = element.id.match(/\\d+/g) + 1;\n            if (cpt && cpt[0] > (countLines['lines_count'])) {\n                countLines['lines_count']++;\n            }\n        });\n        this.form['facturation'].forEach((element: any) => {\n            if (element.id.includes('vat_amount') || element.id.includes('vat_rate') || element.id.includes('no_rate_amount')) {\n                const cpt = element.id.match(/\\d+/g) + 1;\n                if (cpt && cpt[0] > (countLines['taxes_count'])) {\n                    countLines['taxes_count']++;\n                }\n            }\n        });\n\n        this.http.put(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/updateData',\n            {'args': countLines},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.document.datas['lines_count'] = countLines['lines_count'];\n                this.document.datas['taxes_count'] = countLines['taxes_count'];\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        /*\n            Executer les actions paramétrées dans les réglages du formulaires\n         */\n        if (this.formSettings.outputs.length !== 0) {\n            this.formSettings.outputs.forEach((outputId: any, cpt: number) => {\n                this.http.get(environment['url'] + '/ws/outputs/verifier/getById/' + outputId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        if (data.data.options.links) {\n                            this.form.facturation.forEach((element: any) => {\n                                if (element.autocomplete_values) {\n                                    if (data.output_type_id === 'export_mem') {\n                                        data.data['res_id'] = element.autocomplete_id;\n                                    }\n                                }\n                            });\n                        }\n\n                        this.http.post(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/' + data.output_type_id, {'args': data}, {headers: this.authService.headers}).pipe(\n                            tap((filename) => {\n                                this.outputs.forEach((output: any) => {\n                                    if (output.output_type_id === data.output_type_id) {\n                                        output.file_path = filename;\n                                    }\n                                });\n                                /* Actions à effectuer après le traitement des chaînes sortantes */\n                                if (cpt + 1 === this.formSettings.outputs.length) {\n                                    this.historyService.addHistory('verifier', 'document_validated', this.translate.instant('HISTORY-DESC.document_validated', {document_id: this.documentId, outputs: this.outputsLabel.join(', ')}));\n                                    this.updateDocument({'status': 'END', 'locked': false, 'locked_by': null});\n                                    this.router.navigate(['/verifier']).then();\n                                    this.loadingSubmit = false;\n                                    if (this.workflowSettings && this.workflowSettings.process) {\n                                        if (this.workflowSettings.process['delete_documents']) {\n                                            this.http.get(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/deleteDocuments', {headers: this.authService.headers}).pipe(\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n\n                                    this.http.post(environment['url'] + '/ws/verifier/documents/' + this.document.id + '/outputScript', {'workflow': this.workflowSettings, 'outputs': this.outputs}, {headers: this.authService.headers}).pipe(\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                    this.notify.success(this.translate.instant('VERIFIER.form_validated_and_output_done', {outputs: this.outputsLabel.join('<br>')}));\n                                }\n                            }),\n                            catchError((err: any) => {\n                                this.loadingSubmit = false;\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            });\n        } else {\n            this.notify.error(this.translate.instant('VERIFIER.no_outputs_for_this_form', {'form': this.formSettings.label}));\n            this.loadingSubmit = false;\n        }\n    }\n\n    refuseForm() {\n        this.historyService.addHistory('verifier', 'document_refused', this.translate.instant('HISTORY-DESC.document_refused', {document_id: this.documentId}));\n        this.updateDocument({'status': 'ERR', 'locked': false, 'locked_by': null});\n        this.notify.error(this.translate.instant('VERIFIER.document_refused'));\n        this.router.navigate(['/verifier/list']).then();\n    }\n\n    async changeForm(event: any) {\n        this.outputs = [];\n        this.outputsLabel = [];\n        this.loading = true;\n        this.formEmpty = false;\n        const newFormId = event.value;\n        for (const cpt in this.formList) {\n            if (this.formList[cpt].id === newFormId) {\n                if (!this.fromToken) {\n                    this.updateDocument({'form_id': newFormId});\n                } else {\n                    this.fromTokenFormId = newFormId;\n                }\n                this.currentFormFields = await this.getFormFieldsById(newFormId);\n                this.deleteDataOnChangeForm = false;\n                this.imageDocument.selectAreas('destroy');\n                this.settingsOpen = false;\n                this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                await this.ngOnInit();\n                this.deleteDataOnChangeForm = true;\n            }\n        }\n    }\n\n    nextPage() {\n        if (this.currentPage < this.document['nb_pages']) {\n            this.currentPage = this.currentPage + 1;\n            this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            this.changeImage(1, this.document.nb_pages);\n        }\n    }\n\n    previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            this.changeImage(this.document['nb_pages'], this.currentPage);\n        }\n    }\n\n    changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow !== oldPage) {\n            const extension = this.currentFilename.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n            const newFilename = this.currentFilename.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.currentFilename = newFilename;\n            this.getThumb(newFilename).then();\n            this.currentPage = pageToShow;\n            for (const fieldId in this.document.datas) {\n                const page = this.getPage(fieldId);\n                const position = this.document.positions[fieldId];\n                if (position) {\n                    const input = $('.input_' + fieldId);\n                    const background = $('.background_' + fieldId);\n                    const outline = $('.outline_' + fieldId);\n                    const resizeHandler = $('.resize_' + fieldId);\n                    const deleteContainer = $('.delete_' + fieldId);\n                    input.remove();\n                    background.remove();\n                    outline.remove();\n                    resizeHandler.remove();\n                    deleteContainer.remove();\n                    if (parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                        this.lastId = fieldId;\n                        const splittedFieldId = fieldId.split('_');\n                        let field = this.getFieldInfo(fieldId);\n                        if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                            const cpt = splittedFieldId[splittedFieldId.length - 1];\n                            const tmpFieldId = splittedFieldId.join('_').replace('_' + cpt, '');\n                            field = this.getFieldInfo(tmpFieldId);\n                            field.label = this.translate.instant(field.label) + ' ' + (parseInt(cpt) + 1);\n                        }\n                        this.saveInfo = false;\n                        if (field) {\n                            if (parseInt(String(page)) === this.currentPage) {\n                                this.drawPositionByField(field, position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    checkSirenOrSiret(siretOrSiren: any, value: any) {\n        if (this.formSettings.settings.supplier_verif && this.document.status !== 'END') {\n            const sizeSIREN = 9;\n            const sizeSIRET = 14;\n            if (siretOrSiren === 'siren' && this.oldSIREN !== value) {\n                if (this.verify(value, sizeSIREN) && this.tokenINSEE) {\n                    this.oldSIREN = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIREN', {'token': this.tokenINSEE, 'siren': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siren') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siren_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siren') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.wrong_siren_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            } else if (siretOrSiren === 'siret'  && this.oldSIRET !== value) {\n                if (this.verify(value, sizeSIRET) && this.tokenINSEE) {\n                    this.oldSIRET = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIRET', {'token': this.tokenINSEE, 'siret': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siret') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siret_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siret') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.wrong_siret_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    checkVAT(id: any, value: any) {\n        if (id === 'vat_number' && this.formSettings.settings.supplier_verif && this.document.status !== 'END') {\n            if (this.oldVAT !== value) {\n                const sizeVAT = 13;\n                if (this.verify(value, sizeVAT, true)) {\n                    this.oldVAT = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifyVATNumber', {'vat_number': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'vat_number') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'vat_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'vat_number') {\n                            setTimeout(() => {\n                                if (!this.tokenINSEE) {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.ecu_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.wrong_vat_number_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    showAutoLogo(field: any) {\n        return !!(this.document.positions[field.id] && !this.document.positions[field.id].ocr_from_user);\n    }\n\n    async filterSupplier(value: any) {\n        if (!value) {\n            this.suppliers = await this.retrieveSuppliers('', 1000);\n            this.suppliers = this.suppliers.suppliers;\n            return;\n        } else if (value.length < 3) {\n            return;\n        }\n\n        this.toHighlight = value;\n        this.suppliers = await this.retrieveSuppliers(value);\n        this.suppliers = this.suppliers.suppliers;\n        this.supplierExists = !(this.suppliers.length === 0);\n    }\n}\n","<div *ngIf=\"this.loading\">\n    <app-loader></app-loader>\n</div>\n<div *ngIf=\"!this.processDone && this.fromToken\">\n    <div class=\"flex justify-center items-center h-screen overflow-y-auto\">\n        <div class=\"flex flex-col justify-center max-w-full\">\n            <div class=\"flex justify-center\">\n                <i class=\"fa-solid text-6xl\" [class]=\"this.processErrorIcon\"></i>\n            </div>\n            <div class=\"flex justify-center text-center mt-4 text-gray-900 p-4\">\n                <span class=\"text-xl max-w-full break-words\" [innerHTML]=\"this.processErrorMessage | translate\"></span>\n                <i class=\"ml-4 fa-solid fa-copy text-2xl cursor-pointer\" *ngIf=\"this.processInError\"\n                   [matTooltip]=\"'CONFIGURATIONS.copy_token' | translate\" (click)=\"copyToken()\"></i>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"this.processMultiDocument && this.processDone && this.fromToken\">\n    <div class=\"flex justify-center items-center\">\n        <div class=\"flex flex-col justify-start h-screen\">\n            <div class=\"flex justify-center text-center mt-4 text-gray-900\">\n                <span class=\"text-xl\">{{ 'VERIFIER.multiple_documents' | translate }}</span>\n            </div>\n            <div class=\"block text-gray-900 overflow-y-auto mt-4\">\n                <div class=\"flex flex-wrap justify-center gap-6 text-center my-4\">\n                    <mat-card *ngFor=\"let doc of this.multiDocumentsData\" (click)=\"loadDocument(doc['id'])\"\n                              class=\"cursor-pointer scale-1 hover:scale-103 transition-all duration-300 max-w-[350px]\">\n                        <img mat-card-image class=\"m-auto p-4\" [src]=\"doc['thumb']\" alt=\"Open-Capture thumbnail\">\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<span *ngIf=\"!this.fromToken || (this.processDone && this.fromToken && !this.processMultiDocument)\">\n    <div class=\"grid grid-cols-2 overflow-auto\" [style]=\"!this.fromToken ? 'height: calc(100vh - 4rem)' : 'height: 100vh'\">\n        <div id=\"image\" class=\"overflow-auto\" [style]=\"!this.fromToken ? 'height: calc(100vh - 4rem); direction: rtl' : 'height: 100vh;direction: rtl'\">\n            <div class=\"fixed left-4 z-50 text-xl text-left py-2\">\n                <ng-container *ngIf=\"!this.loading && this.document['nb_pages'] > 1\">\n                    <span [class.cursor-wait]=\"this.imgLoading\">\n                        <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\" [class.pointer-events-none]=\"this.imgLoading\"></i>\n                    </span>\n                    {{ 'VERIFIER.page' | translate }}\n                    {{ currentPage }}\n                    {{ 'VERIFIER.on' | translate }}\n                    {{ this.document['nb_pages'] }}\n                    <span [class.cursor-wait]=\"this.imgLoading\">\n                        <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\" [class.pointer-events-none]=\"this.imgLoading\"></i>\n                    </span>\n                </ng-container>\n            </div>\n            <div class=\"image-container px-4\" *ngIf=\"this.document\">\n                <div class=\"absolute right-[75%] z-10 bottom-1/2 transform translate-x-1/2 translate-y-1/2\" *ngIf=\"this.imgLoading\">\n                    <i class=\"fa-solid text-6xl fa-circle-notch fa-spin text-green-400\"></i>\n                </div>\n                <img id=\"document_image\" alt=\"Open-Capture\" [src]=\"this.imgSrc\" [class.blur-sm]=\"this.imgLoading\">\n            </div>\n        </div>\n        <div *ngIf=\"this.fields\" id=\"form\" class=\"px-4 overflow-auto pt-2\">\n            <div *ngIf=\"this.formSettings.settings['unique_url']['change_form']\" class=\"grid grid-cols-12 gap-2 w-full\">\n                <div class=\"relative top-5 text-center\">\n                    <i class=\"fa-solid fa-eye cursor-pointer text-green-400 text-lg\" (click)=\"hideVisuals()\"\n                       *ngIf=\"!this.visualIsHide\" [matTooltip]=\"'VERIFIER.hide_visuals' | translate\"></i>\n                    <i class=\"fa-solid fa-eye-slash cursor-pointer text-green-400 text-lg\" (click)=\"hideVisuals()\"\n                       *ngIf=\"this.visualIsHide\" [matTooltip]=\"'VERIFIER.show_visuals' | translate\"></i>\n                </div>\n                <div class=\"z-20 col-span-10\">\n                    <mat-accordion>\n                        <mat-expansion-panel class=\"top-2 mb-4\" [(expanded)]=\"this.settingsOpen\">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title class=\"justify-center\">{{ 'GLOBAL.settings' | translate }}</mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <mat-tab-group class=\"mx-5\">\n                                <mat-tab [label]=\"'VERIFIER.change_form' | translate\">\n                                    <p class=\"mt-3 text-center text-gray-400\">{{ 'VERIFIER.change_form_details' | translate }}</p>\n                                    <mat-form-field class=\"w-full\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                        <mat-select [(value)]=\"this.currentFormFields['form_id']\" (selectionChange)=\"changeForm($event)\"\n                                                    [disabled]=\"this.document.status === 'END'\">\n                                            <mat-option *ngFor=\"let form of this.formList\" [value]=\"form['id']\">\n                                                {{ form['label'] }}\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-hint class=\"text-gray-500\">\n                                            {{ 'VERIFIER.outputs_list' | translate }} : {{ this.outputsLabel.join(', ') }}\n                                        </mat-hint>\n                                    </mat-form-field>\n                                </mat-tab>\n                            </mat-tab-group>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                </div>\n                <div class=\"relative top-5 text-center\">\n                    <i class=\"fa-solid fa-download cursor-pointer text-green-400 text-lg\" (click)=\"downloadOriginalFile()\"\n                       [matTooltip]=\"'VERIFIER.download_original_file' | translate\"></i>\n                </div>\n            </div>\n            <div *ngIf=\"!this.formEmpty else noField\">\n                <ng-container *ngFor=\"let category of this.fieldCategories\">\n                    <ng-container *ngIf=\"this.form[category['id']].length !== 0\">\n                        <span class=\"relative text-xl tracking-wider px-1.5 bg-white left-6 z-10\">\n                            {{ getCategoryLabel(category) }}\n                            <span *ngIf=\"getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"cursor-default relative top-1.5 text-red-500 text-3xl\"\n                                  matTooltip=\"{{ 'VERIFIER.only_raw_footer' | translate }}\">&bull;</span>\n                            <span *ngIf=\"!getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"cursor-default relative top-1.5 text-green-400 text-3xl\"\n                                  matTooltip=\"{{ 'VERIFIER.calculated_footer' | translate }}\">&bull;</span>\n                            <span *ngIf=\"this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                                  class=\"text-sm cursor-pointer ml-2\">\n                                <i *ngIf=\"!this.formLoading && this.document['supplier_id'] && this.supplierExists && this.document.status !== 'END' && this.formSettings.settings['unique_url']['update_supplier']\"\n                                   (click)=\"editSupplier()\" class=\"fa-solid fa-edit\"></i>\n                                <i *ngIf=\"!this.formLoading && ((!this.document['supplier_id'] || !this.supplierExists) && this.document.status !== 'END' && this.formSettings.settings['unique_url']['create_supplier'])\"\n                                   (click)=\"createSupplier()\" class=\"fa-solid fa-plus\"></i>\n                                <i *ngIf=\"this.formLoading && this.document.status !== 'END' && this.formSettings.settings['unique_url']['create_supplier']\"\n                                   class=\"fa-solid fa-circle-notch fa-spin\"></i>\n                            </span>\n                        </span>\n                        <div class=\"relative border-green-400 border rounded-lg -top-3.5\">\n                            <div id=\"{{ category['id'] }}\" class=\"flex flex-wrap w-full mt-6\" style=\"min-height: 50px;\">\n                                <div *ngFor=\"let field of this.form[category['id']];\" class=\"flex items-center p-2\" [class]=\"field['class']\">\n                                    <ng-container *ngIf=\"field.type === 'text' || (field.type === 'regex' && field.format !== 'date')\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\"\n                                                        (click)=\"updateFilteredOption($event, field.control)\"\n                                                        *ngIf=\"category['id'] === 'supplier' && field.id === 'name' else other\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }}\n                                            </mat-label>\n                                            <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field['required']\" [readonly]=\"this.document.status === 'END'\"\n                                                   [formControl]=\"field['control']\" [pattern]=\"field['pattern']\" [matAutocomplete]=\"auto\"\n                                                   (ngModelChange)=\"filterSupplier($event)\">\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                            <mat-autocomplete #auto=\"matAutocomplete\" [id]=\"field.id\" (optionSelected)='getSupplierInfo($event.option.id, true)'>\n                                                <mat-option *ngFor=\"let option of this.suppliers\" [value]=\"option.name\" [id]=\"option.id\">\n                                                    <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                                                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">\n                                                        {{ option['vat_number'] }}\n                                                    </span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                        <ng-template #other>\n                                            <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                                <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                    {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                                </mat-label>\n                                                <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                      class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                                    <i class=\"fa-solid fa-circle-plus\"></i>\n                                                </span>\n                                                <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                      class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                                    <i class=\"fa-solid fa-trash\"></i>\n                                                </span>\n                                                <input [id]=\"field.id\" matInput type=\"text\" [formControl]=\"field['control']\" [required]=\"field['required']\"\n                                                       [pattern]=\"field.pattern\" (click)=\"this.ocrFromUser = true; this.saveInfo = true;\"\n                                                       (focusin)=\"ocr($event, true, field.color);\" [readonly]=\"this.document.status === 'END'\"\n                                                       (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id']); checkVAT(field['id'], $any($event.target).value); checkSirenOrSiret(field['id'], $any($event.target).value)\">\n                                                <mat-error *ngIf=\"field.control.errors\">\n                                                    {{ getErrorMessage(field.id, category['id']) }}\n                                                </mat-error>\n                                                <i *ngIf=\"showAutoLogo(field)\" class=\"fa-solid text-xs fa-bolt text-gray-600 absolute top-1 -right-3\"\n                                                   [matTooltip]=\"'VERIFIER.data_found_auto' | translate\"></i>\n                                            </mat-form-field>\n                                        </ng-template>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'textarea'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                            </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                            </span>\n                                            <textarea [id]=\"field.id\" matInput [cdkTextareaAutosize]=\"true\"\n                                                      [cdkAutosizeMinRows]=\"1\" [cdkAutosizeMaxRows]=\"5\"\n                                                      [required]=\"field['required']\" [formControl]=\"field['control']\" [pattern]=\"field.pattern\"\n                                                      (focusin)=\"ocr($event, true, field.color)\" [readonly]=\"this.document.status === 'END'\"\n                                                      (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"></textarea>\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'date' || (field.type === 'regex' && field.format === 'date')\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                                <i class=\"fa-solid fa-circle-plus\"></i>\n                                            </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </span>\n                                            <input [id]=\"field.id\" matInput [matDatepicker]=\"picker\" [formControl]=\"field['control']\"\n                                                   [readonly]=\"this.document.status === 'END'\"\n                                                   (focusin)=\"ocr($event, true, field.color)\" [required]=\"field['required']\"\n                                                   (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                                   (dateChange)=\"saveData($any($event.targetElement).value, field['id'])\">\n                                            <mat-datepicker-toggle [disabled]=\"this.document.status === 'END'\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                            <mat-datepicker #picker></mat-datepicker>\n                                            <mat-error *ngIf=\"field.control.errors\">\n                                                {{ getErrorMessage(field.id, category['id']) }}\n                                            </mat-error>\n                                            <i *ngIf=\"showAutoLogo(field)\" class=\"fa-solid fa-bolt text-xs text-gray-600 absolute top-0.5 -right-12\"\n                                               [matTooltip]=\"'VERIFIER.data_found_auto' | translate\"></i>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'autocomplete'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                        </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                        </span>\n                                            <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field['required']\"\n                                                   [formControl]=\"field['control']\"\n                                                   (focusin)=\"ocr($event, true, field.color)\"\n                                                   (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                                   [matAutocomplete]=\"data\" [readonly]=\"this.document.status === 'END'\">\n                                            <mat-autocomplete #data=\"matAutocomplete\">\n                                                <span *ngIf=\"field.autocomplete_values\">\n                                                    <mat-option *ngFor=\"let option of field.autocomplete_values | async\" [value]=\"option.data\"\n                                                                (onSelectionChange)=\"setAutocompleteDefaultValue($event)\" [id]=\"option.res_id\">\n                                                        <span [innerHTML]=\"option.data | highlight: toHighlight\"></span>\n                                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">\n                                                            {{ option.alt_identifier }}\n                                                        </span>\n                                                    </mat-option>\n                                                </span>\n                                                <mat-option *ngIf=\"!field.autocomplete_values\">\n                                                    <span [innerHTML]=\"'VERIFIER.no_autocomplete_data' | translate\"></span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"field.type === 'select'\">\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                            </mat-label>\n                                            <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-gray-600\">\n                                                <i class=\"fa-solid fa-circle-plus\"></i>\n                                            </span>\n                                            <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                                  class=\"absolute top-0.5 -right-2.5 cursor-pointer text-red-500 opacity-70\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </span>\n                                            <input matInput [id]=\"field.id\" type=\"text\" [required]=\"field['required']\"\n                                                   [formControl]=\"field['control']\" [matAutocomplete]=\"accounting\" [readonly]=\"this.document.status === 'END'\">\n                                            <span *ngIf=\"accountingPlanEmpty\" class=\"absolute text-gray-600 top-0.5 -right-2.5 cursor-help\"\n                                                  [matTooltip]=\"'VERIFIER.accounting_plan_empty' | translate\">\n                                                <i class=\"fa-solid fa-circle-question\"></i>\n                                            </span>\n                                            <mat-autocomplete #accounting=\"matAutocomplete\">\n                                                <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option.compte_lib\" [id]=\"option.compte_num\">\n                                                    <span [innerHTML]=\"option.compte_num + ' - ' + option['compte_lib'] | highlight: toHighlightAccounting\"></span>\n                                                </mat-option>\n                                            </mat-autocomplete>\n                                        </mat-form-field>\n                                        <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"!field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.document.status === 'END'\">\n                                            <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                                {{ field.label | translate }}\n                                            </mat-label>\n                                            <mat-select [id]=\"field.id\" [disabled]=\"this.document.status === 'END'\" (selectionChange)=\"saveData($event.value, field['id']);\"\n                                                        [(value)]=\"field.control.value\">\n                                                <span *ngFor=\"let option of field.values\">\n                                                    <mat-option *ngIf=\"checkConditional(field.id, option)\" [value]=\"option['id']\">\n                                                        {{ option['label'] }}\n                                                    </mat-option>\n                                                </span>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </ng-container>\n                                    <span *ngIf=\"field.fullSizeSelected\" (click)=\"duplicateLine(field.id, category['id'])\"\n                                          class=\"relative -right-1.5 cursor-pointer text-gray-900 -top-2.5\"\n                                          [matTooltip]=\"'VERIFIER.duplicate_line' | translate\" matTooltipPosition=\"above\">\n                                    <i class=\"fa-solid fa-clone text-lg\"></i>\n                                </span>\n                                    <span *ngIf=\"field.deleteLine\" (click)=\"removeDuplicateLine(field.id, category['id'])\"\n                                          class=\"relative -right-1.5 cursor-pointer text-red-500 -top-2.5\"\n                                          [matTooltip]=\"'VERIFIER.remove_duplicated_line' | translate\" matTooltipPosition=\"above\">\n                                    <i class=\"fa-solid fa-trash text-lg\"></i>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <ng-template #noField>\n                <div class=\"text-gray-900 text-center text-xl mt-32\">\n                    {{ 'FORMS.no_fields' | translate }}\n                </div>\n            </ng-template>\n            <div [class.mt-20]=\"this.formEmpty\" class=\"mb-6 grid grid-cols-2 gap-4 h-12 text-gray-900\"\n                 *ngIf=\"this.formSettings.settings['unique_url']['validate_document'] || this.formSettings.settings['unique_url']['refuse_document']\">\n                <button mat-button (click)=\"validateForm()\" type=\"submit\" [disabled]=\"this.document.status === 'END'\" class=\"valid_button\"\n                        *ngIf=\"this.formSettings.settings['unique_url']['validate_document']\">\n                    <span *ngIf=\"!this.loadingSubmit\">{{ 'FORMS.validate' | translate }}</span>\n                    <i *ngIf=\"this.loadingSubmit\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n                <button mat-button (click)=\"refuseForm()\" type=\"submit\" [disabled]=\"this.document.status === 'END'\"\n                        *ngIf=\"this.formSettings.settings['unique_url']['refuse_document']\"\n                        class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                    {{ 'FORMS.refuse' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</span>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { environment } from \"./app/env\";\nimport { AppModule } from './app/app.module';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nif (environment.production) {\n    enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule).then();\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Estus Flask @StackOverflow */\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const timeoutValue = req.headers.get('timeout');\n        if (!timeoutValue) {\n            return next.handle(req);\n        }\n        const timeoutValueNumeric = Number(timeoutValue);\n\n        return next.handle(req).pipe(timeout(timeoutValueNumeric));\n    }\n}","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { SessionStorageService } from \"./session-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n    public headersExists : boolean = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private sessionStorage: SessionStorageService\n    ) {\n        if (!this.getToken('tokenJwt')) {\n            this.headersExists = false;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken('tokenJwt'));\n    }\n\n    refreshToken() {\n        const refreshToken = this.getToken('refreshTokenJwt');\n        if (!refreshToken) {\n            return of(false);\n        }\n        const new_headers = new HttpHeaders().set('Authorization', 'Bearer ' + refreshToken);\n\n        return this.http\n            .post<any>(environment['url'] + '/ws/auth/login/refresh', {token: refreshToken}, {headers: new_headers})\n            .pipe(\n                tap((data) => {\n                    this.userService.setUser(data.user);\n                    this.setTokens(data.token, '', btoa(JSON.stringify(this.userService.getUser())));\n                    this.generateHeaders();\n                }),\n                catchError(() => {\n                    return of(false);\n                })\n            );\n    }\n\n    generateHeaders() {\n        if (this.getToken('tokenJwt')) {\n            this.headersExists = true;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken('tokenJwt'));\n    }\n\n    cleanCachedUrl() {\n        const tokenNames = this.getTokenName();\n        return this.sessionStorage.remove(tokenNames['cachedUrlName']);\n    }\n\n    setToken(name: any, config: any) {\n        const tokenNames: any = this.getTokenName();\n        this.sessionStorage.save(tokenNames[name], config);\n    }\n\n    getTokenName() {\n        let tokenName = 'OpenCaptureToken';\n        let configName = 'OpenCaptureConfig';\n        let userDataName = 'OpenCaptureUserData';\n        let cachedUrlName = 'OpenCaptureCachedUrl';\n        let refreshTokenName = 'OpenCaptureRefreshToken';\n        let minimizeDisplay = 'OpenCaptureMinimizeDisplay';\n\n        if (environment['customId']) {\n            tokenName += '_' + environment['customId'];\n            configName += '_' + environment['customId'];\n            userDataName += '_' + environment['customId'];\n            cachedUrlName += '_' + environment['customId'];\n            minimizeDisplay += '_' + environment['customId'];\n            refreshTokenName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            tokenName += '_' + environment['fqdn'];\n            configName += '_' + environment['fqdn'];\n            userDataName += '_' + environment['fqdn'];\n            cachedUrlName += '_' + environment['fqdn'];\n            minimizeDisplay += '_' + environment['fqdn'];\n            refreshTokenName += '_' + environment['fqdn'];\n        }\n        return {\n            'tokenJwt': tokenName,\n            'configName': configName,\n            'userData': userDataName,\n            'cachedUrlName': cachedUrlName,\n            'minimizeDisplay': minimizeDisplay,\n            'refreshTokenJwt': refreshTokenName\n        };\n    }\n\n    setTokens(token: string, refresh_token: string, user_token: string) {\n        const tokenNames = this.getTokenName();\n        this.sessionStorage.save(tokenNames['tokenJwt'], token);\n        this.sessionStorage.save(tokenNames['userData'], user_token);\n        this.sessionStorage.save(tokenNames['refreshTokenJwt'], refresh_token);\n        this.sessionStorage.save(tokenNames['minimizeDisplay'], 'true');\n    }\n\n    getToken(name: any) {\n        const tokenNames: any = this.getTokenName();\n        return this.sessionStorage.get(tokenNames[name]);\n    }\n\n    logout() {\n        const tokenNames = this.getTokenName();\n        const user = this.userService.getUser();\n\n        this.userService.setUser({});\n        this.sessionStorage.remove('loginImageB64');\n        this.sessionStorage.remove('selectedSettings');\n        this.sessionStorage.remove(tokenNames['tokenJwt']);\n        this.sessionStorage.remove(tokenNames['userData']);\n        this.sessionStorage.remove('splitter_or_verifier');\n        this.sessionStorage.remove('selectedParentSettings');\n        this.sessionStorage.remove(tokenNames['refreshTokenJwt']);\n        this.sessionStorage.remove(tokenNames['minimizeDisplay']);\n\n        this.http.get(environment['url'] + '/ws/auth/logout?user_id=' + user['id']).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.router.navigateByUrl(\"/login\").then();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { CodeModel } from \"@ngstack/code-editor\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { environment } from \"../../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"../notifications/notifications.service\";\nimport { AuthService } from \"../auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.scss']\n})\nexport class CodeEditorComponent implements OnInit {\n    theme               : string    = 'vs';\n    testing             : boolean   = false;\n    tested              : boolean   = false;\n    splitterOrVerifier  : any       = 'verifier';\n    codeModel           : CodeModel = {\n        language: 'python',\n        uri: 'scripting.py',\n        value: ''\n    };\n    options             : any       = {\n        contextmenu: true,\n        lineNumbers: true,\n        minimap: {\n            enabled: true\n        }\n    };\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit(): void {\n        this.tested = false;\n        if (this.router.url.includes('/verifier/')) {\n            this.splitterOrVerifier = 'verifier';\n        } else if (this.router.url.includes('/splitter/')) {\n            this.splitterOrVerifier = 'splitter';\n        }\n\n        if (this.data['codeContent']) {\n            this.codeModel.value = this.translate.instant(this.data['codeContent']);\n        }\n    }\n\n    testScript() {\n        if (this.testing) {\n            return;\n        }\n        this.testing = true;\n        this.http.post(environment['url'] + '/ws/workflows/' + this.splitterOrVerifier + '/testScript', {\n            'args': {\n                'step': this.data.step,\n                'codeContent': this.codeModel.value,\n                'input_folder': this.data.input_folder\n            }\n        }, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.testing = false;\n                this.tested = true;\n                this.notify.success(this.translate.instant('WORKFLOW.test_script_success'));\n            }),\n            catchError((err: any) => {\n                this.testing = false;\n                this.tested = false;\n                console.debug(err);\n                this.notify.error(this.translate.instant('WORKFLOW.test_script_error', {return: err.error.replace(/[\\n\\r]/g, '<br>')}));\n                return of(false);\n            })\n        ).subscribe();\n    }\n}","<div class=\"h-full\">\n    <ngs-code-editor style=\"height: 95%\"\n                     [theme]=\"theme\"\n                     [codeModel]=\"codeModel\"\n                     [options]=\"options\">\n    </ngs-code-editor>\n    <span class=\"flex pr-4 pt-1\">\n        <span class=\"flex w-full justify-start pl-4\" *ngIf=\"data['testScriptButton']\">\n            <button mat-button class=\"text-gray-900\" (click)=\"testScript()\">\n                {{ data['testScriptButton'] }}\n                <i *ngIf=\"this.testing\" class=\"fa-solid fa-circle-notch fa-spin\"></i>\n            </button>\n        </span>\n        <span class=\"flex w-full justify-end\">\n            <button mat-button [mat-dialog-close]=\"false\">\n                {{ data['cancelButton'] }}\n            </button>\n            <span [matTooltip]=\"this.tested ? '' : 'WORKFLOW.test_before_save' | translate\"\n                  [class.cursor-not-allowed] = !this.tested>\n                <button mat-button [class.text-green-400]=\"this.tested\" [class.text-gray-600] = !this.tested\n                        [mat-dialog-close]=\"this.tested ? this.codeModel.value : false\" [disabled]=\"!this.tested\">\n                    {{ data['confirmButton'] }}\n                </button>\n            </span>\n        </span>\n    </span>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService\n    ) {}\n\n    readConfig() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        return new Promise((resolve) => {\n            this.http.get(environment['url'] + '/ws/config/readConfig', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.config);\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    setConfig(config: any) {\n        this.authService.setToken('configName', btoa(JSON.stringify(config)));\n    }\n\n    getConfig() {\n        return JSON.parse(atob(this.authService.getToken('configName') as string));\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string\n    confirmText : string\n    confirmButton : string\n    selectValues: any\n    selectLabel : string\n    confirmButtonColor : string\n    cancelButton : string\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html'\n})\n\nexport class ConfirmDialogComponent {\n    selectData: any;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData\n    ) {}\n}\n","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 w-11/12 m-auto\">\n<mat-dialog-content class=\"mat-typography text-gray-900\" [innerHTML]=data.confirmText></mat-dialog-content>\n<mat-dialog-content class=\"mat-typography\" *ngIf=\"data.selectValues\">\n    <mat-form-field class=\"w-full mt-1\">\n        <mat-label>{{ data.selectLabel }}</mat-label>\n        <mat-select [(value)]=\"this.selectData\">\n            <mat-option *ngFor=\"let option of data.selectValues\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions class=\"flex justify-end pb-4 pr-4\">\n    <button mat-button [mat-dialog-close]=\"\">{{ data.cancelButton }}</button>\n    <button *ngIf=\"data.selectValues\" mat-button [mat-dialog-close]=\"this.selectData\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n    <button *ngIf=\"!data.selectValues\" mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\"\n            cdkFocusInitial [class.text-green-400]=\"data.confirmButtonColor === 'green'\">{{ data.confirmButton }}\n    </button>\n</mat-dialog-actions>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-hint-error',\n    templateUrl: './error.service.html',\n    styleUrls: ['./error.service.scss']\n})\n\nexport class ErrorServiceComponent {\n    @Input() message!: string;\n    @Input() specificClass: string = 'w-1/2';\n}\n","<div class=\"hint {{ this.specificClass }}\">\n    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n    <div class=\"message\" [innerHTML]=\"this.message\"></div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem\n} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-export-dialog',\n  templateUrl: './export-dialog.component.html',\n  styleUrls: ['./export-dialog.component.scss']\n})\nexport class ExportDialogComponent {\n  extensions: any[] = [\n    {\n      id: 'csv',\n      label: 'CSV'\n    }\n  ];\n  delimiters: any[] = [\n    {\n      id: 'COMMA',\n      label: ','\n    },\n    {\n      id: 'SEMICOLON',\n      label: ';'\n    },\n    {\n      id: 'TAB',\n      label: 'TAB'\n    }\n  ];\n\n  config: any          = {\n    extension: 'csv',\n    delimiter: 'COMMA',\n    selectedColumns: [],\n    availableColumns: []\n  };\n\n  constructor(\n      @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.config.availableColumns = data.availableColumns;\n    this.config.selectedColumns  = data.selectedColumns;\n  }\n\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n      );\n    }\n  }\n}\n","<h2 mat-dialog-title>{{ data.title }}</h2>\n<hr class=\"border-green-400 -mt-4 m-auto\" style=\"width: calc(100% - 3em)\">\n<mat-dialog-content class=\"mat-typography\">\n    <mat-form-field class=\"float-left w-60 mr-8\">\n        <mat-label>{{ 'DATA-EXPORT.extension' | translate }}</mat-label>\n        <mat-select [value]=\"config.extension\">\n            <div *ngFor=\"let extension of extensions\">\n                <mat-option [value]=\"extension.id\">\n                    <span>{{ extension.label | translate }}</span>\n                </mat-option>\n            </div>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"float-right w-60 mr-8\">\n        <mat-label>{{ 'DATA-EXPORT.delimiter' | translate }}</mat-label>\n        <mat-select [(value)]=\"config.delimiter\">\n            <div *ngFor=\"let delimiter of delimiters\">\n                <mat-option [value]=\"delimiter.id\">\n                    <span>{{ delimiter.label | translate }}</span>\n                </mat-option>\n            </div>\n        </mat-select>\n    </mat-form-field>\n    <mat-expansion-panel class=\"w-full\" [expanded]=\"true\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ 'DATA-EXPORT.export_columns' | translate }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"grid grid-cols-2 gap-4 place-content-center mx-8\">\n            <div class=\"list-container\">\n                <h2>{{ 'DATA-EXPORT.available_columns' | translate }}</h2>\n                <div\n                    cdkDropList\n                    #selectedColumnsList=\"cdkDropList\"\n                    [cdkDropListData]=\"config.availableColumns\"\n                    [cdkDropListConnectedTo]=\"[availableColumnsList]\"\n                    class=\"drag-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"drag-item\" *ngFor=\"let availableColumn of config.availableColumns\" cdkDrag>{{availableColumn.label}}</div>\n                </div>\n            </div>\n            <div class=\"list-container\">\n                <h2>{{ 'DATA-EXPORT.selected_columns' | translate }}</h2>\n                <div\n                    cdkDropList\n                    #availableColumnsList=\"cdkDropList\"\n                    [cdkDropListData]=\"config.selectedColumns\"\n                    [cdkDropListConnectedTo]=\"[selectedColumnsList]\"\n                    class=\"drag-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"drag-item\" *ngFor=\"let selectedColumn of config.selectedColumns\" cdkDrag>{{selectedColumn.label}}</div>\n                </div>\n            </div>\n        </div>\n    </mat-expansion-panel>\n</mat-dialog-content>\n<mat-dialog-actions class=\"flex justify-center pb-4 pr-4\">\n    <button mat-button [mat-dialog-close]=\"\">{{ 'DATA-EXPORT.cancel' | translate }}</button>\n    <button mat-button [mat-dialog-close]=\"this.config\" class=\"text-green-400\">{{ 'DATA-EXPORT.export' | translate }}</button>\n</mat-dialog-actions>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { PrivilegesService } from \"./privileges.service\";\nimport { ActivatedRouteSnapshot, Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport {SessionStorageService} from \"./session-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private sessionStorage: SessionStorageService,\n        private privilegesService: PrivilegesService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        if (route.data['privileges'] !== undefined) {\n            let returnValue = true;\n            route.data['privileges'].forEach((privilege: any) => {\n                const hasPrivilege = this.privilegesService.hasPrivilege(privilege);\n                if (!hasPrivilege) {\n                    this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                        let label = '';\n                        if (route.routeConfig) {\n                            label = '<b>' + this.translate.instant(route.data['title']) + '</b>';\n                        }\n                        this.notify.error(translated + label);\n                        if (route.url[0].path === 'settings') {\n                            this.sessionStorage.remove('selectedSettings');\n                            this.sessionStorage.remove('selectedParentSettings');\n                        }\n                        this.router.navigateByUrl('/home').then();\n                    });\n                    returnValue = false;\n                }\n            });\n            return returnValue;\n        } else {\n            return false;\n        }\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: './hint.service.html',\n    styleUrls: ['./hint.service.scss']\n})\n\nexport class HintServiceComponent {\n    @Input() message!: string;\n    @Input() specificClass: string = 'w-1/2';\n}\n","<div class=\"hint text-center {{ this.specificClass }}\">\n    <i class=\"fa-solid fa-circle-exclamation fa-2x pl-1\"></i>\n    <div class=\"message\" [innerHTML]=\"this.message\"></div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from  \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { AuthService } from \"./auth.service\";\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HistoryService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService\n    ) { }\n\n    addHistory(module: any, submodule: string, desc: string, predefined_user: any = {}) {\n        if (!this.userService.user || !this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = predefined_user;\n        }\n        const user = this.userService.user.lastname + ' ' + this.userService.user.firstname + ' (' + this.userService.user.username + ')';\n        const data = {\n            'module': module,\n            'submodule': submodule,\n            'desc': desc,\n            'user_info': user,\n            'user_id': this.userService.user.id\n        };\n        this.http.post(environment['url'] + '/ws/history/add', data).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormControl } from \"@angular/forms\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../auth.service\";\nimport { NotificationService } from \"../notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { environment } from \"../../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { MatTable } from \"@angular/material/table\";\n\n@Component({\n    selector: 'app-import-dialog',\n    templateUrl: './import-dialog.component.html',\n    styleUrls: ['./import-dialog.component.scss']\n})\nexport class ImportDialogComponent {\n    headers : HttpHeaders = this.authService.headers;\n    loading : boolean     = false;\n    error   : boolean     = false;\n    header  : string[]    = [];\n    markers : any         = {\n        placeholder: marker('DATA-IMPORT.placeholder')\n    };\n\n    @ViewChild(MatTable) previewTable!: MatTable<any>;\n\n    constructor(\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n        this.data.fileControl = new FormControl(\n            [],\n            [\n                FileValidators.required,\n                FileValidators.fileExtension([data['extension'].toLowerCase()])\n            ]\n        );\n    }\n\n    checkFile(files: any): void {\n        this.error = false;\n        if (files && files.length !== 0) {\n            for (let i = 0; i < files.length; i++) {\n                const fileName = files[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'csv') {\n                    this.error = true;\n                    this.notify.handleErrors(this.translate.instant('DATA-IMPORT.extension_unauthorized', {'extension': this.data['extension']}));\n                    return;\n                }\n            }\n            this.loadCsvPreview(files[0]);\n        }\n    }\n\n    loadCsvPreview(file: any): void {\n        this.loading = true;\n        this.data.rows = [];\n        const formData: FormData = new FormData();\n        formData.append(file['name'], file);\n        formData.set('columns', this.data.selectedColumns);\n        this.http.post(environment['url'] + '/ws/doctypes/csv/preview', formData, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.rows.forEach((row: any) => {\n                    const data_rows: any = {};\n                    let cpt: number = 0;\n                    row.forEach((col: any) => {\n                        data_rows[this.data.selectedColumns[cpt]] = col;\n                        cpt++;\n                    });\n                    this.data.rows.push(data_rows);\n                });\n                this.skipHeaderChange({checked: this.data.skipHeader})\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    skipHeaderChange($event: any) {\n        this.data.skipHeader = $event.checked;\n        if (this.data.skipHeader) {\n            this.header = this.data.rows[0];\n            this.data.rows.shift();\n        } else {\n            this.data.rows.unshift(this.header);\n        }\n        if (this.previewTable) {\n            this.previewTable.renderRows();\n        }\n    }\n\n    changeSelectedColumns(newColumn: string, index: number) {\n        this.data.selectedColumns[index] = newColumn;\n    }\n}\n","<h2 mat-dialog-title>{{ this.data.title }}</h2>\n<hr class=\"border-green-400 -mt-4 m-auto\" style=\"width: calc(100% - 3em)\">\n<mat-dialog-content>\n    <ngx-file-drag-drop\n            [class.pointer-events-none]=\"this.loading\"\n            [class.disabled]=\"this.loading\"\n            [formControl]=\"this.data.fileControl\"\n            [activeBorderColor]=\"'#97BF3D'\"\n            [multiple]=\"false\"\n            [accept]=\"'.' + data['extension']\"\n            [displayFileSize]=\"true\"\n            [emptyPlaceholder]=\"this.translate.instant('DATA-IMPORT.placeholder', {'extension': this.data.extension})\"\n            [class]=\"'max-w-3xl h-56 mt-2 mb-5'\"\n            (valueChanged)=\"checkFile($event)\">\n    </ngx-file-drag-drop>\n    <mat-expansion-panel [expanded]=\"true\" #dataConfig>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ 'DATA-IMPORT.columns_config' | translate }}\n            </mat-panel-title>\n            <mat-slide-toggle\n                    class=\"mr-4\"\n                    [disabled]=\"this.data.rows.length === 0\"\n                    (click)=\"dataConfig.toggle()\"\n                    [checked]=\"this.data.skipHeader\"\n                    (change)=\"skipHeaderChange($event);\">\n                {{ 'DATA-IMPORT.skip_header' | translate }}\n            </mat-slide-toggle>\n        </mat-expansion-panel-header>\n        <div class=\"overflow-x-auto\">\n            <div *ngIf=\"this.data.rows.length === 0\" class=\"m-16 text-center\">\n                <i class=\"fas fa-circle-notch fa-spin fa-3x my-4\" *ngIf=\"this.loading\"></i>\n                <span class=\"text-gray-400\" *ngIf=\"!this.loading && this.data.rows.length === 0\">\n                     {{ 'DATA-IMPORT.no_rows' | translate }}\n                </span>\n            </div>\n            <table mat-table *ngIf=\"this.data.rows.length !== 0\" [dataSource]=\"this.data.rows\" class=\"overflow-x-auto\">\n                <ng-container *ngFor=\"let availableColumn of this.data.availableColumns; let index = index\" matColumnDef=\"{{ availableColumn }}\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        <mat-form-field class=\"w-40 pt-2\">\n                            <mat-label>{{ 'DATA-IMPORT.column' | translate }} {{ index + 1 }}</mat-label>\n                            <mat-select (selectionChange)=\"changeSelectedColumns($event.value, index)\"\n                                        [value]=\"this.data.availableColumns[index]\"\n                                        [disabled]=\"!this.data.allowColumnsSelection\">\n                                <div *ngFor=\"let availableColumn of this.data.availableColumns; \">\n                                    <mat-option [value]=\"availableColumn\">\n                                        <span>{{ availableColumn }}</span>\n                                    </mat-option>\n                                </div>\n                            </mat-select>\n                        </mat-form-field>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element[availableColumn] }} </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"this.data.availableColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: this.data.availableColumns;\"></tr>\n            </table>\n        </div>\n    </mat-expansion-panel>\n</mat-dialog-content>\n<mat-dialog-actions class=\"flex justify-center pb-4 pr-4\">\n    <button mat-button class=\"gray_button\" [mat-dialog-close]=\"\">{{ 'DATA-IMPORT.cancel' | translate }}</button>\n    <button mat-button [class.valid_button]=\"!this.error && this.data.fileControl.value.length !== 0\"\n            [class.invalid_button]=\"this.error || this.data.fileControl.value.length === 0\"\n            [disabled]=\"this.error || this.data.fileControl.value.length === 0\"\n            [mat-dialog-close]=\"this.data\">\n        {{ 'DATA-IMPORT.import' | translate }}\n    </button>\n</mat-dialog-actions>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getCurrentUrl() {\n        return this.currentUrl;\n    }\n\n    public getPreviousUrl() {\n        return this.previousUrl;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport * as moment from 'moment';\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang         : string = 'fra';\n    currentBabelLang    : string = 'fr';\n    dateAdaptaterLocale : string = 'fr-FR';\n    langs               : [] = [];\n    localeLoading       : boolean = false;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private dateAdapter: DateAdapter<any>\n    ) {\n        this.dateAdapter.setLocale('fr-FR');\n        moment.updateLocale('fr-FR', {\n            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n            months : 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n            weekdays : 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n            longDateFormat : {\n                LT : 'HH:mm',\n                LTS : 'HH:mm:ss',\n                L : 'DD/MM/YYYY',\n                l : 'DD/MM/YYYY',\n                LL : 'D MMMM YYYY',\n                LLL : 'D MMM YYYY à HH:mm:ss',\n                LLLL : 'dddd D MMMM YYYY à HH:mm:ss'\n            },\n            week : {\n                dow : 1 // Monday is the first day of the week.\n            }\n        });\n        moment.updateLocale('en-GB', {\n            longDateFormat : {\n                LT: \"h:mm A\",\n                LTS: \"h:mm:ss A\",\n                L: \"MM/DD/YYYY\",\n                l: \"MM/DD/YYYY\",\n                LL: \"MMMM Do YYYY\",\n                LLL: \"MMM Do YYYY - HH:mm:ss\",\n                LLLL: \"dddd, MMMM Do YYYY HH:mm:ss\",\n                llll: \"ddd, MMM D YYYY HH:mm:ss\"\n            },\n            week : {\n                dow : 0 // Sunday is the first day of the week.\n            }\n        });\n        moment.locale(this.dateAdaptaterLocale);\n    }\n\n    changeLocale(data: any) {\n        this.localeLoading = true;\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/i18n/changeLanguage/' + data.value, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.getCurrentLocale();\n            }),\n            finalize(() => {\n                setTimeout(() => {\n                    this.localeLoading = false;\n                    window.location.reload();\n                }, 500);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCurrentLocale() {\n        this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang;\n                this.currentBabelLang = data['babel_lang'];\n                if (data['moment_lang']) {\n                    this.dateAdaptaterLocale = data['moment_lang'];\n                }\n                this.dateAdapter.setLocale(this.dateAdaptaterLocale);\n                this.translate.use(this.currentLang);\n                moment.locale(this.dateAdaptaterLocale);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getLocales() {\n        this.http.get(environment['url'] + '/ws/i18n/getAllLang').pipe(\n            tap((data: any) => {\n                this.langs = data.langs;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(): boolean {\n        if (this.authService.getToken('tokenJwt')) {\n            this.router.navigateByUrl('/home').then();\n            return false;\n        }\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"./user.service\";\nimport { environment } from \"../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"./locale.service\";\nimport { ConfigService } from \"./config.service\";\nimport { LastUrlService } from \"./last-url.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService implements CanActivate {\n\n    constructor(\n        public router: Router,\n        private http:HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private routerExtService: LastUrlService,\n    ) {}\n\n    login(token: string, route: any) {\n        if ((this.userService.getUser() === undefined || Object.keys(this.userService.getUser()).length === 0) && this.userService.getUserFromLocal() === undefined) {\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'token': token,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body['auth_token'], data.body['refresh_token'], btoa(JSON.stringify(this.userService.getUser())));\n                    if (!this.authService.headersExists) {\n                        this.authService.generateHeaders();\n                    }\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (route) {\n                            this.router.navigate([route]).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    if (err.status !== 402) { // Specific case for simple SSO\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    }\n                    return of(true);\n                })\n            ).subscribe();\n        }\n    }\n\n    canActivate(): boolean {\n        const token = this.authService.getToken('tokenJwt');\n        if (!token) {\n            const params = new URLSearchParams(window.location.href);\n            let token_param = '';\n            for (const [key, value] of params.entries()) {\n                if (key === 'token') {\n                    token_param = value;\n                    const route = window.location.hash.replace('#', '').replace(/\\?.*/, '');\n                    this.login(token_param, route);\n                }\n            }\n        }\n\n        if (!token) {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                const currentUrl = this.routerExtService.getCurrentUrl();\n                if (currentUrl.includes('verifier/viewer_token')) {\n                    return true;\n                }\n                if (currentUrl !== '/logout' && currentUrl !== '/login' && currentUrl !== '/500') {\n                    this.authService.setToken('cachedUrlName', currentUrl.replace(/^\\//g, ''));\n                }\n                this.translate.get('AUTH.session_expired').subscribe((translated_session: string) => {\n                    if (!this.notify.oldErrorMessage.includes(translated_session)) {\n                        this.notify.error(translated);\n                    } else {\n                        this.notify.oldErrorMessage = translated;\n                    }\n                });\n                this.authService.logout();\n                return false;\n            });\n            return false;\n        }\n        this.login(token, null);\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from '@angular/router';\nimport {  ToastrService } from \"ngx-toastr\";\nimport { environment } from  \"../../app/env\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html'\n})\n\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: never) {}\n}\n\n@Injectable()\nexport class NotificationService {\n    oldErrorMessage = '';\n\n    constructor(\n        private router: Router,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    success(message: string, _duration?: number) {\n        const duration = _duration ? this.getMessageDuration(message, _duration) :\n            this.getMessageDuration(message, 2000);\n        this.toastr.success(message, '', {timeOut: duration, enableHtml: true});\n    }\n\n    error(message: string) {\n        if (this.oldErrorMessage && (this.oldErrorMessage.includes(this.translate.instant('AUTH.session_expired')) && message.includes(this.translate.instant('AUTH.session_expired')) ||\n            this.oldErrorMessage.includes(this.translate.instant('AUTH.not_connected')) && message.includes(this.translate.instant('AUTH.session_expired')))) {\n            return;\n        }\n        this.oldErrorMessage = message;\n        const duration = this.getMessageDuration(message, 6000);\n        message = message.replace(\"<class 'str'>\", 'string');\n        message = message.replace(\"<class 'int'>\", 'integer');\n        message = message.replace(\"<class 'bool'>\", 'boolean');\n        message = message.replace(\"<class 'dict'>\", 'dict');\n        message = message.replace(\"<class 'list'>\", 'list');\n        this.toastr.error(message, '', {timeOut: duration, enableHtml: true});\n    }\n\n    handleErrors(err: any, route = '') {\n        if (err.status === 0 && err.statusText === 'Unknown Error') {\n            const message = '<b>' + this.translate.instant('ERROR.connection_failed') + '</b> <br>' +\n                this.translate.instant('ERROR.is_server_up', {server: environment['url']});\n            if (this.router.url !== '/login') {\n                this.router.navigate(['/500']).then(() => {\n                    this.error(message);\n                });\n            } else {\n                this.error(message);\n            }\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                if (err.error.message === 'missing_custom_or_file_doesnt_exists') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.is_custom_present_and_file_exists'));\n                } else if (err.error.message === 'bad_or_missing_database_informations') {\n                    this.error('<b>' + this.translate.instant('ERROR.database_error') + '</b> : ' + this.translate.instant('ERROR.bad_or_missing_database_informations'));\n                } else if (err.error.message === 'missing_secret_key') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.missing_secret_key'));\n                } else if (err.url && err.status == 500 && err.error.errors !== this.translate.instant('ERROR.jwt_error')) {\n                    this.error(err.url + '<br> <b>' + err.error.errors + '</b> : ' + err.error.message);\n                } else {\n                    this.error('<b>' + err.error.errors + '</b> : ' + err.error.message);\n                }\n\n                if (err.status === 403 || (err.status === 404 && !err.errors.message)) {\n                    this.router.navigate(['/login']).then();\n                } else if (err.error.errors === this.translate.instant('ERROR.jwt_error')) {\n                    this.router.navigate(['/logout']).then();\n                }\n            } else if (err.error.exception !== undefined) {\n                this.error(err.url + '<br>' +  err.error.exception[0].message);\n            } else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined) {\n                    this.error(err.url + '<br>' +  err.error.error[0].message);\n                } else {\n                    this.error(err.url + '<br>' + err.error.error.message);\n                }\n            } else {\n                this.error(err.url + '<br>' + `${err.status} : ${err.statusText}`);\n            }\n        } else {\n            this.error(err);\n        }\n\n        if (route) {\n            this.router.navigate([route]).then();\n        }\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n\n    clear() {\n        this.toastr.clear();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PasswordVerificationService {\n    minLengthEnabled : boolean = false;\n    passwordRules    : any     = {\n        minLength: 0,\n        uppercaseMandatory: false,\n        specialCharMandatory: false,\n        numberMandatory: false\n    };\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService\n    ) {\n        this.http.get(environment['url'] + '/ws/config/getConfigurationNoAuth/passwordRules').pipe(\n            tap((data: any) => {\n                if (data.configuration[0] && data.configuration[0].data.value) {\n                    this.passwordRules = data.configuration[0].data.value;\n                    if (this.passwordRules.minLength > 0) {\n                        this.minLengthEnabled = true;\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkPasswordValidityUnique(userFields: any) {\n        const password = userFields.filter((element: any) => element.id === 'new_password')[0];\n        const passwordError = this.verifyRules(password.control.value);\n\n        if (passwordError !== '') {\n            password.control.setErrors({\"message\": passwordError});\n        } else {\n            password.control.setErrors(null);\n        }\n    }\n\n    checkPasswordValidity(userFields: any) {\n        const password = userFields.filter((element: any) => element.id === 'password')[0];\n        const passwordCheck = userFields.filter((element: any) => element.id === 'password_check')[0];\n        const passwordError = this.verifyRules(password.control.value);\n        const passwordCheckError = this.verifyRules(passwordCheck.control.value);\n\n        if (passwordError !== '') {\n            password.control.setErrors({\"message\": passwordError});\n        } else {\n            password.control.setErrors(null);\n        }\n\n        if (passwordCheckError !== '') {\n            passwordCheck.control.setErrors({\"message\": passwordCheckError});\n        } else {\n            passwordCheck.control.setErrors(null);\n        }\n\n        if (passwordError === '' && passwordCheckError === '') {\n            const mismatch = this.checkPasswordConfirmation(password.control.value, passwordCheck.control.value);\n            if (mismatch) {\n                password.control.setErrors({\"message\": mismatch});\n                passwordCheck.control.setErrors({\"message\": mismatch});\n            }\n        }\n    }\n\n    verifyRules(password: string) {\n        let errorMessage = '';\n        if (password) {\n            if (!password.match(/[A-Z]/g) && this.passwordRules.uppercaseMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_uppercase_mandatory');\n            } else if (!password.match(/[0-9]/g) && this.passwordRules.numberMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_number_mandatory');\n            } else if (!password.match(/[^A-Za-z0-9]/g) && this.passwordRules.specialCharMandatory) {\n                errorMessage = this.translate.instant('AUTH.password_special_char_mandatory');\n            } else if (password.length < this.passwordRules.minLength && this.passwordRules.minLength !== 0) {\n                errorMessage = this.translate.instant('AUTH.password_min_length', {\"min\": this.passwordRules.minLength});\n            }\n        }\n        return errorMessage;\n    }\n\n    checkPasswordConfirmation(password: any, passwordCheck: any) {\n        let errorMessage;\n        if (password && passwordCheck && password !== passwordCheck) {\n            errorMessage = this.translate.instant('USER.password_mismatch');\n        } else {\n            errorMessage = '';\n        }\n        return errorMessage;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { PipeTransform, Pipe, Injectable } from '@angular/core';\n\n@Pipe({\n    name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], field : string, value : string): any[] {\n        if (!items) {\n            return [];\n        }\n\n        if (!value || value.length === 0) {\n            return items;\n        }\n        return items.filter(it => it[field].toLowerCase().indexOf(value.toLowerCase()) !== -1);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilegeId: any) {\n        let found = false;\n        const user = this.userService.getUserFromLocal();\n        if (user) {\n            const userPrivileges = user['privileges'];\n            if (userPrivileges) {\n                if (privilegeId === undefined || userPrivileges === '*') {\n                    return true;\n                }\n\n                userPrivileges.forEach((element: any) => {\n                    if (privilegeId === element) {\n                        found = true;\n                    }\n                });\n                return found;\n            }\n        }\n        return false;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SessionStorageService } from \"../session-storage.service\";\nimport { environment } from \"../../app/env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { interval, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router } from \"@angular/router\";\nimport { NotificationService } from \"../notifications/notifications.service\";\nimport { PrivilegesService } from \"../privileges.service\";\n\n@Component({\n    selector: 'app-process-watcher',\n    templateUrl: './process-watcher.component.html',\n    styleUrls: ['./process-watcher.component.scss']\n})\n\nexport class ProcessWatcherComponent implements OnInit {\n    minimizeDisplay     : boolean = true;\n    isFirstCallDone     : boolean = false;\n    getProcessRunning   : boolean = false;\n    processes           : any[]   = [];\n    displayedProcessData: any[]   = [];\n    authorizedUrl       : any[]   = ['/verifier/list', '/splitter/list', '/upload'];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public privilegesService: PrivilegesService,\n        private sessionStorageService: SessionStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        setInterval(() => {\n            this.minimizeDisplay = this.authService.getToken('minimizeDisplay') === 'true';\n        }, 500);\n\n        interval(5000).subscribe(() => {\n            if (this.authorizedUrl.includes(this.router.url) && !this.getProcessRunning) {\n                this.getLastProcesses();\n            }\n        });\n    }\n\n    changeDisplayMode(minimizeDisplay: boolean) {\n        this.minimizeDisplay = minimizeDisplay;\n        if (!this.minimizeDisplay) {\n            this.getLastProcesses();\n        }\n        this.authService.setToken('minimizeDisplay', minimizeDisplay ? 'true' : 'false');\n    }\n\n    getLastProcesses() {\n        this.isFirstCallDone = true;\n        this.getProcessRunning  = true;\n        const splitterOrVerifier = this.sessionStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier && this.privilegesService.hasPrivilege('monitoring')) {\n            this.http.get(environment['url'] + '/ws/monitoring/' + splitterOrVerifier + '/lasts',\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (this.displayedProcessData !== data['processes']) {\n                        this.processes = [];\n                        let cpt = 1;\n                        for (const process of data['processes']) {\n                            process.error_message = '';\n                            if (process.error) {\n                                Object.keys(process.steps).forEach((step: any) => {\n                                    if (process.steps[step].status == 'error') {\n                                        process.error_message = process.steps[step].message;\n                                    }\n                                });\n                            }\n                            this.processes.push({\n                                'id'            : cpt,\n                                'type'          : process.type,\n                                'fileName'      : process.filename,\n                                'module'        : process.module,\n                                'beginTime'     : process['creation_date_formated'],\n                                'endTime'       : process['end_date_formated'],\n                                'error'         : process.error,\n                                'errorMessage'  : process.error_message,\n                                'status'        : process.status ? process.status : 'in_progress',\n                                'age'           : process.age !== 0 ?\n                                    this.translate.instant(\"GLOBAL.n_minutes_ago\", {'minutes': process.age}) :\n                                    this.translate.instant(\"GLOBAL.few_seconds_ago\")\n                            });\n                            cpt++;\n                        }\n                    }\n                    this.displayedProcessData = data.process;\n                }),\n                finalize(() => this.getProcessRunning = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    showError(error: any) {\n        if (error) {\n            this.notify.handleErrors({\n                error: {\n                    errors : this.translate.instant('GLOBAL.task_error_informations'),\n                    message : '<br>' + error.replaceAll('\\n', '<br>')\n                }\n            });\n        }\n    }\n\n    countCurrentProcess() {\n        let count = 0;\n        for (const process of this.processes) {\n            if (process.status === 'wait' || process.status === 'running') {\n                count++;\n            }\n        }\n        return count;\n    }\n}\n","<mat-card class=\"w-1/3 h-36 absolute bottom-2 right-2 z-10 bg-slate-50\" style=\"padding: 0 !important;\"\n          *ngIf=\"!this.minimizeDisplay && this.authorizedUrl.includes(this.router.url)\">\n    <mat-card-title class=\"text-sm m-4\" cdkDragHandle>\n        {{ 'GLOBAL.current_tasks' | translate }}\n    <span class=\"text-lg absolute right-4 top-2 hover:text-green-400 inline-block align-bottom hover:cursor-pointer\"\n          (click)=\"changeDisplayMode(!this.minimizeDisplay)\" matTooltip=\"{{ 'GLOBAL.minimize' | translate }}\">\n        <i class=\"fa-solid fa-window-minimize align-top\"></i>\n    </span>\n    </mat-card-title>\n    <div class=\"mx-4 h-20 bg-slate-100\" [class.overflow-hidden]=\"processes.length === 0 && !isFirstCallDone\"\n        [class.overflow-y-auto]=\"processes.length !== 0 && isFirstCallDone\">\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"processes.length === 0 && !isFirstCallDone\">\n            <i class=\"fa-solid fa-circle-notch fa-spin fa-2x w-full text-gray-400\"></i>\n            <span class=\"block\">{{ 'GLOBAL.loading' | translate }}</span>\n        </div>\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"processes.length === 0 && !getProcessRunning && isFirstCallDone\">\n            <i class=\"fa-solid fa-check fa-2x w-full text-gray-400 mt-4\"></i>\n            <span class=\"block\">{{ 'GLOBAL.no_task_to_show' | translate }}</span>\n        </div>\n        <div *ngFor=\"let process of processes\" class=\"h-8 w-full px-4 border-t-2 grid grid-cols-10\" (click)=\"showError(process.errorMessage)\" [class.cursor-pointer] = process.error>\n            <span class=\"col-span-1 pt-1\">\n                {{ process.id }}\n            </span>\n            <span class=\"col-span-5 pt-1 w-full truncate\">\n                {{ process.fileName }}\n            </span>\n            <span class=\"col-span-3 text-sm text-slate-400 pt-1 truncate\"\n                  matTooltip=\"{{ 'GLOBAL.add_time' | translate }} {{ process.beginTime}}\">\n                {{ process.age }}\n            </span>\n            <span class=\"col-span-1 text-right\">\n                <i *ngIf=\"process.status === 'running'\" class=\"fa-solid fa-person-running fa-fade text-green-400 fa-lg my-4\"\n                   [matTooltip]=\"'MONITORING.running' | translate\"></i>\n                <i *ngIf=\"process.status === 'wait'\" class=\"fa-solid fa-clock text-gray-400 fa-lg my-4\"\n                   [matTooltip]=\"'MONITORING.wait' | translate\"></i>\n                <i *ngIf=\"process.status === 'error'\" class=\"fa-solid fa-xmark fa-lg my-4 text-red-400 cursor-pointer\"\n                    matTooltip=\"{{ 'MONITORING.error' | translate }}\"></i>\n                <i *ngIf=\"process.status === 'done'\" class=\"fa-solid fa-check fa-lg my-4\"\n                   matTooltip=\"{{ 'GLOBAL.end_time' | translate }} {{ process.endTime }}\"></i>\n            </span>\n        </div>\n    </div>\n</mat-card>\n<div (click)=\"changeDisplayMode(!this.minimizeDisplay)\" [ngClass]=\"countCurrentProcess() === 0 ? 'no-current-task' : 'current-task'\"\n     *ngIf=\"this.minimizeDisplay && this.authorizedUrl.includes(this.router.url) && this.privilegesService.hasPrivilege('monitoring')\"\n     matBadge=\"{{ countCurrentProcess() }}\" matTooltip=\"{{ 'MONITORING.current_processes' | translate }}\"\n     class=\"w-12 h-12 absolute bottom-6 right-6 rounded-full z-10 bg-slate-100 hover:text-green-400 hover:cursor-pointer\n            grid justify-items-center drop-shadow-md\">\n    <span  class=\"text-lg pt-2\">\n        <i class=\"fa-solid fa-list-check fa-align-center\"></i>\n    </span>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LastUrlService } from './last-url.service';\nimport { HintServiceComponent } from './hint/hint.service';\nimport { ErrorServiceComponent } from './error/error.service';\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ProcessWatcherComponent } from './process-watcher/process-watcher.component';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport { CodeEditorModule } from \"@ngstack/code-editor\";\nimport { ExportDialogComponent } from './export-dialog/export-dialog.component';\nimport { ImportDialogComponent } from './import-dialog/import-dialog.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport {NgxFileDragDropModule} from \"ngx-file-drag-drop\";\n\n@NgModule({\n    imports: [AppMaterialModule, CommonModule, TranslateModule, DragDropModule, CodeEditorModule, ReactiveFormsModule, NgxFileDragDropModule],\n    declarations: [CustomSnackbarComponent, ConfirmDialogComponent, ProcessWatcherComponent, CodeEditorComponent, ExportDialogComponent, ImportDialogComponent],\n    exports: [ProcessWatcherComponent],\n    providers: [NotificationService, LastUrlService, HintServiceComponent, ErrorServiceComponent]\n})\nexport class ServicesModule { }\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionStorageService {\n\n    constructor() {}\n\n    save(id: string, content: any) {\n        sessionStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return sessionStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        sessionStorage.removeItem(id);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Title } from \"@angular/platform-browser\";\nimport { LastUrlService } from \"./last-url.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SessionStorageService } from \"./session-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SettingsService {\n    selectedSetting         : any       = \"configurations\";\n    selectedParentSetting   : any       = \"general\";\n    minimizeSideNav         : boolean   = false;\n    settingsParent          : any[]     = [\n        {\n            \"id\": \"general\",\n            \"label\": this.translate.instant(\"SETTINGS.general\"),\n            \"icon\": 'fa-globe',\n            \"opened\": false\n        },\n        {\n            \"id\": \"verifier\",\n            \"label\": this.translate.instant(\"SETTINGS.verifier\"),\n            \"icon\": 'fa-certificate',\n            \"opened\": false\n        },\n        {\n            \"id\": \"splitter\",\n            \"label\": this.translate.instant(\"SETTINGS.splitter\"),\n            \"icon\": 'fa-arrows-split-up-and-left',\n            \"opened\": false\n        }\n    ];\n    settings                : any       = {\n        \"general\": [\n            {\n                \"id\"        : \"configurations\",\n                \"label\"     : this.translate.instant(\"SETTINGS.configurations\"),\n                \"icon\"      : \"fa-solid fa-sliders\",\n                \"route\"     : '/settings/general/configurations',\n                \"privilege\" : \"configurations\"\n            },\n            {\n                \"id\"        : \"docservers\",\n                \"label\"     : this.translate.instant(\"SETTINGS.docservers\"),\n                \"icon\"      : \"fa-solid fa-hard-drive\",\n                \"route\"     : '/settings/general/docservers',\n                \"privilege\" : \"docservers\"\n            },\n            {\n                \"id\"        : \"regex\",\n                \"label\"     : this.translate.instant(\"SETTINGS.regex\"),\n                \"icon\"      : \"fa-solid fa-star-of-life\",\n                \"route\"     : '/settings/general/regex',\n                \"privilege\" : \"regex\"\n            },\n            {\n                \"id\"        : \"mailcollect\",\n                \"label\"     : this.translate.instant(\"SETTINGS.mailcollect\"),\n                \"icon\"      : \"fa-solid fa-inbox\",\n                \"route\"     : '/settings/general/mailcollect',\n                \"privilege\" : \"mailcollect\"\n            },\n            {\n                \"id\"        : \"users\",\n                \"label\"     : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"      : \"fa-solid fa-user\",\n                \"route\"     : '/settings/general/users',\n                \"privilege\" : \"users_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : 'add_user',\n                        \"label\"     : this.translate.instant(\"USER.create_user\"),\n                        \"route\"     : \"/settings/general/users/new\",\n                        \"privilege\" : \"add_user\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_user',\n                        \"label\"             : this.translate.instant(\"USER.update\"),\n                        \"route\"             : \"/settings/general/users/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_user\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"user-quota\",\n                \"label\"     : this.translate.instant(\"SETTINGS.user_quota\"),\n                \"icon\"      : \"fa-solid fa-user-gear\",\n                \"route\"     : '/settings/general/user-quota',\n                \"privilege\" : \"user_quota\"\n            },\n            {\n                \"id\"        : \"roles\",\n                \"label\"     : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"      : \"fa-solid fa-users\",\n                \"route\"     : \"/settings/general/roles\",\n                \"privilege\" : \"roles_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_role\",\n                        \"label\"     : this.translate.instant(\"ROLE.create_role\"),\n                        \"route\"     : \"/settings/general/roles/new\",\n                        \"privilege\" : \"add_role\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_role',\n                        \"label\"             : this.translate.instant(\"ROLE.update\"),\n                        \"route\"             : \"/settings/general/roles/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_role\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"custom-fields\",\n                \"label\"     : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"route\"     : \"/settings/general/custom-fields\",\n                \"icon\"      : \"fa-solid fa-code\",\n                \"privilege\" : \"custom_fields\"\n            },\n            {\n                \"id\"        : \"login-methods\",\n                \"label\"     : this.translate.instant(\"SETTINGS.login_methods\"),\n                \"icon\"      : \"fa-solid fa-right-to-bracket\",\n                \"route\"     : \"/settings/general/login-methods\",\n                \"privilege\" : \"login_methods\"\n            },\n            {\n                \"id\"        : \"about-us\",\n                \"label\"     : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"      : \"fa-solid fa-address-card\",\n                \"route\"     : \"/settings/general/about-us\"\n            }\n        ],\n        \"verifier\": [\n            {\n                \"id\"        : \"verifier_settings\",\n                \"label\"     : this.translate.instant(\"SETTINGS.verifier_settings\"),\n                \"icon\"      : \"fa-solid fa-cogs\",\n                \"route\"     : \"/settings/verifier\",\n                \"privilege\" : \"verifier_settings\"\n            },\n            {\n                \"id\"        : \"output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/verifier/outputs\",\n                \"privilege\" : \"outputs_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/verifier/outputs/new\",\n                        \"privilege\" : \"add_output\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/verifier/outputs/update/\",\n                        \"privilege\"         : \"update_output\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/verifier/forms\",\n                \"privilege\" : \"forms_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/verifier/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/verifier/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"workflow_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_workflows\"),\n                \"icon\"      : \"fa-solid fa-diagram-next\",\n                \"route\"     : \"/settings/verifier/workflows\",\n                \"privilege\" : \"workflows_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_workflow\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.workflow_builder\"),\n                        \"route\"     : \"/settings/verifier/workflows/builder/new\",\n                        \"privilege\" : \"add_workflow\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_workflonw\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.workflow_update\"),\n                        \"route\"             : \"/settings/verifier/workflows/builder/edit/\",\n                        \"privilege\"         : \"update_workflow\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"position_mask_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_positions_mask\"),\n                \"icon\"      : \"fa-solid fa-map-marker-alt\",\n                \"route\"     : \"/settings/verifier/positions-mask\",\n                \"privilege\" : \"position_mask_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_position_mask\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.positions_mask_builder\"),\n                        \"route\"     : \"/settings/verifier/positions-mask/create\",\n                        \"privilege\" : \"add_position_mask\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_position_mask\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.positions_mask_update\"),\n                        \"route\"             : \"/settings/verifier/positions-mask/update/\",\n                        \"privilege\"         : \"update_position_mask\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"artificial-intelligence\",\n                \"label\"     : this.translate.instant(\"SETTINGS.artificial_intelligence\"),\n                \"icon\"      : \"fa-solid fa-microchip\",\n                \"route\"     : \"/settings/verifier/ai\",\n                \"privilege\" : \"list_ai_model\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"verifier_add_model\",\n                        \"label\"     : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.add_model\"),\n                        \"route\"     : \"/settings/verifier/ai/create\",\n                        \"privilege\" : \"create_ai_model\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"verifier_update_model\",\n                        \"label\"             : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.update_model\"),\n                        \"route\"             : \"/settings/verifier/ai/update/\",\n                        \"privilege\"         : \"update_ai_model\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"verifier_status_update\",\n                \"label\"     : this.translate.instant(\"SETTINGS.status_update\"),\n                \"icon\"      : \"fa-solid fa-flag\",\n                \"route\"     : \"/settings/verifier/status-update\",\n                \"privilege\" : \"update_status\"\n            }\n        ],\n        \"splitter\": [\n            {\n                \"id\"        : \"splitter_output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/splitter/outputs\",\n                \"privilege\" : \"outputs_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_output\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/splitter/outputs/new\",\n                        \"privilege\" : \"add_output_splitter\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_output\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/splitter/outputs/update/\",\n                        \"privilege\"         : \"update_output_splitter\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/splitter/forms\",\n                \"privilege\" : \"forms_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/splitter/forms/builder/new\",\n                        \"privilege\" : \"add_form_splitter\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/splitter/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form_splitter\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_workflow_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_workflows\"),\n                \"icon\"      : \"fa-solid fa-diagram-next\",\n                \"route\"     : \"/settings/splitter/workflows\",\n                \"privilege\" : \"workflows_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_workflow\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.workflow_builder\"),\n                        \"route\"     : \"/settings/splitter/workflows/builder/new\",\n                        \"privilege\" : \"add_workflow_splitter\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_workflow\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.workflow_update\"),\n                        \"route\"             : \"/settings/splitter/workflows/builder/edit/\",\n                        \"privilege\"         : \"update_workflow_splitter\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"document-type\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\"      : \"fa-solid fa-file\",\n                \"route\"     : \"/settings/splitter/document-type\",\n                \"privilege\" : \"document_type_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_folder_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type_folder\"),\n                        \"route\"     : \"/settings/splitter/document-type/create-folder\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-folder-plus\"\n                    },\n                    {\n                        \"id\"        : \"splitter_add_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type\"),\n                        \"route\"     : \"/settings/splitter/document-type/new\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_doc_type\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_doc_type\"),\n                        \"route\"             : \"/settings/splitter/document-type/update/\",\n                        \"privilege\"         : \"update_document_type\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"separator\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\"      : \"fa-solid fa-qrcode\",\n                \"route\"     : \"/settings/splitter/separator\",\n                \"privilege\" : \"separator_splitter\"\n            },\n            {\n                \"id\"        : \"artificial-intelligence\",\n                \"label\"     : this.translate.instant(\"SETTINGS.artificial_intelligence\"),\n                \"icon\"      : \"fa-solid fa-microchip\",\n                \"route\"     : \"/settings/splitter/ai\",\n                \"privilege\" : \"list_ai_model_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_model\",\n                        \"label\"     : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.add_model\"),\n                        \"route\"     : \"/settings/splitter/ai/create\",\n                        \"privilege\" : \"create_ai_model_splitter\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_model\",\n                        \"label\"             : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.update_model\"),\n                        \"route\"             : \"/settings/splitter/ai/update/\",\n                        \"privilege\"         : \"update_ai_model_splitter\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_status_update\",\n                \"label\"     : this.translate.instant(\"SETTINGS.status_update\"),\n                \"icon\"      : \"fa-solid fa-flag\",\n                \"route\"     : \"/settings/splitter/status-update\",\n                \"privilege\" : \"update_status_splitter\"\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private titleService: Title,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private sessionStorage: SessionStorageService\n    ) {}\n\n    init() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const selectedParentSetting = this.sessionStorage.get('selectedParentSettings');\n        const selectedSetting = this.sessionStorage.get('selectedSettings');\n\n        onresize = () => {\n            this.minimizeSideNav = window.innerWidth < 1500;\n        };\n\n        if (selectedSetting) {\n            this.setSelectedSettings(selectedSetting);\n        }\n        if (selectedParentSetting) {\n            this.setSelectedParentSettings(selectedParentSetting);\n        }\n\n        if (selectedParentSetting == null && selectedSetting == null) {\n            let foundSettings = false;\n            this.settingsParent.forEach((parent: any) => {\n                if (this.router.url.includes(parent['id'])) {\n                    foundSettings = true;\n                    this.setSelectedParentSettings(parent['id']);\n                }\n            });\n\n            if (!foundSettings) {\n                this.setSelectedParentSettings('general');\n                this.setSelectedSettings('about-us');\n            }\n        }\n\n        this.closeOtherParent('', this.selectedParentSetting);\n    }\n\n    getTitle() {\n        let title = this.titleService.getTitle();\n        title = title.split(' - ')[0];\n        return title;\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.setSelectedSettings(settingId);\n        this.setSelectedParentSettings(settingParentId);\n    }\n\n    getSelectedSetting() {\n        return this.selectedSetting;\n    }\n\n    getSelectedParentSetting() {\n        return this.selectedParentSetting;\n    }\n\n    getSettingsParent() {\n        return this.settingsParent;\n    }\n\n    closeOtherParent(url: any, parentId: any) {\n        this.settingsParent.forEach((parent: any) => {\n            parent.opened = parentId === parent['id'];\n        });\n    }\n\n    getSettings() {\n        return this.settings;\n    }\n\n    getSettingsAction(parentId: any, settingId: any) {\n        let actions: any;\n        this.settings[parentId].forEach((element: any) => {\n            if (element['id'] === settingId && element['actions']) {\n                actions = element['actions'];\n            }\n        });\n        return actions;\n    }\n\n    setSelectedSettings(value: string) {\n        this.selectedSetting = value;\n        this.sessionStorage.save('selectedSettings', value);\n    }\n\n    setSelectedParentSettings(value: string) {\n        this.selectedParentSetting = value;\n        this.sessionStorage.save('selectedParentSettings', value);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { environment } from \"../app/env\";\nimport { Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { SessionStorageService } from \"./session-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private router: Router,\n        private sessionStorage: SessionStorageService\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser() {\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        const token = this.getUserData();\n        if (token) {\n            return JSON.parse(atob(token as string));\n        } else if (this.router.url !== '/' && !this.router.url.includes('/resetPassword') && this.router.url !== '/forgotPassword' && this.router.url !== '/login' && this.router.url !== '/logout') {\n            this.router.navigate(['/logout']).then();\n        }\n    }\n\n    getUserData() {\n        let userTokenName = 'OpenCaptureUserData';\n        if (environment['customId']) {\n            userTokenName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            userTokenName += '_' + environment['fqdn'];\n        }\n        return this.sessionStorage.get(userTokenName);\n    }\n}\n","var map = {\n\t\"./af\": 85637,\n\t\"./af.js\": 85637,\n\t\"./ar\": 6777,\n\t\"./ar-dz\": 74508,\n\t\"./ar-dz.js\": 74508,\n\t\"./ar-kw\": 67504,\n\t\"./ar-kw.js\": 67504,\n\t\"./ar-ly\": 95373,\n\t\"./ar-ly.js\": 95373,\n\t\"./ar-ma\": 92412,\n\t\"./ar-ma.js\": 92412,\n\t\"./ar-ps\": 78823,\n\t\"./ar-ps.js\": 78823,\n\t\"./ar-sa\": 36670,\n\t\"./ar-sa.js\": 36670,\n\t\"./ar-tn\": 36448,\n\t\"./ar-tn.js\": 36448,\n\t\"./ar.js\": 6777,\n\t\"./az\": 23009,\n\t\"./az.js\": 23009,\n\t\"./be\": 28299,\n\t\"./be.js\": 28299,\n\t\"./bg\": 4685,\n\t\"./bg.js\": 4685,\n\t\"./bm\": 11171,\n\t\"./bm.js\": 11171,\n\t\"./bn\": 23590,\n\t\"./bn-bd\": 5841,\n\t\"./bn-bd.js\": 5841,\n\t\"./bn.js\": 23590,\n\t\"./bo\": 54309,\n\t\"./bo.js\": 54309,\n\t\"./br\": 54130,\n\t\"./br.js\": 54130,\n\t\"./bs\": 8033,\n\t\"./bs.js\": 8033,\n\t\"./ca\": 55294,\n\t\"./ca.js\": 55294,\n\t\"./cs\": 53028,\n\t\"./cs.js\": 53028,\n\t\"./cv\": 5807,\n\t\"./cv.js\": 5807,\n\t\"./cy\": 70342,\n\t\"./cy.js\": 70342,\n\t\"./da\": 38269,\n\t\"./da.js\": 38269,\n\t\"./de\": 11489,\n\t\"./de-at\": 42123,\n\t\"./de-at.js\": 42123,\n\t\"./de-ch\": 17757,\n\t\"./de-ch.js\": 17757,\n\t\"./de.js\": 11489,\n\t\"./dv\": 28152,\n\t\"./dv.js\": 28152,\n\t\"./el\": 7687,\n\t\"./el.js\": 7687,\n\t\"./en-au\": 46668,\n\t\"./en-au.js\": 46668,\n\t\"./en-ca\": 76798,\n\t\"./en-ca.js\": 76798,\n\t\"./en-gb\": 53615,\n\t\"./en-gb.js\": 53615,\n\t\"./en-ie\": 91364,\n\t\"./en-ie.js\": 91364,\n\t\"./en-il\": 79907,\n\t\"./en-il.js\": 79907,\n\t\"./en-in\": 70533,\n\t\"./en-in.js\": 70533,\n\t\"./en-nz\": 33190,\n\t\"./en-nz.js\": 33190,\n\t\"./en-sg\": 51096,\n\t\"./en-sg.js\": 51096,\n\t\"./eo\": 3962,\n\t\"./eo.js\": 3962,\n\t\"./es\": 37726,\n\t\"./es-do\": 65010,\n\t\"./es-do.js\": 65010,\n\t\"./es-mx\": 63654,\n\t\"./es-mx.js\": 63654,\n\t\"./es-us\": 59043,\n\t\"./es-us.js\": 59043,\n\t\"./es.js\": 37726,\n\t\"./et\": 25343,\n\t\"./et.js\": 25343,\n\t\"./eu\": 90728,\n\t\"./eu.js\": 90728,\n\t\"./fa\": 60787,\n\t\"./fa.js\": 60787,\n\t\"./fi\": 71771,\n\t\"./fi.js\": 71771,\n\t\"./fil\": 45335,\n\t\"./fil.js\": 45335,\n\t\"./fo\": 69761,\n\t\"./fo.js\": 69761,\n\t\"./fr\": 1670,\n\t\"./fr-ca\": 28991,\n\t\"./fr-ca.js\": 28991,\n\t\"./fr-ch\": 97280,\n\t\"./fr-ch.js\": 97280,\n\t\"./fr.js\": 1670,\n\t\"./fy\": 24203,\n\t\"./fy.js\": 24203,\n\t\"./ga\": 69858,\n\t\"./ga.js\": 69858,\n\t\"./gd\": 38605,\n\t\"./gd.js\": 38605,\n\t\"./gl\": 27365,\n\t\"./gl.js\": 27365,\n\t\"./gom-deva\": 33896,\n\t\"./gom-deva.js\": 33896,\n\t\"./gom-latn\": 95587,\n\t\"./gom-latn.js\": 95587,\n\t\"./gu\": 97950,\n\t\"./gu.js\": 97950,\n\t\"./he\": 92029,\n\t\"./he.js\": 92029,\n\t\"./hi\": 51897,\n\t\"./hi.js\": 51897,\n\t\"./hr\": 29816,\n\t\"./hr.js\": 29816,\n\t\"./hu\": 22253,\n\t\"./hu.js\": 22253,\n\t\"./hy-am\": 28196,\n\t\"./hy-am.js\": 28196,\n\t\"./id\": 51307,\n\t\"./id.js\": 51307,\n\t\"./is\": 95474,\n\t\"./is.js\": 95474,\n\t\"./it\": 23099,\n\t\"./it-ch\": 45807,\n\t\"./it-ch.js\": 45807,\n\t\"./it.js\": 23099,\n\t\"./ja\": 19127,\n\t\"./ja.js\": 19127,\n\t\"./jv\": 30182,\n\t\"./jv.js\": 30182,\n\t\"./ka\": 10758,\n\t\"./ka.js\": 10758,\n\t\"./kk\": 93444,\n\t\"./kk.js\": 93444,\n\t\"./km\": 72034,\n\t\"./km.js\": 72034,\n\t\"./kn\": 46223,\n\t\"./kn.js\": 46223,\n\t\"./ko\": 83064,\n\t\"./ko.js\": 83064,\n\t\"./ku\": 8714,\n\t\"./ku-kmr\": 10961,\n\t\"./ku-kmr.js\": 10961,\n\t\"./ku.js\": 8714,\n\t\"./ky\": 12062,\n\t\"./ky.js\": 12062,\n\t\"./lb\": 84796,\n\t\"./lb.js\": 84796,\n\t\"./lo\": 19279,\n\t\"./lo.js\": 19279,\n\t\"./lt\": 106,\n\t\"./lt.js\": 106,\n\t\"./lv\": 11840,\n\t\"./lv.js\": 11840,\n\t\"./me\": 42240,\n\t\"./me.js\": 42240,\n\t\"./mi\": 13588,\n\t\"./mi.js\": 13588,\n\t\"./mk\": 15518,\n\t\"./mk.js\": 15518,\n\t\"./ml\": 37823,\n\t\"./ml.js\": 37823,\n\t\"./mn\": 98657,\n\t\"./mn.js\": 98657,\n\t\"./mr\": 61285,\n\t\"./mr.js\": 61285,\n\t\"./ms\": 43014,\n\t\"./ms-my\": 86253,\n\t\"./ms-my.js\": 86253,\n\t\"./ms.js\": 43014,\n\t\"./mt\": 20167,\n\t\"./mt.js\": 20167,\n\t\"./my\": 47940,\n\t\"./my.js\": 47940,\n\t\"./nb\": 50014,\n\t\"./nb.js\": 50014,\n\t\"./ne\": 49023,\n\t\"./ne.js\": 49023,\n\t\"./nl\": 34208,\n\t\"./nl-be\": 71412,\n\t\"./nl-be.js\": 71412,\n\t\"./nl.js\": 34208,\n\t\"./nn\": 81354,\n\t\"./nn.js\": 81354,\n\t\"./oc-lnc\": 40870,\n\t\"./oc-lnc.js\": 40870,\n\t\"./pa-in\": 80389,\n\t\"./pa-in.js\": 80389,\n\t\"./pl\": 7342,\n\t\"./pl.js\": 7342,\n\t\"./pt\": 34774,\n\t\"./pt-br\": 73003,\n\t\"./pt-br.js\": 73003,\n\t\"./pt.js\": 34774,\n\t\"./ro\": 85333,\n\t\"./ro.js\": 85333,\n\t\"./ru\": 73451,\n\t\"./ru.js\": 73451,\n\t\"./sd\": 43921,\n\t\"./sd.js\": 43921,\n\t\"./se\": 59682,\n\t\"./se.js\": 59682,\n\t\"./si\": 80582,\n\t\"./si.js\": 80582,\n\t\"./sk\": 4348,\n\t\"./sk.js\": 4348,\n\t\"./sl\": 95337,\n\t\"./sl.js\": 95337,\n\t\"./sq\": 39358,\n\t\"./sq.js\": 39358,\n\t\"./sr\": 50683,\n\t\"./sr-cyrl\": 69382,\n\t\"./sr-cyrl.js\": 69382,\n\t\"./sr.js\": 50683,\n\t\"./ss\": 51156,\n\t\"./ss.js\": 51156,\n\t\"./sv\": 29855,\n\t\"./sv.js\": 29855,\n\t\"./sw\": 18536,\n\t\"./sw.js\": 18536,\n\t\"./ta\": 15373,\n\t\"./ta.js\": 15373,\n\t\"./te\": 37809,\n\t\"./te.js\": 37809,\n\t\"./tet\": 61297,\n\t\"./tet.js\": 61297,\n\t\"./tg\": 92527,\n\t\"./tg.js\": 92527,\n\t\"./th\": 85862,\n\t\"./th.js\": 85862,\n\t\"./tk\": 79331,\n\t\"./tk.js\": 79331,\n\t\"./tl-ph\": 44387,\n\t\"./tl-ph.js\": 44387,\n\t\"./tlh\": 3592,\n\t\"./tlh.js\": 3592,\n\t\"./tr\": 79732,\n\t\"./tr.js\": 79732,\n\t\"./tzl\": 99570,\n\t\"./tzl.js\": 99570,\n\t\"./tzm\": 83553,\n\t\"./tzm-latn\": 7699,\n\t\"./tzm-latn.js\": 7699,\n\t\"./tzm.js\": 83553,\n\t\"./ug-cn\": 25674,\n\t\"./ug-cn.js\": 25674,\n\t\"./uk\": 69974,\n\t\"./uk.js\": 69974,\n\t\"./ur\": 45773,\n\t\"./ur.js\": 45773,\n\t\"./uz\": 357,\n\t\"./uz-latn\": 77135,\n\t\"./uz-latn.js\": 77135,\n\t\"./uz.js\": 357,\n\t\"./vi\": 20043,\n\t\"./vi.js\": 20043,\n\t\"./x-pseudo\": 40767,\n\t\"./x-pseudo.js\": 40767,\n\t\"./yo\": 80150,\n\t\"./yo.js\": 80150,\n\t\"./zh-cn\": 21828,\n\t\"./zh-cn.js\": 21828,\n\t\"./zh-hk\": 86644,\n\t\"./zh-hk.js\": 86644,\n\t\"./zh-mo\": 79305,\n\t\"./zh-mo.js\": 79305,\n\t\"./zh-tw\": 31860,\n\t\"./zh-tw.js\": 31860\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;"],"names":["marker","FormControl","catchError","tap","environment","of","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","getErrorMessageCustomer","field_r1","id","ɵɵtemplate","CreateCustomerComponent_ng_container_18_mat_form_field_1_mat_error_6_Template","ɵɵpipeBind1","label","ɵɵproperty","type","control","invalid","option_r4","ɵɵtextInterpolate1","ɵɵtwoWayListener","CreateCustomerComponent_ng_container_18_mat_form_field_2_Template_mat_select_valueChange_4_listener","$event","ɵɵrestoreView","_r3","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","value","ɵɵresetView","ɵɵlistener","CreateCustomerComponent_ng_container_18_mat_form_field_2_Template_mat_select_selectionChange_4_listener","updateRequired","CreateCustomerComponent_ng_container_18_mat_form_field_2_mat_option_5_Template","CreateCustomerComponent_ng_container_18_mat_form_field_2_mat_error_6_Template","ɵɵtwoWayProperty","values","ɵɵelementContainerStart","CreateCustomerComponent_ng_container_18_mat_form_field_1_Template","CreateCustomerComponent_ng_container_18_mat_form_field_2_Template","getErrorMessageAddress","field_r5","CreateCustomerComponent_ng_container_25_mat_form_field_1_mat_error_6_Template","ɵɵclassProp","CreateCustomerComponent_ng_container_25_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","_r6","onCountrySelected","defaultValue","CreateCustomerComponent_ng_container_25_mat_form_field_1_Template","CreateCustomerComponent_ng_container_25_mat_select_country_2_Template","CreateCustomerComponent","constructor","router","http","userService","authService","translate","notify","serviceSettings","privilegesService","headers","loading","currentModule","customerForm","required","instant","addressForm","name","alpha2Code","alpha3Code","numericCode","callingCode","ngOnInit","headersExists","generateHeaders","country","forEach","element","setValue","field","requiredFields","includes","isValidForm","state","status","markAsTouched","onSubmit","customer","address","Object","keys","length","post","pipe","data","create_customer","err","console","debug","handleErrors","subscribe","success","navigate","then","error","_","ɵɵdirectiveInject","i1","Router","i2","HttpClient","i3","UserService","i4","AuthService","i5","TranslateService","i6","NotificationService","i7","SettingsService","i8","PrivilegesService","_2","selectors","decls","vars","consts","template","CreateCustomerComponent_Template","rf","ctx","CreateCustomerComponent_div_2_Template","CreateCustomerComponent_Template_button_click_5_listener","CreateCustomerComponent_ng_container_18_Template","CreateCustomerComponent_ng_container_25_Template","CreateCustomerComponent_Template_button_click_27_listener","getTitle","finalize","ConfirmDialogComponent","element_r1","element_r2","element_r3","company_number","element_r4","vat_number","element_r5","siret","element_r6","siren","element_r7","module","CustomersListComponent_mat_cell_42_Template_button_click_1_listener","element_r9","_r8","ctx_r9","stopPropagation","deleteConfirmDialog","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","row_r11","CustomersListComponent","dialog","routerExtService","sessionStorageService","columnsToDisplay","allCustomers","customers","pageSize","pageIndex","total","offset","search","lastUrl","getPreviousUrl","get","parseInt","remove","loadCustomers","searchCustomer","event","target","onPageChange","save","customerId","dialogRef","open","confirmTitle","confirmText","confirmButton","confirmButtonColor","cancelButton","width","afterClosed","result","deleteCustomer","undefined","delete","sortData","sort","slice","active","direction","splice","a","b","isAsc","compare","MatDialog","i9","LastUrlService","i10","i11","SessionStorageService","CustomersListComponent_Template","CustomersListComponent_div_2_Template","CustomersListComponent_Template_input_keyup_9_listener","CustomersListComponent_Template_mat_table_matSortChange_18_listener","CustomersListComponent_mat_header_cell_20_Template","CustomersListComponent_mat_cell_21_Template","CustomersListComponent_mat_header_cell_23_Template","CustomersListComponent_mat_cell_24_Template","CustomersListComponent_mat_header_cell_26_Template","CustomersListComponent_mat_cell_27_Template","CustomersListComponent_mat_header_cell_29_Template","CustomersListComponent_mat_cell_30_Template","CustomersListComponent_mat_header_cell_32_Template","CustomersListComponent_mat_cell_33_Template","CustomersListComponent_mat_header_cell_35_Template","CustomersListComponent_mat_cell_36_Template","CustomersListComponent_mat_header_cell_38_Template","CustomersListComponent_mat_cell_39_Template","CustomersListComponent_mat_header_cell_41_Template","CustomersListComponent_mat_cell_42_Template","CustomersListComponent_mat_header_row_43_Template","CustomersListComponent_mat_row_44_Template","CustomersListComponent_Template_mat_paginator_page_45_listener","ɵɵpureFunction0","_c0","COUNTRIES_DB_FR","ctx_r0","field_r2","UpdateCustomerComponent_ng_container_19_mat_form_field_1_mat_error_6_Template","UpdateCustomerComponent_ng_container_19_mat_form_field_2_Template_mat_select_valueChange_4_listener","UpdateCustomerComponent_ng_container_19_mat_form_field_2_Template_mat_select_selectionChange_4_listener","UpdateCustomerComponent_ng_container_19_mat_form_field_2_mat_option_5_Template","UpdateCustomerComponent_ng_container_19_mat_form_field_2_mat_error_6_Template","UpdateCustomerComponent_ng_container_19_mat_form_field_1_Template","UpdateCustomerComponent_ng_container_19_mat_form_field_2_Template","UpdateCustomerComponent_ng_container_26_mat_form_field_1_mat_error_6_Template","UpdateCustomerComponent_ng_container_26_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","UpdateCustomerComponent_ng_container_26_mat_form_field_1_Template","UpdateCustomerComponent_ng_container_26_mat_select_country_2_Template","UpdateCustomerComponent","route","snapshot","params","hasOwnProperty","addressId","put","update_customer","ActivatedRoute","UpdateCustomerComponent_Template","UpdateCustomerComponent_div_2_Template","UpdateCustomerComponent_Template_button_click_5_listener","UpdateCustomerComponent_span_10_Template","UpdateCustomerComponent_ng_container_19_Template","UpdateCustomerComponent_ng_container_26_Template","UpdateCustomerComponent_Template_button_click_28_listener","Validators","CreateSupplierComponent_ng_container_14_mat_slide_toggle_1_Template","ctx_r2","getErrorMessageSupplier","hint","CreateSupplierComponent_ng_container_21_mat_form_field_1_mat_error_6_Template","CreateSupplierComponent_ng_container_21_mat_form_field_1_span_7_Template","CreateSupplierComponent_ng_container_21_mat_form_field_2_mat_option_5_Template","CreateSupplierComponent_ng_container_21_mat_form_field_2_mat_error_6_Template","CreateSupplierComponent_ng_container_21_mat_form_field_1_Template","CreateSupplierComponent_ng_container_21_mat_form_field_2_Template","CreateSupplierComponent_ng_container_28_mat_form_field_1_mat_error_6_Template","CreateSupplierComponent_ng_container_28_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","CreateSupplierComponent_ng_container_28_mat_form_field_1_Template","CreateSupplierComponent_ng_container_28_mat_select_country_2_Template","CreateSupplierComponent","localeService","createLoading","supplierForm","pattern","email","forms","cpt","valueChanges","replace","langs","lang","push","supplier","errors","LocaleService","CreateSupplierComponent_Template","CreateSupplierComponent_div_2_Template","CreateSupplierComponent_Template_button_click_5_listener","CreateSupplierComponent_ng_container_14_Template","CreateSupplierComponent_ng_container_21_Template","CreateSupplierComponent_ng_container_28_Template","CreateSupplierComponent_Template_button_click_30_listener","CreateSupplierComponent_span_31_Template","CreateSupplierComponent_i_32_Template","ImportDialogComponent","iban","element_r8","form_label","SuppliersListComponent_mat_cell_51_Template_button_click_1_listener","element_r10","_r9","ctx_r10","SuppliersListComponent_mat_cell_51_Template_button_click_4_listener","deletePositionsConfirmDialog","SuppliersListComponent_mat_cell_51_Template_button_click_7_listener","skipAutoValidateConfirmDialog","row_r12","SuppliersListComponent","formBuilder","allSuppliers","suppliers","loadSuppliers","form","form_id","searchSupplier","supplierId","deleteSupplier","deleteSupplierPositions","skipAutoValidate","getReferenceFile","mimeType","mimetype","referenceFile","file","link","document","createElement","href","download","filename","click","importSuppliers","columns","rows","extension","skipHeader","allowColumnsSelection","title","availableColumns","selectedColumns","formData","FormData","fileControl","append","set","FormBuilder","i12","SuppliersListComponent_Template","SuppliersListComponent_div_2_Template","SuppliersListComponent_Template_input_keyup_9_listener","SuppliersListComponent_Template_button_click_13_listener","SuppliersListComponent_Template_button_click_16_listener","SuppliersListComponent_Template_mat_table_matSortChange_24_listener","SuppliersListComponent_mat_header_cell_26_Template","SuppliersListComponent_mat_cell_27_Template","SuppliersListComponent_mat_header_cell_29_Template","SuppliersListComponent_mat_cell_30_Template","SuppliersListComponent_mat_header_cell_32_Template","SuppliersListComponent_mat_cell_33_Template","SuppliersListComponent_mat_header_cell_35_Template","SuppliersListComponent_mat_cell_36_Template","SuppliersListComponent_mat_header_cell_38_Template","SuppliersListComponent_mat_cell_39_Template","SuppliersListComponent_mat_header_cell_41_Template","SuppliersListComponent_mat_cell_42_Template","SuppliersListComponent_mat_header_cell_44_Template","SuppliersListComponent_mat_cell_45_Template","SuppliersListComponent_mat_header_cell_47_Template","SuppliersListComponent_mat_cell_48_Template","SuppliersListComponent_mat_header_cell_50_Template","SuppliersListComponent_mat_cell_51_Template","SuppliersListComponent_mat_header_row_52_Template","SuppliersListComponent_mat_row_53_Template","SuppliersListComponent_Template_mat_paginator_page_54_listener","hasPrivilege","UpdateSupplierComponent_ng_container_15_mat_slide_toggle_1_Template","field_r3","UpdateSupplierComponent_ng_container_22_mat_form_field_1_mat_error_6_Template","option_r5","UpdateSupplierComponent_ng_container_22_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r4","UpdateSupplierComponent_ng_container_22_mat_form_field_2_mat_option_5_Template","UpdateSupplierComponent_ng_container_22_mat_form_field_2_mat_error_6_Template","UpdateSupplierComponent_ng_container_22_mat_form_field_1_Template","UpdateSupplierComponent_ng_container_22_mat_form_field_2_Template","field_r6","UpdateSupplierComponent_ng_container_29_mat_form_field_1_mat_error_6_Template","UpdateSupplierComponent_ng_container_29_mat_select_country_2_Template_mat_select_country_onCountrySelected_0_listener","_r7","UpdateSupplierComponent_ng_container_29_mat_form_field_1_Template","UpdateSupplierComponent_ng_container_29_mat_select_country_2_Template","UpdateSupplierComponent","adr_field","adr_element","UpdateSupplierComponent_Template","UpdateSupplierComponent_div_2_Template","UpdateSupplierComponent_Template_button_click_5_listener","UpdateSupplierComponent_span_10_Template","UpdateSupplierComponent_ng_container_15_Template","UpdateSupplierComponent_ng_container_22_Template","UpdateSupplierComponent_ng_container_29_Template","UpdateSupplierComponent_Template_button_click_31_listener","MomentDateAdapter","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MAT_MOMENT_DATE_FORMATS","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MatNativeDateModule","DateAdapter","MatRippleModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","AppMaterialModule","_3","provide","useClass","deps","useValue","imports","exports","RouterModule","HomeComponent","LoginComponent","LogoutComponent","UploadComponent","HistoryComponent","UserProfileComponent","NotFoundComponent","HasPrivilegeService","StatisticsComponent","LoginRedirectService","LoginRequiredService","Error500Component","VerifierListComponent","SplitterListComponent","ResetPasswordComponent","ForgotPasswordComponent","SplitterViewerComponent","VerifierViewerComponent","MonitoringListComponent","MonitoringDetailsComponent","routes","path","component","showMenu","redirectTo","pathMatch","canActivate","privileges","AppRoutingModule","forRoot","useHash","filter","map","NavigationEnd","SecurityContext","image","imageMobile","AppComponent","titleService","sanitizer","activatedRoute","changeDetector","appTitle","events","child","firstChild","childImage","childImageMobile","splitterOrVerifier","url","ttl","b64Content","sanitize","URL","currentLang","use","setTitle","ngAfterContentChecked","detectChanges","Title","DomSanitizer","ChangeDetectorRef","AppComponent_Template","AppComponent_app_menu_1_Template","BrowserModule","ServicesModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","DragDropModule","BrowserAnimationsModule","TranslateLoader","TranslateModule","HTTP_INTERCEPTORS","HttpClientModule","TranslateHttpLoader","FormsModule","ReactiveFormsModule","ToastrModule","EditorModule","SettingsRoutingModule","FilterPipe","NgxFileDragDropModule","NgxMatSelectSearchModule","NgsgModule","NgxChartsModule","DocumentTypeFactoryComponent","DocumentTypeComponent","MenuComponent","UsersListComponent","SettingsComponent","MatPaginatorIntl","CustomMatPaginatorIntl","AboutUsComponent","CreateUserComponent","UpdateUserComponent","RolesListComponent","UpdateRoleComponent","CreateRoleComponent","LoginMethodsComponent","LoaderComponent","CustomFieldsComponent","FormListComponent","FormBuilderComponent","CreateOutputComponent","OutputsListComponent","HighlightPipe","UpdateOutputComponent","UpdatePositionsMaskComponent","PositionsMaskListComponent","CreatePositionsMaskComponent","VerifierStatusUpdateComponent","SeparatorComponent","SplitterUpdateOutputComponent","SplitterCreateOutputComponent","SplitterOutputListComponent","SplitterFormBuilderComponent","SplitterUpdateStatusComponent","SplitterFormListComponent","CreateDoctypeComponent","ListDoctypeComponent","CreateFolderDoctypeComponent","ListVerifierAiModelComponent","CreateVerifierAiModelComponent","UpdateVerifierAiModelComponent","ListSplitterAiModelComponent","CreateSplitterAiModelComponent","UpdateSplitterAiModelComponent","ConfigurationsComponent","DocserversComponent","RegexComponent","HintServiceComponent","ErrorServiceComponent","MatSelectCountryModule","MiddlewareComponent","VariousSettingsVerifierComponent","MailCollectComponent","UserQuotaComponent","SettingsMenuComponent","WorkflowListComponent","WorkflowBuilderComponent","WorkflowListSplitterComponent","WorkflowBuilderSplitterComponent","TimeoutInterceptor","CodeEditorModule","createTranslateLoader","AppModule","bootstrap","appearance","multi","maxOpened","enableHtml","preventDuplicates","defaultLanguage","loader","useFactory","declarations","getRangeLabel","page","Math","max","startIndex","endIndex","min","nbPage","ceil","getAndInitTranslations","itemsPerPageLabel","translateLabels","changes","next","translated","nextPageLabel","firstPageLabel","lastPageLabel","previousPageLabel","ɵɵinject","factory","ɵfac","customId","fqdn","production","version","require","Error500Component_Template","ɵɵsanitizeHtml","ɵɵsanitizeUrl","emailControl","minLength","sending","smtpStatus","getCurrentLocale","valid","currentUrl","window","location","userId","ForgotPasswordComponent_Template","ForgotPasswordComponent_div_0_Template","ForgotPasswordComponent_app_loader_2_Template","ForgotPasswordComponent_app_hint_7_Template","ForgotPasswordComponent_app_hint_error_8_Template","ForgotPasswordComponent_Template_form_ngSubmit_10_listener","ForgotPasswordComponent_mat_error_17_Template","ForgotPasswordComponent_span_20_Template","ForgotPasswordComponent_i_21_Template","startWith","DatePipe","moment","HistoryComponent_ng_container_13_mat_form_field_2_Template_mat_select_valueChange_4_listener","_r2","HistoryComponent_ng_container_13_mat_form_field_2_Template_mat_select_selectionChange_4_listener","setSelectedSubModule","HistoryComponent_ng_container_13_mat_form_field_2_mat_option_5_Template","option_r6","HistoryComponent_ng_container_13_mat_form_field_3_Template_mat_select_valueChange_4_listener","_r5","HistoryComponent_ng_container_13_mat_form_field_3_Template_mat_select_selectionChange_4_listener","setSelectedModule","HistoryComponent_ng_container_13_mat_form_field_3_mat_option_5_Template","option_r8","ɵɵpipeBind2","username","toHighlight","HistoryComponent_ng_container_13_mat_form_field_4_mat_hint_5_Template","HistoryComponent_ng_container_13_mat_form_field_4_Template_mat_autocomplete_optionSelected_6_listener","setSelectedUser","option","HistoryComponent_ng_container_13_mat_form_field_4_mat_option_8_Template","autocomplete_r9","displayFn","filteredUsers","HistoryComponent_ng_container_13_mat_form_field_1_Template","HistoryComponent_ng_container_13_mat_form_field_2_Template","HistoryComponent_ng_container_13_mat_form_field_3_Template","HistoryComponent_ng_container_13_mat_form_field_4_Template","element_r11","element_r12","element_r13","date","element_r14","element_r15","element_r16","datePipe","userSelected","moduleSelected","subModuleSelected","_filter","array","filterValue","toLowerCase","indexOf","user","getUserFromLocal","users","userHistory","history","_user","user_id","loadHistory","allHistory","history_module","format","localeData","longDateFormat","history_date","transform","resetPaginator","subModule","resetFilter","lastname","firstname","user_info","features","ɵɵProvidersFeature","HistoryComponent_Template","HistoryComponent_div_2_Template","HistoryComponent_ng_container_13_Template","HistoryComponent_Template_div_click_14_listener","HistoryComponent_Template_mat_table_matSortChange_19_listener","HistoryComponent_mat_header_cell_21_Template","HistoryComponent_mat_cell_22_Template","HistoryComponent_mat_header_cell_24_Template","HistoryComponent_mat_cell_25_Template","HistoryComponent_mat_header_cell_27_Template","HistoryComponent_mat_cell_28_Template","HistoryComponent_mat_header_cell_30_Template","HistoryComponent_mat_cell_31_Template","HistoryComponent_mat_header_cell_33_Template","HistoryComponent_mat_cell_34_Template","HistoryComponent_mat_header_cell_36_Template","HistoryComponent_mat_cell_37_Template","HistoryComponent_mat_header_cell_39_Template","HistoryComponent_mat_cell_40_Template","HistoryComponent_mat_header_row_41_Template","HistoryComponent_mat_row_42_Template","HistoryComponent_Template_mat_paginator_page_43_listener","HomeComponent_mat_card_1_Template_a_click_1_listener","_r1","getUnseenBatches","HomeComponent_mat_card_2_Template_a_click_1_listener","unseenBatches","splitter","verifier","checkConnection","token","getToken","logout","HomeComponent_Template","HomeComponent_mat_card_1_Template","HomeComponent_mat_card_2_Template","HomeComponent_mat_card_3_Template","LoaderComponent_Template","loginImage","loginTopMessage","getErrorMessage","ɵɵtextInterpolate2","enableLoginMethodName","configService","loginBottomMessage","isConnectionBtnDisabled","processLogin","showPassword","defaultRoute","loginForm","group","password","configuration","bypassSecurityTrustHtml","login_method_name","currentBabelLang","observe","passwordAlert","body","setUser","setTokens","btoa","JSON","stringify","getUser","readConfig","cleanCachedUrl","hasError","ConfigService","LoginComponent_Template","LoginComponent_app_loader_1_Template","LoginComponent_div_3_Template","LoginComponent_Template_form_ngSubmit_9_listener","LoginComponent_mat_error_16_Template","LoginComponent_Template_mat_icon_click_23_listener","LoginComponent_mat_error_25_Template","LoginComponent_mat_hint_26_Template","LoginComponent_span_28_Template","LoginComponent_i_29_Template","LoginComponent_div_30_Template","controls","LogoutComponent_Template","styles","getSplitterOrVerifier","MenuComponent_button_18_Template_button_click_0_listener","goToUpload","MenuComponent_div_29_Template_a_click_1_listener","closeProfileDropDown","MenuComponent_div_29_Template_a_click_4_listener","hideProfileDropdown","MenuComponent_div_30_a_5_Template_a_click_0_listener","mobileMenuState","MenuComponent_div_30_a_6_Template_a_click_0_listener","MenuComponent_div_30_Template_a_click_2_listener","MenuComponent_div_30_a_5_Template","MenuComponent_div_30_a_6_Template","MenuComponent_div_30_Template_a_click_7_listener","defaultModule","setTimeout","getLocales","k","n","addEventListener","e","key","audio","Audio","konami","getElementById","style","display","transition","opacity","volume","play","onScreenClick","clickedElement","userMenu","contains","toggleProfileDropdown","toggleMobileMenu","Location","hostBindings","MenuComponent_HostBindings","MenuComponent_click_HostBindingHandler","ɵɵresolveDocument","MenuComponent_Template_button_click_4_listener","MenuComponent__svg_svg_5_Template","MenuComponent__svg_svg_6_Template","MenuComponent_button_17_Template","MenuComponent_button_18_Template","MenuComponent_div_20_Template","MenuComponent_div_21_Template","MenuComponent_div_22_Template","MenuComponent_div_23_Template","MenuComponent_div_24_Template","MenuComponent_div_25_Template","MenuComponent_Template_div_click_26_listener","MenuComponent_span_27_Template","MenuComponent_div_29_Template","MenuComponent_div_30_Template","switchMap","HttpHeaders","HttpRequest","sessionStorage","isRefreshing","isValidIP","str","arr","split","el","test","isValidFQDN","intercept","request","RegExp","currentUrlArray","i","isIp","isFQDN","currentCustom","oldUrl","newRequest","method","assign","handle","handle401Error","refreshToken","MonitoringDetailsComponent_div_19_span_4_span_2_Template_span_click_0_listener","splitterCpt","processData","time","MonitoringDetailsComponent_div_19_span_4_span_5_Template_span_click_0_listener","MonitoringDetailsComponent_div_19_span_4_span_2_Template","MonitoringDetailsComponent_div_19_span_4_a_3_Template","MonitoringDetailsComponent_div_19_span_4_a_4_Template","MonitoringDetailsComponent_div_19_span_4_span_5_Template","MonitoringDetailsComponent_div_19_span_2_Template","MonitoringDetailsComponent_div_19_span_3_Template","MonitoringDetailsComponent_div_19_span_4_Template","workflowLabel","step","message","MonitoringDetailsComponent_mat_cell_63_span_1_Template","MonitoringDetailsComponent_mat_cell_63_span_2_Template","_this","_asyncToGenerator","processId","loadProcess","timer","setInterval","clearInterval","ngOnDestroy","_this2","process","now","Date","oneDay","diffDays","abs","getTime","workflow_id","listOfSteps","steps","hours","minutes","seconds","seconds_splitted","microseconds","elapsedTimeMessage","allSteps","MonitoringDetailsComponent_Template","MonitoringDetailsComponent_Template_div_click_3_listener","back","MonitoringDetailsComponent_div_10_Template","MonitoringDetailsComponent_div_19_Template","MonitoringDetailsComponent_span_21_Template","MonitoringDetailsComponent_div_44_Template","MonitoringDetailsComponent_div_45_Template","MonitoringDetailsComponent_div_46_Template","MonitoringDetailsComponent_div_47_Template","MonitoringDetailsComponent_mat_header_cell_53_Template","MonitoringDetailsComponent_mat_cell_54_Template","MonitoringDetailsComponent_mat_header_cell_56_Template","MonitoringDetailsComponent_mat_cell_57_Template","MonitoringDetailsComponent_mat_header_cell_59_Template","MonitoringDetailsComponent_mat_cell_60_Template","MonitoringDetailsComponent_mat_header_cell_62_Template","MonitoringDetailsComponent_mat_cell_63_Template","MonitoringDetailsComponent_mat_header_row_64_Template","MonitoringDetailsComponent_mat_row_65_Template","MonitoringDetailsComponent_Template_mat_paginator_page_66_listener","creation_date_formated","end_date_formated","MonitoringListComponent_ng_container_13_mat_form_field_1_Template_mat_select_valueChange_4_listener","MonitoringListComponent_ng_container_13_mat_form_field_1_Template_mat_select_selectionChange_4_listener","updateData","MonitoringListComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","MonitoringListComponent_ng_container_13_mat_form_field_1_Template","MonitoringListComponent_mat_cell_37_span_1_Template","MonitoringListComponent_mat_cell_37_span_2_Template","MonitoringListComponent_mat_cell_37_span_3_Template","MonitoringListComponent_mat_cell_37_span_4_Template","allProcessData","statusSelected","loadMonitoring","numberOfSteps","last_message","creation_date","end_date","MonitoringListComponent_Template","MonitoringListComponent_div_6_Template","MonitoringListComponent_ng_container_13_Template","MonitoringListComponent_Template_div_click_14_listener","MonitoringListComponent_Template_mat_table_matSortChange_19_listener","MonitoringListComponent_mat_header_cell_21_Template","MonitoringListComponent_mat_cell_22_Template","MonitoringListComponent_mat_header_cell_24_Template","MonitoringListComponent_mat_cell_25_Template","MonitoringListComponent_mat_header_cell_27_Template","MonitoringListComponent_mat_cell_28_Template","MonitoringListComponent_mat_header_cell_30_Template","MonitoringListComponent_mat_cell_31_Template","MonitoringListComponent_mat_header_cell_33_Template","MonitoringListComponent_mat_cell_34_Template","MonitoringListComponent_mat_header_cell_36_Template","MonitoringListComponent_mat_cell_37_Template","MonitoringListComponent_mat_header_row_38_Template","MonitoringListComponent_mat_row_39_Template","MonitoringListComponent_Template_mat_paginator_page_40_listener","NotFoundComponent_Template","profile","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_7_Template_mat_icon_click_0_listener","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_8_Template_mat_icon_click_0_listener","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_error_6_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_7_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_mat_icon_8_Template","disablePasswordModification","option_r7","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_Template_mat_select_valueChange_4_listener","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_mat_option_5_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_1_Template","UserProfileComponent_div_0_ng_container_7_mat_form_field_2_Template","UserProfileComponent_div_0_span_3_Template","UserProfileComponent_div_0_span_4_Template","UserProfileComponent_div_0_Template_form_ngSubmit_6_listener","UserProfileComponent_div_0_ng_container_7_Template","profileForm","privilegeService","passwordVerification","roles","login_methods","enabled","method_name","loggedUserId","navigateByUrl","editable","checkPasswordValidityUnique","PasswordVerificationService","UserProfileComponent_Template","UserProfileComponent_div_0_Template","ResetPasswordComponent_ng_container_14_Template_mat_icon_click_7_listener","ResetPasswordComponent_ng_container_14_mat_hint_9_Template","resetToken","passwordForm","queryParams","checkPasswordValidity","passwordConfirm","newPassword","ResetPasswordComponent_Template","ResetPasswordComponent_div_0_Template","ResetPasswordComponent_app_loader_2_Template","ResetPasswordComponent_app_hint_9_Template","ResetPasswordComponent_app_hint_10_Template","ResetPasswordComponent_app_hint_11_Template","ResetPasswordComponent_Template_form_ngSubmit_13_listener","ResetPasswordComponent_ng_container_14_Template","ɵɵpureFunction1","passwordRules","specialCharMandatory","uppercaseMandatory","numberMandatory","currentVersion","lastVersion","isProd","init","AboutUsComponent_Template","AboutUsComponent_div_5_Template","AboutUsComponent_Template_button_click_8_listener","minimizeSideNav","AboutUsComponent_span_12_Template","AboutUsComponent_span_13_Template","AboutUsComponent_span_14_Template","AboutUsComponent_span_15_Template","sidenav_r3","opened","lang_r6","ConfigurationsComponent_div_19_div_23_Template_mat_select_selectionChange_5_listener","changeLocale","ConfigurationsComponent_div_19_div_23_Template_mat_select_valueChange_5_listener","ConfigurationsComponent_div_19_div_23_mat_option_6_Template","ConfigurationsComponent_div_19_div_23_i_7_Template","localeLoading","ConfigurationsComponent_div_19_div_24_Template_button_click_8_listener","updateLoginTopText","ConfigurationsComponent_div_19_div_24_Template_button_click_18_listener","updateLoginBottomText","_c1","colorsMap","ConfigurationsComponent_div_19_div_50_Template_i_click_2_listener","copyToken","field_r10","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_5_Template_mat_icon_click_0_listener","_r12","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_Template_input_keyup_4_listener","_r11","smtpForm","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_5_Template","disableField","unit_r13","option_r15","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_Template_mat_select_selectionChange_4_listener","_r14","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_mat_option_5_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_div_1_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_2_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_mat_form_field_3_Template","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_ng_container_1_Template","unit","ConfigurationsComponent_div_19_ng_container_87_ng_container_6_Template","element_r17","element_r18","description","element_r19","element_r21","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template_mat_select_ngModelChange_1_listener","_r22","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template_mat_select_selectionChange_1_listener","updateValue","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template_input_keyup_enter_1_listener","_r23","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template_input_focusout_1_listener","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template_input_keyup_enter_1_listener","_r24","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template_input_focusout_1_listener","option_r26","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_3_Template_mat_select_ngModelChange_1_listener","_r25","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_3_mat_option_2_Template","options","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_0_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_1_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_2_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_mat_form_field_3_Template","ConfigurationsComponent_div_19_mat_cell_116_Template_mat_cell_click_0_listener","_r20","updateMode","ConfigurationsComponent_div_19_mat_cell_116_ng_container_1_Template","ConfigurationsComponent_div_19_mat_cell_116_ng_template_2_Template","ɵɵtemplateRefExtractor","update_r27","ConfigurationsComponent_div_19_mat_cell_119_button_1_Template_button_click_0_listener","_r28","element_r29","ConfigurationsComponent_div_19_mat_cell_119_button_2_Template_button_click_0_listener","_r30","ConfigurationsComponent_div_19_mat_cell_119_button_2_i_2_Template","ConfigurationsComponent_div_19_mat_cell_119_button_2_i_3_Template","updateLoading","ConfigurationsComponent_div_19_mat_cell_119_button_1_Template","ConfigurationsComponent_div_19_mat_cell_119_button_2_Template","ConfigurationsComponent_div_19_mat_paginator_122_Template_mat_paginator_page_0_listener","_r31","_c2","ConfigurationsComponent_div_19_Template_mat_tab_group_selectedTabChange_1_listener","onTabChanged","ConfigurationsComponent_div_19_Template_img_click_15_listener","logo_r4","ɵɵreference","onClick","ConfigurationsComponent_div_19_Template_input_change_16_listener","upload","ConfigurationsComponent_div_19_div_23_Template","ConfigurationsComponent_div_19_div_24_Template","ConfigurationsComponent_div_19_Template_mat_autocomplete_optionSelected_42_listener","ConfigurationsComponent_div_19_mat_option_44_Template","ConfigurationsComponent_div_19_Template_button_click_47_listener","generateAuthToken","ConfigurationsComponent_div_19_div_50_Template","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_56_listener","minLengthEnabled","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_56_listener","updatePasswordRules","ConfigurationsComponent_div_19_Template_input_ngModelChange_63_listener","ConfigurationsComponent_div_19_Template_input_change_63_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_65_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_65_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_69_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_69_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_ngModelChange_73_listener","ConfigurationsComponent_div_19_Template_mat_slide_toggle_change_73_listener","ConfigurationsComponent_div_19_ng_container_87_Template","ConfigurationsComponent_div_19_Template_button_click_90_listener","testSmtp","ConfigurationsComponent_div_19_span_91_Template","ConfigurationsComponent_div_19_span_92_Template","ConfigurationsComponent_div_19_Template_button_click_93_listener","updateSmtp","ConfigurationsComponent_div_19_Template_mat_table_matSortChange_101_listener","ConfigurationsComponent_div_19_mat_header_cell_103_Template","ConfigurationsComponent_div_19_mat_cell_104_Template","ConfigurationsComponent_div_19_mat_header_cell_106_Template","ConfigurationsComponent_div_19_mat_cell_107_Template","ConfigurationsComponent_div_19_mat_header_cell_109_Template","ConfigurationsComponent_div_19_mat_cell_110_Template","ConfigurationsComponent_div_19_mat_header_cell_112_Template","ConfigurationsComponent_div_19_mat_cell_113_Template","ConfigurationsComponent_div_19_mat_header_cell_115_Template","ConfigurationsComponent_div_19_mat_cell_116_Template","ConfigurationsComponent_div_19_mat_header_cell_118_Template","ConfigurationsComponent_div_19_mat_cell_119_Template","ConfigurationsComponent_div_19_mat_header_row_120_Template","ConfigurationsComponent_div_19_mat_row_121_Template","ConfigurationsComponent_div_19_mat_paginator_122_Template","selectedIndex","tokenExpirationControl","autocomplete_r32","updating","emailTestControl","units","smtpFormValid","configurations","tokenUserControl","allConfigurations","config","loadConfigurations","disable","enable","index","navigator","clipboard","writeText","args","logo","ret","enableUnit","find","showSuccess","fileInput","files","reader","FileReader","readAsDataURL","onload","skipLocationChange","label_type","searchConfiguration","ConfigurationsComponent_Template","ConfigurationsComponent_div_5_Template","ConfigurationsComponent_Template_button_click_8_listener","ConfigurationsComponent_Template_input_keyup_17_listener","ConfigurationsComponent_div_19_Template","sidenav_r33","FormGroup","moveItemInArray","transferArrayItem","option_r2","CustomFieldsComponent_div_26_div_1_mat_form_field_1_span_7_mat_option_1_Template","input_r3","CustomFieldsComponent_div_26_div_1_mat_form_field_1_span_7_Template","autocomplete_r4","opt_r5","CustomFieldsComponent_div_26_div_1_mat_form_field_2_ng_container_5_Template","opt_r6","CustomFieldsComponent_div_26_div_1_mat_form_field_3_ng_container_5_Template","ctx_r6","CustomFieldsComponent_div_26_div_1_mat_form_field_1_Template","CustomFieldsComponent_div_26_div_1_mat_form_field_2_Template","CustomFieldsComponent_div_26_div_1_mat_form_field_3_Template","CustomFieldsComponent_div_26_div_1_Template","limit","displayInput","conditionalControl","opt_r12","CustomFieldsComponent_div_27_div_8_mat_form_field_11_Template_mat_select_valueChange_4_listener","_r10","option_r11","CustomFieldsComponent_div_27_div_8_mat_form_field_11_mat_option_5_Template","CustomFieldsComponent_div_27_div_8_mat_form_field_11_Template","CustomFieldsComponent_div_27_div_8_mat_form_field_12_Template","CustomFieldsComponent_div_27_div_8_span_13_Template","CustomFieldsComponent_div_27_div_8_Template_div_click_14_listener","optionIndex_r13","deleteSelectOption","ɵɵpureFunction2","displayConditional","CustomFieldsComponent_div_27_mat_checkbox_4_Template","CustomFieldsComponent_div_27_Template_div_cdkDropListDropped_6_listener","dropSelectOption","CustomFieldsComponent_div_27_div_7_Template","CustomFieldsComponent_div_27_div_8_Template","CustomFieldsComponent_div_27_Template_div_click_9_listener","addSelectOption","selectOptions","opt_r15","CustomFieldsComponent_div_28_mat_form_field_42_Template_textarea_keyup_4_listener","_r16","checkRegex","regexRemoveKeyWordControl","CustomFieldsComponent_div_28_Template_mat_slide_toggle_change_4_listener","CustomFieldsComponent_div_28_Template_mat_select_selectionChange_27_listener","CustomFieldsComponent_div_28_mat_option_28_Template","CustomFieldsComponent_div_28_Template_input_keyup_33_listener","checkCharMin","CustomFieldsComponent_div_28_app_hint_36_Template","CustomFieldsComponent_div_28_Template_textarea_keyup_41_listener","CustomFieldsComponent_div_28_mat_form_field_42_Template","CustomFieldsComponent_div_28_Template_input_keyup_47_listener","regexRemoveKeyWord","regexRemoveSpecialChar","regexRemoveSpaces","regexFormat","formats","regexCharMinControl","regexControl","regexTestControl","regexResult","CustomFieldsComponent_button_30_Template_button_click_0_listener","_r17","addCustomField","CustomFieldsComponent_button_31_Template_button_click_0_listener","_r18","updateCustomOnSubmit","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_8_listener","i_r21","moveToActive","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_11_listener","item_r22","updateCustomField","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template_button_click_14_listener","deleteCustomField","CustomFieldsComponent_mat_tab_34_span_7_div_1_Template","parent_r23","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_8_listener","i_r25","moveToInactive","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_11_listener","item_r26","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template_button_click_14_listener","CustomFieldsComponent_mat_tab_34_span_13_div_1_Template","CustomFieldsComponent_mat_tab_34_Template_div_cdkDropListDropped_6_listener","_r19","dropCustomField","CustomFieldsComponent_mat_tab_34_span_7_Template","CustomFieldsComponent_mat_tab_34_Template_div_cdkDropListDropped_12_listener","CustomFieldsComponent_mat_tab_34_span_13_Template","inactiveFields","activeFields","update","isSplitter","inactiveOrActive","parent","addFieldInputs","field_id","controlType","autoComplete","class","unallowedFields","retrieveCustomFields","toFormGroup","match","previousContainer","container","previousIndex","currentIndex","enableCustomField","input","regex","tmp","colored","_return","newField","label_short","settings","metadata_key","idControl","labelControl","customFieldControl","customValueControl","displayChoicesList","displayRegex","optionIndex","addSelectOptionsToArgs","conditional_custom_field","conditional_custom_value","setErrors","conditional","resetForm","deleteCustom","customFieldId","activeOrInactive","object","custom_label","custom_field","oldList","newList","oldIndex","newIndex","updatedField","updateCustomId","customField","content","char_min","remove_spaces","remove_keyword","remove_special_char","remove_keyword_value","CustomFieldsComponent_Template","CustomFieldsComponent_div_5_Template","CustomFieldsComponent_Template_button_click_8_listener","CustomFieldsComponent_Template_div_click_22_listener","CustomFieldsComponent_div_26_Template","CustomFieldsComponent_div_27_Template","CustomFieldsComponent_div_28_Template","CustomFieldsComponent_button_30_Template","CustomFieldsComponent_button_31_Template","CustomFieldsComponent_mat_tab_34_Template","sidenav_r27","docserver_id","DocserversComponent_div_20_mat_cell_15_ng_template_2_Template_input_keyup_enter_1_listener","DocserversComponent_div_20_mat_cell_15_ng_template_2_Template_input_focusout_1_listener","DocserversComponent_div_20_mat_cell_15_Template_mat_cell_click_0_listener","DocserversComponent_div_20_mat_cell_15_ng_container_1_Template","DocserversComponent_div_20_mat_cell_15_ng_template_2_Template","update_r10","DocserversComponent_div_20_mat_cell_18_button_1_Template_button_click_0_listener","DocserversComponent_div_20_mat_cell_18_button_2_Template_button_click_0_listener","_r13","DocserversComponent_div_20_mat_cell_18_button_2_i_2_Template","DocserversComponent_div_20_mat_cell_18_button_2_i_3_Template","DocserversComponent_div_20_mat_cell_18_button_1_Template","DocserversComponent_div_20_mat_cell_18_button_2_Template","DocserversComponent_div_20_mat_paginator_21_Template_mat_paginator_page_0_listener","DocserversComponent_div_20_Template_mat_table_matSortChange_3_listener","DocserversComponent_div_20_mat_header_cell_5_Template","DocserversComponent_div_20_mat_cell_6_Template","DocserversComponent_div_20_mat_header_cell_8_Template","DocserversComponent_div_20_mat_cell_9_Template","DocserversComponent_div_20_mat_header_cell_11_Template","DocserversComponent_div_20_mat_cell_12_Template","DocserversComponent_div_20_mat_header_cell_14_Template","DocserversComponent_div_20_mat_cell_15_Template","DocserversComponent_div_20_mat_header_cell_17_Template","DocserversComponent_div_20_mat_cell_18_Template","DocserversComponent_div_20_mat_header_row_19_Template","DocserversComponent_div_20_mat_row_20_Template","DocserversComponent_div_20_mat_paginator_21_Template","docservers","allDocservers","loadDocservers","searchDocservers","DocserversComponent_Template","DocserversComponent_div_5_Template","DocserversComponent_Template_button_click_8_listener","DocserversComponent_Template_input_keyup_17_listener","DocserversComponent_div_20_Template","sidenav_r15","LoginMethodsComponent_mat_tab_18_div_3_Template_mat_slide_toggle_change_1_listener","method_r3","ctx_r3","changedDefaultMethod","isDefaultChecked","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_1_mat_option_5_Template_mat_option_onSelectionChange_0_listener","field_r7","updateTypeAd","option_r9","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_1_Template_mat_select_valueChange_4_listener","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_1_mat_option_5_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_2_Template_mat_icon_click_6_listener","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_1_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_2_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_mat_form_field_3_Template","option_r13","LoginMethodsComponent_mat_tab_18_div_4_ng_container_22_mat_form_field_1_Template_mat_select_valueChange_4_listener","field_r12","LoginMethodsComponent_mat_tab_18_div_4_ng_container_22_mat_form_field_1_mat_option_5_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_22_mat_form_field_1_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_22_mat_form_field_2_Template","LoginMethodsComponent_mat_tab_18_div_4_Template_mat_slide_toggle_change_1_listener","changedLdapMethod","LoginMethodsComponent_mat_tab_18_div_4_ng_template_9_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_10_Template","LoginMethodsComponent_mat_tab_18_div_4_Template_button_click_12_listener","checkLdapConnexion","LoginMethodsComponent_mat_tab_18_div_4_span_13_Template","LoginMethodsComponent_mat_tab_18_div_4_i_14_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_template_20_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_container_22_Template","LoginMethodsComponent_mat_tab_18_div_4_ng_template_32_Template","LoginMethodsComponent_mat_tab_18_div_4_Template_button_click_41_listener","ldapSynchronization","LoginMethodsComponent_mat_tab_18_div_4_span_42_Template","LoginMethodsComponent_mat_tab_18_div_4_i_43_Template","LoginMethodsComponent_mat_tab_18_div_4_Template_button_click_44_listener","saveLoginMethodConfig","isLdapChecked","connectionFormGroup","isProcessConnectionLaunched","isNextBtnDisabled","synchroparamsFormGroup","isLaunchBtnDisabled","isProcessLaunched","isLaunchBtnClicked","isSaveBtnDisabled","LoginMethodsComponent_mat_tab_18_div_3_Template","LoginMethodsComponent_mat_tab_18_div_4_Template","_formBuilder","connexionServerStatus","synchroUsersStatus","loginMethods","configs","ldap_configurations","isUserInput","source","loginMethodName","enableLoginMethod","disableLoginMethod","server_data","synchronizationData","methodDataToSave","LoginMethodsComponent_Template","LoginMethodsComponent_div_5_Template","LoginMethodsComponent_Template_button_click_8_listener","LoginMethodsComponent_mat_tab_18_Template","sidenav_r14","getNameOfProcess","process_r2","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_2_Template_i_click_0_listener","edit_name","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_3_Template_i_click_0_listener","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_4_Template_i_click_0_listener","disableConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_5_Template_i_click_0_listener","enableConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_6_Template_i_click_0_listener","duplicateConfirmDialog","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_7_Template_i_click_0_listener","new_process_name_r10","updateProcessName","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_Template_input_focusout_3_listener","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_7_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_i_8_Template","loadingProcessName","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_span_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_3_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_4_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_i_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_div_7_Template","processIsEnabled","exists","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template_input_focusout_3_listener","new_process_name_input_r13","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template_i_click_7_listener","MailCollectComponent_div_17_mat_tab_2_ng_template_1_span_0_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_ng_template_1_Template","input_r14","field_r15","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_6_Template_mat_icon_click_0_listener","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_Template_input_keyup_4_listener","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_error_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_mat_icon_6_Template","option_r19","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template_input_keyup_4_listener","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_span_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_mat_error_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template_mat_autocomplete_optionSelected_7_listener","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_mat_option_9_Template","autocomplete_r20","option_r22","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_Template_mat_select_selectionChange_4_listener","_r21","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_mat_option_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_mat_error_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_div_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_3_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_mat_form_field_4_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_ng_container_1_Template","unit_r23","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_Template_button_click_4_listener","retrieveFolders","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_span_5_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_i_6_Template","folderLoading","MailCollectComponent_div_17_mat_tab_2_ng_container_3_ng_container_6_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_span_7_Template","MailCollectComponent_div_17_mat_tab_2_button_5_Template_button_click_0_listener","updateProcess","MailCollectComponent_div_17_mat_tab_2_button_5_span_1_Template","MailCollectComponent_div_17_mat_tab_2_button_5_i_2_Template","formValid","processLoading","MailCollectComponent_div_17_mat_tab_2_button_6_Template_button_click_0_listener","_r26","createProcess","MailCollectComponent_div_17_mat_tab_2_button_6_span_1_Template","MailCollectComponent_div_17_mat_tab_2_button_6_i_2_Template","MailCollectComponent_div_17_mat_tab_2_ng_template_1_Template","MailCollectComponent_div_17_mat_tab_2_ng_container_3_Template","MailCollectComponent_div_17_mat_tab_2_button_5_Template","MailCollectComponent_div_17_mat_tab_2_button_6_Template","MailCollectComponent_div_17_mat_tab_2_Template","processes","allVerifierWorkflows","allSplitterWorkflows","processesMail","allprocessesMail","defaultProcessData","disabled","folders","workflows","new_process_name","updateDatabase","oldProcessName","input_label","addProcess","newProcess","process_default","resetDefaultData","processName","duplicateProcess","element_child","disableProcess","enableProcess","deleteProcess","port","login","hostname","secured_connection","MailCollectComponent_Template","MailCollectComponent_div_5_Template","MailCollectComponent_Template_button_click_8_listener","MailCollectComponent_Template_button_click_13_listener","MailCollectComponent_div_17_Template","regex_id","RegexComponent_div_20_mat_cell_12_ng_template_2_Template_input_keyup_enter_1_listener","RegexComponent_div_20_mat_cell_12_ng_template_2_Template_input_focusout_1_listener","RegexComponent_div_20_mat_cell_12_Template_mat_cell_click_0_listener","RegexComponent_div_20_mat_cell_12_ng_container_1_Template","RegexComponent_div_20_mat_cell_12_ng_template_2_Template","update_r9","RegexComponent_div_20_mat_cell_15_button_1_Template_button_click_0_listener","RegexComponent_div_20_mat_cell_15_button_2_Template_button_click_0_listener","RegexComponent_div_20_mat_cell_15_button_2_i_2_Template","RegexComponent_div_20_mat_cell_15_button_2_i_3_Template","RegexComponent_div_20_mat_cell_15_button_1_Template","RegexComponent_div_20_mat_cell_15_button_2_Template","RegexComponent_div_20_mat_paginator_18_Template_mat_paginator_page_0_listener","RegexComponent_div_20_Template_mat_table_matSortChange_3_listener","RegexComponent_div_20_mat_header_cell_5_Template","RegexComponent_div_20_mat_cell_6_Template","RegexComponent_div_20_mat_header_cell_8_Template","RegexComponent_div_20_mat_cell_9_Template","RegexComponent_div_20_mat_header_cell_11_Template","RegexComponent_div_20_mat_cell_12_Template","RegexComponent_div_20_mat_header_cell_14_Template","RegexComponent_div_20_mat_cell_15_Template","RegexComponent_div_20_mat_header_row_16_Template","RegexComponent_div_20_mat_row_17_Template","RegexComponent_div_20_mat_paginator_18_Template","allRegex","loadRegex","searchRegex","RegexComponent_Template","RegexComponent_div_5_Template","RegexComponent_Template_button_click_8_listener","RegexComponent_Template_input_keyup_17_listener","RegexComponent_div_20_Template","CreateRoleComponent_ng_container_17_mat_form_field_1_mat_error_6_Template","maxLength","CreateRoleComponent_ng_container_17_mat_form_field_2_mat_option_5_Template","CreateRoleComponent_ng_container_17_mat_form_field_2_mat_error_6_Template","CreateRoleComponent_ng_container_17_mat_form_field_1_Template","CreateRoleComponent_ng_container_17_mat_form_field_2_Template","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_button_3_Template_button_click_0_listener","authorizedRoles_r7","toggle","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_Template_mat_slide_toggle_change_0_listener","changePrivilege","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_button_3_Template","privilege_r8","CreateRoleComponent_mat_tab_group_23_mat_tab_1_mat_slide_toggle_2_Template","parent_r9","getChildsByParent","CreateRoleComponent_mat_tab_group_23_mat_tab_1_Template","CreateRoleComponent_mat_checkbox_42_Template_mat_checkbox_change_0_listener","assignRoleOption_r11","updateAssignRoles","assignRoles","rolePrivileges","roleForm","role","element2","newRoleId","privilegeId","found","privilege","checked","selectAllAssignRoles","check","CreateRoleComponent_Template","CreateRoleComponent_div_5_Template","CreateRoleComponent_Template_button_click_8_listener","CreateRoleComponent_Template_form_ngSubmit_16_listener","CreateRoleComponent_ng_container_17_Template","CreateRoleComponent_mat_tab_group_23_Template","CreateRoleComponent_Template_button_click_25_listener","CreateRoleComponent_Template_button_click_36_listener","CreateRoleComponent_Template_button_click_39_listener","CreateRoleComponent_mat_checkbox_42_Template","CreateRoleComponent_span_43_Template","sidenav_r12","RolesListComponent_mat_cell_27_span_1_Template","RolesListComponent_mat_cell_27_span_2_Template","RolesListComponent_mat_cell_30_button_1_Template_button_click_0_listener","ctx_r8","RolesListComponent_mat_cell_30_button_2_Template_button_click_0_listener","RolesListComponent_mat_cell_30_button_1_Template","RolesListComponent_mat_cell_30_button_2_Template","RolesListComponent_mat_cell_30_Template_button_click_3_listener","loadRoles","roleId","deleteRole","disableRole","enableRole","RolesListComponent_Template","RolesListComponent_div_5_Template","RolesListComponent_Template_button_click_8_listener","RolesListComponent_Template_mat_table_matSortChange_15_listener","RolesListComponent_mat_header_cell_17_Template","RolesListComponent_mat_cell_18_Template","RolesListComponent_mat_header_cell_20_Template","RolesListComponent_mat_cell_21_Template","RolesListComponent_mat_header_cell_23_Template","RolesListComponent_mat_cell_24_Template","RolesListComponent_mat_header_cell_26_Template","RolesListComponent_mat_cell_27_Template","RolesListComponent_mat_header_cell_29_Template","RolesListComponent_mat_cell_30_Template","RolesListComponent_mat_header_row_31_Template","RolesListComponent_mat_row_32_Template","RolesListComponent_Template_mat_paginator_page_33_listener","UpdateRoleComponent_ng_container_18_span_1_mat_error_7_Template","UpdateRoleComponent_ng_container_18_mat_form_field_3_mat_option_5_Template","UpdateRoleComponent_ng_container_18_mat_form_field_3_mat_error_6_Template","UpdateRoleComponent_ng_container_18_span_1_Template","UpdateRoleComponent_ng_container_18_mat_slide_toggle_2_Template","UpdateRoleComponent_ng_container_18_mat_form_field_3_Template","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_button_3_Template_button_click_0_listener","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_Template_mat_slide_toggle_change_0_listener","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_button_3_Template","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_mat_slide_toggle_2_Template","UpdateRoleComponent_mat_tab_group_24_mat_tab_1_Template","UpdateRoleComponent_mat_checkbox_43_Template_mat_checkbox_change_0_listener","assignRolesOption_r11","parentLabel","privilegesLabel","UpdateRoleComponent_Template","UpdateRoleComponent_div_5_Template","UpdateRoleComponent_Template_button_click_8_listener","UpdateRoleComponent_span_12_Template","UpdateRoleComponent_strong_13_Template","UpdateRoleComponent_Template_form_ngSubmit_17_listener","UpdateRoleComponent_ng_container_18_Template","UpdateRoleComponent_mat_tab_group_24_Template","UpdateRoleComponent_Template_button_click_26_listener","UpdateRoleComponent_Template_button_click_37_listener","UpdateRoleComponent_Template_button_click_40_listener","UpdateRoleComponent_mat_checkbox_43_Template","UpdateRoleComponent_span_44_Template","UserQuotaComponent_div_14_Template_mat_slide_toggle_ngModelChange_5_listener","quotaEnabled","UserQuotaComponent_div_14_Template_input_ngModelChange_14_listener","quotaNumber","UserQuotaComponent_div_14_mat_option_20_Template","UserQuotaComponent_div_14_Template_button_click_27_listener","updateQuotaNumber","usersControlSelect","quotaUsersfiltered","usersList","quotaEmailDestControl","data_users","quota","email_dest","users_filtered","elem","trim","UserQuotaComponent_Template","UserQuotaComponent_div_5_Template","UserQuotaComponent_Template_button_click_8_listener","UserQuotaComponent_div_14_Template","sidenav_r5","CreateUserComponent_ng_container_19_mat_form_field_1_mat_icon_7_Template_mat_icon_click_0_listener","CreateUserComponent_ng_container_19_mat_form_field_1_mat_icon_8_Template_mat_icon_click_0_listener","CreateUserComponent_ng_container_19_mat_form_field_1_mat_error_6_Template","CreateUserComponent_ng_container_19_mat_form_field_1_mat_icon_7_Template","CreateUserComponent_ng_container_19_mat_form_field_1_mat_icon_8_Template","CreateUserComponent_ng_container_19_mat_form_field_2_Template_mat_select_valueChange_4_listener","CreateUserComponent_ng_container_19_mat_form_field_2_mat_option_5_Template","CreateUserComponent_ng_container_19_mat_form_field_2_mat_error_6_Template","CreateUserComponent_ng_container_19_mat_form_field_1_Template","CreateUserComponent_ng_container_19_mat_form_field_2_Template","CreateUserComponent_mat_list_34_mat_list_item_1_Template_mat_list_item_click_0_listener","customer_r10","updateUserCustomers","CreateUserComponent_mat_list_34_mat_list_item_1_span_5_Template","hasCustomer","CreateUserComponent_mat_list_34_mat_list_item_1_Template","CreateUserComponent_mat_list_38_mat_list_item_1_Template_mat_list_item_click_0_listener","form_r12","updateUserForms","CreateUserComponent_mat_list_38_mat_list_item_1_span_5_Template","hasForm","CreateUserComponent_mat_list_38_mat_list_item_1_Template","loadingCustomers","userFields","userForms","userCustomers","concat","_customerId","formId","_formId","CreateUserComponent_Template","CreateUserComponent_div_5_Template","CreateUserComponent_Template_button_click_8_listener","CreateUserComponent_Template_button_click_13_listener","sidenav2_r2","CreateUserComponent_Template_form_ngSubmit_18_listener","CreateUserComponent_ng_container_19_Template","CreateUserComponent_div_33_Template","CreateUserComponent_mat_list_34_Template","CreateUserComponent_div_37_Template","CreateUserComponent_mat_list_38_Template","sidenav_r13","ExportDialogComponent","role_label","UsersListComponent_mat_cell_45_span_1_Template","UsersListComponent_mat_cell_45_span_2_Template","UsersListComponent_mat_cell_48_button_1_Template_button_click_0_listener","UsersListComponent_mat_cell_48_button_2_Template_button_click_0_listener","UsersListComponent_mat_cell_48_button_1_Template","UsersListComponent_mat_cell_48_button_2_Template","UsersListComponent_mat_cell_48_Template_button_click_3_listener","row_r13","activeUser","userQuotaConfig","allUsers","loadUsers","getUserQuotaFiltered","searchUser","deleteUser","disableUser","enableUser","exportUsers","delimiter","csvContent","atob","encoded_file","blob","Blob","createObjectURL","importUsers","UsersListComponent_Template","UsersListComponent_div_5_Template","UsersListComponent_Template_button_click_8_listener","UsersListComponent_Template_button_click_13_listener","UsersListComponent_Template_button_click_16_listener","UsersListComponent_Template_input_keyup_24_listener","UsersListComponent_Template_mat_table_matSortChange_27_listener","UsersListComponent_mat_header_cell_29_Template","UsersListComponent_mat_cell_30_Template","UsersListComponent_mat_header_cell_32_Template","UsersListComponent_mat_cell_33_Template","UsersListComponent_mat_header_cell_35_Template","UsersListComponent_mat_cell_36_Template","UsersListComponent_mat_header_cell_38_Template","UsersListComponent_mat_cell_39_Template","UsersListComponent_mat_header_cell_41_Template","UsersListComponent_mat_cell_42_Template","UsersListComponent_mat_header_cell_44_Template","UsersListComponent_mat_cell_45_Template","UsersListComponent_mat_header_cell_47_Template","UsersListComponent_mat_cell_48_Template","UsersListComponent_mat_header_row_49_Template","UsersListComponent_mat_row_50_Template","UsersListComponent_Template_mat_paginator_page_51_listener","UsersListComponent_div_52_Template","field_r4","UpdateUserComponent_ng_container_20_span_1_mat_icon_8_Template_mat_icon_click_0_listener","UpdateUserComponent_ng_container_20_span_1_mat_icon_9_Template_mat_icon_click_0_listener","UpdateUserComponent_ng_container_20_span_1_mat_error_7_Template","UpdateUserComponent_ng_container_20_span_1_mat_icon_8_Template","UpdateUserComponent_ng_container_20_span_1_mat_icon_9_Template","UpdateUserComponent_ng_container_20_mat_form_field_2_Template_mat_select_valueChange_4_listener","UpdateUserComponent_ng_container_20_mat_form_field_2_mat_option_5_Template","UpdateUserComponent_ng_container_20_mat_form_field_2_mat_error_6_Template","UpdateUserComponent_ng_container_20_span_1_Template","UpdateUserComponent_ng_container_20_mat_form_field_2_Template","UpdateUserComponent_mat_list_35_mat_list_item_1_Template_mat_list_item_click_0_listener","UpdateUserComponent_mat_list_35_mat_list_item_1_span_5_Template","UpdateUserComponent_mat_list_35_mat_list_item_1_Template","UpdateUserComponent_mat_list_41_mat_list_item_1_Template_mat_list_item_click_0_listener","UpdateUserComponent_mat_list_41_mat_list_item_1_span_5_Template","UpdateUserComponent_mat_list_41_mat_list_item_1_Template","UpdateUserComponent_Template","UpdateUserComponent_div_5_Template","UpdateUserComponent_Template_button_click_8_listener","UpdateUserComponent_span_12_Template","UpdateUserComponent_Template_button_click_14_listener","sidenav2_r3","UpdateUserComponent_Template_form_ngSubmit_19_listener","UpdateUserComponent_ng_container_20_Template","UpdateUserComponent_div_34_Template","UpdateUserComponent_mat_list_35_Template","UpdateUserComponent_div_40_Template","UpdateUserComponent_mat_list_41_Template","parent_r2","ɵɵclassMapInterpolate1","setting_r5","action_r7","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_Template_button_click_1_listener","changeSetting","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_p_4_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_div_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_Template_button_click_3_listener","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_p_6_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_div_7_Template","getSettingsAction","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_mat_expansion_panel_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_Template_button_click_0_listener","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_p_3_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_button_0_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_div_1_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_ng_template_2_Template","noActions_r9","SettingsMenuComponent_mat_expansion_panel_5_Template_mat_expansion_panel_opened_0_listener","closeOtherParent","SettingsMenuComponent_mat_expansion_panel_5_Template_mat_expansion_panel_click_0_listener","setSelectedParentSettings","SettingsMenuComponent_mat_expansion_panel_5_span_4_Template","SettingsMenuComponent_mat_expansion_panel_5_ng_template_5_Template","SettingsMenuComponent_mat_expansion_panel_5_div_8_Template","i_r10","minimizeParent_r11","getSettings","inputs","SettingsMenuComponent_Template","SettingsMenuComponent_h3_0_Template","SettingsMenuComponent_ng_template_1_Template","SettingsMenuComponent_mat_expansion_panel_5_Template","minimize_r12","getSettingsParent","selectedSetting","getSelectedSetting","selectedParentSetting","getSelectedParentSetting","settingsFound","routeToGo","SettingsComponent_Template","encapsulation","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_7_Template","placeholder","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_7_Template","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_Template","CreateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_Template","form_r6","CreateSplitterAiModelComponent_div_15_div_8_div_3_button_8_Template_button_click_0_listener","trainFolder_r4","ctx_r7","openDoctypeTree","CreateSplitterAiModelComponent_div_15_div_8_div_3_button_8_span_3_Template","CreateSplitterAiModelComponent_div_15_div_8_div_3_Template_mat_select_ngModelChange_6_listener","CreateSplitterAiModelComponent_div_15_div_8_div_3_mat_option_7_Template","CreateSplitterAiModelComponent_div_15_div_8_div_3_button_8_Template","CreateSplitterAiModelComponent_div_15_div_8_Template_mat_checkbox_ngModelChange_1_listener","CreateSplitterAiModelComponent_div_15_div_8_div_3_Template","CreateSplitterAiModelComponent_div_15_ng_container_2_Template","CreateSplitterAiModelComponent_div_15_div_8_Template","AiModel","trainFolders","fields","retrieveDoctypes","retrieveForms","trainFolder","folder","isSelected","doctype","createModel","startTraining","totalTrainFolders","selectedTrainFolders","minProba","getValueFromForm","modelName","docs","min_proba","fieldId","height","selectedDoctype","doctype_label","CreateSplitterAiModelComponent_Template","CreateSplitterAiModelComponent_div_5_Template","CreateSplitterAiModelComponent_Template_button_click_8_listener","CreateSplitterAiModelComponent_div_15_Template","CreateSplitterAiModelComponent_Template_button_click_17_listener","sidenav_r9","interval","FileValidators","ListSplitterAiModelComponent_div_17_mat_cell_19_span_2_Template","ListSplitterAiModelComponent_div_17_mat_cell_19_i_3_Template","ListSplitterAiModelComponent_div_17_mat_cell_19_i_4_Template","ListSplitterAiModelComponent_div_17_mat_cell_22_Template_button_click_1_listener","selectRow","ListSplitterAiModelComponent_div_17_mat_cell_22_Template_button_click_4_listener","ListSplitterAiModelComponent_div_17_Template_mat_table_matSortChange_1_listener","ListSplitterAiModelComponent_div_17_mat_header_cell_3_Template","ListSplitterAiModelComponent_div_17_mat_cell_4_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_6_Template","ListSplitterAiModelComponent_div_17_mat_cell_7_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_9_Template","ListSplitterAiModelComponent_div_17_mat_cell_10_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_12_Template","ListSplitterAiModelComponent_div_17_mat_cell_13_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_15_Template","ListSplitterAiModelComponent_div_17_mat_cell_16_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_18_Template","ListSplitterAiModelComponent_div_17_mat_cell_19_Template","ListSplitterAiModelComponent_div_17_mat_header_cell_21_Template","ListSplitterAiModelComponent_div_17_mat_cell_22_Template","ListSplitterAiModelComponent_div_17_mat_header_row_23_Template","ListSplitterAiModelComponent_div_17_mat_row_24_Template","ListSplitterAiModelComponent_div_17_Template_mat_paginator_page_25_listener","modelsList","displayedColumns","prediction","ListSplitterAiModelComponent_div_24_Template_ngx_file_drag_drop_valueChanged_7_listener","checkFile","ListSplitterAiModelComponent_div_24_Template_button_click_10_listener","ListSplitterAiModelComponent_div_24_div_13_Template","ListSplitterAiModelComponent_div_24_mat_progress_bar_15_Template","clickedRow","isPredicting","showResponse","fileExtension","retrieveModels","size","inter","tmp_doc","model_training","model","unsubscribe","j","documents","train_time","accuracy","doctypes","row","fileName","pop","count","modelId","deleteModel","disp","res","onResponse","ListSplitterAiModelComponent_Template","ListSplitterAiModelComponent_div_5_Template","ListSplitterAiModelComponent_Template_button_click_8_listener","ListSplitterAiModelComponent_Template_button_click_13_listener","ListSplitterAiModelComponent_div_17_Template","ListSplitterAiModelComponent_div_24_Template","lastValueFrom","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_7_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_7_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_1_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_mat_form_field_2_Template","form_r5","UpdateSplitterAiModelComponent_div_15_div_4_button_9_Template_button_click_0_listener","UpdateSplitterAiModelComponent_div_15_div_4_button_9_span_3_Template","UpdateSplitterAiModelComponent_div_15_div_4_Template_mat_select_ngModelChange_7_listener","UpdateSplitterAiModelComponent_div_15_div_4_mat_option_8_Template","UpdateSplitterAiModelComponent_div_15_div_4_button_9_Template","UpdateSplitterAiModelComponent_div_15_ng_container_2_Template","UpdateSplitterAiModelComponent_div_15_div_4_Template","setFormValue","model_label","model_path","updateModel","modelPath","modelLabel","retrieve","trainDocument","UpdateSplitterAiModelComponent_Template","UpdateSplitterAiModelComponent_div_5_Template","UpdateSplitterAiModelComponent_Template_button_click_8_listener","UpdateSplitterAiModelComponent_div_15_Template","UpdateSplitterAiModelComponent_Template_button_click_17_listener","sidenav_r8","folder_r3","code","CreateFolderDoctypeComponent_div_32_mat_option_1_Template","selectedFormId","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_mat_hint_5_Template","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_mat_error_6_Template","CreateFolderDoctypeComponent_ng_container_34_mat_form_field_1_Template","CreateFolderDoctypeComponent_ng_container_34_div_2_Template","noMasterFolder","getLastFolderIndex","codeSelected","lastIndex","documentTypeFactoryComponent","treeDataObj","doctypeData","docType","startsWith","currentIdx","Number","getSelectedForm","addFolder","newFolder","getRawValue","reset","loadTree","viewQuery","CreateFolderDoctypeComponent_Query","CreateFolderDoctypeComponent_Template_button_click_7_listener","CreateFolderDoctypeComponent_Template_button_click_12_listener","CreateFolderDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_15_listener","CreateFolderDoctypeComponent_Template_form_ngSubmit_22_listener","CreateFolderDoctypeComponent_div_32_Template","CreateFolderDoctypeComponent_mat_error_33_Template","CreateFolderDoctypeComponent_ng_container_34_Template","sidenav_r6","CreateDoctypeComponent_div_29_mat_option_1_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_mat_hint_5_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_mat_error_6_Template","CreateDoctypeComponent_ng_container_31_mat_form_field_1_Template","CreateDoctypeComponent_ng_container_31_div_2_Template","addDocType","newDocType","lastIndexInFolder","toString","CreateDoctypeComponent_Query","CreateDoctypeComponent_Template_button_click_7_listener","CreateDoctypeComponent_Template_button_click_12_listener","CreateDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_15_listener","CreateDoctypeComponent_Template_form_ngSubmit_22_listener","CreateDoctypeComponent_div_29_Template","CreateDoctypeComponent_mat_error_30_Template","CreateDoctypeComponent_ng_container_31_Template","ListDoctypeComponent_div_33_mat_option_1_Template","ListDoctypeComponent_ng_container_34_mat_form_field_1_Template","ListDoctypeComponent_ng_container_34_div_2_Template","isDefault","updateDoctype","getOutPut","join","deleteDoctype","ListDoctypeComponent_Query","ListDoctypeComponent_div_5_Template","ListDoctypeComponent_Template_button_click_8_listener","ListDoctypeComponent_Template_button_click_13_listener","ListDoctypeComponent_Template_app_document_type_factory_selectedFormOutput_16_listener","ListDoctypeComponent_Template_app_document_type_factory_selectedDoctypeOutput_16_listener","ListDoctypeComponent_Template_form_ngSubmit_23_listener","ListDoctypeComponent_div_33_Template","ListDoctypeComponent_ng_container_34_Template","ListDoctypeComponent_Template_button_click_38_listener","option_r3","output_label","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_6_Template_span_click_0_listener","addOutput","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_7_Template_span_click_0_listener","cpt_r10","removeOutput","SplitterFormBuilderComponent_div_16_mat_form_field_17_Template_mat_select_ngModelChange_4_listener","SplitterFormBuilderComponent_div_16_mat_form_field_17_mat_option_5_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_6_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_span_7_Template","outputs","canRemove","display_r17","display_icon","inputMetadata_r18","invertFields_r19","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_41_Template_button_click_0_listener","_class_r21","category_r13","changeClass","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_41_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_44_Template_button_click_0_listener","_display_r23","changeDisplay","icon","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_44_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_47_Template_button_click_0_listener","required_r25","changeRequired","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_47_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_50_Template_button_click_0_listener","disabled_r27","changeDisabled","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_50_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_53_mat_form_field_1_Template_mat_form_field_click_0_listener","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_53_mat_form_field_1_Template_input_ngModelChange_4_listener","fieldMetadataItem_r29","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_53_mat_form_field_1_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_66_Template_i_click_4_listener","doctype_r31","removeDoctype","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_70_button_1_Template_button_click_0_listener","_r32","formField_r33","changeFieldConditions","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_70_button_1_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_70_button_1_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_74_button_1_Template_button_click_0_listener","_r34","formField_r35","changeFieldInvert","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_74_button_1_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_74_button_1_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template_div_sorted_0_listener","storeNewOrder","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template_i_click_2_listener","ctx_r13","index_r16","deleteField","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_4_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_8_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_9_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_10_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_input_11_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_23_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_34_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_38_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_41_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_44_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_47_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_button_50_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_53_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template_button_click_59_listener","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_65_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_span_66_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_70_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_71_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_74_Template","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_div_75_Template","ɵɵclassMap","menu_r36","size_r37","class_label","required_r38","required_icon","disabled_r39","disabledCondition_r40","classList","displayList","mandatoryList","disabledList","fieldMetadata","hasCheckboxConditionField","SplitterFormBuilderComponent_div_16_ng_container_26_Template_div_cdkDropListDropped_5_listener","dropFromForm","SplitterFormBuilderComponent_div_16_ng_container_26_div_6_Template","ɵɵstyleMap","SplitterFormBuilderComponent_div_16_button_28_Template_button_click_0_listener","_r41","createForm","SplitterFormBuilderComponent_div_16_button_29_Template_button_click_0_listener","_r42","updateForm","SplitterFormBuilderComponent_div_16_mat_option_16_Template","SplitterFormBuilderComponent_div_16_mat_form_field_17_Template","SplitterFormBuilderComponent_div_16_ng_container_26_Template","SplitterFormBuilderComponent_div_16_button_28_Template","SplitterFormBuilderComponent_div_16_button_29_Template","formSettings","metadataMethods","outputForm","fieldCategories","creationMode","field_r44","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_6_mat_checkbox_5_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_2_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_3_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_4_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_5_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_ng_container_6_Template","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_Template_div_cdkDropListDropped_2_listener","_r43","dropFromAvailableFields","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_Template","availableFields_r45","SplitterFormBuilderComponent_mat_tab_group_24_mat_tab_1_Template","availableFieldsParent","loadingCustomFields","labelType","info","setting","customFields","conditioned_fields","conditioned_doctypes","invert_fields","batch_metadata","document_metadata","category","currentField","childFields","newClass","classLabel","newDisplay","displayIcon","newRequired","requiredIcon","newDisabled","previousUnit","parentField","categoryId","tmpCurrentOrder","currentOrder","default_form","metadataMethod","metadata_method","exportZipFile","export_zip_file","targetField","some","formField","allowImportExport","SplitterFormBuilderComponent_Template","SplitterFormBuilderComponent_div_5_Template","SplitterFormBuilderComponent_Template_button_click_8_listener","SplitterFormBuilderComponent_Template_button_click_13_listener","SplitterFormBuilderComponent_div_16_Template","SplitterFormBuilderComponent_div_23_Template","SplitterFormBuilderComponent_mat_tab_group_24_Template","sidenav_r46","SplitterFormListComponent_mat_cell_24_span_1_Template","SplitterFormListComponent_mat_cell_24_span_2_Template","SplitterFormListComponent_mat_cell_27_span_1_Template","SplitterFormListComponent_mat_cell_27_span_2_Template","SplitterFormListComponent_mat_cell_30_button_1_Template_button_click_0_listener","SplitterFormListComponent_mat_cell_30_button_2_Template_button_click_0_listener","SplitterFormListComponent_mat_cell_30_button_1_Template","SplitterFormListComponent_mat_cell_30_button_2_Template","SplitterFormListComponent_mat_cell_30_Template_button_click_3_listener","SplitterFormListComponent_mat_cell_30_Template_button_click_6_listener","loadForms","deleteForm","duplicateForm","disableForm","enableForm","default","SplitterFormListComponent_Template","SplitterFormListComponent_div_5_Template","SplitterFormListComponent_Template_button_click_8_listener","SplitterFormListComponent_Template_mat_table_matSortChange_15_listener","SplitterFormListComponent_mat_header_cell_17_Template","SplitterFormListComponent_mat_cell_18_Template","SplitterFormListComponent_mat_header_cell_20_Template","SplitterFormListComponent_mat_cell_21_Template","SplitterFormListComponent_mat_header_cell_23_Template","SplitterFormListComponent_mat_cell_24_Template","SplitterFormListComponent_mat_header_cell_26_Template","SplitterFormListComponent_mat_cell_27_Template","SplitterFormListComponent_mat_header_cell_29_Template","SplitterFormListComponent_mat_cell_30_Template","SplitterFormListComponent_mat_header_row_31_Template","SplitterFormListComponent_mat_row_32_Template","SplitterFormListComponent_Template_mat_paginator_page_33_listener","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","changeOutputType","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_2_mat_option_5_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","outputsTypes","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_3_mat_option_5_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_3_mat_error_6_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_1_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template","SplitterCreateOutputComponent_div_15_ng_container_2_mat_form_field_3_Template","selectedOutputType","SplitterCreateOutputComponent_div_15_ng_container_2_Template","createOutput","ocrise","outputLabel","compressType","outputTypeId","SplitterCreateOutputComponent_Template","SplitterCreateOutputComponent_div_5_Template","SplitterCreateOutputComponent_Template_button_click_8_listener","SplitterCreateOutputComponent_div_15_Template","SplitterCreateOutputComponent_Template_button_click_17_listener","output_type_id","SplitterOutputListComponent_mat_cell_27_Template_button_click_1_listener","SplitterOutputListComponent_mat_cell_27_Template_button_click_4_listener","row_r8","loadOutputs","outputId","output","deleteOutput","duplicateOutput","SplitterOutputListComponent_Template","SplitterOutputListComponent_div_5_Template","SplitterOutputListComponent_Template_button_click_8_listener","SplitterOutputListComponent_Template_mat_table_matSortChange_15_listener","SplitterOutputListComponent_mat_header_cell_17_Template","SplitterOutputListComponent_mat_cell_18_Template","SplitterOutputListComponent_mat_header_cell_20_Template","SplitterOutputListComponent_mat_cell_21_Template","SplitterOutputListComponent_mat_header_cell_23_Template","SplitterOutputListComponent_mat_cell_24_Template","SplitterOutputListComponent_mat_header_cell_26_Template","SplitterOutputListComponent_mat_cell_27_Template","SplitterOutputListComponent_mat_header_row_28_Template","SplitterOutputListComponent_mat_row_29_Template","SplitterOutputListComponent_Template_mat_paginator_page_30_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_mat_error_6_Template","output_type_label","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_option_5_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_error_6_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_option_5_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_error_6_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template","SplitterUpdateOutputComponent_div_17_ng_container_2_Template","field_r9","outputsTypesForm","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_Template_mat_icon_click_6_listener","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_Template","SplitterUpdateOutputComponent_form_28_button_7_Template_span_click_1_listener","testConnection","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_6_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_7_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_span_6_Template","option_r14","extra","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template_mat_form_field_focusin_0_listener","retrieveDataFromWS","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_error_5_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_span_6_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_option_9_Template","webservice","connection","autocomplete_r15","filteredOptions","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template","SplitterUpdateOutputComponent_form_28_span_4_Template","SplitterUpdateOutputComponent_form_28_ng_container_6_Template","SplitterUpdateOutputComponent_form_28_button_7_Template","SplitterUpdateOutputComponent_form_28_span_10_Template","SplitterUpdateOutputComponent_form_28_ng_container_12_Template","SplitterUpdateOutputComponent_div_36_div_1_mat_divider_7_Template","field_r16","labelShort","cpt_r17","SplitterUpdateOutputComponent_div_36_div_1_Template","availableFields","allowedPath","testConnectionMapping","originalOutputType","_output","isJson","outputElement","json_error","eval","testCmisConnection","getCmisConnectionInfo","auth","testMEMConnection","getMEMConnectionInfo","getOpenadsConnectionInfo","testOpenadsConnection","getUsersFromMem","toPromise","setAutocompleteValues","getEntitiesFromMem","entities","getDoctypesFromMem","getPrioritiesFromMem","priorities","getStatusesFromMem","statuses","getIndexingModelsFromMem","indexingModels","updateOutput","_array","parse","sortArrayAlphab","x","toUpperCase","y","functionName","SplitterUpdateOutputComponent_Template","SplitterUpdateOutputComponent_div_5_Template","SplitterUpdateOutputComponent_Template_button_click_8_listener","SplitterUpdateOutputComponent_Template_button_click_13_listener","SplitterUpdateOutputComponent_div_17_Template","SplitterUpdateOutputComponent_Template_button_click_23_listener","SplitterUpdateOutputComponent_form_28_Template","SplitterUpdateOutputComponent_div_35_Template","SplitterUpdateOutputComponent_div_36_Template","sidenav_r18","separator_r3","SeparatorComponent_div_34_Template_button_click_2_listener","ctx_r4","moveCurrentThumbnail","SeparatorComponent_div_34_Template_button_click_6_listener","separator","thumbnails","current","loadingSeparator","selectedSeparator","separators","generateSeparator","onChangeType","fileUrl","encoded_thumbnails","downloadSeparator","downloadPdf","base64String","SeparatorComponent_Template","SeparatorComponent_Template_button_click_7_listener","SeparatorComponent_Template_button_click_12_listener","SeparatorComponent_Template_app_document_type_factory_selectedDoctypeOutput_15_listener","SeparatorComponent_Template_mat_select_ngModelChange_27_listener","SeparatorComponent_mat_option_28_Template","SeparatorComponent_Template_button_click_30_listener","SeparatorComponent_div_33_Template","SeparatorComponent_div_34_Template","SplitterUpdateStatusComponent_span_35_Template_i_click_4_listener","identifier_r4","removeIdentifier","identifierControl","statusControl","identifiers","addIdentifier","identifier","updateStatus","SplitterUpdateStatusComponent_Template","SplitterUpdateStatusComponent_Template_button_click_7_listener","SplitterUpdateStatusComponent_mat_option_24_Template","SplitterUpdateStatusComponent_Template_button_click_30_listener","SplitterUpdateStatusComponent_span_34_Template","SplitterUpdateStatusComponent_span_35_Template","SplitterUpdateStatusComponent_Template_button_click_37_listener","STEPPER_GLOBAL_OPTIONS","WorkflowBuilderSplitterComponent_i_13_Template_i_click_0_listener","updateWorkflow","WorkflowBuilderSplitterComponent_ng_container_32_div_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_32_div_1_Template","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_1_button_6_Template_button_click_0_listener","checkFolder","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_1_button_6_Template","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_2_Template_mat_select_selectionChange_4_listener","setSeparationMode","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_2_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_2_span_6_Template","multiple","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_1_Template","WorkflowBuilderSplitterComponent_ng_container_34_mat_form_field_2_Template","show","WorkflowBuilderSplitterComponent_ng_container_44_div_1_Template_mat_slide_toggle_change_1_listener","setUseInterface","setUsedOutputs","WorkflowBuilderSplitterComponent_ng_container_44_div_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_44_div_1_Template","field_r11","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_1_span_5_Template","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_2_Template_mat_select_selectionChange_4_listener","updateOutputs","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_2_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_2_span_6_Template","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_1_Template","WorkflowBuilderSplitterComponent_ng_container_46_mat_form_field_2_Template","option_r16","WorkflowBuilderSplitterComponent_ng_container_57_mat_form_field_1_Template_mat_select_valueChange_4_listener","WorkflowBuilderSplitterComponent_ng_container_57_mat_form_field_1_mat_option_5_Template","WorkflowBuilderSplitterComponent_ng_container_57_mat_form_field_1_span_6_Template","useInterface","WorkflowBuilderSplitterComponent_ng_container_57_mat_form_field_1_Template","separationMode","stepValid","separation","oldFolder","nameControl","form_outputs","workflow_outputs","workflowId","workflow","Array","isArray","aiModel","models","f","_element","splitMethods","isStepValid","createWorkflow","displayDefaultIndicatorType","WorkflowBuilderSplitterComponent_Template","WorkflowBuilderSplitterComponent_div_5_Template","WorkflowBuilderSplitterComponent_Template_button_click_8_listener","WorkflowBuilderSplitterComponent_i_13_Template","WorkflowBuilderSplitterComponent_ng_container_32_Template","WorkflowBuilderSplitterComponent_ng_container_34_Template","WorkflowBuilderSplitterComponent_Template_button_click_36_listener","WorkflowBuilderSplitterComponent_ng_container_44_Template","WorkflowBuilderSplitterComponent_ng_container_46_Template","WorkflowBuilderSplitterComponent_Template_button_click_51_listener","WorkflowBuilderSplitterComponent_ng_container_57_Template","WorkflowBuilderSplitterComponent_Template_button_click_61_listener","WorkflowBuilderSplitterComponent_span_62_Template","WorkflowBuilderSplitterComponent_span_63_Template","sidenav_r17","WorkflowListSplitterComponent_mat_cell_30_Template_button_click_1_listener","WorkflowListSplitterComponent_mat_cell_30_Template_button_click_4_listener","row_r9","allWorkflows","loadWorkflows","deleteWorkflow","duplicateWorkflow","WorkflowListSplitterComponent_Template","WorkflowListSplitterComponent_div_5_Template","WorkflowListSplitterComponent_Template_button_click_8_listener","WorkflowListSplitterComponent_Template_mat_table_matSortChange_15_listener","WorkflowListSplitterComponent_mat_header_cell_17_Template","WorkflowListSplitterComponent_mat_cell_18_Template","WorkflowListSplitterComponent_mat_header_cell_20_Template","WorkflowListSplitterComponent_mat_cell_21_Template","WorkflowListSplitterComponent_mat_header_cell_23_Template","WorkflowListSplitterComponent_mat_cell_24_Template","WorkflowListSplitterComponent_mat_header_cell_26_Template","WorkflowListSplitterComponent_mat_cell_27_Template","WorkflowListSplitterComponent_mat_header_cell_29_Template","WorkflowListSplitterComponent_mat_cell_30_Template","WorkflowListSplitterComponent_mat_header_row_31_Template","WorkflowListSplitterComponent_mat_row_32_Template","WorkflowListSplitterComponent_Template_mat_paginator_page_33_listener","sidenav_r10","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_7_Template","modelForm","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_option_5_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_3_mat_error_6_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_3_mat_error_7_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_3_Template","option_r12","CreateVerifierAiModelComponent_div_15_div_8_mat_form_field_4_Template_mat_select_selectionChange_4_listener","item_r7","i_r9","onWorkflowSelect","CreateVerifierAiModelComponent_div_15_div_8_mat_form_field_4_mat_option_5_Template","CreateVerifierAiModelComponent_div_15_div_8_mat_form_field_4_mat_error_6_Template","formControl","CreateVerifierAiModelComponent_div_15_div_8_Template_mat_checkbox_ngModelChange_1_listener","CreateVerifierAiModelComponent_div_15_div_8_Template_mat_checkbox_change_1_listener","checkSelectedBatch","CreateVerifierAiModelComponent_div_15_div_8_mat_form_field_4_Template","CreateVerifierAiModelComponent_div_15_ng_container_2_Template","CreateVerifierAiModelComponent_div_15_div_8_Template","docStatus","totalChecked","listModels","chosenWorkflow","chosenDocs","retrieveOCDoctypes","doc","linked_doctype","linked_workflow","current_doc","newDoctype","is_default","val","start_training","isValidForm2","matches","fold","CreateVerifierAiModelComponent_Template","CreateVerifierAiModelComponent_div_5_Template","CreateVerifierAiModelComponent_Template_button_click_8_listener","CreateVerifierAiModelComponent_div_15_Template","CreateVerifierAiModelComponent_Template_button_click_17_listener","ListVerifierAiModelComponent_div_17_mat_cell_19_span_2_Template","ListVerifierAiModelComponent_div_17_mat_cell_19_i_3_Template","ListVerifierAiModelComponent_div_17_mat_cell_19_i_4_Template","ListVerifierAiModelComponent_div_17_mat_cell_22_Template_button_click_1_listener","ListVerifierAiModelComponent_div_17_mat_cell_22_Template_button_click_4_listener","ListVerifierAiModelComponent_div_17_Template_mat_table_matSortChange_1_listener","ListVerifierAiModelComponent_div_17_mat_header_cell_3_Template","ListVerifierAiModelComponent_div_17_mat_cell_4_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_6_Template","ListVerifierAiModelComponent_div_17_mat_cell_7_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_9_Template","ListVerifierAiModelComponent_div_17_mat_cell_10_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_12_Template","ListVerifierAiModelComponent_div_17_mat_cell_13_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_15_Template","ListVerifierAiModelComponent_div_17_mat_cell_16_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_18_Template","ListVerifierAiModelComponent_div_17_mat_cell_19_Template","ListVerifierAiModelComponent_div_17_mat_header_cell_21_Template","ListVerifierAiModelComponent_div_17_mat_cell_22_Template","ListVerifierAiModelComponent_div_17_mat_header_row_23_Template","ListVerifierAiModelComponent_div_17_mat_row_24_Template","ListVerifierAiModelComponent_div_17_Template_mat_paginator_page_25_listener","ListVerifierAiModelComponent_div_24_Template_ngx_file_drag_drop_valueChanged_7_listener","ListVerifierAiModelComponent_div_24_Template_button_click_10_listener","ListVerifierAiModelComponent_div_24_div_13_Template","ListVerifierAiModelComponent_div_24_mat_progress_bar_15_Template","ListVerifierAiModelComponent_Template","ListVerifierAiModelComponent_div_5_Template","ListVerifierAiModelComponent_Template_button_click_8_listener","ListVerifierAiModelComponent_Template_button_click_13_listener","ListVerifierAiModelComponent_div_17_Template","ListVerifierAiModelComponent_div_24_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_mat_error_7_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_mat_error_7_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_1_Template","UpdateVerifierAiModelComponent_div_15_ng_container_2_mat_form_field_2_Template","UpdateVerifierAiModelComponent_div_15_div_5_Template_mat_select_selectionChange_7_listener","item_r4","UpdateVerifierAiModelComponent_div_15_div_5_mat_option_8_Template","workflowsFormControl","UpdateVerifierAiModelComponent_div_15_ng_container_2_Template","UpdateVerifierAiModelComponent_div_15_div_5_Template","tableData","doc_types","worklowById","choseWorkflow","len","retrieveWorkflows","Documents","Formulaires","UpdateVerifierAiModelComponent_Template","UpdateVerifierAiModelComponent_div_5_Template","UpdateVerifierAiModelComponent_Template_button_click_8_listener","UpdateVerifierAiModelComponent_div_15_Template","UpdateVerifierAiModelComponent_Template_button_click_17_listener","sidenav_r7","FormBuilderComponent_div_16_mat_form_field_25_span_6_Template_span_click_0_listener","FormBuilderComponent_div_16_mat_form_field_25_span_7_Template_span_click_0_listener","cpt_r9","FormBuilderComponent_div_16_mat_form_field_25_Template_mat_select_ngModelChange_4_listener","FormBuilderComponent_div_16_mat_form_field_25_mat_option_5_Template","FormBuilderComponent_div_16_mat_form_field_25_span_6_Template","FormBuilderComponent_div_16_mat_form_field_25_span_7_Template","FormBuilderComponent_div_16_ng_container_27_span_2_span_2_Template_span_click_0_listener","category_r12","edit","focusInput","FormBuilderComponent_div_16_ng_container_27_span_2_span_2_Template","getCategoryLabel","FormBuilderComponent_div_16_ng_container_27_span_3_Template_input_focusout_1_listener","labelInput_r14","updateLabel","FormBuilderComponent_div_16_ng_container_27_span_3_Template_span_click_4_listener","FormBuilderComponent_div_16_ng_container_27_div_6_i_2_Template_i_click_0_listener","ctx_r17","field_r19","FormBuilderComponent_div_16_ng_container_27_div_6_i_3_Template_i_click_0_listener","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_1_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_6_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_span_7_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template_input_keyup_enter_2_listener","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template_input_focusout_2_listener","color","colors_r22","format_r23","display_r24","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_Template_button_click_0_listener","_class_r26","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_23_Template_button_click_0_listener","_color_r28","_r27","changeColor","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_Template_button_click_0_listener","_format_r30","_r29","changeFormat","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_Template_button_click_0_listener","_display_r32","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_Template_button_click_0_listener","required_r34","_r33","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_11_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_12_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_20_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_23_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_26_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_29_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_button_32_Template","menu_r35","size_r36","required_r37","colorsList","formatList","FormBuilderComponent_div_16_ng_container_27_div_6_div_8_Template_i_click_1_listener","_r38","fullSizeSelected","FormBuilderComponent_div_16_ng_container_27_div_6_Template_div_sorted_0_listener","_r15","FormBuilderComponent_div_16_ng_container_27_div_6_Template_mat_form_field_click_1_listener","selectForLine","FormBuilderComponent_div_16_ng_container_27_div_6_i_2_Template","FormBuilderComponent_div_16_ng_container_27_div_6_i_3_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_4_Template","FormBuilderComponent_div_16_ng_container_27_div_6_span_5_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_7_Template","FormBuilderComponent_div_16_ng_container_27_div_6_div_8_Template","fullSize","FormBuilderComponent_div_16_ng_container_27_span_2_Template","FormBuilderComponent_div_16_ng_container_27_span_3_Template","FormBuilderComponent_div_16_ng_container_27_Template_div_cdkDropListDropped_5_listener","FormBuilderComponent_div_16_ng_container_27_div_6_Template","FormBuilderComponent_div_16_button_29_Template_button_click_0_listener","_r39","FormBuilderComponent_div_16_button_30_Template_button_click_0_listener","_r40","FormBuilderComponent_div_16_button_30_span_1_Template","FormBuilderComponent_div_16_button_30_i_2_Template","updateFormLoading","FormBuilderComponent_div_16_div_31_div_11_mat_divider_7_Template","field_r42","cpt_r43","FormBuilderComponent_div_16_div_31_Template_button_click_7_listener","modalOpen","FormBuilderComponent_div_16_div_31_div_11_Template","FormBuilderComponent_div_16_mat_form_field_25_Template","FormBuilderComponent_div_16_ng_container_27_Template","FormBuilderComponent_div_16_button_29_Template","FormBuilderComponent_div_16_button_30_Template","FormBuilderComponent_div_16_div_31_Template","field_r45","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_2_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_3_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_4_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_ng_container_5_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_Template_div_cdkDropListDropped_2_listener","_r44","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_3_Template","FormBuilderComponent_mat_tab_group_24_mat_tab_1_div_4_Template","availableFields_r46","FormBuilderComponent_mat_tab_group_24_mat_tab_1_Template","selectedFields","formLabels","format_icon","res_outputs","labels","formSettingId","module_settings_id","autocomplete","category_id","focus","newFormat","formatIcon","newColor","ctrlKey","lineSelected","currentNumber","currentSize","Function","round","supplierVerif","supplier_verif","allowLearning","allow_learning","FormBuilderComponent_Template","FormBuilderComponent_div_5_Template","FormBuilderComponent_Template_button_click_8_listener","FormBuilderComponent_Template_button_click_13_listener","FormBuilderComponent_div_16_Template","FormBuilderComponent_div_23_Template","FormBuilderComponent_mat_tab_group_24_Template","sidenav_r47","FormListComponent_mat_cell_24_span_1_Template","FormListComponent_mat_cell_24_span_2_Template","FormListComponent_mat_cell_27_span_1_Template","FormListComponent_mat_cell_27_span_2_Template","FormListComponent_mat_cell_30_button_1_Template_button_click_0_listener","FormListComponent_mat_cell_30_button_2_Template_button_click_0_listener","FormListComponent_mat_cell_30_button_6_Template_button_click_0_listener","FormListComponent_mat_cell_30_button_1_Template","FormListComponent_mat_cell_30_button_2_Template","FormListComponent_mat_cell_30_Template_button_click_3_listener","FormListComponent_mat_cell_30_button_6_Template","getWorkflows","workflowList","workflowListLabel","selectValues","selectLabel","updateWorkflowsDefaultForm","newFormId","FormListComponent_Template","FormListComponent_div_5_Template","FormListComponent_Template_button_click_8_listener","FormListComponent_Template_mat_table_matSortChange_15_listener","FormListComponent_mat_header_cell_17_Template","FormListComponent_mat_cell_18_Template","FormListComponent_mat_header_cell_20_Template","FormListComponent_mat_cell_21_Template","FormListComponent_mat_header_cell_23_Template","FormListComponent_mat_cell_24_Template","FormListComponent_mat_header_cell_26_Template","FormListComponent_mat_cell_27_Template","FormListComponent_mat_header_cell_29_Template","FormListComponent_mat_cell_30_Template","FormListComponent_mat_header_row_31_Template","FormListComponent_mat_row_32_Template","FormListComponent_Template_mat_paginator_page_33_listener","CreateOutputComponent_div_15_ng_container_2_mat_form_field_1_mat_error_6_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","CreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","CreateOutputComponent_div_15_ng_container_2_mat_form_field_2_mat_option_5_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_2_mat_error_6_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","CreateOutputComponent_div_15_ng_container_2_mat_form_field_3_mat_option_5_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_3_mat_error_6_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_1_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_2_Template","CreateOutputComponent_div_15_ng_container_2_mat_form_field_3_Template","CreateOutputComponent_div_15_ng_container_2_Template","CreateOutputComponent_Template","CreateOutputComponent_div_5_Template","CreateOutputComponent_Template_button_click_8_listener","CreateOutputComponent_div_15_Template","CreateOutputComponent_Template_button_click_17_listener","OutputsListComponent_mat_cell_27_Template_button_click_1_listener","OutputsListComponent_mat_cell_27_Template_button_click_4_listener","OutputsListComponent_Template","OutputsListComponent_div_5_Template","OutputsListComponent_Template_button_click_8_listener","OutputsListComponent_Template_mat_table_matSortChange_15_listener","OutputsListComponent_mat_header_cell_17_Template","OutputsListComponent_mat_cell_18_Template","OutputsListComponent_mat_header_cell_20_Template","OutputsListComponent_mat_cell_21_Template","OutputsListComponent_mat_header_cell_23_Template","OutputsListComponent_mat_cell_24_Template","OutputsListComponent_mat_header_cell_26_Template","OutputsListComponent_mat_cell_27_Template","OutputsListComponent_mat_header_row_28_Template","OutputsListComponent_mat_row_29_Template","OutputsListComponent_Template_mat_paginator_page_30_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_ngModelChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template_mat_select_selectionChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_option_5_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template_mat_select_ngModelChange_4_listener","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_option_5_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_mat_error_6_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_1_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_2_Template","UpdateOutputComponent_div_17_ng_container_2_mat_form_field_3_Template","UpdateOutputComponent_div_17_ng_container_2_Template","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_Template_mat_icon_click_6_listener","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_1_Template","UpdateOutputComponent_form_28_ng_container_6_mat_form_field_2_Template","UpdateOutputComponent_form_28_button_7_Template_button_click_0_listener","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_button_7_Template_button_click_0_listener","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_span_6_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_button_7_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_span_6_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template_mat_form_field_focusin_0_listener","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_error_5_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_span_6_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_mat_option_9_Template","autocomplete_r16","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_1_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_2_Template","UpdateOutputComponent_form_28_ng_container_12_mat_form_field_3_Template","field_r17","UpdateOutputComponent_form_28_mat_tab_13_ng_container_5_mat_slide_toggle_1_Template","field_r18","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_mat_error_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_span_6_Template","option_r20","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_Template_mat_form_field_focusin_0_listener","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_mat_error_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_span_6_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_mat_option_9_Template","autocomplete_r21","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_1_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_mat_form_field_2_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_5_Template","UpdateOutputComponent_form_28_mat_tab_13_ng_container_7_Template","UpdateOutputComponent_form_28_span_4_Template","UpdateOutputComponent_form_28_ng_container_6_Template","UpdateOutputComponent_form_28_button_7_Template","UpdateOutputComponent_form_28_span_10_Template","UpdateOutputComponent_form_28_ng_container_12_Template","UpdateOutputComponent_form_28_mat_tab_13_Template","UpdateOutputComponent_div_36_div_1_mat_divider_7_Template","field_r22","cpt_r23","UpdateOutputComponent_div_36_div_1_Template","text","t","pure","links","getCustomFieldsFromMem","getContactsCustomFieldsFromMem","fromUser","UpdateOutputComponent_Template","UpdateOutputComponent_div_5_Template","UpdateOutputComponent_Template_button_click_8_listener","UpdateOutputComponent_Template_button_click_13_listener","UpdateOutputComponent_div_17_Template","UpdateOutputComponent_Template_button_click_23_listener","UpdateOutputComponent_form_28_Template","UpdateOutputComponent_div_35_Template","UpdateOutputComponent_div_36_Template","sidenav_r24","CreatePositionsMaskComponent_div_15_Template_input_ngModelChange_11_listener","filterSupplier","CreatePositionsMaskComponent_div_15_mat_option_14_Template","CreatePositionsMaskComponent_div_15_mat_option_20_Template","auto_r6","retrieveSuppliers","_this3","createPositionsMask","supplierName","_this4","CreatePositionsMaskComponent_Template","CreatePositionsMaskComponent_div_5_Template","CreatePositionsMaskComponent_Template_button_click_8_listener","CreatePositionsMaskComponent_div_15_Template","CreatePositionsMaskComponent_Template_button_click_17_listener","supplier_name","PositionsMaskListComponent_mat_cell_30_span_1_Template","PositionsMaskListComponent_mat_cell_30_span_2_Template","PositionsMaskListComponent_mat_cell_33_button_1_Template_button_click_0_listener","PositionsMaskListComponent_mat_cell_33_button_2_Template_button_click_0_listener","PositionsMaskListComponent_mat_cell_33_button_1_Template","PositionsMaskListComponent_mat_cell_33_button_2_Template","PositionsMaskListComponent_mat_cell_33_Template_button_click_3_listener","PositionsMaskListComponent_mat_cell_33_Template_button_click_6_listener","positionsMasks","loadPositionMask","mask","supplier_id","positionMaskId","positionsMask","deletePositionMask","duplicatePositionMask","positionsMaskId","disablePositionMask","enablePositionMask","PositionsMaskListComponent_Template","PositionsMaskListComponent_div_5_Template","PositionsMaskListComponent_Template_button_click_8_listener","PositionsMaskListComponent_Template_mat_table_matSortChange_15_listener","PositionsMaskListComponent_mat_header_cell_17_Template","PositionsMaskListComponent_mat_cell_18_Template","PositionsMaskListComponent_mat_header_cell_20_Template","PositionsMaskListComponent_mat_cell_21_Template","PositionsMaskListComponent_mat_header_cell_23_Template","PositionsMaskListComponent_mat_cell_24_Template","PositionsMaskListComponent_mat_header_cell_26_Template","PositionsMaskListComponent_mat_cell_27_Template","PositionsMaskListComponent_mat_header_cell_29_Template","PositionsMaskListComponent_mat_cell_30_Template","PositionsMaskListComponent_mat_header_cell_32_Template","PositionsMaskListComponent_mat_cell_33_Template","PositionsMaskListComponent_mat_header_row_34_Template","PositionsMaskListComponent_mat_row_35_Template","PositionsMaskListComponent_Template_mat_paginator_page_36_listener","UpdatePositionsMaskComponent_span_42_Template_span_click_0_listener","deleteImage","UpdatePositionsMaskComponent_ng_container_45_Template_i_click_1_listener","previousPage","UpdatePositionsMaskComponent_ng_container_45_Template_i_click_5_listener","nextPage","ɵɵtextInterpolate4","currentPage","documentImageNbPages","UpdatePositionsMaskComponent_div_46_Template_ngx_file_drag_drop_valueChanged_1_listener","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_div_3_Template_input_focusin_10_listener","ocr","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_div_3_Template_input_click_10_listener","ocrFromUser","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_div_3_Template_input_ngModelChange_10_listener","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_div_3_Template_input_focusout_10_listener","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_div_3_Template","availableFields_r11","UpdatePositionsMaskComponent_mat_tab_group_56_mat_tab_1_Template","loadingFields","launchOnInit","lastColor","lastLabel","getPositionMask","documentImageName","nb_pages","documentImageWidth","imageDocument","$","thumbB64","getThumb","documentImageSrc","ratio","drawPositions","triggerEvent","hide","positions","position","getPage","String","lastId","Infinity","newArea","trigger","drawPositionByField","updatePositionsMask","pages","background","outline","imageContainer","addClass","removeClass","innerText","deleteArea","backgroundArea","resizeArea","toggleClass","selectAreas","allowNudge","minSize","maxSize","onChanged","img","selection","ocr_process","onDeleted","inputId","attr","deletePosition","deletePage","deleteClicked","labelContainer","css","labelCount","cptToDelete","_selection","getSelectionByCpt","savePosition","savePage","checkIfObjectIsEqual","object1","object2","aProps","getOwnPropertyNames","bProps","propName","_this5","changeImage","_this6","pageToShow","oldPage","_this7","oldCpt","substr","newCpt","newFilename","parentCpt","_this8","_this9","UpdatePositionsMaskComponent_Template","UpdatePositionsMaskComponent_div_5_Template","UpdatePositionsMaskComponent_Template_button_click_8_listener","UpdatePositionsMaskComponent_Template_button_click_13_listener","UpdatePositionsMaskComponent_Template_button_click_18_listener","UpdatePositionsMaskComponent_Template_input_ngModelChange_32_listener","UpdatePositionsMaskComponent_mat_option_35_Template","UpdatePositionsMaskComponent_mat_option_41_Template","UpdatePositionsMaskComponent_span_42_Template","UpdatePositionsMaskComponent_ng_container_45_Template","UpdatePositionsMaskComponent_div_46_Template","UpdatePositionsMaskComponent_div_55_Template","UpdatePositionsMaskComponent_mat_tab_group_56_Template","auto_r13","VerifierStatusUpdateComponent_span_35_Template_i_click_4_listener","VerifierStatusUpdateComponent_Template","VerifierStatusUpdateComponent_Template_button_click_7_listener","VerifierStatusUpdateComponent_mat_option_24_Template","VerifierStatusUpdateComponent_Template_button_click_30_listener","VerifierStatusUpdateComponent_span_34_Template","VerifierStatusUpdateComponent_span_35_Template","VerifierStatusUpdateComponent_Template_button_click_37_listener","VariousSettingsVerifierComponent_button_13_Template_button_click_0_listener","subtitle_r9","VariousSettingsVerifierComponent_div_29_div_17_mat_form_field_2_Template_input_focusout_1_listener","VariousSettingsVerifierComponent_div_29_div_17_i_5_Template_i_click_0_listener","VariousSettingsVerifierComponent_div_29_div_17_strong_1_Template","VariousSettingsVerifierComponent_div_29_div_17_mat_form_field_2_Template","VariousSettingsVerifierComponent_div_29_div_17_i_5_Template","VariousSettingsVerifierComponent_div_29_div_17_i_6_Template","VariousSettingsVerifierComponent_div_29_div_17_Template_i_click_7_listener","ctx_r11","cpt_r13","removeLine","VariousSettingsVerifierComponent_div_29_Template_div_cdkDropListDropped_16_listener","drop","VariousSettingsVerifierComponent_div_29_div_17_Template","currentForm","VariousSettingsVerifierComponent_div_30_Template_button_click_1_listener","updateDisplay","uniqueURlExpirationControl","createSupplierControl","updateSupplierControl","refuseDocumentControl","allowSupplierAutoControl","validateDocumentControl","changeFormControl","VariousSettingsVerifierComponent_div_43_Template_div_click_0_listener","updateUniqueUrl","VariousSettingsVerifierComponent_div_51_Template_div_cdkDropListDropped_0_listener","VariousSettingsVerifierComponent_div_51_div_1_Template","availableFieldsTmp","formLoaded","formLoadedUnique","formInput","loadUniqueUrl","unique_url","expiration","change_form","refuse_document","validate_document","create_supplier","update_supplier","allow_supplier_autocomplete","resetSelectedForm","loadDisplay","subtitles","subtitle","item","VariousSettingsVerifierComponent_Template","VariousSettingsVerifierComponent_div_5_Template","VariousSettingsVerifierComponent_Template_button_click_8_listener","VariousSettingsVerifierComponent_button_13_Template","VariousSettingsVerifierComponent_Template_mat_tab_group_selectedTabChange_16_listener","availableFieldsTabGroup_r4","close","VariousSettingsVerifierComponent_Template_mat_select_selectionChange_27_listener","VariousSettingsVerifierComponent_mat_option_28_Template","VariousSettingsVerifierComponent_div_29_Template","VariousSettingsVerifierComponent_div_30_Template","VariousSettingsVerifierComponent_Template_mat_select_selectionChange_40_listener","VariousSettingsVerifierComponent_mat_option_41_Template","VariousSettingsVerifierComponent_div_42_Template","VariousSettingsVerifierComponent_div_43_Template","VariousSettingsVerifierComponent_div_50_Template","VariousSettingsVerifierComponent_div_51_Template","sidenav_r19","CodeEditorComponent","WorkflowBuilderComponent_i_13_Template_i_click_0_listener","WorkflowBuilderComponent_ng_container_33_div_1_span_5_Template","WorkflowBuilderComponent_ng_container_33_div_1_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_1_button_6_Template_button_click_0_listener","WorkflowBuilderComponent_ng_container_35_mat_form_field_1_span_5_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_1_button_6_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderComponent_ng_container_35_mat_form_field_2_Template_mat_select_selectionChange_4_listener","WorkflowBuilderComponent_ng_container_35_mat_form_field_2_mat_option_5_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_2_span_6_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_1_Template","WorkflowBuilderComponent_ng_container_35_mat_form_field_2_Template","WorkflowBuilderComponent_i_40_Template_i_click_0_listener","openCodeEditor","WorkflowBuilderComponent_ng_container_47_div_1_Template_mat_slide_toggle_change_1_listener","WorkflowBuilderComponent_ng_container_47_div_1_span_5_Template","WorkflowBuilderComponent_ng_container_47_div_1_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_1_span_5_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template_mat_select_valueChange_4_listener","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template_mat_select_selectionChange_4_listener","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_mat_option_5_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_span_6_Template","processAllowed","WorkflowBuilderComponent_ng_container_49_mat_form_field_1_Template","WorkflowBuilderComponent_ng_container_49_mat_form_field_2_Template","WorkflowBuilderComponent_i_58_Template_i_click_0_listener","option_r18","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_Template_mat_select_valueChange_4_listener","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_mat_option_5_Template","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_span_6_Template","WorkflowBuilderComponent_ng_container_62_mat_form_field_1_Template","WorkflowBuilderComponent_i_70_Template_i_click_0_listener","outputAllowed","allowWFScripting","inputFolderOk","getConfig","unshift","codeContent","testScriptButton","input_folder","disableClose","auto","WorkflowBuilderComponent_Template","WorkflowBuilderComponent_div_5_Template","WorkflowBuilderComponent_Template_button_click_8_listener","WorkflowBuilderComponent_i_13_Template","WorkflowBuilderComponent_ng_container_33_Template","WorkflowBuilderComponent_ng_container_35_Template","WorkflowBuilderComponent_Template_button_click_37_listener","WorkflowBuilderComponent_i_40_Template","WorkflowBuilderComponent_ng_container_47_Template","WorkflowBuilderComponent_ng_container_49_Template","WorkflowBuilderComponent_Template_button_click_55_listener","WorkflowBuilderComponent_i_58_Template","WorkflowBuilderComponent_ng_container_62_Template","WorkflowBuilderComponent_Template_button_click_67_listener","WorkflowBuilderComponent_span_68_Template","WorkflowBuilderComponent_span_69_Template","WorkflowBuilderComponent_i_70_Template","sidenav_r20","WorkflowListComponent_mat_cell_30_Template_button_click_1_listener","WorkflowListComponent_mat_cell_30_Template_button_click_4_listener","WorkflowListComponent_Template","WorkflowListComponent_div_5_Template","WorkflowListComponent_Template_button_click_8_listener","WorkflowListComponent_Template_mat_table_matSortChange_15_listener","WorkflowListComponent_mat_header_cell_17_Template","WorkflowListComponent_mat_cell_18_Template","WorkflowListComponent_mat_header_cell_20_Template","WorkflowListComponent_mat_cell_21_Template","WorkflowListComponent_mat_header_cell_23_Template","WorkflowListComponent_mat_cell_24_Template","WorkflowListComponent_mat_header_cell_26_Template","WorkflowListComponent_mat_cell_27_Template","WorkflowListComponent_mat_header_cell_29_Template","WorkflowListComponent_mat_cell_30_Template","WorkflowListComponent_mat_header_row_31_Template","WorkflowListComponent_mat_row_32_Template","WorkflowListComponent_Template_mat_paginator_page_33_listener","EventEmitter","FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","BehaviorSubject","DocumentTypeFactoryComponent_mat_slide_toggle_15_Template_mat_slide_toggle_click_0_listener","changeDocType","toggleControl","DocumentTypeFactoryComponent_mat_form_field_16_div_5_button_5_Template_button_click_0_listener","form_r4","cloneFormDoctypes","selectFormControl","DocumentTypeFactoryComponent_mat_form_field_16_div_5_button_5_Template","DocumentTypeFactoryComponent_mat_form_field_16_div_5_Template","DocumentTypeFactoryComponent_div_17_Template_button_click_1_listener","importDoctypes","DocumentTypeFactoryComponent_div_17_Template_button_click_4_listener","exportDoctypes","DocumentTypeFactoryComponent_mat_tree_node_22_Template_button_click_1_listener","node_r7","selectNode","DocumentTypeFactoryComponent_mat_tree_node_22_Template_button_dblclick_1_listener","DocumentTypeFactoryComponent_mat_tree_node_22_i_2_Template","DocumentTypeFactoryComponent_mat_tree_node_22_i_3_Template","padding","selectedDoctypeInput","node_r9","highlight","DocumentTypeFactoryComponent_mat_tree_node_23_button_5_Template_button_click_0_listener","DocumentTypeFactoryComponent_mat_tree_node_23_Template_button_click_1_listener","selectFolder","DocumentTypeFactoryComponent_mat_tree_node_23_span_3_Template","DocumentTypeFactoryComponent_mat_tree_node_23_span_4_Template","DocumentTypeFactoryComponent_mat_tree_node_23_button_5_Template","treeControl","isExpanded","searchText","showFoldersSeparatorBtn","ChecklistDatabase","dataChange","retrieveDocTypes","initialize","buildFileTree","lastSearchValue","obj","level","o","node","TreeItemNode","children","so","_normalizeValue","normalize","filterText","filteredTreeData","d","lastIndexOf","ftd","TreeItemFlatNode","selectedDoctypeOutput","selectedFormOutput","flatNodeMap","Map","nestedNodeMap","getLevel","isExpandable","expandable","getChildren","hasChild","_nodeData","transformer","existingNode","flatNode","treeFlattener","dataSource","collapseTree","collapseAll","expandAll","emit","defaultFormId","selectedForm","unique_doc_type","filterChanged","isDblClick","canFolderBeSelected","sourceFormId","destFormId","cleanSearchText","dataSelectForm","uniqueDocType","DocumentTypeFactoryComponent_Template","DocumentTypeFactoryComponent_Template_input_ngModelChange_5_listener","DocumentTypeFactoryComponent_Template_input_input_5_listener","DocumentTypeFactoryComponent_Template_button_click_6_listener","DocumentTypeFactoryComponent_Template_button_click_9_listener","DocumentTypeFactoryComponent_Template_button_click_12_listener","DocumentTypeFactoryComponent_mat_slide_toggle_15_Template","DocumentTypeFactoryComponent_mat_form_field_16_Template","DocumentTypeFactoryComponent_div_17_Template","DocumentTypeFactoryComponent_div_19_Template","DocumentTypeFactoryComponent_div_20_Template","DocumentTypeFactoryComponent_mat_tree_node_22_Template","DocumentTypeFactoryComponent_mat_tree_node_23_Template","allowUniqueDocType","MAT_DIALOG_DATA","MatDialogRef","DocumentTypeComponent_Template","DocumentTypeComponent_Template_app_document_type_factory_selectedDoctypeOutput_3_listener","ɵɵpureFunction3","batch_r2","totals","SplitterListComponent_mat_tab_3_div_24_Template_span_click_1_listener","selectOrUnselectAllBatches","SplitterListComponent_mat_tab_3_div_24_Template_i_click_5_listener","deleteAllConfirmDialog","batchesSelected","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_36_Template_i_click_0_listener","batch_r7","mergeAllConfirmDialog","ɵɵtextInterpolate3","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_input_click_2_listener","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_img_click_3_listener","displayBatchLocked","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_mat_card_header_click_4_listener","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_8_Template","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template_i_click_30_listener","openConfirmDialog","SplitterListComponent_mat_tab_3_div_27_mat_card_3_i_36_Template","currentTime","locked","ɵɵpropertyInterpolate2","isCheckboxChecked","SplitterListComponent_mat_tab_3_div_27_div_1_Template","SplitterListComponent_mat_tab_3_div_27_mat_card_3_Template","batches","isLoading","SplitterListComponent_mat_tab_3_ng_template_1_Template","SplitterListComponent_mat_tab_3_Template_input_ngModelChange_9_listener","SplitterListComponent_mat_tab_3_Template_button_click_10_listener","loadBatches","SplitterListComponent_mat_tab_3_Template_mat_select_valueChange_18_listener","currentStatus","SplitterListComponent_mat_tab_3_Template_mat_select_selectionChange_18_listener","changeStatus","SplitterListComponent_mat_tab_3_mat_option_19_Template","SplitterListComponent_mat_tab_3_Template_i_click_20_listener","SplitterListComponent_mat_tab_3_Template_mat_paginator_page_23_listener","SplitterListComponent_mat_tab_3_div_24_Template","SplitterListComponent_mat_tab_3_div_26_Template","SplitterListComponent_mat_tab_3_div_27_Template","pageSizeOptions","_sanitizer","selectedTab","batchList","removeLockByUserId","batch","lockedBy","formLabel","customerName","documentsCount","thumbnail","querySelectorAll","parentId","mergeAllBatches","batchId","checkboxList","getElementsByClassName","from","checkboxId","listOfBatchToMerge","listOfBatchFormId","uniqueFormId","ar","deleteAllBatches","deleteBatches","srcElement","textContent","deleteIds","ids","onTabChange","SplitterListComponent_Template","SplitterListComponent_Template_mat_tab_group_selectedTabChange_2_listener","SplitterListComponent_mat_tab_3_Template","ReplaySubject","Subject","debounceTime","delay","takeUntil","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_div_cdkDragStarted_0_listener","isBatchOnDrag","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_div_cdkDragEnded_0_listener","batch_r4","onBatchDrop","SplitterViewerComponent_mat_drawer_container_1_div_10_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_10_Template_a_click_3_listener","changeBatch","currentBatch","zoomPage","field_r8","searching","getPlaceholderFromResultMask","resultMask","metadata_r10","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_mat_option_6_Template_mat_option_click_0_listener","fillData","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_mat_option_6_span_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_mat_option_6_span_2_Template","metadataId","batchMetadataValues","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_Template_mat_select_change_4_listener","updateProgressBar","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_mat_option_6_Template","getPlaceholderFromSearchMask","searchMask","filteredServerSideMetadata","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_2_Template_textarea_ngModelChange_4_listener","setValueChange","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_4_Template_mat_select_selectionChange_4_listener","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_4_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_5_Template_input_dateChange_2_listener","datePicker_r15","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_6_Template_mat_checkbox_change_1_listener","onCheckBoxChange","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_1_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_2_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_3_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_4_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_5_Template","SplitterViewerComponent_mat_drawer_container_1_div_45_ng_container_6_Template","inputMode","progress","field_r21","metadata_r22","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_span_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_span_2_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_mat_option_6_Template","option_r23","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_4_mat_option_5_Template","datePicker_r24","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_2_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_3_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_4_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_ng_container_6_Template","page_r26","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_div_click_0_listener","selectPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_ngModelChange_3_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_click_3_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_mat_checkbox_change_3_listener","countSelectedPages","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_button_click_5_listener","pageIndex_r27","documentIndex_r20","rotatePage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_span_8_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template_button_click_10_listener","getZoomPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_i_12_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_i_13_Template","pageIdInLoad","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_card_click_0_listener","document_r18","selectDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_1_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_5_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_expansion_panel_opened_8_listener","documentMetadataOpenState","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_mat_expansion_panel_closed_8_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_button_click_12_listener","documentMetadata_r19","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_span_17_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_button_click_18_listener","deleteDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_26_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_28_Template","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_div_click_30_listener","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template_div_cdkDropListDropped_30_listener","dropPage","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_div_31_Template","fieldsCategories","addDocumentIdToDropList","selectedDocument","DropListDocumentsIds","document_r28","SplitterViewerComponent_mat_drawer_container_1_Template_mat_drawer_container_click_0_listener","SplitterViewerComponent_mat_drawer_container_1_span_8_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_cdkDropListDropped_9_listener","dropBatch","SplitterViewerComponent_mat_drawer_container_1_div_10_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_12_listener","drawer_r5","SplitterViewerComponent_mat_drawer_container_1_i_14_Template","SplitterViewerComponent_mat_drawer_container_1_i_15_Template","SplitterViewerComponent_mat_drawer_container_1_div_16_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_mouseenter_17_listener","isMouseInDocumentList","SplitterViewerComponent_mat_drawer_container_1_Template_div_mouseleave_17_listener","SplitterViewerComponent_mat_drawer_container_1_div_18_Template","SplitterViewerComponent_mat_drawer_container_1_Template_mat_expansion_panel_opened_20_listener","batchMetadataOpenState","SplitterViewerComponent_mat_drawer_container_1_Template_mat_expansion_panel_closed_20_listener","SplitterViewerComponent_mat_drawer_container_1_Template_mat_form_field_click_29_listener","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_selectionChange_32_listener","onFormChange","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_ngModelChange_32_listener","SplitterViewerComponent_mat_drawer_container_1_mat_option_33_Template","SplitterViewerComponent_mat_drawer_container_1_div_43_Template","SplitterViewerComponent_mat_drawer_container_1_Template_form_change_44_listener","SplitterViewerComponent_mat_drawer_container_1_div_45_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_46_listener","downloadOriginalFile","SplitterViewerComponent_mat_drawer_container_1_i_48_Template","SplitterViewerComponent_mat_drawer_container_1_i_49_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_50_listener","loadReferential","SplitterViewerComponent_mat_drawer_container_1_mat_progress_bar_53_Template","SplitterViewerComponent_mat_drawer_container_1_span_54_Template","SplitterViewerComponent_mat_drawer_container_1_Template_div_cdkDropListDropped_55_listener","dropDocument","SplitterViewerComponent_mat_drawer_container_1_mat_card_56_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_66_listener","deleteSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_69_listener","setAllPagesTo","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_72_listener","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_75_listener","rotateSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_78_listener","createDocument","SplitterViewerComponent_mat_drawer_container_1_i_80_Template","SplitterViewerComponent_mat_drawer_container_1_i_81_Template","SplitterViewerComponent_mat_drawer_container_1_Template_mat_select_ngModelChange_86_listener","toolSelectedOption","SplitterViewerComponent_mat_drawer_container_1_mat_option_87_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_88_listener","sendSelectedPages","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_91_listener","saveModifications","SplitterViewerComponent_mat_drawer_container_1_i_93_Template","SplitterViewerComponent_mat_drawer_container_1_i_94_Template","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_96_listener","cancelBatchModification","SplitterViewerComponent_mat_drawer_container_1_Template_button_click_99_listener","validateWithConfirmation","SplitterViewerComponent_mat_drawer_container_1_span_100_Template","SplitterViewerComponent_mat_drawer_container_1_span_101_Template","SplitterViewerComponent_mat_drawer_container_1_span_105_Template","validateLoading","timeLabels","getStatusLabel","showZoomPage","batchForm","downloadLoading","selectedPagesCount","addDocumentLoading","hasUnsavedChanges","saveInfosLoading","getOutputsLabels","beforeunloadHandler","returnValue","removeLockByBatchId","historyService","batchesLoading","documentsLoading","metadata","movedPages","deletedPagesIds","deletedDocumentsIds","defaultDoctype","rotation","previousFormId","maxSplitIndex","displayOrder","_onDestroy","getConfigurations","loadSelectedBatch","updateBatchLock","batch_id","addHistory","zoomPageElement","setValuesFromSavedMetadata","autocompletionValue","customFieldsValues","savedValue","loadBatchById","selectedPageId","loadStatus","loadFormFields","loadDefaultDocType","loadOutputsData","loadReferentialOnView","statusId","statusFound","currentBatchIndex","findIndex","loadDocuments","documentIndex","doctypeLabel","doctypeKey","splitIndex","getFormForDocument","showZoomButton","checkBox","sourcePage","enableFieldsByDoctypeCondition","updateDocumentDisplayOrder","updatedDocuments","currentDisplayOrder","newDisplayOrder","sortDocumentsByDisplayOrder","documentDisplayOrder","newId","newDocumentId","newForm","addControl","controlSearch","pageId","maskVariables","maskVariable","fillDataValues","newValue","callOnSplitterView","loadReferentialWithConfirmation","refreshAfterLoad","metadataItem","metadataKey","saveModificationsBeforeReload","complete","selectedMetadata","optionId","fieldCategory","validationMask","toBatchFormGroup","filteredMetadata","getFormFieldsValues","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","byteNumbers","charCodeAt","byteArray","Uint8Array","blobUrl","newWindow","write","checkboxField","shouldDisable","setPageSelection","OrderDisplayDocumentValues","pagesCount","confirmMessage","deleteItemFromList","batchIdToMerge","mergeBatches","batchFieldsCount","list","selectedPageCount","currentDegree","selectedDoc","selectedDocIndex","newPosition","doctypeKeys","Set","has","add","validate","batchMetadata","_documents","_document","clear","outputsLabels","HistoryService","SplitterViewerComponent_Query","SplitterViewerComponent_beforeunload_HostBindingHandler","ɵɵresolveWindow","SplitterViewerComponent_div_0_Template","SplitterViewerComponent_mat_drawer_container_1_Template","option_r1","currentData","selectedStatistic","StatisticsComponent_div_21_ngx_charts_bar_vertical_1_Template","StatisticsComponent_div_21_ngx_charts_pie_chart_2_Template","StatisticsComponent_div_21_ngx_charts_pie_grid_3_Template","StatisticsComponent_div_21_ngx_charts_line_chart_4_Template","selectedDiagramType","diagramTypes","modules","selectedModule","optionsByModule","changeModule","getDocumentsUploadedByMonthVerifier","currentYear","submodules","historyCpt","months","month","_submodule","getDocumentsUploadedByYearVerifier","year","getDocumentsUploadedByYearSplitter","getDocumentsUploadedByMonthSplitter","getUserUploadedDocumentVerifier","getUserUploadedDocumentSlitter","getWorkflowUploadedDocumentVerifier","getWorkflowUploadedDocumentSplitter","getFormsProcessDocument","getUsersProcessDocument","changeStatistic","changeDiagramType","StatisticsComponent_Template","StatisticsComponent_div_2_Template","StatisticsComponent_Template_mat_select_selectionChange_10_listener","StatisticsComponent_Template_mat_select_valueChange_10_listener","StatisticsComponent_mat_option_12_Template","StatisticsComponent_Template_mat_select_selectionChange_14_listener","StatisticsComponent_mat_option_16_Template","StatisticsComponent_Template_mat_select_selectionChange_18_listener","StatisticsComponent_mat_option_20_Template","StatisticsComponent_div_21_Template","UploadComponent_mat_list_item_8_Template_mat_list_item_click_0_listener","workflow_r3","setWorkflow","UploadComponent_mat_list_item_8_span_3_Template","selectedWorkflow","allowedExtensions","selectedWorkflowTechnicalId","uploadFile","timeout","UploadComponent_Template","UploadComponent_mat_list_item_8_Template","UploadComponent_Template_button_click_10_listener","UploadComponent_div_12_Template","UploadComponent_Template_ngx_file_drag_drop_valueChanged_13_listener","UploadComponent_Template_button_click_16_listener","UploadComponent_span_19_Template","documentListThumb","VerifierListComponent_button_18_Template_button_click_0_listener","resetSearchCustomer","VerifierListComponent_mat_tree_21_mat_tree_node_1_Template_mat_tree_node_click_0_listener","node_r5","loadDocumentPerCustomer","node_r6","VerifierListComponent_mat_tree_21_mat_tree_node_2_span_6_Template","VerifierListComponent_mat_tree_21_mat_tree_node_3_span_5_Template","VerifierListComponent_mat_tree_21_mat_tree_node_1_Template","VerifierListComponent_mat_tree_21_mat_tree_node_2_Template","VerifierListComponent_mat_tree_21_mat_tree_node_3_Template","isLevelTwo","isNotLevelOne","isLevelOne","batch_r10","VerifierListComponent_mat_tab_26_mat_option_21_span_3_Template","VerifierListComponent_mat_tab_26_div_28_Template_span_click_1_listener","selectOrUnselectAllDocuments","VerifierListComponent_mat_tab_26_div_28_Template_span_click_4_listener","documentToDeleteSelected","document_r15","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_20_Template_button_click_0_listener","customer_r17","changeCustomer","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_20_span_4_Template","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_23_Template_button_click_0_listener","form_r19","changeDocumentForm","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_23_span_4_Template","subtitles_r20","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_Template_input_click_2_listener","checkCheckedDocuments","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_div_3_Template","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_Template_button_click_15_listener","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_20_Template","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_button_23_Template","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_Template_img_click_24_listener","displayDocumentLocked","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_Template_mat_card_header_click_25_listener","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_i_28_Template","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_div_35_Template","menu_r21","customers_r22","formMenu_r23","customersList","filteredForms","VerifierListComponent_mat_tab_26_div_32_div_1_mat_card_1_Template","document_r25","subtitles_r26","subtitles_r27","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_35_Template_button_click_0_listener","customer_r29","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_35_span_4_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_38_Template_button_click_0_listener","form_r31","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_38_span_4_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_input_click_3_listener","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_div_click_4_listener","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_i_6_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_span_9_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_div_10_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_div_click_11_listener","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_div_12_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_div_click_13_listener","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_div_mouseenter_18_listener","showThumbnail","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_div_mouseout_18_listener","resetThumbnail","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template_button_click_30_listener","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_35_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_button_38_Template","menu_r32","customers_r33","formMenu_r34","VerifierListComponent_mat_tab_26_div_32_ng_template_2_div_1_Template","VerifierListComponent_mat_tab_26_div_32_div_1_Template","VerifierListComponent_mat_tab_26_div_32_ng_template_2_Template","displayMode","listTemplate_r35","VerifierListComponent_mat_tab_26_ng_template_1_Template","VerifierListComponent_mat_tab_26_Template_input_ngModelChange_8_listener","VerifierListComponent_mat_tab_26_Template_input_keyup_8_listener","searchDocument","VerifierListComponent_mat_tab_26_Template_mat_select_valueChange_14_listener","VerifierListComponent_mat_tab_26_Template_mat_select_selectionChange_14_listener","VerifierListComponent_mat_tab_26_mat_option_15_Template","VerifierListComponent_mat_tab_26_Template_mat_select_valueChange_20_listener","VerifierListComponent_mat_tab_26_Template_mat_select_selectionChange_20_listener","changeForm","VerifierListComponent_mat_tab_26_mat_option_21_Template","VerifierListComponent_mat_tab_26_Template_mat_paginator_page_23_listener","VerifierListComponent_mat_tab_26_Template_button_click_25_listener","switchDisplayMode","VerifierListComponent_mat_tab_26_i_26_Template","VerifierListComponent_mat_tab_26_i_27_Template","VerifierListComponent_mat_tab_26_div_28_Template","VerifierListComponent_mat_tab_26_div_30_Template","VerifierListComponent_mat_tab_26_div_31_Template","VerifierListComponent_mat_tab_26_div_32_Template","allowedCustomers","allowedSuppliers","TREE_DATA","searchLoading","expanded","customerFilterEmpty","customerFilterEnabled","customerFilter","_transformer","parent_id","localStorage","getItem","customers_count","customer_count","customer_id","node_child","filterCustomers","log","document_id","thumb","document_display_tmp","subtitle_data","tmpData","customerMatch","documentId","resetDocuments","deleteAllDocuments","batchDelete","setItem","thumb_b64","VerifierListComponent_Template","VerifierListComponent_span_0_Template","VerifierListComponent_Template_i_click_5_listener","VerifierListComponent_Template_i_click_9_listener","VerifierListComponent_Template_input_keyup_17_listener","VerifierListComponent_button_18_Template","VerifierListComponent_div_19_Template","VerifierListComponent_div_20_Template","VerifierListComponent_mat_tree_21_Template","VerifierListComponent_Template_button_click_23_listener","VerifierListComponent_Template_mat_tab_group_selectedTabChange_25_listener","VerifierListComponent_mat_tab_26_Template","VerifierViewerComponent_div_1_i_8_Template_i_click_0_listener","VerifierViewerComponent_div_1_i_8_Template","processErrorIcon","processErrorMessage","processInError","VerifierViewerComponent_div_2_mat_card_9_Template_mat_card_click_0_listener","doc_r4","loadDocument","VerifierViewerComponent_div_2_mat_card_9_Template","multiDocumentsData","VerifierViewerComponent_span_3_ng_container_4_Template_i_click_2_listener","VerifierViewerComponent_span_3_ng_container_4_Template_i_click_7_listener","imgLoading","VerifierViewerComponent_span_3_div_5_div_1_Template","imgSrc","VerifierViewerComponent_span_3_div_6_div_1_i_2_Template_i_click_0_listener","hideVisuals","VerifierViewerComponent_span_3_div_6_div_1_i_3_Template_i_click_0_listener","form_r9","VerifierViewerComponent_span_3_div_6_div_1_i_2_Template","VerifierViewerComponent_span_3_div_6_div_1_i_3_Template","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_expansion_panel_expandedChange_6_listener","settingsOpen","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_select_valueChange_18_listener","currentFormFields","VerifierViewerComponent_span_3_div_6_div_1_Template_mat_select_selectionChange_18_listener","VerifierViewerComponent_span_3_div_6_div_1_mat_option_19_Template","VerifierViewerComponent_span_3_div_6_div_1_Template_i_click_24_listener","visualIsHide","formList","outputsLabel","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_1_Template_i_click_0_listener","editSupplier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_2_Template_i_click_0_listener","createSupplier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_i_3_Template","formLoading","supplierExists","field_r13","category_r14","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template_mat_form_field_click_0_listener","updateFilteredOption","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template_input_ngModelChange_4_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_mat_error_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template_mat_autocomplete_optionSelected_6_listener","getSupplierInfo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_mat_option_8_Template","auto_r16","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_5_Template_span_click_0_listener","duplicateField","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_6_Template_span_click_0_listener","removeDuplicateField","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_click_7_listener","saveInfo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_focusin_7_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template_input_focusout_7_listener","saveData","checkVAT","checkSirenOrSiret","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_mat_error_8_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_i_9_Template","isChildField","showAutoLogo","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_mat_form_field_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_ng_template_2_Template","other_r20","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_6_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_7_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template_textarea_focusin_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template_textarea_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_mat_error_9_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_6_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_7_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_focusin_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template_input_dateChange_8_listener","targetElement","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_mat_error_12_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_i_13_Template","picker_r27","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_6_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_7_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_mat_option_1_Template_mat_option_onSelectionChange_0_listener","setAutocompleteDefaultValue","option_r32","res_id","alt_identifier","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_mat_option_1_Template","autocomplete_values","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_7_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template_input_focusin_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template_input_focusout_8_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_span_11_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_mat_option_12_Template","data_r33","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_5_Template_span_click_0_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_6_Template_span_click_0_listener","_r35","option_r36","compte_lib","compte_num","toHighlightAccounting","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_span_8_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_mat_option_11_Template","accounting_r37","accountingPlanEmpty","option_r39","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_span_5_mat_option_1_Template","checkConditional","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_Template_mat_select_selectionChange_4_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_Template_mat_select_valueChange_4_listener","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_mat_form_field_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_6_Template_span_click_0_listener","duplicateLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_7_Template_span_click_0_listener","removeDuplicateLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_2_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_3_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_ng_container_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_6_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_span_7_Template","deleteLine","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_3_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_4_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_span_5_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_div_8_Template","getOnlyRawFooter","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_2_ng_container_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_1_Template_button_click_0_listener","validateForm","VerifierViewerComponent_span_3_div_6_div_5_button_1_span_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_1_i_2_Template","loadingSubmit","VerifierViewerComponent_span_3_div_6_div_5_button_2_Template_button_click_0_listener","refuseForm","VerifierViewerComponent_span_3_div_6_div_5_button_1_Template","VerifierViewerComponent_span_3_div_6_div_5_button_2_Template","formEmpty","VerifierViewerComponent_span_3_div_6_div_1_Template","VerifierViewerComponent_span_3_div_6_div_2_Template","VerifierViewerComponent_span_3_div_6_ng_template_3_Template","VerifierViewerComponent_span_3_div_6_div_5_Template","noField_r44","VerifierViewerComponent_span_3_ng_container_4_Template","VerifierViewerComponent_span_3_div_5_Template","VerifierViewerComponent_span_3_div_6_Template","fromToken","deleteDataOnChangeForm","allowAutocomplete","processMultiDocument","isOCRRunning","processDone","disableOCR","tokenINSEEError","supplierformFound","oldVAT","oldSIRET","oldSIREN","currentFilename","tokenINSEE","accountingPlan","workflowSettings","imgArray","currentSupplier","lines","facturation","other","alphanum","alphanum_extended","alphanum_extended_with_accent","number_int","number_float","char","supplierNamecontrol","document_id_from_multi","retrieveDocumentIdAndStatusFromToken","reloadPageWaitingFinish","reference","tmp_thumb","getThumbByDocumentId","getDocumentById","updateDocument","getCustomFields","getDocument","getWorkflow","full_jpg_filename","fromTokenFormId","generateOutputs","getAllForm","defaultFormFound","getForm","fillForm","convertAutocomplete","scrollTo","top","behavior","reload","catch","supplier_element","_filter_data","getFormFieldsById","getFormById","getOutputs","generateTokenInsee","patchValue","getFieldInfo","splittedFieldId","isNaN","blur","ocr_from_user","_this10","_this11","_this12","_this13","_this14","_this15","_this16","_this17","_this18","getPattern","_field","retrieveAccountingPlan","retrieveDefaultAccountingPlan","sortArray","_filter_accounting","datas","replaceAll","_d","custom_id","findChildren","field_data","_this19","customFieldOption","conditionalCustomId","conditionalCustomfield","conditionalCustomValue","_this20","_this21","visuals","splitted_filename","splitted","scrollToElement","_img","updateFormValue","deleteData","currentHeight","innerHeight","getBoundingClientRect","deleteContainer","resizeHandler","backgroundColor","thumbSize","currentTarget","registerDate","oldPosition","savePages","_this22","showNotif","oldData","getField","_this23","addressData","supplierData","_ref","supplier_data","_x","apply","arguments","showError","neededValue","listOfNewField","listOfNewFieldData","numberOfField","lineEmpty","newFieldId","parent_field","listOfFieldToDelete","splittedId","isInteger","_this24","tmpSupplier","address_id","address1","address2","city","postal_code","bic","column","verify","isVAT","bal","datePickerPattern","matDatepickerParse","siret_error","siren_error","vat_error","requiredPattern","autocomplete_id","arrayData","countLines","file_path","_this25","tmpFieldId","siretOrSiren","sizeSIREN","sizeSIRET","sizeVAT","_this26","VerifierViewerComponent_HostBindings","VerifierViewerComponent_beforeunload_HostBindingHandler","VerifierViewerComponent_Template","VerifierViewerComponent_div_0_Template","VerifierViewerComponent_div_1_Template","VerifierViewerComponent_div_2_Template","VerifierViewerComponent_span_3_Template","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","req","timeoutValue","timeoutValueNumeric","new_headers","tokenNames","getTokenName","setToken","tokenName","configName","userDataName","cachedUrlName","refreshTokenName","minimizeDisplay","refresh_token","user_token","providedIn","CodeEditorComponent_span_3_Template_button_click_1_listener","testScript","CodeEditorComponent_span_3_i_3_Template","testing","theme","tested","codeModel","language","uri","contextmenu","lineNumbers","minimap","return","CodeEditorComponent_Template","CodeEditorComponent_span_3_Template","Promise","resolve","setConfig","ConfirmDialogComponent_mat_dialog_content_4_Template_mat_select_valueChange_4_listener","selectData","ConfirmDialogComponent_mat_dialog_content_4_mat_option_5_Template","ConfirmDialogComponent_Template","ConfirmDialogComponent_mat_dialog_content_4_Template","ConfirmDialogComponent_button_8_Template","ConfirmDialogComponent_button_9_Template","specificClass","ErrorServiceComponent_Template","extension_r2","delimiter_r3","availableColumn_r4","selectedColumn_r5","extensions","delimiters","ExportDialogComponent_Template","ExportDialogComponent_div_9_Template","ExportDialogComponent_Template_mat_select_valueChange_14_listener","ExportDialogComponent_div_15_Template","ExportDialogComponent_Template_div_cdkDropListDropped_26_listener","ExportDialogComponent_div_28_Template","ExportDialogComponent_Template_div_cdkDropListDropped_33_listener","ExportDialogComponent_div_35_Template","availableColumnsList_r7","selectedColumnsList_r6","routeConfig","HintServiceComponent_Template","submodule","desc","predefined_user","MatTable","ImportDialogComponent_div_15_i_1_Template","ImportDialogComponent_div_15_span_2_Template","availableColumn_r6","ImportDialogComponent_table_16_ng_container_1_th_1_Template_mat_select_selectionChange_5_listener","index_r5","changeSelectedColumns","ImportDialogComponent_table_16_ng_container_1_th_1_div_6_Template","availableColumn_r8","ImportDialogComponent_table_16_ng_container_1_th_1_Template","ImportDialogComponent_table_16_ng_container_1_td_2_Template","ImportDialogComponent_table_16_ng_container_1_Template","ImportDialogComponent_table_16_tr_2_Template","ImportDialogComponent_table_16_tr_3_Template","header","markers","loadCsvPreview","data_rows","col","skipHeaderChange","shift","previewTable","renderRows","newColumn","ImportDialogComponent_Query","ImportDialogComponent_Template_ngx_file_drag_drop_valueChanged_4_listener","ImportDialogComponent_Template_mat_slide_toggle_click_11_listener","dataConfig_r2","ImportDialogComponent_Template_mat_slide_toggle_change_11_listener","ImportDialogComponent_div_15_Template","ImportDialogComponent_table_16_Template","previousUrl","getCurrentUrl","dateAdapter","dateAdaptaterLocale","setLocale","updateLocale","monthsShort","weekdays","weekdaysMin","LT","LTS","L","l","LL","LLL","LLLL","week","dow","llll","locale","URLSearchParams","token_param","entries","hash","translated_session","oldErrorMessage","MAT_SNACK_BAR_DATA","CustomSnackbarComponent","CustomSnackbarComponent_Template","toastr","_duration","duration","getMessageDuration","timeOut","statusText","server","exception","minimumDuration","maxDuration","ToastrService","passwordError","verifyRules","passwordCheck","passwordCheckError","mismatch","checkPasswordConfirmation","errorMessage","items","it","userPrivileges","process_r4","endTime","ProcessWatcherComponent_mat_card_0_div_10_Template_div_click_0_listener","ProcessWatcherComponent_mat_card_0_div_10_i_9_Template","ProcessWatcherComponent_mat_card_0_div_10_i_10_Template","ProcessWatcherComponent_mat_card_0_div_10_i_11_Template","ProcessWatcherComponent_mat_card_0_div_10_i_12_Template","beginTime","age","ProcessWatcherComponent_mat_card_0_Template_span_click_4_listener","changeDisplayMode","ProcessWatcherComponent_mat_card_0_div_8_Template","ProcessWatcherComponent_mat_card_0_div_9_Template","ProcessWatcherComponent_mat_card_0_div_10_Template","isFirstCallDone","getProcessRunning","ProcessWatcherComponent_div_1_Template_div_click_0_listener","countCurrentProcess","ProcessWatcherComponent","displayedProcessData","authorizedUrl","getLastProcesses","error_message","ProcessWatcherComponent_Template","ProcessWatcherComponent_mat_card_0_Template","ProcessWatcherComponent_div_1_Template","CommonModule","removeItem","settingsParent","onresize","innerWidth","setSelectedSettings","foundSettings","settingId","settingParentId","actions","getUserData","userTokenName"],"sourceRoot":"webpack:///","x_google_ignoreList":[184]}